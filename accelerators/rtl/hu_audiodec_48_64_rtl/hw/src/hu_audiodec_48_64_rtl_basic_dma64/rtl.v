// ----------------------------------------------------------------------
//  HLS HDL:        Verilog Netlister
//  HLS Version:    2022.1/981271 Production Release
//  HLS Date:       Thu Feb 10 22:05:20 PST 2022
// 
//  Generated by:   yingj4@sarangi.cs.illinois.edu
//  Generated date: Sun Jul 31 21:18:34 2022
// ----------------------------------------------------------------------

// 
// ------------------------------------------------------------------
//  Design Unit:    Control_run_staller
// ------------------------------------------------------------------


module Control_run_staller (
  clk, rst, run_wen, run_wten, sync1_Push_mioi_wen_comp, sync2_Push_mioi_wen_comp,
      sync3_Pop_mioi_wen_comp, run_flen_unreg, sync1_Push_mioi_wen_comp_pff, run_wten_pff,
      sync2_Push_mioi_wen_comp_pff, sync3_Pop_mioi_wen_comp_pff, run_flen_unreg_pff
);
  input clk;
  input rst;
  output run_wen;
  output run_wten;
  input sync1_Push_mioi_wen_comp;
  input sync2_Push_mioi_wen_comp;
  input sync3_Pop_mioi_wen_comp;
  input run_flen_unreg;
  input sync1_Push_mioi_wen_comp_pff;
  output run_wten_pff;
  input sync2_Push_mioi_wen_comp_pff;
  input sync3_Pop_mioi_wen_comp_pff;
  input run_flen_unreg_pff;


  // Interconnect Declarations
  reg run_wten_reg;
  wire not_2_rmff;


  // Interconnect Declarations for Component Instantiations 
  assign not_2_rmff = ~(sync1_Push_mioi_wen_comp & sync2_Push_mioi_wen_comp & sync3_Pop_mioi_wen_comp
      & (~ run_flen_unreg));
  assign run_wen = sync1_Push_mioi_wen_comp_pff & sync2_Push_mioi_wen_comp_pff &
      sync3_Pop_mioi_wen_comp_pff & (~ run_flen_unreg_pff);
  assign run_wten = run_wten_reg;
  assign run_wten_pff = not_2_rmff;
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      run_wten_reg <= 1'b0;
    end
    else begin
      run_wten_reg <= not_2_rmff;
    end
  end
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Control_run_sync3_Pop_mioi_sync3_Pop_mio_wait_dp
// ------------------------------------------------------------------


module Control_run_sync3_Pop_mioi_sync3_Pop_mio_wait_dp (
  clk, rst, sync3_Pop_mioi_oswt_unreg, sync3_Pop_mioi_bawt, sync3_Pop_mioi_wen_comp,
      sync3_Pop_mioi_biwt, sync3_Pop_mioi_bdwt, sync3_Pop_mioi_bawt_pff, sync3_Pop_mioi_biwt_pff,
      sync3_Pop_mioi_wen_comp_pff, sync3_Pop_mioi_oswt_unreg_pff
);
  input clk;
  input rst;
  input sync3_Pop_mioi_oswt_unreg;
  output sync3_Pop_mioi_bawt;
  output sync3_Pop_mioi_wen_comp;
  input sync3_Pop_mioi_biwt;
  input sync3_Pop_mioi_bdwt;
  output sync3_Pop_mioi_bawt_pff;
  input sync3_Pop_mioi_biwt_pff;
  output sync3_Pop_mioi_wen_comp_pff;
  input sync3_Pop_mioi_oswt_unreg_pff;


  // Interconnect Declarations
  reg sync3_Pop_mioi_bcwt;
  wire while_nor_4_rmff;


  // Interconnect Declarations for Component Instantiations 
  assign while_nor_4_rmff = ~((~(sync3_Pop_mioi_bcwt | sync3_Pop_mioi_biwt)) | sync3_Pop_mioi_bdwt);
  assign sync3_Pop_mioi_bawt = sync3_Pop_mioi_biwt | sync3_Pop_mioi_bcwt;
  assign sync3_Pop_mioi_bawt_pff = sync3_Pop_mioi_biwt_pff | while_nor_4_rmff;
  assign sync3_Pop_mioi_wen_comp = (~ sync3_Pop_mioi_oswt_unreg) | sync3_Pop_mioi_bawt;
  assign sync3_Pop_mioi_wen_comp_pff = (~ sync3_Pop_mioi_oswt_unreg_pff) | sync3_Pop_mioi_bawt_pff;
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      sync3_Pop_mioi_bcwt <= 1'b0;
    end
    else begin
      sync3_Pop_mioi_bcwt <= while_nor_4_rmff;
    end
  end
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Control_run_sync3_Pop_mioi_sync3_Pop_mio_wait_ctrl
// ------------------------------------------------------------------


module Control_run_sync3_Pop_mioi_sync3_Pop_mio_wait_ctrl (
  clk, rst, run_wen, run_wten, sync3_Pop_mioi_oswt_unreg, sync3_Pop_mioi_iswt0, sync3_Pop_mioi_ivld_oreg,
      sync3_Pop_mioi_biwt, sync3_Pop_mioi_bdwt, sync3_Pop_mioi_irdy_run_sct, sync3_Pop_mioi_biwt_pff,
      run_wten_pff, sync3_Pop_mioi_iswt0_pff, sync3_Pop_mioi_ivld_oreg_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input sync3_Pop_mioi_oswt_unreg;
  input sync3_Pop_mioi_iswt0;
  input sync3_Pop_mioi_ivld_oreg;
  output sync3_Pop_mioi_biwt;
  output sync3_Pop_mioi_bdwt;
  output sync3_Pop_mioi_irdy_run_sct;
  output sync3_Pop_mioi_biwt_pff;
  input run_wten_pff;
  input sync3_Pop_mioi_iswt0_pff;
  input sync3_Pop_mioi_ivld_oreg_pff;


  // Interconnect Declarations
  wire sync3_Pop_mioi_ogwt;
  reg sync3_Pop_mioi_icwt;
  wire while_and_11_rmff;


  // Interconnect Declarations for Component Instantiations 
  assign sync3_Pop_mioi_bdwt = sync3_Pop_mioi_oswt_unreg & run_wen;
  assign sync3_Pop_mioi_ogwt = ((~ run_wten) & sync3_Pop_mioi_iswt0) | sync3_Pop_mioi_icwt;
  assign while_and_11_rmff = sync3_Pop_mioi_ogwt & (~ sync3_Pop_mioi_biwt);
  assign sync3_Pop_mioi_irdy_run_sct = sync3_Pop_mioi_ogwt;
  assign sync3_Pop_mioi_biwt = sync3_Pop_mioi_ogwt & sync3_Pop_mioi_ivld_oreg;
  assign sync3_Pop_mioi_biwt_pff = (((~ run_wten_pff) & sync3_Pop_mioi_iswt0_pff)
      | while_and_11_rmff) & sync3_Pop_mioi_ivld_oreg_pff;
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      sync3_Pop_mioi_icwt <= 1'b0;
    end
    else begin
      sync3_Pop_mioi_icwt <= while_and_11_rmff;
    end
  end
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Control_run_sync2_Push_mioi_sync2_Push_mio_wait_dp
// ------------------------------------------------------------------


module Control_run_sync2_Push_mioi_sync2_Push_mio_wait_dp (
  clk, rst, sync2_Push_mioi_oswt_unreg, sync2_Push_mioi_bawt, sync2_Push_mioi_wen_comp,
      sync2_Push_mioi_biwt, sync2_Push_mioi_bdwt, sync2_Push_mioi_bcwt, sync2_Push_mioi_bawt_pff,
      sync2_Push_mioi_biwt_pff, sync2_Push_mioi_bcwt_pff, sync2_Push_mioi_wen_comp_pff,
      sync2_Push_mioi_oswt_unreg_pff
);
  input clk;
  input rst;
  input sync2_Push_mioi_oswt_unreg;
  output sync2_Push_mioi_bawt;
  output sync2_Push_mioi_wen_comp;
  input sync2_Push_mioi_biwt;
  input sync2_Push_mioi_bdwt;
  output sync2_Push_mioi_bcwt;
  output sync2_Push_mioi_bawt_pff;
  input sync2_Push_mioi_biwt_pff;
  output sync2_Push_mioi_bcwt_pff;
  output sync2_Push_mioi_wen_comp_pff;
  input sync2_Push_mioi_oswt_unreg_pff;


  // Interconnect Declarations
  reg sync2_Push_mioi_bcwt_reg;
  wire while_nor_2_rmff;


  // Interconnect Declarations for Component Instantiations 
  assign while_nor_2_rmff = ~((~(sync2_Push_mioi_bcwt | sync2_Push_mioi_biwt)) |
      sync2_Push_mioi_bdwt);
  assign sync2_Push_mioi_bawt = sync2_Push_mioi_biwt | sync2_Push_mioi_bcwt;
  assign sync2_Push_mioi_bawt_pff = sync2_Push_mioi_biwt_pff | sync2_Push_mioi_bcwt_pff;
  assign sync2_Push_mioi_bcwt = sync2_Push_mioi_bcwt_reg;
  assign sync2_Push_mioi_bcwt_pff = while_nor_2_rmff;
  assign sync2_Push_mioi_wen_comp = (~ sync2_Push_mioi_oswt_unreg) | sync2_Push_mioi_bawt;
  assign sync2_Push_mioi_wen_comp_pff = (~ sync2_Push_mioi_oswt_unreg_pff) | sync2_Push_mioi_bawt_pff;
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      sync2_Push_mioi_bcwt_reg <= 1'b0;
    end
    else begin
      sync2_Push_mioi_bcwt_reg <= while_nor_2_rmff;
    end
  end
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Control_run_sync2_Push_mioi_sync2_Push_mio_wait_ctrl
// ------------------------------------------------------------------


module Control_run_sync2_Push_mioi_sync2_Push_mio_wait_ctrl (
  run_wen, sync2_Push_mioi_oswt_unreg, sync2_Push_mioi_iswt0, sync2_Push_mioi_irdy_oreg,
      sync2_Push_mioi_biwt, sync2_Push_mioi_bdwt, sync2_Push_mioi_bcwt, sync2_Push_mioi_ivld_run_sct,
      sync2_Push_mioi_biwt_pff, sync2_Push_mioi_iswt0_pff, sync2_Push_mioi_bcwt_pff,
      sync2_Push_mioi_irdy_oreg_pff
);
  input run_wen;
  input sync2_Push_mioi_oswt_unreg;
  input sync2_Push_mioi_iswt0;
  input sync2_Push_mioi_irdy_oreg;
  output sync2_Push_mioi_biwt;
  output sync2_Push_mioi_bdwt;
  input sync2_Push_mioi_bcwt;
  output sync2_Push_mioi_ivld_run_sct;
  output sync2_Push_mioi_biwt_pff;
  input sync2_Push_mioi_iswt0_pff;
  input sync2_Push_mioi_bcwt_pff;
  input sync2_Push_mioi_irdy_oreg_pff;


  // Interconnect Declarations
  wire sync2_Push_mioi_ogwt;


  // Interconnect Declarations for Component Instantiations 
  assign sync2_Push_mioi_bdwt = sync2_Push_mioi_oswt_unreg & run_wen;
  assign sync2_Push_mioi_ogwt = sync2_Push_mioi_iswt0 & (~ sync2_Push_mioi_bcwt);
  assign sync2_Push_mioi_ivld_run_sct = sync2_Push_mioi_ogwt;
  assign sync2_Push_mioi_biwt = sync2_Push_mioi_ogwt & sync2_Push_mioi_irdy_oreg;
  assign sync2_Push_mioi_biwt_pff = sync2_Push_mioi_iswt0_pff & (~ sync2_Push_mioi_bcwt_pff)
      & sync2_Push_mioi_irdy_oreg_pff;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Control_run_wait_dp
// ------------------------------------------------------------------


module Control_run_wait_dp (
  clk, rst, sync1_Push_mioi_irdy, sync1_Push_mioi_irdy_oreg, sync2_Push_mioi_irdy,
      sync2_Push_mioi_irdy_oreg, sync3_Pop_mioi_ivld, sync3_Pop_mioi_ivld_oreg
);
  input clk;
  input rst;
  input sync1_Push_mioi_irdy;
  output sync1_Push_mioi_irdy_oreg;
  input sync2_Push_mioi_irdy;
  output sync2_Push_mioi_irdy_oreg;
  input sync3_Pop_mioi_ivld;
  output sync3_Pop_mioi_ivld_oreg;


  // Interconnect Declarations
  reg sync1_Push_mioi_irdy_oreg_rneg;
  reg sync2_Push_mioi_irdy_oreg_rneg;
  reg sync3_Pop_mioi_ivld_oreg_rneg;


  // Interconnect Declarations for Component Instantiations 
  assign sync1_Push_mioi_irdy_oreg = ~ sync1_Push_mioi_irdy_oreg_rneg;
  assign sync2_Push_mioi_irdy_oreg = ~ sync2_Push_mioi_irdy_oreg_rneg;
  assign sync3_Pop_mioi_ivld_oreg = ~ sync3_Pop_mioi_ivld_oreg_rneg;
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      sync1_Push_mioi_irdy_oreg_rneg <= 1'b0;
      sync2_Push_mioi_irdy_oreg_rneg <= 1'b0;
      sync3_Pop_mioi_ivld_oreg_rneg <= 1'b0;
    end
    else begin
      sync1_Push_mioi_irdy_oreg_rneg <= ~ sync1_Push_mioi_irdy;
      sync2_Push_mioi_irdy_oreg_rneg <= ~ sync2_Push_mioi_irdy;
      sync3_Pop_mioi_ivld_oreg_rneg <= ~ sync3_Pop_mioi_ivld;
    end
  end
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Control_run_sync1_Push_mioi_sync1_Push_mio_wait_dp
// ------------------------------------------------------------------


module Control_run_sync1_Push_mioi_sync1_Push_mio_wait_dp (
  clk, rst, sync1_Push_mioi_oswt_unreg, sync1_Push_mioi_bawt, sync1_Push_mioi_wen_comp,
      sync1_Push_mioi_biwt, sync1_Push_mioi_bdwt, sync1_Push_mioi_bcwt, sync1_Push_mioi_wen_comp_pff,
      sync1_Push_mioi_oswt_unreg_pff, sync1_Push_mioi_bawt_pff, sync1_Push_mioi_biwt_pff,
      sync1_Push_mioi_bcwt_pff
);
  input clk;
  input rst;
  input sync1_Push_mioi_oswt_unreg;
  output sync1_Push_mioi_bawt;
  output sync1_Push_mioi_wen_comp;
  input sync1_Push_mioi_biwt;
  input sync1_Push_mioi_bdwt;
  output sync1_Push_mioi_bcwt;
  output sync1_Push_mioi_wen_comp_pff;
  input sync1_Push_mioi_oswt_unreg_pff;
  output sync1_Push_mioi_bawt_pff;
  input sync1_Push_mioi_biwt_pff;
  output sync1_Push_mioi_bcwt_pff;


  // Interconnect Declarations
  reg sync1_Push_mioi_bcwt_reg;
  wire while_nor_rmff;


  // Interconnect Declarations for Component Instantiations 
  assign while_nor_rmff = ~((~(sync1_Push_mioi_bcwt | sync1_Push_mioi_biwt)) | sync1_Push_mioi_bdwt);
  assign sync1_Push_mioi_wen_comp = (~ sync1_Push_mioi_oswt_unreg) | sync1_Push_mioi_bawt;
  assign sync1_Push_mioi_wen_comp_pff = (~ sync1_Push_mioi_oswt_unreg_pff) | sync1_Push_mioi_bawt_pff;
  assign sync1_Push_mioi_bawt = sync1_Push_mioi_biwt | sync1_Push_mioi_bcwt;
  assign sync1_Push_mioi_bawt_pff = sync1_Push_mioi_biwt_pff | sync1_Push_mioi_bcwt_pff;
  assign sync1_Push_mioi_bcwt = sync1_Push_mioi_bcwt_reg;
  assign sync1_Push_mioi_bcwt_pff = while_nor_rmff;
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      sync1_Push_mioi_bcwt_reg <= 1'b0;
    end
    else begin
      sync1_Push_mioi_bcwt_reg <= while_nor_rmff;
    end
  end
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Control_run_sync1_Push_mioi_sync1_Push_mio_wait_ctrl
// ------------------------------------------------------------------


module Control_run_sync1_Push_mioi_sync1_Push_mio_wait_ctrl (
  run_wen, sync1_Push_mioi_oswt_unreg, sync1_Push_mioi_iswt0, sync1_Push_mioi_irdy_oreg,
      sync1_Push_mioi_biwt, sync1_Push_mioi_bdwt, sync1_Push_mioi_bcwt, sync1_Push_mioi_ivld_run_sct,
      sync1_Push_mioi_biwt_pff, sync1_Push_mioi_iswt0_pff, sync1_Push_mioi_bcwt_pff,
      sync1_Push_mioi_irdy_oreg_pff
);
  input run_wen;
  input sync1_Push_mioi_oswt_unreg;
  input sync1_Push_mioi_iswt0;
  input sync1_Push_mioi_irdy_oreg;
  output sync1_Push_mioi_biwt;
  output sync1_Push_mioi_bdwt;
  input sync1_Push_mioi_bcwt;
  output sync1_Push_mioi_ivld_run_sct;
  output sync1_Push_mioi_biwt_pff;
  input sync1_Push_mioi_iswt0_pff;
  input sync1_Push_mioi_bcwt_pff;
  input sync1_Push_mioi_irdy_oreg_pff;


  // Interconnect Declarations
  wire sync1_Push_mioi_ogwt;


  // Interconnect Declarations for Component Instantiations 
  assign sync1_Push_mioi_bdwt = sync1_Push_mioi_oswt_unreg & run_wen;
  assign sync1_Push_mioi_ogwt = sync1_Push_mioi_iswt0 & (~ sync1_Push_mioi_bcwt);
  assign sync1_Push_mioi_ivld_run_sct = sync1_Push_mioi_ogwt;
  assign sync1_Push_mioi_biwt = sync1_Push_mioi_ogwt & sync1_Push_mioi_irdy_oreg;
  assign sync1_Push_mioi_biwt_pff = sync1_Push_mioi_iswt0_pff & (~ sync1_Push_mioi_bcwt_pff)
      & sync1_Push_mioi_irdy_oreg_pff;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    InputBuffer_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_17_14_64_16384_16384_64_1_gen
// ------------------------------------------------------------------


module InputBuffer_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_17_14_64_16384_16384_64_1_gen
    (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [63:0] q;
  output [13:0] radr;
  output we;
  output [63:0] d;
  output [13:0] wadr;
  input clken_d;
  input [63:0] d_d;
  output [63:0] q_d;
  input [13:0] radr_d;
  input [13:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    InputBuffer_run_run_fsm
//  FSM Module
// ------------------------------------------------------------------


module InputBuffer_run_run_fsm (
  clk, rst, run_wen, fsm_output, while_C_2_tr0, while_for_C_1_tr0, while_C_3_tr0,
      while_for_1_for_C_1_tr0, while_for_1_C_0_tr0
);
  input clk;
  input rst;
  input run_wen;
  output [8:0] fsm_output;
  reg [8:0] fsm_output;
  input while_C_2_tr0;
  input while_for_C_1_tr0;
  input while_C_3_tr0;
  input while_for_1_for_C_1_tr0;
  input while_for_1_C_0_tr0;


  // FSM State Type Declaration for InputBuffer_run_run_fsm_1
  parameter
    while_C_0 = 4'd0,
    while_C_1 = 4'd1,
    while_C_2 = 4'd2,
    while_for_C_0 = 4'd3,
    while_for_C_1 = 4'd4,
    while_C_3 = 4'd5,
    while_for_1_for_C_0 = 4'd6,
    while_for_1_for_C_1 = 4'd7,
    while_for_1_C_0 = 4'd8;

  reg [3:0] state_var;
  reg [3:0] state_var_NS;


  // Interconnect Declarations for Component Instantiations 
  always @(*)
  begin : InputBuffer_run_run_fsm_1
    case (state_var)
      while_C_1 : begin
        fsm_output = 9'b000000010;
        state_var_NS = while_C_2;
      end
      while_C_2 : begin
        fsm_output = 9'b000000100;
        if ( while_C_2_tr0 ) begin
          state_var_NS = while_C_3;
        end
        else begin
          state_var_NS = while_for_C_0;
        end
      end
      while_for_C_0 : begin
        fsm_output = 9'b000001000;
        state_var_NS = while_for_C_1;
      end
      while_for_C_1 : begin
        fsm_output = 9'b000010000;
        if ( while_for_C_1_tr0 ) begin
          state_var_NS = while_C_3;
        end
        else begin
          state_var_NS = while_for_C_0;
        end
      end
      while_C_3 : begin
        fsm_output = 9'b000100000;
        if ( while_C_3_tr0 ) begin
          state_var_NS = while_C_0;
        end
        else begin
          state_var_NS = while_for_1_for_C_0;
        end
      end
      while_for_1_for_C_0 : begin
        fsm_output = 9'b001000000;
        state_var_NS = while_for_1_for_C_1;
      end
      while_for_1_for_C_1 : begin
        fsm_output = 9'b010000000;
        if ( while_for_1_for_C_1_tr0 ) begin
          state_var_NS = while_for_1_C_0;
        end
        else begin
          state_var_NS = while_for_1_for_C_0;
        end
      end
      while_for_1_C_0 : begin
        fsm_output = 9'b100000000;
        if ( while_for_1_C_0_tr0 ) begin
          state_var_NS = while_C_0;
        end
        else begin
          state_var_NS = while_for_1_for_C_0;
        end
      end
      // while_C_0
      default : begin
        fsm_output = 9'b000000001;
        state_var_NS = while_C_1;
      end
    endcase
  end

  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      state_var <= while_C_0;
    end
    else if ( run_wen ) begin
      state_var <= state_var_NS;
    end
  end

endmodule

// ------------------------------------------------------------------
//  Design Unit:    InputBuffer_run_staller
// ------------------------------------------------------------------


module InputBuffer_run_staller (
  run_wen, sync1_Pop_mioi_wen_comp, dma_read_ctrl_Push_mioi_wen_comp, dma_read_chnl_Pop_mioi_wen_comp,
      rotate_in_Push_mioi_wen_comp
);
  output run_wen;
  input sync1_Pop_mioi_wen_comp;
  input dma_read_ctrl_Push_mioi_wen_comp;
  input dma_read_chnl_Pop_mioi_wen_comp;
  input rotate_in_Push_mioi_wen_comp;



  // Interconnect Declarations for Component Instantiations 
  assign run_wen = sync1_Pop_mioi_wen_comp & dma_read_ctrl_Push_mioi_wen_comp & dma_read_chnl_Pop_mioi_wen_comp
      & rotate_in_Push_mioi_wen_comp;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    InputBuffer_run_rotate_in_Push_mioi_rotate_in_Push_mio_wait_ctrl
// ------------------------------------------------------------------


module InputBuffer_run_rotate_in_Push_mioi_rotate_in_Push_mio_wait_ctrl (
  rotate_in_Push_mioi_iswt0, rotate_in_Push_mioi_irdy_oreg, rotate_in_Push_mioi_biwt
);
  input rotate_in_Push_mioi_iswt0;
  input rotate_in_Push_mioi_irdy_oreg;
  output rotate_in_Push_mioi_biwt;



  // Interconnect Declarations for Component Instantiations 
  assign rotate_in_Push_mioi_biwt = rotate_in_Push_mioi_iswt0 & rotate_in_Push_mioi_irdy_oreg;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    InputBuffer_run_dma_read_chnl_Pop_mioi_dma_read_chnl_Pop_mio_wait_ctrl
// ------------------------------------------------------------------


module InputBuffer_run_dma_read_chnl_Pop_mioi_dma_read_chnl_Pop_mio_wait_ctrl (
  dma_read_chnl_Pop_mioi_iswt0, dma_read_chnl_Pop_mioi_ivld_oreg, dma_read_chnl_Pop_mioi_biwt
);
  input dma_read_chnl_Pop_mioi_iswt0;
  input dma_read_chnl_Pop_mioi_ivld_oreg;
  output dma_read_chnl_Pop_mioi_biwt;



  // Interconnect Declarations for Component Instantiations 
  assign dma_read_chnl_Pop_mioi_biwt = dma_read_chnl_Pop_mioi_iswt0 & dma_read_chnl_Pop_mioi_ivld_oreg;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    InputBuffer_run_dma_read_ctrl_Push_mioi_dma_read_ctrl_Push_mio_wait_ctrl
// ------------------------------------------------------------------


module InputBuffer_run_dma_read_ctrl_Push_mioi_dma_read_ctrl_Push_mio_wait_ctrl (
  dma_read_ctrl_Push_mioi_iswt0, dma_read_ctrl_Push_mioi_irdy_oreg, dma_read_ctrl_Push_mioi_biwt
);
  input dma_read_ctrl_Push_mioi_iswt0;
  input dma_read_ctrl_Push_mioi_irdy_oreg;
  output dma_read_ctrl_Push_mioi_biwt;



  // Interconnect Declarations for Component Instantiations 
  assign dma_read_ctrl_Push_mioi_biwt = dma_read_ctrl_Push_mioi_iswt0 & dma_read_ctrl_Push_mioi_irdy_oreg;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    InputBuffer_run_sync1_Pop_mioi_sync1_Pop_mio_wait_ctrl
// ------------------------------------------------------------------


module InputBuffer_run_sync1_Pop_mioi_sync1_Pop_mio_wait_ctrl (
  sync1_Pop_mioi_iswt0, sync1_Pop_mioi_ivld_oreg, sync1_Pop_mioi_biwt
);
  input sync1_Pop_mioi_iswt0;
  input sync1_Pop_mioi_ivld_oreg;
  output sync1_Pop_mioi_biwt;



  // Interconnect Declarations for Component Instantiations 
  assign sync1_Pop_mioi_biwt = sync1_Pop_mioi_iswt0 & sync1_Pop_mioi_ivld_oreg;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_run_fsm
//  FSM Module
// ------------------------------------------------------------------


module Rotate_run_run_fsm (
  clk, rst, run_wen, fsm_output
);
  input clk;
  input rst;
  input run_wen;
  output [4:0] fsm_output;
  reg [4:0] fsm_output;


  // FSM State Type Declaration for Rotate_run_run_fsm_1
  parameter
    run_rlp_C_0 = 3'd0,
    while_C_0 = 3'd1,
    while_C_1 = 3'd2,
    while_C_2 = 3'd3,
    while_C_3 = 3'd4;

  reg [2:0] state_var;
  reg [2:0] state_var_NS;


  // Interconnect Declarations for Component Instantiations 
  always @(*)
  begin : Rotate_run_run_fsm_1
    case (state_var)
      while_C_0 : begin
        fsm_output = 5'b00010;
        state_var_NS = while_C_1;
      end
      while_C_1 : begin
        fsm_output = 5'b00100;
        state_var_NS = while_C_2;
      end
      while_C_2 : begin
        fsm_output = 5'b01000;
        state_var_NS = while_C_3;
      end
      while_C_3 : begin
        fsm_output = 5'b10000;
        state_var_NS = while_C_0;
      end
      // run_rlp_C_0
      default : begin
        fsm_output = 5'b00001;
        state_var_NS = while_C_0;
      end
    endcase
  end

  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      state_var <= run_rlp_C_0;
    end
    else if ( run_wen ) begin
      state_var <= state_var_NS;
    end
  end

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_staller
// ------------------------------------------------------------------


module Rotate_run_staller (
  clk, rst, run_wen, run_wten, rotate_in_Pop_mioi_iden, rotate_in_Pop_mioi_iden_1,
      rotate_in_Pop_mioi_wen_comp, rotate_out_Push_mioi_iden, rotate_out_Push_mioi_wen_comp,
      while_mul_115_cmp_iden, while_mul_115_cmp_iden_1, while_mul_115_cmp_iden_2,
      while_mul_115_cmp_iden_3, while_mul_115_cmp_iden_4, while_mul_115_cmp_iden_5,
      while_mul_115_cmp_iden_6, while_mul_115_cmp_iden_7, while_mul_110_cmp_iden,
      while_mul_110_cmp_iden_1, while_mul_110_cmp_iden_2, while_mul_110_cmp_iden_3,
      while_mul_110_cmp_iden_4, while_mul_110_cmp_iden_5, while_mul_111_cmp_iden,
      while_mul_111_cmp_iden_1, while_mul_111_cmp_iden_2, while_mul_111_cmp_iden_3,
      while_mul_111_cmp_iden_4, while_mul_111_cmp_iden_5, while_mul_108_cmp_iden,
      while_mul_108_cmp_iden_1, while_mul_108_cmp_iden_2, while_mul_108_cmp_iden_3,
      while_mul_76_cmp_iden, while_mul_76_cmp_iden_1, while_mul_76_cmp_iden_2, while_mul_76_cmp_iden_3,
      while_mul_77_cmp_iden, while_mul_77_cmp_iden_1, while_mul_77_cmp_iden_2, while_mul_77_cmp_iden_3,
      while_mul_77_cmp_iden_4, while_mul_77_cmp_iden_5, while_mul_70_cmp_iden, while_mul_70_cmp_iden_1,
      while_mul_70_cmp_iden_2, while_mul_70_cmp_iden_3, while_while_mul_cmp_iden,
      while_while_mul_cmp_iden_1, while_while_mul_cmp_iden_2, while_while_mul_cmp_iden_3,
      while_mul_67_cmp_iden, while_mul_67_cmp_iden_1, while_mul_67_cmp_iden_2, while_mul_67_cmp_iden_3,
      while_mul_73_cmp_iden, while_mul_73_cmp_iden_1, while_mul_73_cmp_iden_2, while_mul_73_cmp_iden_3,
      while_mul_44_cmp_iden, while_mul_44_cmp_iden_1, while_mul_44_cmp_iden_2, while_mul_44_cmp_iden_3,
      while_mul_37_cmp_iden, while_mul_37_cmp_iden_1, while_mul_37_cmp_iden_2, while_mul_37_cmp_iden_3,
      while_mul_34_cmp_iden, while_mul_34_cmp_iden_1, while_mul_34_cmp_iden_2, while_mul_34_cmp_iden_3,
      while_mul_34_cmp_1_iden, while_mul_34_cmp_1_iden_1, while_mul_34_cmp_1_iden_2,
      while_mul_34_cmp_1_iden_3, while_mul_34_cmp_1_iden_4, while_mul_34_cmp_1_iden_5,
      while_mul_36_cmp_iden, while_mul_36_cmp_iden_1, while_mul_36_cmp_iden_2, while_mul_36_cmp_iden_3,
      while_mul_25_cmp_iden, while_mul_25_cmp_iden_1, while_mul_25_cmp_iden_2, while_mul_25_cmp_iden_3,
      while_mul_25_cmp_iden_4, while_mul_25_cmp_iden_5, while_mul_25_cmp_iden_6,
      while_mul_25_cmp_iden_7, while_mul_26_cmp_iden, while_mul_26_cmp_iden_1, while_mul_26_cmp_iden_2,
      while_mul_26_cmp_iden_3, while_mul_26_cmp_1_iden, while_mul_26_cmp_1_iden_1,
      while_mul_26_cmp_1_iden_2, while_mul_26_cmp_1_iden_3, while_mul_cmp_iden, while_mul_cmp_iden_1,
      while_mul_cmp_iden_2, while_mul_cmp_iden_3, while_mul_cmp_iden_4, while_mul_cmp_iden_5,
      while_mul_cmp_1_iden, while_mul_cmp_1_iden_1, while_mul_cmp_1_iden_2, while_mul_cmp_1_iden_3,
      while_mul_cmp_1_iden_4, while_mul_cmp_1_iden_5, while_mul_cmp_2_iden, while_mul_cmp_2_iden_1,
      while_mul_cmp_2_iden_2, while_mul_cmp_2_iden_3, while_mul_cmp_2_iden_4, while_mul_cmp_2_iden_5,
      while_mul_cmp_3_iden, while_mul_cmp_3_iden_1, while_mul_cmp_3_iden_2, while_mul_cmp_3_iden_3,
      while_mul_cmp_3_iden_4, while_mul_cmp_3_iden_5, while_mul_cmp_4_iden, while_mul_cmp_4_iden_1,
      while_mul_cmp_4_iden_2, while_mul_cmp_4_iden_3, while_mul_cmp_4_iden_4, while_mul_cmp_4_iden_5,
      while_mul_cmp_5_iden, while_mul_cmp_5_iden_1, while_mul_cmp_5_iden_2, while_mul_cmp_5_iden_3,
      while_mul_cmp_5_iden_4, while_mul_cmp_5_iden_5, while_mul_cmp_6_iden, while_mul_cmp_6_iden_1,
      while_mul_cmp_6_iden_2, while_mul_cmp_6_iden_3, while_mul_cmp_6_iden_4, while_mul_cmp_6_iden_5,
      while_mul_cmp_7_iden, while_mul_cmp_7_iden_1, while_mul_cmp_7_iden_2, while_mul_cmp_7_iden_3,
      while_mul_cmp_7_iden_4, while_mul_cmp_7_iden_5, while_mul_cmp_8_iden, while_mul_cmp_8_iden_1,
      while_mul_cmp_8_iden_2, while_mul_cmp_8_iden_3, while_mul_cmp_8_iden_4, while_mul_cmp_8_iden_5,
      while_mul_cmp_9_iden, while_mul_cmp_9_iden_1, while_mul_cmp_9_iden_2, while_mul_cmp_9_iden_3,
      while_mul_cmp_9_iden_4, while_mul_cmp_9_iden_5, while_mul_cmp_10_iden, while_mul_cmp_10_iden_1,
      while_mul_cmp_10_iden_2, while_mul_cmp_10_iden_3, while_mul_cmp_10_iden_4,
      while_mul_cmp_10_iden_5, while_mul_cmp_11_iden, while_mul_cmp_11_iden_1, while_mul_cmp_11_iden_2,
      while_mul_cmp_11_iden_3, while_mul_cmp_11_iden_4, while_mul_cmp_11_iden_5,
      while_mul_cmp_12_iden, while_mul_cmp_12_iden_1, while_mul_cmp_12_iden_2, while_mul_cmp_12_iden_3,
      while_mul_cmp_12_iden_4, while_mul_cmp_12_iden_5, while_mul_cmp_13_iden, while_mul_cmp_13_iden_1,
      while_mul_cmp_13_iden_2, while_mul_cmp_13_iden_3, while_mul_cmp_13_iden_4,
      while_mul_cmp_13_iden_5, while_mul_cmp_14_iden, while_mul_cmp_14_iden_1, while_mul_cmp_14_iden_2,
      while_mul_cmp_14_iden_3, while_mul_cmp_14_iden_4, while_mul_cmp_14_iden_5,
      run_flen_unreg
);
  input clk;
  input rst;
  output run_wen;
  output run_wten;
  input rotate_in_Pop_mioi_iden;
  input rotate_in_Pop_mioi_iden_1;
  input rotate_in_Pop_mioi_wen_comp;
  input rotate_out_Push_mioi_iden;
  input rotate_out_Push_mioi_wen_comp;
  input while_mul_115_cmp_iden;
  input while_mul_115_cmp_iden_1;
  input while_mul_115_cmp_iden_2;
  input while_mul_115_cmp_iden_3;
  input while_mul_115_cmp_iden_4;
  input while_mul_115_cmp_iden_5;
  input while_mul_115_cmp_iden_6;
  input while_mul_115_cmp_iden_7;
  input while_mul_110_cmp_iden;
  input while_mul_110_cmp_iden_1;
  input while_mul_110_cmp_iden_2;
  input while_mul_110_cmp_iden_3;
  input while_mul_110_cmp_iden_4;
  input while_mul_110_cmp_iden_5;
  input while_mul_111_cmp_iden;
  input while_mul_111_cmp_iden_1;
  input while_mul_111_cmp_iden_2;
  input while_mul_111_cmp_iden_3;
  input while_mul_111_cmp_iden_4;
  input while_mul_111_cmp_iden_5;
  input while_mul_108_cmp_iden;
  input while_mul_108_cmp_iden_1;
  input while_mul_108_cmp_iden_2;
  input while_mul_108_cmp_iden_3;
  input while_mul_76_cmp_iden;
  input while_mul_76_cmp_iden_1;
  input while_mul_76_cmp_iden_2;
  input while_mul_76_cmp_iden_3;
  input while_mul_77_cmp_iden;
  input while_mul_77_cmp_iden_1;
  input while_mul_77_cmp_iden_2;
  input while_mul_77_cmp_iden_3;
  input while_mul_77_cmp_iden_4;
  input while_mul_77_cmp_iden_5;
  input while_mul_70_cmp_iden;
  input while_mul_70_cmp_iden_1;
  input while_mul_70_cmp_iden_2;
  input while_mul_70_cmp_iden_3;
  input while_while_mul_cmp_iden;
  input while_while_mul_cmp_iden_1;
  input while_while_mul_cmp_iden_2;
  input while_while_mul_cmp_iden_3;
  input while_mul_67_cmp_iden;
  input while_mul_67_cmp_iden_1;
  input while_mul_67_cmp_iden_2;
  input while_mul_67_cmp_iden_3;
  input while_mul_73_cmp_iden;
  input while_mul_73_cmp_iden_1;
  input while_mul_73_cmp_iden_2;
  input while_mul_73_cmp_iden_3;
  input while_mul_44_cmp_iden;
  input while_mul_44_cmp_iden_1;
  input while_mul_44_cmp_iden_2;
  input while_mul_44_cmp_iden_3;
  input while_mul_37_cmp_iden;
  input while_mul_37_cmp_iden_1;
  input while_mul_37_cmp_iden_2;
  input while_mul_37_cmp_iden_3;
  input while_mul_34_cmp_iden;
  input while_mul_34_cmp_iden_1;
  input while_mul_34_cmp_iden_2;
  input while_mul_34_cmp_iden_3;
  input while_mul_34_cmp_1_iden;
  input while_mul_34_cmp_1_iden_1;
  input while_mul_34_cmp_1_iden_2;
  input while_mul_34_cmp_1_iden_3;
  input while_mul_34_cmp_1_iden_4;
  input while_mul_34_cmp_1_iden_5;
  input while_mul_36_cmp_iden;
  input while_mul_36_cmp_iden_1;
  input while_mul_36_cmp_iden_2;
  input while_mul_36_cmp_iden_3;
  input while_mul_25_cmp_iden;
  input while_mul_25_cmp_iden_1;
  input while_mul_25_cmp_iden_2;
  input while_mul_25_cmp_iden_3;
  input while_mul_25_cmp_iden_4;
  input while_mul_25_cmp_iden_5;
  input while_mul_25_cmp_iden_6;
  input while_mul_25_cmp_iden_7;
  input while_mul_26_cmp_iden;
  input while_mul_26_cmp_iden_1;
  input while_mul_26_cmp_iden_2;
  input while_mul_26_cmp_iden_3;
  input while_mul_26_cmp_1_iden;
  input while_mul_26_cmp_1_iden_1;
  input while_mul_26_cmp_1_iden_2;
  input while_mul_26_cmp_1_iden_3;
  input while_mul_cmp_iden;
  input while_mul_cmp_iden_1;
  input while_mul_cmp_iden_2;
  input while_mul_cmp_iden_3;
  input while_mul_cmp_iden_4;
  input while_mul_cmp_iden_5;
  input while_mul_cmp_1_iden;
  input while_mul_cmp_1_iden_1;
  input while_mul_cmp_1_iden_2;
  input while_mul_cmp_1_iden_3;
  input while_mul_cmp_1_iden_4;
  input while_mul_cmp_1_iden_5;
  input while_mul_cmp_2_iden;
  input while_mul_cmp_2_iden_1;
  input while_mul_cmp_2_iden_2;
  input while_mul_cmp_2_iden_3;
  input while_mul_cmp_2_iden_4;
  input while_mul_cmp_2_iden_5;
  input while_mul_cmp_3_iden;
  input while_mul_cmp_3_iden_1;
  input while_mul_cmp_3_iden_2;
  input while_mul_cmp_3_iden_3;
  input while_mul_cmp_3_iden_4;
  input while_mul_cmp_3_iden_5;
  input while_mul_cmp_4_iden;
  input while_mul_cmp_4_iden_1;
  input while_mul_cmp_4_iden_2;
  input while_mul_cmp_4_iden_3;
  input while_mul_cmp_4_iden_4;
  input while_mul_cmp_4_iden_5;
  input while_mul_cmp_5_iden;
  input while_mul_cmp_5_iden_1;
  input while_mul_cmp_5_iden_2;
  input while_mul_cmp_5_iden_3;
  input while_mul_cmp_5_iden_4;
  input while_mul_cmp_5_iden_5;
  input while_mul_cmp_6_iden;
  input while_mul_cmp_6_iden_1;
  input while_mul_cmp_6_iden_2;
  input while_mul_cmp_6_iden_3;
  input while_mul_cmp_6_iden_4;
  input while_mul_cmp_6_iden_5;
  input while_mul_cmp_7_iden;
  input while_mul_cmp_7_iden_1;
  input while_mul_cmp_7_iden_2;
  input while_mul_cmp_7_iden_3;
  input while_mul_cmp_7_iden_4;
  input while_mul_cmp_7_iden_5;
  input while_mul_cmp_8_iden;
  input while_mul_cmp_8_iden_1;
  input while_mul_cmp_8_iden_2;
  input while_mul_cmp_8_iden_3;
  input while_mul_cmp_8_iden_4;
  input while_mul_cmp_8_iden_5;
  input while_mul_cmp_9_iden;
  input while_mul_cmp_9_iden_1;
  input while_mul_cmp_9_iden_2;
  input while_mul_cmp_9_iden_3;
  input while_mul_cmp_9_iden_4;
  input while_mul_cmp_9_iden_5;
  input while_mul_cmp_10_iden;
  input while_mul_cmp_10_iden_1;
  input while_mul_cmp_10_iden_2;
  input while_mul_cmp_10_iden_3;
  input while_mul_cmp_10_iden_4;
  input while_mul_cmp_10_iden_5;
  input while_mul_cmp_11_iden;
  input while_mul_cmp_11_iden_1;
  input while_mul_cmp_11_iden_2;
  input while_mul_cmp_11_iden_3;
  input while_mul_cmp_11_iden_4;
  input while_mul_cmp_11_iden_5;
  input while_mul_cmp_12_iden;
  input while_mul_cmp_12_iden_1;
  input while_mul_cmp_12_iden_2;
  input while_mul_cmp_12_iden_3;
  input while_mul_cmp_12_iden_4;
  input while_mul_cmp_12_iden_5;
  input while_mul_cmp_13_iden;
  input while_mul_cmp_13_iden_1;
  input while_mul_cmp_13_iden_2;
  input while_mul_cmp_13_iden_3;
  input while_mul_cmp_13_iden_4;
  input while_mul_cmp_13_iden_5;
  input while_mul_cmp_14_iden;
  input while_mul_cmp_14_iden_1;
  input while_mul_cmp_14_iden_2;
  input while_mul_cmp_14_iden_3;
  input while_mul_cmp_14_iden_4;
  input while_mul_cmp_14_iden_5;
  input run_flen_unreg;


  // Interconnect Declarations
  reg run_flen_shf_3;
  reg run_flen_shf_2;
  reg run_flen_shf_1;
  reg run_flen_shf_0;
  reg run_wten_reg;


  // Interconnect Declarations for Component Instantiations 
  assign run_wen = rotate_in_Pop_mioi_wen_comp & rotate_out_Push_mioi_wen_comp &
      (~(run_flen_shf_3 & run_flen_shf_2 & run_flen_shf_1 & run_flen_shf_0 & run_flen_unreg));
  assign run_wten = run_wten_reg;
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      run_flen_shf_3 <= 1'b0;
      run_flen_shf_2 <= 1'b0;
      run_flen_shf_1 <= 1'b0;
      run_flen_shf_0 <= 1'b0;
      run_wten_reg <= 1'b0;
    end
    else begin
      run_flen_shf_3 <= run_flen_shf_2;
      run_flen_shf_2 <= run_flen_shf_1;
      run_flen_shf_1 <= run_flen_shf_0;
      run_flen_shf_0 <= run_flen_unreg & (~(rotate_in_Pop_mioi_iden | rotate_in_Pop_mioi_iden_1
          | rotate_out_Push_mioi_iden | while_mul_115_cmp_iden | while_mul_115_cmp_iden_1
          | while_mul_115_cmp_iden_2 | while_mul_115_cmp_iden_3 | while_mul_115_cmp_iden_4
          | while_mul_115_cmp_iden_5 | while_mul_115_cmp_iden_6 | while_mul_115_cmp_iden_7
          | while_mul_110_cmp_iden | while_mul_110_cmp_iden_1 | while_mul_110_cmp_iden_2
          | while_mul_110_cmp_iden_3 | while_mul_110_cmp_iden_4 | while_mul_110_cmp_iden_5
          | while_mul_111_cmp_iden | while_mul_111_cmp_iden_1 | while_mul_111_cmp_iden_2
          | while_mul_111_cmp_iden_3 | while_mul_111_cmp_iden_4 | while_mul_111_cmp_iden_5
          | while_mul_108_cmp_iden | while_mul_108_cmp_iden_1 | while_mul_108_cmp_iden_2
          | while_mul_108_cmp_iden_3 | while_mul_76_cmp_iden | while_mul_76_cmp_iden_1
          | while_mul_76_cmp_iden_2 | while_mul_76_cmp_iden_3 | while_mul_77_cmp_iden
          | while_mul_77_cmp_iden_1 | while_mul_77_cmp_iden_2 | while_mul_77_cmp_iden_3
          | while_mul_77_cmp_iden_4 | while_mul_77_cmp_iden_5 | while_mul_70_cmp_iden
          | while_mul_70_cmp_iden_1 | while_mul_70_cmp_iden_2 | while_mul_70_cmp_iden_3
          | while_while_mul_cmp_iden | while_while_mul_cmp_iden_1 | while_while_mul_cmp_iden_2
          | while_while_mul_cmp_iden_3 | while_mul_67_cmp_iden | while_mul_67_cmp_iden_1
          | while_mul_67_cmp_iden_2 | while_mul_67_cmp_iden_3 | while_mul_73_cmp_iden
          | while_mul_73_cmp_iden_1 | while_mul_73_cmp_iden_2 | while_mul_73_cmp_iden_3
          | while_mul_44_cmp_iden | while_mul_44_cmp_iden_1 | while_mul_44_cmp_iden_2
          | while_mul_44_cmp_iden_3 | while_mul_37_cmp_iden | while_mul_37_cmp_iden_1
          | while_mul_37_cmp_iden_2 | while_mul_37_cmp_iden_3 | while_mul_34_cmp_iden
          | while_mul_34_cmp_iden_1 | while_mul_34_cmp_iden_2 | while_mul_34_cmp_iden_3
          | while_mul_34_cmp_1_iden | while_mul_34_cmp_1_iden_1 | while_mul_34_cmp_1_iden_2
          | while_mul_34_cmp_1_iden_3 | while_mul_34_cmp_1_iden_4 | while_mul_34_cmp_1_iden_5
          | while_mul_36_cmp_iden | while_mul_36_cmp_iden_1 | while_mul_36_cmp_iden_2
          | while_mul_36_cmp_iden_3 | while_mul_25_cmp_iden | while_mul_25_cmp_iden_1
          | while_mul_25_cmp_iden_2 | while_mul_25_cmp_iden_3 | while_mul_25_cmp_iden_4
          | while_mul_25_cmp_iden_5 | while_mul_25_cmp_iden_6 | while_mul_25_cmp_iden_7
          | while_mul_26_cmp_iden | while_mul_26_cmp_iden_1 | while_mul_26_cmp_iden_2
          | while_mul_26_cmp_iden_3 | while_mul_26_cmp_1_iden | while_mul_26_cmp_1_iden_1
          | while_mul_26_cmp_1_iden_2 | while_mul_26_cmp_1_iden_3 | while_mul_cmp_iden
          | while_mul_cmp_iden_1 | while_mul_cmp_iden_2 | while_mul_cmp_iden_3 |
          while_mul_cmp_iden_4 | while_mul_cmp_iden_5 | while_mul_cmp_1_iden | while_mul_cmp_1_iden_1
          | while_mul_cmp_1_iden_2 | while_mul_cmp_1_iden_3 | while_mul_cmp_1_iden_4
          | while_mul_cmp_1_iden_5 | while_mul_cmp_2_iden | while_mul_cmp_2_iden_1
          | while_mul_cmp_2_iden_2 | while_mul_cmp_2_iden_3 | while_mul_cmp_2_iden_4
          | while_mul_cmp_2_iden_5 | while_mul_cmp_3_iden | while_mul_cmp_3_iden_1
          | while_mul_cmp_3_iden_2 | while_mul_cmp_3_iden_3 | while_mul_cmp_3_iden_4
          | while_mul_cmp_3_iden_5 | while_mul_cmp_4_iden | while_mul_cmp_4_iden_1
          | while_mul_cmp_4_iden_2 | while_mul_cmp_4_iden_3 | while_mul_cmp_4_iden_4
          | while_mul_cmp_4_iden_5 | while_mul_cmp_5_iden | while_mul_cmp_5_iden_1
          | while_mul_cmp_5_iden_2 | while_mul_cmp_5_iden_3 | while_mul_cmp_5_iden_4
          | while_mul_cmp_5_iden_5 | while_mul_cmp_6_iden | while_mul_cmp_6_iden_1
          | while_mul_cmp_6_iden_2 | while_mul_cmp_6_iden_3 | while_mul_cmp_6_iden_4
          | while_mul_cmp_6_iden_5 | while_mul_cmp_7_iden | while_mul_cmp_7_iden_1
          | while_mul_cmp_7_iden_2 | while_mul_cmp_7_iden_3 | while_mul_cmp_7_iden_4
          | while_mul_cmp_7_iden_5 | while_mul_cmp_8_iden | while_mul_cmp_8_iden_1
          | while_mul_cmp_8_iden_2 | while_mul_cmp_8_iden_3 | while_mul_cmp_8_iden_4
          | while_mul_cmp_8_iden_5 | while_mul_cmp_9_iden | while_mul_cmp_9_iden_1
          | while_mul_cmp_9_iden_2 | while_mul_cmp_9_iden_3 | while_mul_cmp_9_iden_4
          | while_mul_cmp_9_iden_5 | while_mul_cmp_10_iden | while_mul_cmp_10_iden_1
          | while_mul_cmp_10_iden_2 | while_mul_cmp_10_iden_3 | while_mul_cmp_10_iden_4
          | while_mul_cmp_10_iden_5 | while_mul_cmp_11_iden | while_mul_cmp_11_iden_1
          | while_mul_cmp_11_iden_2 | while_mul_cmp_11_iden_3 | while_mul_cmp_11_iden_4
          | while_mul_cmp_11_iden_5 | while_mul_cmp_12_iden | while_mul_cmp_12_iden_1
          | while_mul_cmp_12_iden_2 | while_mul_cmp_12_iden_3 | while_mul_cmp_12_iden_4
          | while_mul_cmp_12_iden_5 | while_mul_cmp_13_iden | while_mul_cmp_13_iden_1
          | while_mul_cmp_13_iden_2 | while_mul_cmp_13_iden_3 | while_mul_cmp_13_iden_4
          | while_mul_cmp_13_iden_5 | while_mul_cmp_14_iden | while_mul_cmp_14_iden_1
          | while_mul_cmp_14_iden_2 | while_mul_cmp_14_iden_3 | while_mul_cmp_14_iden_4
          | while_mul_cmp_14_iden_5));
      run_wten_reg <= ~ run_wen;
    end
  end
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_cmp_14_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_14
// ------------------------------------------------------------------


module Rotate_run_while_mul_cmp_14_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_14
    (
  clk, rst, while_mul_cmp_14_bawt, while_mul_cmp_14_iden, while_mul_cmp_14_iden_2,
      while_mul_cmp_14_iden_4, while_mul_cmp_14_z_mxwt, while_mul_cmp_14_z_mxwt_1,
      while_mul_cmp_14_z_mxwt_2, while_mul_cmp_14_biwt, while_mul_cmp_14_bdwt, while_mul_cmp_14_biwt_2,
      while_mul_cmp_14_bdwt_2, while_mul_cmp_14_biwt_4, while_mul_cmp_14_bdwt_4,
      while_mul_cmp_14_z
);
  input clk;
  input rst;
  output while_mul_cmp_14_bawt;
  output while_mul_cmp_14_iden;
  output while_mul_cmp_14_iden_2;
  output while_mul_cmp_14_iden_4;
  output [111:0] while_mul_cmp_14_z_mxwt;
  output [111:0] while_mul_cmp_14_z_mxwt_1;
  output [111:0] while_mul_cmp_14_z_mxwt_2;
  input while_mul_cmp_14_biwt;
  input while_mul_cmp_14_bdwt;
  input while_mul_cmp_14_biwt_2;
  input while_mul_cmp_14_bdwt_2;
  input while_mul_cmp_14_biwt_4;
  input while_mul_cmp_14_bdwt_4;
  input [127:0] while_mul_cmp_14_z;


  // Interconnect Declarations
  reg [2:0] while_mul_cmp_14_bcwt;
  wire [3:0] nl_while_mul_cmp_14_bcwt;
  reg [2:0] while_mul_cmp_14_bcwt_1;
  wire [3:0] nl_while_mul_cmp_14_bcwt_1;
  reg [2:0] while_mul_cmp_14_bcwt_2;
  wire [3:0] nl_while_mul_cmp_14_bcwt_2;
  reg [111:0] while_mul_cmp_14_z_bfwt_3_111_0;
  reg [111:0] while_mul_cmp_14_z_bfwt_7_111_0;
  reg [111:0] while_mul_cmp_14_z_bfwt_11_111_0;
  reg [111:0] while_mul_cmp_14_z_bfwt_2_111_0;
  reg [111:0] while_mul_cmp_14_z_bfwt_6_111_0;
  reg [111:0] while_mul_cmp_14_z_bfwt_10_111_0;
  reg [111:0] while_mul_cmp_14_z_bfwt_1_111_0;
  reg [111:0] while_mul_cmp_14_z_bfwt_5_111_0;
  reg [111:0] while_mul_cmp_14_z_bfwt_9_111_0;
  reg [111:0] while_mul_cmp_14_z_bfwt_111_0;
  reg [111:0] while_mul_cmp_14_z_bfwt_4_111_0;
  reg [111:0] while_mul_cmp_14_z_bfwt_8_111_0;

  wire[2:0] while_acc_177_nl;
  wire[3:0] nl_while_acc_177_nl;
  wire[1:0] while_acc_178_nl;
  wire[2:0] nl_while_acc_178_nl;
  wire[2:0] while_acc_180_nl;
  wire[3:0] nl_while_acc_180_nl;
  wire[1:0] while_acc_181_nl;
  wire[2:0] nl_while_acc_181_nl;
  wire[2:0] while_acc_183_nl;
  wire[3:0] nl_while_acc_183_nl;
  wire[1:0] while_acc_184_nl;
  wire[2:0] nl_while_acc_184_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_cmp_14_iden = while_mul_cmp_14_biwt | while_mul_cmp_14_bdwt;
  assign while_mul_cmp_14_bawt = while_mul_cmp_14_biwt | (while_mul_cmp_14_bcwt!=3'b000);
  assign while_mul_cmp_14_iden_2 = while_mul_cmp_14_biwt_2 | while_mul_cmp_14_bdwt_2;
  assign while_mul_cmp_14_iden_4 = while_mul_cmp_14_biwt_4 | while_mul_cmp_14_bdwt_4;
  assign while_mul_cmp_14_z_mxwt = MUX_v_112_5_2((while_mul_cmp_14_z[111:0]), while_mul_cmp_14_z_bfwt_111_0,
      while_mul_cmp_14_z_bfwt_1_111_0, while_mul_cmp_14_z_bfwt_2_111_0, while_mul_cmp_14_z_bfwt_3_111_0,
      while_mul_cmp_14_bcwt_2);
  assign while_mul_cmp_14_z_mxwt_1 = MUX_v_112_5_2((while_mul_cmp_14_z[111:0]), while_mul_cmp_14_z_bfwt_4_111_0,
      while_mul_cmp_14_z_bfwt_5_111_0, while_mul_cmp_14_z_bfwt_6_111_0, while_mul_cmp_14_z_bfwt_7_111_0,
      while_mul_cmp_14_bcwt_1);
  assign while_mul_cmp_14_z_mxwt_2 = MUX_v_112_5_2((while_mul_cmp_14_z[111:0]), while_mul_cmp_14_z_bfwt_8_111_0,
      while_mul_cmp_14_z_bfwt_9_111_0, while_mul_cmp_14_z_bfwt_10_111_0, while_mul_cmp_14_z_bfwt_11_111_0,
      while_mul_cmp_14_bcwt);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_14_bcwt <= 3'b000;
      while_mul_cmp_14_bcwt_1 <= 3'b000;
      while_mul_cmp_14_bcwt_2 <= 3'b000;
    end
    else begin
      while_mul_cmp_14_bcwt <= nl_while_mul_cmp_14_bcwt[2:0];
      while_mul_cmp_14_bcwt_1 <= nl_while_mul_cmp_14_bcwt_1[2:0];
      while_mul_cmp_14_bcwt_2 <= nl_while_mul_cmp_14_bcwt_2[2:0];
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_14_z_bfwt_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_14_z_bfwt_1_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_14_z_bfwt_2_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_14_z_bfwt_3_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_cmp_14_biwt_4 ) begin
      while_mul_cmp_14_z_bfwt_111_0 <= while_mul_cmp_14_z[111:0];
      while_mul_cmp_14_z_bfwt_1_111_0 <= while_mul_cmp_14_z_bfwt_111_0;
      while_mul_cmp_14_z_bfwt_2_111_0 <= while_mul_cmp_14_z_bfwt_1_111_0;
      while_mul_cmp_14_z_bfwt_3_111_0 <= while_mul_cmp_14_z_bfwt_2_111_0;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_14_z_bfwt_4_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_14_z_bfwt_5_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_14_z_bfwt_6_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_14_z_bfwt_7_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_cmp_14_biwt_2 ) begin
      while_mul_cmp_14_z_bfwt_4_111_0 <= while_mul_cmp_14_z[111:0];
      while_mul_cmp_14_z_bfwt_5_111_0 <= while_mul_cmp_14_z_bfwt_4_111_0;
      while_mul_cmp_14_z_bfwt_6_111_0 <= while_mul_cmp_14_z_bfwt_5_111_0;
      while_mul_cmp_14_z_bfwt_7_111_0 <= while_mul_cmp_14_z_bfwt_6_111_0;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_14_z_bfwt_8_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_14_z_bfwt_9_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_14_z_bfwt_10_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_14_z_bfwt_11_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_cmp_14_biwt ) begin
      while_mul_cmp_14_z_bfwt_8_111_0 <= while_mul_cmp_14_z[111:0];
      while_mul_cmp_14_z_bfwt_9_111_0 <= while_mul_cmp_14_z_bfwt_8_111_0;
      while_mul_cmp_14_z_bfwt_10_111_0 <= while_mul_cmp_14_z_bfwt_9_111_0;
      while_mul_cmp_14_z_bfwt_11_111_0 <= while_mul_cmp_14_z_bfwt_10_111_0;
    end
  end
  assign nl_while_acc_177_nl = while_mul_cmp_14_bcwt + 3'b111;
  assign while_acc_177_nl = nl_while_acc_177_nl[2:0];
  assign nl_while_acc_178_nl = conv_u2u_1_2(~ while_mul_cmp_14_bdwt) + conv_u2u_1_2(while_mul_cmp_14_biwt);
  assign while_acc_178_nl = nl_while_acc_178_nl[1:0];
  assign nl_while_mul_cmp_14_bcwt  = while_acc_177_nl + conv_u2u_2_3(while_acc_178_nl);
  assign nl_while_acc_180_nl = while_mul_cmp_14_bcwt_1 + 3'b111;
  assign while_acc_180_nl = nl_while_acc_180_nl[2:0];
  assign nl_while_acc_181_nl = conv_u2u_1_2(~ while_mul_cmp_14_bdwt_2) + conv_u2u_1_2(while_mul_cmp_14_biwt_2);
  assign while_acc_181_nl = nl_while_acc_181_nl[1:0];
  assign nl_while_mul_cmp_14_bcwt_1  = while_acc_180_nl + conv_u2u_2_3(while_acc_181_nl);
  assign nl_while_acc_183_nl = while_mul_cmp_14_bcwt_2 + 3'b111;
  assign while_acc_183_nl = nl_while_acc_183_nl[2:0];
  assign nl_while_acc_184_nl = conv_u2u_1_2(~ while_mul_cmp_14_bdwt_4) + conv_u2u_1_2(while_mul_cmp_14_biwt_4);
  assign while_acc_184_nl = nl_while_acc_184_nl[1:0];
  assign nl_while_mul_cmp_14_bcwt_2  = while_acc_183_nl + conv_u2u_2_3(while_acc_184_nl);

  function automatic [111:0] MUX_v_112_5_2;
    input [111:0] input_0;
    input [111:0] input_1;
    input [111:0] input_2;
    input [111:0] input_3;
    input [111:0] input_4;
    input [2:0] sel;
    reg [111:0] result;
  begin
    case (sel)
      3'b000 : begin
        result = input_0;
      end
      3'b001 : begin
        result = input_1;
      end
      3'b010 : begin
        result = input_2;
      end
      3'b011 : begin
        result = input_3;
      end
      default : begin
        result = input_4;
      end
    endcase
    MUX_v_112_5_2 = result;
  end
  endfunction


  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_cmp_14_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_14
// ------------------------------------------------------------------


module Rotate_run_while_mul_cmp_14_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_14
    (
  clk, rst, run_wen, run_wten, while_mul_cmp_14_oswt_unreg, while_mul_cmp_14_iswt3,
      while_mul_cmp_14_iden_1, while_mul_cmp_14_oswt_unreg_1, while_mul_cmp_14_iswt3_1,
      while_mul_cmp_14_iden_3, while_mul_cmp_14_oswt_unreg_2, while_mul_cmp_14_iswt3_2,
      while_mul_cmp_14_iden_5, run_cgwt_32, while_mul_cmp_14_bdwt, while_mul_cmp_14_bdwt_2,
      while_mul_cmp_14_bdwt_4, while_mul_cmp_14_iswt3_2_pff, while_mul_cmp_14_iswt3_1_pff,
      while_mul_cmp_14_iswt3_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_cmp_14_oswt_unreg;
  input while_mul_cmp_14_iswt3;
  output while_mul_cmp_14_iden_1;
  input while_mul_cmp_14_oswt_unreg_1;
  input while_mul_cmp_14_iswt3_1;
  output while_mul_cmp_14_iden_3;
  input while_mul_cmp_14_oswt_unreg_2;
  input while_mul_cmp_14_iswt3_2;
  output while_mul_cmp_14_iden_5;
  output run_cgwt_32;
  output while_mul_cmp_14_bdwt;
  output while_mul_cmp_14_bdwt_2;
  output while_mul_cmp_14_bdwt_4;
  input while_mul_cmp_14_iswt3_2_pff;
  input while_mul_cmp_14_iswt3_1_pff;
  input while_mul_cmp_14_iswt3_pff;


  // Interconnect Declarations
  wire while_mul_cmp_14_ogwt;
  wire while_mul_cmp_14_tiswt3;
  reg while_mul_cmp_14_hile_mul_cmp_14_pdswt2;
  reg while_mul_cmp_14_hile_mul_cmp_14_pdswt1;
  reg while_mul_cmp_14_hile_mul_cmp_14_pdswt0;
  reg [2:0] while_mul_cmp_14_icwt;
  wire [3:0] nl_while_mul_cmp_14_icwt;
  wire while_mul_cmp_14_ogwt_1;
  wire while_mul_cmp_14_tiswt3_1;
  reg while_mul_cmp_14_hile_mul_cmp_14_pdswt2_1;
  reg while_mul_cmp_14_hile_mul_cmp_14_pdswt1_1;
  reg while_mul_cmp_14_hile_mul_cmp_14_pdswt0_1;
  reg [2:0] while_mul_cmp_14_icwt_1;
  wire [3:0] nl_while_mul_cmp_14_icwt_1;
  wire while_mul_cmp_14_ogwt_2;
  wire while_mul_cmp_14_tiswt3_2;
  reg while_mul_cmp_14_hile_mul_cmp_14_pdswt2_2;
  reg while_mul_cmp_14_hile_mul_cmp_14_pdswt1_2;
  reg while_mul_cmp_14_hile_mul_cmp_14_pdswt0_2;
  reg [2:0] while_mul_cmp_14_icwt_2;
  wire [3:0] nl_while_mul_cmp_14_icwt_2;

  wire[2:0] while_acc_178_nl;
  wire[3:0] nl_while_acc_178_nl;
  wire[1:0] while_acc_179_nl;
  wire[2:0] nl_while_acc_179_nl;
  wire[2:0] while_acc_181_nl;
  wire[3:0] nl_while_acc_181_nl;
  wire[1:0] while_acc_182_nl;
  wire[2:0] nl_while_acc_182_nl;
  wire[2:0] while_acc_184_nl;
  wire[3:0] nl_while_acc_184_nl;
  wire[1:0] while_acc_185_nl;
  wire[2:0] nl_while_acc_185_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_cmp_14_bdwt = while_mul_cmp_14_oswt_unreg & run_wen;
  assign while_mul_cmp_14_tiswt3 = (~ run_wten) & while_mul_cmp_14_iswt3;
  assign while_mul_cmp_14_iden_1 = while_mul_cmp_14_ogwt;
  assign while_mul_cmp_14_ogwt = while_mul_cmp_14_hile_mul_cmp_14_pdswt0 | (while_mul_cmp_14_icwt!=3'b000);
  assign while_mul_cmp_14_bdwt_2 = while_mul_cmp_14_oswt_unreg_1 & run_wen;
  assign while_mul_cmp_14_tiswt3_1 = (~ run_wten) & while_mul_cmp_14_iswt3_1;
  assign while_mul_cmp_14_iden_3 = while_mul_cmp_14_ogwt_1;
  assign while_mul_cmp_14_ogwt_1 = while_mul_cmp_14_hile_mul_cmp_14_pdswt0_1 | (while_mul_cmp_14_icwt_1!=3'b000);
  assign while_mul_cmp_14_bdwt_4 = while_mul_cmp_14_oswt_unreg_2 & run_wen;
  assign while_mul_cmp_14_tiswt3_2 = (~ run_wten) & while_mul_cmp_14_iswt3_2;
  assign while_mul_cmp_14_iden_5 = while_mul_cmp_14_ogwt_2;
  assign while_mul_cmp_14_ogwt_2 = while_mul_cmp_14_hile_mul_cmp_14_pdswt0_2 | (while_mul_cmp_14_icwt_2!=3'b000);
  assign run_cgwt_32 = while_mul_cmp_14_ogwt_2 | while_mul_cmp_14_tiswt3_2 | while_mul_cmp_14_hile_mul_cmp_14_pdswt2_2
      | while_mul_cmp_14_hile_mul_cmp_14_pdswt1_2 | while_mul_cmp_14_ogwt_1 | while_mul_cmp_14_tiswt3_1
      | while_mul_cmp_14_hile_mul_cmp_14_pdswt2_1 | while_mul_cmp_14_hile_mul_cmp_14_pdswt1_1
      | while_mul_cmp_14_ogwt | while_mul_cmp_14_tiswt3 | while_mul_cmp_14_hile_mul_cmp_14_pdswt2
      | while_mul_cmp_14_hile_mul_cmp_14_pdswt1 | (run_wen & while_mul_cmp_14_iswt3_2_pff)
      | (run_wen & while_mul_cmp_14_iswt3_1_pff) | (run_wen & while_mul_cmp_14_iswt3_pff);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_14_hile_mul_cmp_14_pdswt2 <= 1'b0;
      while_mul_cmp_14_hile_mul_cmp_14_pdswt1 <= 1'b0;
      while_mul_cmp_14_hile_mul_cmp_14_pdswt0 <= 1'b0;
      while_mul_cmp_14_icwt <= 3'b000;
      while_mul_cmp_14_hile_mul_cmp_14_pdswt2_1 <= 1'b0;
      while_mul_cmp_14_hile_mul_cmp_14_pdswt1_1 <= 1'b0;
      while_mul_cmp_14_hile_mul_cmp_14_pdswt0_1 <= 1'b0;
      while_mul_cmp_14_icwt_1 <= 3'b000;
      while_mul_cmp_14_hile_mul_cmp_14_pdswt2_2 <= 1'b0;
      while_mul_cmp_14_hile_mul_cmp_14_pdswt1_2 <= 1'b0;
      while_mul_cmp_14_hile_mul_cmp_14_pdswt0_2 <= 1'b0;
      while_mul_cmp_14_icwt_2 <= 3'b000;
    end
    else begin
      while_mul_cmp_14_hile_mul_cmp_14_pdswt2 <= while_mul_cmp_14_tiswt3;
      while_mul_cmp_14_hile_mul_cmp_14_pdswt1 <= while_mul_cmp_14_hile_mul_cmp_14_pdswt2;
      while_mul_cmp_14_hile_mul_cmp_14_pdswt0 <= while_mul_cmp_14_hile_mul_cmp_14_pdswt1;
      while_mul_cmp_14_icwt <= nl_while_mul_cmp_14_icwt[2:0];
      while_mul_cmp_14_hile_mul_cmp_14_pdswt2_1 <= while_mul_cmp_14_tiswt3_1;
      while_mul_cmp_14_hile_mul_cmp_14_pdswt1_1 <= while_mul_cmp_14_hile_mul_cmp_14_pdswt2_1;
      while_mul_cmp_14_hile_mul_cmp_14_pdswt0_1 <= while_mul_cmp_14_hile_mul_cmp_14_pdswt1_1;
      while_mul_cmp_14_icwt_1 <= nl_while_mul_cmp_14_icwt_1[2:0];
      while_mul_cmp_14_hile_mul_cmp_14_pdswt2_2 <= while_mul_cmp_14_tiswt3_2;
      while_mul_cmp_14_hile_mul_cmp_14_pdswt1_2 <= while_mul_cmp_14_hile_mul_cmp_14_pdswt2_2;
      while_mul_cmp_14_hile_mul_cmp_14_pdswt0_2 <= while_mul_cmp_14_hile_mul_cmp_14_pdswt1_2;
      while_mul_cmp_14_icwt_2 <= nl_while_mul_cmp_14_icwt_2[2:0];
    end
  end
  assign nl_while_acc_178_nl = while_mul_cmp_14_icwt + 3'b111;
  assign while_acc_178_nl = nl_while_acc_178_nl[2:0];
  assign nl_while_acc_179_nl = conv_u2u_1_2(while_mul_cmp_14_hile_mul_cmp_14_pdswt0)
      + conv_u2u_1_2(~ while_mul_cmp_14_ogwt);
  assign while_acc_179_nl = nl_while_acc_179_nl[1:0];
  assign nl_while_mul_cmp_14_icwt  = while_acc_178_nl + conv_u2u_2_3(while_acc_179_nl);
  assign nl_while_acc_181_nl = while_mul_cmp_14_icwt_1 + 3'b111;
  assign while_acc_181_nl = nl_while_acc_181_nl[2:0];
  assign nl_while_acc_182_nl = conv_u2u_1_2(while_mul_cmp_14_hile_mul_cmp_14_pdswt0_1)
      + conv_u2u_1_2(~ while_mul_cmp_14_ogwt_1);
  assign while_acc_182_nl = nl_while_acc_182_nl[1:0];
  assign nl_while_mul_cmp_14_icwt_1  = while_acc_181_nl + conv_u2u_2_3(while_acc_182_nl);
  assign nl_while_acc_184_nl = while_mul_cmp_14_icwt_2 + 3'b111;
  assign while_acc_184_nl = nl_while_acc_184_nl[2:0];
  assign nl_while_acc_185_nl = conv_u2u_1_2(while_mul_cmp_14_hile_mul_cmp_14_pdswt0_2)
      + conv_u2u_1_2(~ while_mul_cmp_14_ogwt_2);
  assign while_acc_185_nl = nl_while_acc_185_nl[1:0];
  assign nl_while_mul_cmp_14_icwt_2  = while_acc_184_nl + conv_u2u_2_3(while_acc_185_nl);

  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_cmp_13_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_13
// ------------------------------------------------------------------


module Rotate_run_while_mul_cmp_13_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_13
    (
  clk, rst, while_mul_cmp_13_bawt, while_mul_cmp_13_iden, while_mul_cmp_13_iden_2,
      while_mul_cmp_13_iden_4, while_mul_cmp_13_z_mxwt, while_mul_cmp_13_z_mxwt_1,
      while_mul_cmp_13_z_mxwt_2, while_mul_cmp_13_biwt, while_mul_cmp_13_bdwt, while_mul_cmp_13_biwt_2,
      while_mul_cmp_13_bdwt_2, while_mul_cmp_13_biwt_4, while_mul_cmp_13_bdwt_4,
      while_mul_cmp_13_z
);
  input clk;
  input rst;
  output while_mul_cmp_13_bawt;
  output while_mul_cmp_13_iden;
  output while_mul_cmp_13_iden_2;
  output while_mul_cmp_13_iden_4;
  output [111:0] while_mul_cmp_13_z_mxwt;
  output [111:0] while_mul_cmp_13_z_mxwt_1;
  output [111:0] while_mul_cmp_13_z_mxwt_2;
  input while_mul_cmp_13_biwt;
  input while_mul_cmp_13_bdwt;
  input while_mul_cmp_13_biwt_2;
  input while_mul_cmp_13_bdwt_2;
  input while_mul_cmp_13_biwt_4;
  input while_mul_cmp_13_bdwt_4;
  input [127:0] while_mul_cmp_13_z;


  // Interconnect Declarations
  reg [2:0] while_mul_cmp_13_bcwt;
  wire [3:0] nl_while_mul_cmp_13_bcwt;
  reg [2:0] while_mul_cmp_13_bcwt_1;
  wire [3:0] nl_while_mul_cmp_13_bcwt_1;
  reg [2:0] while_mul_cmp_13_bcwt_2;
  wire [3:0] nl_while_mul_cmp_13_bcwt_2;
  reg [111:0] while_mul_cmp_13_z_bfwt_3_111_0;
  reg [111:0] while_mul_cmp_13_z_bfwt_7_111_0;
  reg [111:0] while_mul_cmp_13_z_bfwt_11_111_0;
  reg [111:0] while_mul_cmp_13_z_bfwt_2_111_0;
  reg [111:0] while_mul_cmp_13_z_bfwt_6_111_0;
  reg [111:0] while_mul_cmp_13_z_bfwt_10_111_0;
  reg [111:0] while_mul_cmp_13_z_bfwt_1_111_0;
  reg [111:0] while_mul_cmp_13_z_bfwt_5_111_0;
  reg [111:0] while_mul_cmp_13_z_bfwt_9_111_0;
  reg [111:0] while_mul_cmp_13_z_bfwt_111_0;
  reg [111:0] while_mul_cmp_13_z_bfwt_4_111_0;
  reg [111:0] while_mul_cmp_13_z_bfwt_8_111_0;

  wire[2:0] while_acc_171_nl;
  wire[3:0] nl_while_acc_171_nl;
  wire[1:0] while_acc_172_nl;
  wire[2:0] nl_while_acc_172_nl;
  wire[2:0] while_acc_174_nl;
  wire[3:0] nl_while_acc_174_nl;
  wire[1:0] while_acc_175_nl;
  wire[2:0] nl_while_acc_175_nl;
  wire[2:0] while_acc_177_nl;
  wire[3:0] nl_while_acc_177_nl;
  wire[1:0] while_acc_178_nl;
  wire[2:0] nl_while_acc_178_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_cmp_13_iden = while_mul_cmp_13_biwt | while_mul_cmp_13_bdwt;
  assign while_mul_cmp_13_bawt = while_mul_cmp_13_biwt | (while_mul_cmp_13_bcwt!=3'b000);
  assign while_mul_cmp_13_iden_2 = while_mul_cmp_13_biwt_2 | while_mul_cmp_13_bdwt_2;
  assign while_mul_cmp_13_iden_4 = while_mul_cmp_13_biwt_4 | while_mul_cmp_13_bdwt_4;
  assign while_mul_cmp_13_z_mxwt = MUX_v_112_5_2((while_mul_cmp_13_z[111:0]), while_mul_cmp_13_z_bfwt_111_0,
      while_mul_cmp_13_z_bfwt_1_111_0, while_mul_cmp_13_z_bfwt_2_111_0, while_mul_cmp_13_z_bfwt_3_111_0,
      while_mul_cmp_13_bcwt_2);
  assign while_mul_cmp_13_z_mxwt_1 = MUX_v_112_5_2((while_mul_cmp_13_z[111:0]), while_mul_cmp_13_z_bfwt_4_111_0,
      while_mul_cmp_13_z_bfwt_5_111_0, while_mul_cmp_13_z_bfwt_6_111_0, while_mul_cmp_13_z_bfwt_7_111_0,
      while_mul_cmp_13_bcwt_1);
  assign while_mul_cmp_13_z_mxwt_2 = MUX_v_112_5_2((while_mul_cmp_13_z[111:0]), while_mul_cmp_13_z_bfwt_8_111_0,
      while_mul_cmp_13_z_bfwt_9_111_0, while_mul_cmp_13_z_bfwt_10_111_0, while_mul_cmp_13_z_bfwt_11_111_0,
      while_mul_cmp_13_bcwt);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_13_bcwt <= 3'b000;
      while_mul_cmp_13_bcwt_1 <= 3'b000;
      while_mul_cmp_13_bcwt_2 <= 3'b000;
    end
    else begin
      while_mul_cmp_13_bcwt <= nl_while_mul_cmp_13_bcwt[2:0];
      while_mul_cmp_13_bcwt_1 <= nl_while_mul_cmp_13_bcwt_1[2:0];
      while_mul_cmp_13_bcwt_2 <= nl_while_mul_cmp_13_bcwt_2[2:0];
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_13_z_bfwt_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_13_z_bfwt_1_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_13_z_bfwt_2_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_13_z_bfwt_3_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_cmp_13_biwt_4 ) begin
      while_mul_cmp_13_z_bfwt_111_0 <= while_mul_cmp_13_z[111:0];
      while_mul_cmp_13_z_bfwt_1_111_0 <= while_mul_cmp_13_z_bfwt_111_0;
      while_mul_cmp_13_z_bfwt_2_111_0 <= while_mul_cmp_13_z_bfwt_1_111_0;
      while_mul_cmp_13_z_bfwt_3_111_0 <= while_mul_cmp_13_z_bfwt_2_111_0;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_13_z_bfwt_4_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_13_z_bfwt_5_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_13_z_bfwt_6_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_13_z_bfwt_7_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_cmp_13_biwt_2 ) begin
      while_mul_cmp_13_z_bfwt_4_111_0 <= while_mul_cmp_13_z[111:0];
      while_mul_cmp_13_z_bfwt_5_111_0 <= while_mul_cmp_13_z_bfwt_4_111_0;
      while_mul_cmp_13_z_bfwt_6_111_0 <= while_mul_cmp_13_z_bfwt_5_111_0;
      while_mul_cmp_13_z_bfwt_7_111_0 <= while_mul_cmp_13_z_bfwt_6_111_0;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_13_z_bfwt_8_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_13_z_bfwt_9_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_13_z_bfwt_10_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_13_z_bfwt_11_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_cmp_13_biwt ) begin
      while_mul_cmp_13_z_bfwt_8_111_0 <= while_mul_cmp_13_z[111:0];
      while_mul_cmp_13_z_bfwt_9_111_0 <= while_mul_cmp_13_z_bfwt_8_111_0;
      while_mul_cmp_13_z_bfwt_10_111_0 <= while_mul_cmp_13_z_bfwt_9_111_0;
      while_mul_cmp_13_z_bfwt_11_111_0 <= while_mul_cmp_13_z_bfwt_10_111_0;
    end
  end
  assign nl_while_acc_171_nl = while_mul_cmp_13_bcwt + 3'b111;
  assign while_acc_171_nl = nl_while_acc_171_nl[2:0];
  assign nl_while_acc_172_nl = conv_u2u_1_2(~ while_mul_cmp_13_bdwt) + conv_u2u_1_2(while_mul_cmp_13_biwt);
  assign while_acc_172_nl = nl_while_acc_172_nl[1:0];
  assign nl_while_mul_cmp_13_bcwt  = while_acc_171_nl + conv_u2u_2_3(while_acc_172_nl);
  assign nl_while_acc_174_nl = while_mul_cmp_13_bcwt_1 + 3'b111;
  assign while_acc_174_nl = nl_while_acc_174_nl[2:0];
  assign nl_while_acc_175_nl = conv_u2u_1_2(~ while_mul_cmp_13_bdwt_2) + conv_u2u_1_2(while_mul_cmp_13_biwt_2);
  assign while_acc_175_nl = nl_while_acc_175_nl[1:0];
  assign nl_while_mul_cmp_13_bcwt_1  = while_acc_174_nl + conv_u2u_2_3(while_acc_175_nl);
  assign nl_while_acc_177_nl = while_mul_cmp_13_bcwt_2 + 3'b111;
  assign while_acc_177_nl = nl_while_acc_177_nl[2:0];
  assign nl_while_acc_178_nl = conv_u2u_1_2(~ while_mul_cmp_13_bdwt_4) + conv_u2u_1_2(while_mul_cmp_13_biwt_4);
  assign while_acc_178_nl = nl_while_acc_178_nl[1:0];
  assign nl_while_mul_cmp_13_bcwt_2  = while_acc_177_nl + conv_u2u_2_3(while_acc_178_nl);

  function automatic [111:0] MUX_v_112_5_2;
    input [111:0] input_0;
    input [111:0] input_1;
    input [111:0] input_2;
    input [111:0] input_3;
    input [111:0] input_4;
    input [2:0] sel;
    reg [111:0] result;
  begin
    case (sel)
      3'b000 : begin
        result = input_0;
      end
      3'b001 : begin
        result = input_1;
      end
      3'b010 : begin
        result = input_2;
      end
      3'b011 : begin
        result = input_3;
      end
      default : begin
        result = input_4;
      end
    endcase
    MUX_v_112_5_2 = result;
  end
  endfunction


  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_cmp_13_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_13
// ------------------------------------------------------------------


module Rotate_run_while_mul_cmp_13_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_13
    (
  clk, rst, run_wen, run_wten, while_mul_cmp_13_oswt_unreg, while_mul_cmp_13_iswt3,
      while_mul_cmp_13_iden_1, while_mul_cmp_13_oswt_unreg_1, while_mul_cmp_13_iswt3_1,
      while_mul_cmp_13_iden_3, while_mul_cmp_13_oswt_unreg_2, while_mul_cmp_13_iswt3_2,
      while_mul_cmp_13_iden_5, run_cgwt_31, while_mul_cmp_13_bdwt, while_mul_cmp_13_bdwt_2,
      while_mul_cmp_13_bdwt_4, while_mul_cmp_13_iswt3_2_pff, while_mul_cmp_13_iswt3_1_pff,
      while_mul_cmp_13_iswt3_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_cmp_13_oswt_unreg;
  input while_mul_cmp_13_iswt3;
  output while_mul_cmp_13_iden_1;
  input while_mul_cmp_13_oswt_unreg_1;
  input while_mul_cmp_13_iswt3_1;
  output while_mul_cmp_13_iden_3;
  input while_mul_cmp_13_oswt_unreg_2;
  input while_mul_cmp_13_iswt3_2;
  output while_mul_cmp_13_iden_5;
  output run_cgwt_31;
  output while_mul_cmp_13_bdwt;
  output while_mul_cmp_13_bdwt_2;
  output while_mul_cmp_13_bdwt_4;
  input while_mul_cmp_13_iswt3_2_pff;
  input while_mul_cmp_13_iswt3_1_pff;
  input while_mul_cmp_13_iswt3_pff;


  // Interconnect Declarations
  wire while_mul_cmp_13_ogwt;
  wire while_mul_cmp_13_tiswt3;
  reg while_mul_cmp_13_hile_mul_cmp_13_pdswt2;
  reg while_mul_cmp_13_hile_mul_cmp_13_pdswt1;
  reg while_mul_cmp_13_hile_mul_cmp_13_pdswt0;
  reg [2:0] while_mul_cmp_13_icwt;
  wire [3:0] nl_while_mul_cmp_13_icwt;
  wire while_mul_cmp_13_ogwt_1;
  wire while_mul_cmp_13_tiswt3_1;
  reg while_mul_cmp_13_hile_mul_cmp_13_pdswt2_1;
  reg while_mul_cmp_13_hile_mul_cmp_13_pdswt1_1;
  reg while_mul_cmp_13_hile_mul_cmp_13_pdswt0_1;
  reg [2:0] while_mul_cmp_13_icwt_1;
  wire [3:0] nl_while_mul_cmp_13_icwt_1;
  wire while_mul_cmp_13_ogwt_2;
  wire while_mul_cmp_13_tiswt3_2;
  reg while_mul_cmp_13_hile_mul_cmp_13_pdswt2_2;
  reg while_mul_cmp_13_hile_mul_cmp_13_pdswt1_2;
  reg while_mul_cmp_13_hile_mul_cmp_13_pdswt0_2;
  reg [2:0] while_mul_cmp_13_icwt_2;
  wire [3:0] nl_while_mul_cmp_13_icwt_2;

  wire[2:0] while_acc_172_nl;
  wire[3:0] nl_while_acc_172_nl;
  wire[1:0] while_acc_173_nl;
  wire[2:0] nl_while_acc_173_nl;
  wire[2:0] while_acc_175_nl;
  wire[3:0] nl_while_acc_175_nl;
  wire[1:0] while_acc_176_nl;
  wire[2:0] nl_while_acc_176_nl;
  wire[2:0] while_acc_178_nl;
  wire[3:0] nl_while_acc_178_nl;
  wire[1:0] while_acc_179_nl;
  wire[2:0] nl_while_acc_179_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_cmp_13_bdwt = while_mul_cmp_13_oswt_unreg & run_wen;
  assign while_mul_cmp_13_tiswt3 = (~ run_wten) & while_mul_cmp_13_iswt3;
  assign while_mul_cmp_13_iden_1 = while_mul_cmp_13_ogwt;
  assign while_mul_cmp_13_ogwt = while_mul_cmp_13_hile_mul_cmp_13_pdswt0 | (while_mul_cmp_13_icwt!=3'b000);
  assign while_mul_cmp_13_bdwt_2 = while_mul_cmp_13_oswt_unreg_1 & run_wen;
  assign while_mul_cmp_13_tiswt3_1 = (~ run_wten) & while_mul_cmp_13_iswt3_1;
  assign while_mul_cmp_13_iden_3 = while_mul_cmp_13_ogwt_1;
  assign while_mul_cmp_13_ogwt_1 = while_mul_cmp_13_hile_mul_cmp_13_pdswt0_1 | (while_mul_cmp_13_icwt_1!=3'b000);
  assign while_mul_cmp_13_bdwt_4 = while_mul_cmp_13_oswt_unreg_2 & run_wen;
  assign while_mul_cmp_13_tiswt3_2 = (~ run_wten) & while_mul_cmp_13_iswt3_2;
  assign while_mul_cmp_13_iden_5 = while_mul_cmp_13_ogwt_2;
  assign while_mul_cmp_13_ogwt_2 = while_mul_cmp_13_hile_mul_cmp_13_pdswt0_2 | (while_mul_cmp_13_icwt_2!=3'b000);
  assign run_cgwt_31 = while_mul_cmp_13_ogwt_2 | while_mul_cmp_13_tiswt3_2 | while_mul_cmp_13_hile_mul_cmp_13_pdswt2_2
      | while_mul_cmp_13_hile_mul_cmp_13_pdswt1_2 | while_mul_cmp_13_ogwt_1 | while_mul_cmp_13_tiswt3_1
      | while_mul_cmp_13_hile_mul_cmp_13_pdswt2_1 | while_mul_cmp_13_hile_mul_cmp_13_pdswt1_1
      | while_mul_cmp_13_ogwt | while_mul_cmp_13_tiswt3 | while_mul_cmp_13_hile_mul_cmp_13_pdswt2
      | while_mul_cmp_13_hile_mul_cmp_13_pdswt1 | (run_wen & while_mul_cmp_13_iswt3_2_pff)
      | (run_wen & while_mul_cmp_13_iswt3_1_pff) | (run_wen & while_mul_cmp_13_iswt3_pff);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_13_hile_mul_cmp_13_pdswt2 <= 1'b0;
      while_mul_cmp_13_hile_mul_cmp_13_pdswt1 <= 1'b0;
      while_mul_cmp_13_hile_mul_cmp_13_pdswt0 <= 1'b0;
      while_mul_cmp_13_icwt <= 3'b000;
      while_mul_cmp_13_hile_mul_cmp_13_pdswt2_1 <= 1'b0;
      while_mul_cmp_13_hile_mul_cmp_13_pdswt1_1 <= 1'b0;
      while_mul_cmp_13_hile_mul_cmp_13_pdswt0_1 <= 1'b0;
      while_mul_cmp_13_icwt_1 <= 3'b000;
      while_mul_cmp_13_hile_mul_cmp_13_pdswt2_2 <= 1'b0;
      while_mul_cmp_13_hile_mul_cmp_13_pdswt1_2 <= 1'b0;
      while_mul_cmp_13_hile_mul_cmp_13_pdswt0_2 <= 1'b0;
      while_mul_cmp_13_icwt_2 <= 3'b000;
    end
    else begin
      while_mul_cmp_13_hile_mul_cmp_13_pdswt2 <= while_mul_cmp_13_tiswt3;
      while_mul_cmp_13_hile_mul_cmp_13_pdswt1 <= while_mul_cmp_13_hile_mul_cmp_13_pdswt2;
      while_mul_cmp_13_hile_mul_cmp_13_pdswt0 <= while_mul_cmp_13_hile_mul_cmp_13_pdswt1;
      while_mul_cmp_13_icwt <= nl_while_mul_cmp_13_icwt[2:0];
      while_mul_cmp_13_hile_mul_cmp_13_pdswt2_1 <= while_mul_cmp_13_tiswt3_1;
      while_mul_cmp_13_hile_mul_cmp_13_pdswt1_1 <= while_mul_cmp_13_hile_mul_cmp_13_pdswt2_1;
      while_mul_cmp_13_hile_mul_cmp_13_pdswt0_1 <= while_mul_cmp_13_hile_mul_cmp_13_pdswt1_1;
      while_mul_cmp_13_icwt_1 <= nl_while_mul_cmp_13_icwt_1[2:0];
      while_mul_cmp_13_hile_mul_cmp_13_pdswt2_2 <= while_mul_cmp_13_tiswt3_2;
      while_mul_cmp_13_hile_mul_cmp_13_pdswt1_2 <= while_mul_cmp_13_hile_mul_cmp_13_pdswt2_2;
      while_mul_cmp_13_hile_mul_cmp_13_pdswt0_2 <= while_mul_cmp_13_hile_mul_cmp_13_pdswt1_2;
      while_mul_cmp_13_icwt_2 <= nl_while_mul_cmp_13_icwt_2[2:0];
    end
  end
  assign nl_while_acc_172_nl = while_mul_cmp_13_icwt + 3'b111;
  assign while_acc_172_nl = nl_while_acc_172_nl[2:0];
  assign nl_while_acc_173_nl = conv_u2u_1_2(while_mul_cmp_13_hile_mul_cmp_13_pdswt0)
      + conv_u2u_1_2(~ while_mul_cmp_13_ogwt);
  assign while_acc_173_nl = nl_while_acc_173_nl[1:0];
  assign nl_while_mul_cmp_13_icwt  = while_acc_172_nl + conv_u2u_2_3(while_acc_173_nl);
  assign nl_while_acc_175_nl = while_mul_cmp_13_icwt_1 + 3'b111;
  assign while_acc_175_nl = nl_while_acc_175_nl[2:0];
  assign nl_while_acc_176_nl = conv_u2u_1_2(while_mul_cmp_13_hile_mul_cmp_13_pdswt0_1)
      + conv_u2u_1_2(~ while_mul_cmp_13_ogwt_1);
  assign while_acc_176_nl = nl_while_acc_176_nl[1:0];
  assign nl_while_mul_cmp_13_icwt_1  = while_acc_175_nl + conv_u2u_2_3(while_acc_176_nl);
  assign nl_while_acc_178_nl = while_mul_cmp_13_icwt_2 + 3'b111;
  assign while_acc_178_nl = nl_while_acc_178_nl[2:0];
  assign nl_while_acc_179_nl = conv_u2u_1_2(while_mul_cmp_13_hile_mul_cmp_13_pdswt0_2)
      + conv_u2u_1_2(~ while_mul_cmp_13_ogwt_2);
  assign while_acc_179_nl = nl_while_acc_179_nl[1:0];
  assign nl_while_mul_cmp_13_icwt_2  = while_acc_178_nl + conv_u2u_2_3(while_acc_179_nl);

  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_cmp_12_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_12
// ------------------------------------------------------------------


module Rotate_run_while_mul_cmp_12_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_12
    (
  clk, rst, while_mul_cmp_12_bawt, while_mul_cmp_12_iden, while_mul_cmp_12_iden_2,
      while_mul_cmp_12_iden_4, while_mul_cmp_12_z_mxwt, while_mul_cmp_12_z_mxwt_1,
      while_mul_cmp_12_z_mxwt_2, while_mul_cmp_12_biwt, while_mul_cmp_12_bdwt, while_mul_cmp_12_biwt_2,
      while_mul_cmp_12_bdwt_2, while_mul_cmp_12_biwt_4, while_mul_cmp_12_bdwt_4,
      while_mul_cmp_12_z
);
  input clk;
  input rst;
  output while_mul_cmp_12_bawt;
  output while_mul_cmp_12_iden;
  output while_mul_cmp_12_iden_2;
  output while_mul_cmp_12_iden_4;
  output [111:0] while_mul_cmp_12_z_mxwt;
  output [111:0] while_mul_cmp_12_z_mxwt_1;
  output [111:0] while_mul_cmp_12_z_mxwt_2;
  input while_mul_cmp_12_biwt;
  input while_mul_cmp_12_bdwt;
  input while_mul_cmp_12_biwt_2;
  input while_mul_cmp_12_bdwt_2;
  input while_mul_cmp_12_biwt_4;
  input while_mul_cmp_12_bdwt_4;
  input [127:0] while_mul_cmp_12_z;


  // Interconnect Declarations
  reg [2:0] while_mul_cmp_12_bcwt;
  wire [3:0] nl_while_mul_cmp_12_bcwt;
  reg [2:0] while_mul_cmp_12_bcwt_1;
  wire [3:0] nl_while_mul_cmp_12_bcwt_1;
  reg [2:0] while_mul_cmp_12_bcwt_2;
  wire [3:0] nl_while_mul_cmp_12_bcwt_2;
  reg [111:0] while_mul_cmp_12_z_bfwt_3_111_0;
  reg [111:0] while_mul_cmp_12_z_bfwt_7_111_0;
  reg [111:0] while_mul_cmp_12_z_bfwt_11_111_0;
  reg [111:0] while_mul_cmp_12_z_bfwt_2_111_0;
  reg [111:0] while_mul_cmp_12_z_bfwt_6_111_0;
  reg [111:0] while_mul_cmp_12_z_bfwt_10_111_0;
  reg [111:0] while_mul_cmp_12_z_bfwt_1_111_0;
  reg [111:0] while_mul_cmp_12_z_bfwt_5_111_0;
  reg [111:0] while_mul_cmp_12_z_bfwt_9_111_0;
  reg [111:0] while_mul_cmp_12_z_bfwt_111_0;
  reg [111:0] while_mul_cmp_12_z_bfwt_4_111_0;
  reg [111:0] while_mul_cmp_12_z_bfwt_8_111_0;

  wire[2:0] while_acc_165_nl;
  wire[3:0] nl_while_acc_165_nl;
  wire[1:0] while_acc_166_nl;
  wire[2:0] nl_while_acc_166_nl;
  wire[2:0] while_acc_168_nl;
  wire[3:0] nl_while_acc_168_nl;
  wire[1:0] while_acc_169_nl;
  wire[2:0] nl_while_acc_169_nl;
  wire[2:0] while_acc_171_nl;
  wire[3:0] nl_while_acc_171_nl;
  wire[1:0] while_acc_172_nl;
  wire[2:0] nl_while_acc_172_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_cmp_12_iden = while_mul_cmp_12_biwt | while_mul_cmp_12_bdwt;
  assign while_mul_cmp_12_bawt = while_mul_cmp_12_biwt | (while_mul_cmp_12_bcwt!=3'b000);
  assign while_mul_cmp_12_iden_2 = while_mul_cmp_12_biwt_2 | while_mul_cmp_12_bdwt_2;
  assign while_mul_cmp_12_iden_4 = while_mul_cmp_12_biwt_4 | while_mul_cmp_12_bdwt_4;
  assign while_mul_cmp_12_z_mxwt = MUX_v_112_5_2((while_mul_cmp_12_z[111:0]), while_mul_cmp_12_z_bfwt_111_0,
      while_mul_cmp_12_z_bfwt_1_111_0, while_mul_cmp_12_z_bfwt_2_111_0, while_mul_cmp_12_z_bfwt_3_111_0,
      while_mul_cmp_12_bcwt_2);
  assign while_mul_cmp_12_z_mxwt_1 = MUX_v_112_5_2((while_mul_cmp_12_z[111:0]), while_mul_cmp_12_z_bfwt_4_111_0,
      while_mul_cmp_12_z_bfwt_5_111_0, while_mul_cmp_12_z_bfwt_6_111_0, while_mul_cmp_12_z_bfwt_7_111_0,
      while_mul_cmp_12_bcwt_1);
  assign while_mul_cmp_12_z_mxwt_2 = MUX_v_112_5_2((while_mul_cmp_12_z[111:0]), while_mul_cmp_12_z_bfwt_8_111_0,
      while_mul_cmp_12_z_bfwt_9_111_0, while_mul_cmp_12_z_bfwt_10_111_0, while_mul_cmp_12_z_bfwt_11_111_0,
      while_mul_cmp_12_bcwt);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_12_bcwt <= 3'b000;
      while_mul_cmp_12_bcwt_1 <= 3'b000;
      while_mul_cmp_12_bcwt_2 <= 3'b000;
    end
    else begin
      while_mul_cmp_12_bcwt <= nl_while_mul_cmp_12_bcwt[2:0];
      while_mul_cmp_12_bcwt_1 <= nl_while_mul_cmp_12_bcwt_1[2:0];
      while_mul_cmp_12_bcwt_2 <= nl_while_mul_cmp_12_bcwt_2[2:0];
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_12_z_bfwt_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_12_z_bfwt_1_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_12_z_bfwt_2_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_12_z_bfwt_3_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_cmp_12_biwt_4 ) begin
      while_mul_cmp_12_z_bfwt_111_0 <= while_mul_cmp_12_z[111:0];
      while_mul_cmp_12_z_bfwt_1_111_0 <= while_mul_cmp_12_z_bfwt_111_0;
      while_mul_cmp_12_z_bfwt_2_111_0 <= while_mul_cmp_12_z_bfwt_1_111_0;
      while_mul_cmp_12_z_bfwt_3_111_0 <= while_mul_cmp_12_z_bfwt_2_111_0;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_12_z_bfwt_4_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_12_z_bfwt_5_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_12_z_bfwt_6_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_12_z_bfwt_7_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_cmp_12_biwt_2 ) begin
      while_mul_cmp_12_z_bfwt_4_111_0 <= while_mul_cmp_12_z[111:0];
      while_mul_cmp_12_z_bfwt_5_111_0 <= while_mul_cmp_12_z_bfwt_4_111_0;
      while_mul_cmp_12_z_bfwt_6_111_0 <= while_mul_cmp_12_z_bfwt_5_111_0;
      while_mul_cmp_12_z_bfwt_7_111_0 <= while_mul_cmp_12_z_bfwt_6_111_0;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_12_z_bfwt_8_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_12_z_bfwt_9_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_12_z_bfwt_10_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_12_z_bfwt_11_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_cmp_12_biwt ) begin
      while_mul_cmp_12_z_bfwt_8_111_0 <= while_mul_cmp_12_z[111:0];
      while_mul_cmp_12_z_bfwt_9_111_0 <= while_mul_cmp_12_z_bfwt_8_111_0;
      while_mul_cmp_12_z_bfwt_10_111_0 <= while_mul_cmp_12_z_bfwt_9_111_0;
      while_mul_cmp_12_z_bfwt_11_111_0 <= while_mul_cmp_12_z_bfwt_10_111_0;
    end
  end
  assign nl_while_acc_165_nl = while_mul_cmp_12_bcwt + 3'b111;
  assign while_acc_165_nl = nl_while_acc_165_nl[2:0];
  assign nl_while_acc_166_nl = conv_u2u_1_2(~ while_mul_cmp_12_bdwt) + conv_u2u_1_2(while_mul_cmp_12_biwt);
  assign while_acc_166_nl = nl_while_acc_166_nl[1:0];
  assign nl_while_mul_cmp_12_bcwt  = while_acc_165_nl + conv_u2u_2_3(while_acc_166_nl);
  assign nl_while_acc_168_nl = while_mul_cmp_12_bcwt_1 + 3'b111;
  assign while_acc_168_nl = nl_while_acc_168_nl[2:0];
  assign nl_while_acc_169_nl = conv_u2u_1_2(~ while_mul_cmp_12_bdwt_2) + conv_u2u_1_2(while_mul_cmp_12_biwt_2);
  assign while_acc_169_nl = nl_while_acc_169_nl[1:0];
  assign nl_while_mul_cmp_12_bcwt_1  = while_acc_168_nl + conv_u2u_2_3(while_acc_169_nl);
  assign nl_while_acc_171_nl = while_mul_cmp_12_bcwt_2 + 3'b111;
  assign while_acc_171_nl = nl_while_acc_171_nl[2:0];
  assign nl_while_acc_172_nl = conv_u2u_1_2(~ while_mul_cmp_12_bdwt_4) + conv_u2u_1_2(while_mul_cmp_12_biwt_4);
  assign while_acc_172_nl = nl_while_acc_172_nl[1:0];
  assign nl_while_mul_cmp_12_bcwt_2  = while_acc_171_nl + conv_u2u_2_3(while_acc_172_nl);

  function automatic [111:0] MUX_v_112_5_2;
    input [111:0] input_0;
    input [111:0] input_1;
    input [111:0] input_2;
    input [111:0] input_3;
    input [111:0] input_4;
    input [2:0] sel;
    reg [111:0] result;
  begin
    case (sel)
      3'b000 : begin
        result = input_0;
      end
      3'b001 : begin
        result = input_1;
      end
      3'b010 : begin
        result = input_2;
      end
      3'b011 : begin
        result = input_3;
      end
      default : begin
        result = input_4;
      end
    endcase
    MUX_v_112_5_2 = result;
  end
  endfunction


  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_cmp_12_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_12
// ------------------------------------------------------------------


module Rotate_run_while_mul_cmp_12_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_12
    (
  clk, rst, run_wen, run_wten, while_mul_cmp_12_oswt_unreg, while_mul_cmp_12_iswt3,
      while_mul_cmp_12_iden_1, while_mul_cmp_12_oswt_unreg_1, while_mul_cmp_12_iswt3_1,
      while_mul_cmp_12_iden_3, while_mul_cmp_12_oswt_unreg_2, while_mul_cmp_12_iswt3_2,
      while_mul_cmp_12_iden_5, run_cgwt_30, while_mul_cmp_12_bdwt, while_mul_cmp_12_bdwt_2,
      while_mul_cmp_12_bdwt_4, while_mul_cmp_12_iswt3_2_pff, while_mul_cmp_12_iswt3_1_pff,
      while_mul_cmp_12_iswt3_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_cmp_12_oswt_unreg;
  input while_mul_cmp_12_iswt3;
  output while_mul_cmp_12_iden_1;
  input while_mul_cmp_12_oswt_unreg_1;
  input while_mul_cmp_12_iswt3_1;
  output while_mul_cmp_12_iden_3;
  input while_mul_cmp_12_oswt_unreg_2;
  input while_mul_cmp_12_iswt3_2;
  output while_mul_cmp_12_iden_5;
  output run_cgwt_30;
  output while_mul_cmp_12_bdwt;
  output while_mul_cmp_12_bdwt_2;
  output while_mul_cmp_12_bdwt_4;
  input while_mul_cmp_12_iswt3_2_pff;
  input while_mul_cmp_12_iswt3_1_pff;
  input while_mul_cmp_12_iswt3_pff;


  // Interconnect Declarations
  wire while_mul_cmp_12_ogwt;
  wire while_mul_cmp_12_tiswt3;
  reg while_mul_cmp_12_hile_mul_cmp_12_pdswt2;
  reg while_mul_cmp_12_hile_mul_cmp_12_pdswt1;
  reg while_mul_cmp_12_hile_mul_cmp_12_pdswt0;
  reg [2:0] while_mul_cmp_12_icwt;
  wire [3:0] nl_while_mul_cmp_12_icwt;
  wire while_mul_cmp_12_ogwt_1;
  wire while_mul_cmp_12_tiswt3_1;
  reg while_mul_cmp_12_hile_mul_cmp_12_pdswt2_1;
  reg while_mul_cmp_12_hile_mul_cmp_12_pdswt1_1;
  reg while_mul_cmp_12_hile_mul_cmp_12_pdswt0_1;
  reg [2:0] while_mul_cmp_12_icwt_1;
  wire [3:0] nl_while_mul_cmp_12_icwt_1;
  wire while_mul_cmp_12_ogwt_2;
  wire while_mul_cmp_12_tiswt3_2;
  reg while_mul_cmp_12_hile_mul_cmp_12_pdswt2_2;
  reg while_mul_cmp_12_hile_mul_cmp_12_pdswt1_2;
  reg while_mul_cmp_12_hile_mul_cmp_12_pdswt0_2;
  reg [2:0] while_mul_cmp_12_icwt_2;
  wire [3:0] nl_while_mul_cmp_12_icwt_2;

  wire[2:0] while_acc_166_nl;
  wire[3:0] nl_while_acc_166_nl;
  wire[1:0] while_acc_167_nl;
  wire[2:0] nl_while_acc_167_nl;
  wire[2:0] while_acc_169_nl;
  wire[3:0] nl_while_acc_169_nl;
  wire[1:0] while_acc_170_nl;
  wire[2:0] nl_while_acc_170_nl;
  wire[2:0] while_acc_172_nl;
  wire[3:0] nl_while_acc_172_nl;
  wire[1:0] while_acc_173_nl;
  wire[2:0] nl_while_acc_173_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_cmp_12_bdwt = while_mul_cmp_12_oswt_unreg & run_wen;
  assign while_mul_cmp_12_tiswt3 = (~ run_wten) & while_mul_cmp_12_iswt3;
  assign while_mul_cmp_12_iden_1 = while_mul_cmp_12_ogwt;
  assign while_mul_cmp_12_ogwt = while_mul_cmp_12_hile_mul_cmp_12_pdswt0 | (while_mul_cmp_12_icwt!=3'b000);
  assign while_mul_cmp_12_bdwt_2 = while_mul_cmp_12_oswt_unreg_1 & run_wen;
  assign while_mul_cmp_12_tiswt3_1 = (~ run_wten) & while_mul_cmp_12_iswt3_1;
  assign while_mul_cmp_12_iden_3 = while_mul_cmp_12_ogwt_1;
  assign while_mul_cmp_12_ogwt_1 = while_mul_cmp_12_hile_mul_cmp_12_pdswt0_1 | (while_mul_cmp_12_icwt_1!=3'b000);
  assign while_mul_cmp_12_bdwt_4 = while_mul_cmp_12_oswt_unreg_2 & run_wen;
  assign while_mul_cmp_12_tiswt3_2 = (~ run_wten) & while_mul_cmp_12_iswt3_2;
  assign while_mul_cmp_12_iden_5 = while_mul_cmp_12_ogwt_2;
  assign while_mul_cmp_12_ogwt_2 = while_mul_cmp_12_hile_mul_cmp_12_pdswt0_2 | (while_mul_cmp_12_icwt_2!=3'b000);
  assign run_cgwt_30 = while_mul_cmp_12_ogwt_2 | while_mul_cmp_12_tiswt3_2 | while_mul_cmp_12_hile_mul_cmp_12_pdswt2_2
      | while_mul_cmp_12_hile_mul_cmp_12_pdswt1_2 | while_mul_cmp_12_ogwt_1 | while_mul_cmp_12_tiswt3_1
      | while_mul_cmp_12_hile_mul_cmp_12_pdswt2_1 | while_mul_cmp_12_hile_mul_cmp_12_pdswt1_1
      | while_mul_cmp_12_ogwt | while_mul_cmp_12_tiswt3 | while_mul_cmp_12_hile_mul_cmp_12_pdswt2
      | while_mul_cmp_12_hile_mul_cmp_12_pdswt1 | (run_wen & while_mul_cmp_12_iswt3_2_pff)
      | (run_wen & while_mul_cmp_12_iswt3_1_pff) | (run_wen & while_mul_cmp_12_iswt3_pff);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_12_hile_mul_cmp_12_pdswt2 <= 1'b0;
      while_mul_cmp_12_hile_mul_cmp_12_pdswt1 <= 1'b0;
      while_mul_cmp_12_hile_mul_cmp_12_pdswt0 <= 1'b0;
      while_mul_cmp_12_icwt <= 3'b000;
      while_mul_cmp_12_hile_mul_cmp_12_pdswt2_1 <= 1'b0;
      while_mul_cmp_12_hile_mul_cmp_12_pdswt1_1 <= 1'b0;
      while_mul_cmp_12_hile_mul_cmp_12_pdswt0_1 <= 1'b0;
      while_mul_cmp_12_icwt_1 <= 3'b000;
      while_mul_cmp_12_hile_mul_cmp_12_pdswt2_2 <= 1'b0;
      while_mul_cmp_12_hile_mul_cmp_12_pdswt1_2 <= 1'b0;
      while_mul_cmp_12_hile_mul_cmp_12_pdswt0_2 <= 1'b0;
      while_mul_cmp_12_icwt_2 <= 3'b000;
    end
    else begin
      while_mul_cmp_12_hile_mul_cmp_12_pdswt2 <= while_mul_cmp_12_tiswt3;
      while_mul_cmp_12_hile_mul_cmp_12_pdswt1 <= while_mul_cmp_12_hile_mul_cmp_12_pdswt2;
      while_mul_cmp_12_hile_mul_cmp_12_pdswt0 <= while_mul_cmp_12_hile_mul_cmp_12_pdswt1;
      while_mul_cmp_12_icwt <= nl_while_mul_cmp_12_icwt[2:0];
      while_mul_cmp_12_hile_mul_cmp_12_pdswt2_1 <= while_mul_cmp_12_tiswt3_1;
      while_mul_cmp_12_hile_mul_cmp_12_pdswt1_1 <= while_mul_cmp_12_hile_mul_cmp_12_pdswt2_1;
      while_mul_cmp_12_hile_mul_cmp_12_pdswt0_1 <= while_mul_cmp_12_hile_mul_cmp_12_pdswt1_1;
      while_mul_cmp_12_icwt_1 <= nl_while_mul_cmp_12_icwt_1[2:0];
      while_mul_cmp_12_hile_mul_cmp_12_pdswt2_2 <= while_mul_cmp_12_tiswt3_2;
      while_mul_cmp_12_hile_mul_cmp_12_pdswt1_2 <= while_mul_cmp_12_hile_mul_cmp_12_pdswt2_2;
      while_mul_cmp_12_hile_mul_cmp_12_pdswt0_2 <= while_mul_cmp_12_hile_mul_cmp_12_pdswt1_2;
      while_mul_cmp_12_icwt_2 <= nl_while_mul_cmp_12_icwt_2[2:0];
    end
  end
  assign nl_while_acc_166_nl = while_mul_cmp_12_icwt + 3'b111;
  assign while_acc_166_nl = nl_while_acc_166_nl[2:0];
  assign nl_while_acc_167_nl = conv_u2u_1_2(while_mul_cmp_12_hile_mul_cmp_12_pdswt0)
      + conv_u2u_1_2(~ while_mul_cmp_12_ogwt);
  assign while_acc_167_nl = nl_while_acc_167_nl[1:0];
  assign nl_while_mul_cmp_12_icwt  = while_acc_166_nl + conv_u2u_2_3(while_acc_167_nl);
  assign nl_while_acc_169_nl = while_mul_cmp_12_icwt_1 + 3'b111;
  assign while_acc_169_nl = nl_while_acc_169_nl[2:0];
  assign nl_while_acc_170_nl = conv_u2u_1_2(while_mul_cmp_12_hile_mul_cmp_12_pdswt0_1)
      + conv_u2u_1_2(~ while_mul_cmp_12_ogwt_1);
  assign while_acc_170_nl = nl_while_acc_170_nl[1:0];
  assign nl_while_mul_cmp_12_icwt_1  = while_acc_169_nl + conv_u2u_2_3(while_acc_170_nl);
  assign nl_while_acc_172_nl = while_mul_cmp_12_icwt_2 + 3'b111;
  assign while_acc_172_nl = nl_while_acc_172_nl[2:0];
  assign nl_while_acc_173_nl = conv_u2u_1_2(while_mul_cmp_12_hile_mul_cmp_12_pdswt0_2)
      + conv_u2u_1_2(~ while_mul_cmp_12_ogwt_2);
  assign while_acc_173_nl = nl_while_acc_173_nl[1:0];
  assign nl_while_mul_cmp_12_icwt_2  = while_acc_172_nl + conv_u2u_2_3(while_acc_173_nl);

  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_cmp_11_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_11
// ------------------------------------------------------------------


module Rotate_run_while_mul_cmp_11_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_11
    (
  clk, rst, while_mul_cmp_11_bawt, while_mul_cmp_11_iden, while_mul_cmp_11_iden_2,
      while_mul_cmp_11_iden_4, while_mul_cmp_11_z_mxwt, while_mul_cmp_11_z_mxwt_1,
      while_mul_cmp_11_z_mxwt_2, while_mul_cmp_11_biwt, while_mul_cmp_11_bdwt, while_mul_cmp_11_biwt_2,
      while_mul_cmp_11_bdwt_2, while_mul_cmp_11_biwt_4, while_mul_cmp_11_bdwt_4,
      while_mul_cmp_11_z
);
  input clk;
  input rst;
  output while_mul_cmp_11_bawt;
  output while_mul_cmp_11_iden;
  output while_mul_cmp_11_iden_2;
  output while_mul_cmp_11_iden_4;
  output [111:0] while_mul_cmp_11_z_mxwt;
  output [111:0] while_mul_cmp_11_z_mxwt_1;
  output [111:0] while_mul_cmp_11_z_mxwt_2;
  input while_mul_cmp_11_biwt;
  input while_mul_cmp_11_bdwt;
  input while_mul_cmp_11_biwt_2;
  input while_mul_cmp_11_bdwt_2;
  input while_mul_cmp_11_biwt_4;
  input while_mul_cmp_11_bdwt_4;
  input [127:0] while_mul_cmp_11_z;


  // Interconnect Declarations
  reg [2:0] while_mul_cmp_11_bcwt;
  wire [3:0] nl_while_mul_cmp_11_bcwt;
  reg [2:0] while_mul_cmp_11_bcwt_1;
  wire [3:0] nl_while_mul_cmp_11_bcwt_1;
  reg [2:0] while_mul_cmp_11_bcwt_2;
  wire [3:0] nl_while_mul_cmp_11_bcwt_2;
  reg [111:0] while_mul_cmp_11_z_bfwt_3_111_0;
  reg [111:0] while_mul_cmp_11_z_bfwt_7_111_0;
  reg [111:0] while_mul_cmp_11_z_bfwt_11_111_0;
  reg [111:0] while_mul_cmp_11_z_bfwt_2_111_0;
  reg [111:0] while_mul_cmp_11_z_bfwt_6_111_0;
  reg [111:0] while_mul_cmp_11_z_bfwt_10_111_0;
  reg [111:0] while_mul_cmp_11_z_bfwt_1_111_0;
  reg [111:0] while_mul_cmp_11_z_bfwt_5_111_0;
  reg [111:0] while_mul_cmp_11_z_bfwt_9_111_0;
  reg [111:0] while_mul_cmp_11_z_bfwt_111_0;
  reg [111:0] while_mul_cmp_11_z_bfwt_4_111_0;
  reg [111:0] while_mul_cmp_11_z_bfwt_8_111_0;

  wire[2:0] while_acc_159_nl;
  wire[3:0] nl_while_acc_159_nl;
  wire[1:0] while_acc_160_nl;
  wire[2:0] nl_while_acc_160_nl;
  wire[2:0] while_acc_162_nl;
  wire[3:0] nl_while_acc_162_nl;
  wire[1:0] while_acc_163_nl;
  wire[2:0] nl_while_acc_163_nl;
  wire[2:0] while_acc_165_nl;
  wire[3:0] nl_while_acc_165_nl;
  wire[1:0] while_acc_166_nl;
  wire[2:0] nl_while_acc_166_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_cmp_11_iden = while_mul_cmp_11_biwt | while_mul_cmp_11_bdwt;
  assign while_mul_cmp_11_bawt = while_mul_cmp_11_biwt | (while_mul_cmp_11_bcwt!=3'b000);
  assign while_mul_cmp_11_iden_2 = while_mul_cmp_11_biwt_2 | while_mul_cmp_11_bdwt_2;
  assign while_mul_cmp_11_iden_4 = while_mul_cmp_11_biwt_4 | while_mul_cmp_11_bdwt_4;
  assign while_mul_cmp_11_z_mxwt = MUX_v_112_5_2((while_mul_cmp_11_z[111:0]), while_mul_cmp_11_z_bfwt_111_0,
      while_mul_cmp_11_z_bfwt_1_111_0, while_mul_cmp_11_z_bfwt_2_111_0, while_mul_cmp_11_z_bfwt_3_111_0,
      while_mul_cmp_11_bcwt_2);
  assign while_mul_cmp_11_z_mxwt_1 = MUX_v_112_5_2((while_mul_cmp_11_z[111:0]), while_mul_cmp_11_z_bfwt_4_111_0,
      while_mul_cmp_11_z_bfwt_5_111_0, while_mul_cmp_11_z_bfwt_6_111_0, while_mul_cmp_11_z_bfwt_7_111_0,
      while_mul_cmp_11_bcwt_1);
  assign while_mul_cmp_11_z_mxwt_2 = MUX_v_112_5_2((while_mul_cmp_11_z[111:0]), while_mul_cmp_11_z_bfwt_8_111_0,
      while_mul_cmp_11_z_bfwt_9_111_0, while_mul_cmp_11_z_bfwt_10_111_0, while_mul_cmp_11_z_bfwt_11_111_0,
      while_mul_cmp_11_bcwt);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_11_bcwt <= 3'b000;
      while_mul_cmp_11_bcwt_1 <= 3'b000;
      while_mul_cmp_11_bcwt_2 <= 3'b000;
    end
    else begin
      while_mul_cmp_11_bcwt <= nl_while_mul_cmp_11_bcwt[2:0];
      while_mul_cmp_11_bcwt_1 <= nl_while_mul_cmp_11_bcwt_1[2:0];
      while_mul_cmp_11_bcwt_2 <= nl_while_mul_cmp_11_bcwt_2[2:0];
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_11_z_bfwt_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_11_z_bfwt_1_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_11_z_bfwt_2_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_11_z_bfwt_3_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_cmp_11_biwt_4 ) begin
      while_mul_cmp_11_z_bfwt_111_0 <= while_mul_cmp_11_z[111:0];
      while_mul_cmp_11_z_bfwt_1_111_0 <= while_mul_cmp_11_z_bfwt_111_0;
      while_mul_cmp_11_z_bfwt_2_111_0 <= while_mul_cmp_11_z_bfwt_1_111_0;
      while_mul_cmp_11_z_bfwt_3_111_0 <= while_mul_cmp_11_z_bfwt_2_111_0;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_11_z_bfwt_4_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_11_z_bfwt_5_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_11_z_bfwt_6_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_11_z_bfwt_7_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_cmp_11_biwt_2 ) begin
      while_mul_cmp_11_z_bfwt_4_111_0 <= while_mul_cmp_11_z[111:0];
      while_mul_cmp_11_z_bfwt_5_111_0 <= while_mul_cmp_11_z_bfwt_4_111_0;
      while_mul_cmp_11_z_bfwt_6_111_0 <= while_mul_cmp_11_z_bfwt_5_111_0;
      while_mul_cmp_11_z_bfwt_7_111_0 <= while_mul_cmp_11_z_bfwt_6_111_0;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_11_z_bfwt_8_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_11_z_bfwt_9_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_11_z_bfwt_10_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_11_z_bfwt_11_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_cmp_11_biwt ) begin
      while_mul_cmp_11_z_bfwt_8_111_0 <= while_mul_cmp_11_z[111:0];
      while_mul_cmp_11_z_bfwt_9_111_0 <= while_mul_cmp_11_z_bfwt_8_111_0;
      while_mul_cmp_11_z_bfwt_10_111_0 <= while_mul_cmp_11_z_bfwt_9_111_0;
      while_mul_cmp_11_z_bfwt_11_111_0 <= while_mul_cmp_11_z_bfwt_10_111_0;
    end
  end
  assign nl_while_acc_159_nl = while_mul_cmp_11_bcwt + 3'b111;
  assign while_acc_159_nl = nl_while_acc_159_nl[2:0];
  assign nl_while_acc_160_nl = conv_u2u_1_2(~ while_mul_cmp_11_bdwt) + conv_u2u_1_2(while_mul_cmp_11_biwt);
  assign while_acc_160_nl = nl_while_acc_160_nl[1:0];
  assign nl_while_mul_cmp_11_bcwt  = while_acc_159_nl + conv_u2u_2_3(while_acc_160_nl);
  assign nl_while_acc_162_nl = while_mul_cmp_11_bcwt_1 + 3'b111;
  assign while_acc_162_nl = nl_while_acc_162_nl[2:0];
  assign nl_while_acc_163_nl = conv_u2u_1_2(~ while_mul_cmp_11_bdwt_2) + conv_u2u_1_2(while_mul_cmp_11_biwt_2);
  assign while_acc_163_nl = nl_while_acc_163_nl[1:0];
  assign nl_while_mul_cmp_11_bcwt_1  = while_acc_162_nl + conv_u2u_2_3(while_acc_163_nl);
  assign nl_while_acc_165_nl = while_mul_cmp_11_bcwt_2 + 3'b111;
  assign while_acc_165_nl = nl_while_acc_165_nl[2:0];
  assign nl_while_acc_166_nl = conv_u2u_1_2(~ while_mul_cmp_11_bdwt_4) + conv_u2u_1_2(while_mul_cmp_11_biwt_4);
  assign while_acc_166_nl = nl_while_acc_166_nl[1:0];
  assign nl_while_mul_cmp_11_bcwt_2  = while_acc_165_nl + conv_u2u_2_3(while_acc_166_nl);

  function automatic [111:0] MUX_v_112_5_2;
    input [111:0] input_0;
    input [111:0] input_1;
    input [111:0] input_2;
    input [111:0] input_3;
    input [111:0] input_4;
    input [2:0] sel;
    reg [111:0] result;
  begin
    case (sel)
      3'b000 : begin
        result = input_0;
      end
      3'b001 : begin
        result = input_1;
      end
      3'b010 : begin
        result = input_2;
      end
      3'b011 : begin
        result = input_3;
      end
      default : begin
        result = input_4;
      end
    endcase
    MUX_v_112_5_2 = result;
  end
  endfunction


  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_cmp_11_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_11
// ------------------------------------------------------------------


module Rotate_run_while_mul_cmp_11_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_11
    (
  clk, rst, run_wen, run_wten, while_mul_cmp_11_oswt_unreg, while_mul_cmp_11_iswt3,
      while_mul_cmp_11_iden_1, while_mul_cmp_11_oswt_unreg_1, while_mul_cmp_11_iswt3_1,
      while_mul_cmp_11_iden_3, while_mul_cmp_11_oswt_unreg_2, while_mul_cmp_11_iswt3_2,
      while_mul_cmp_11_iden_5, run_cgwt_29, while_mul_cmp_11_bdwt, while_mul_cmp_11_bdwt_2,
      while_mul_cmp_11_bdwt_4, while_mul_cmp_11_iswt3_2_pff, while_mul_cmp_11_iswt3_1_pff,
      while_mul_cmp_11_iswt3_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_cmp_11_oswt_unreg;
  input while_mul_cmp_11_iswt3;
  output while_mul_cmp_11_iden_1;
  input while_mul_cmp_11_oswt_unreg_1;
  input while_mul_cmp_11_iswt3_1;
  output while_mul_cmp_11_iden_3;
  input while_mul_cmp_11_oswt_unreg_2;
  input while_mul_cmp_11_iswt3_2;
  output while_mul_cmp_11_iden_5;
  output run_cgwt_29;
  output while_mul_cmp_11_bdwt;
  output while_mul_cmp_11_bdwt_2;
  output while_mul_cmp_11_bdwt_4;
  input while_mul_cmp_11_iswt3_2_pff;
  input while_mul_cmp_11_iswt3_1_pff;
  input while_mul_cmp_11_iswt3_pff;


  // Interconnect Declarations
  wire while_mul_cmp_11_ogwt;
  wire while_mul_cmp_11_tiswt3;
  reg while_mul_cmp_11_hile_mul_cmp_11_pdswt2;
  reg while_mul_cmp_11_hile_mul_cmp_11_pdswt1;
  reg while_mul_cmp_11_hile_mul_cmp_11_pdswt0;
  reg [2:0] while_mul_cmp_11_icwt;
  wire [3:0] nl_while_mul_cmp_11_icwt;
  wire while_mul_cmp_11_ogwt_1;
  wire while_mul_cmp_11_tiswt3_1;
  reg while_mul_cmp_11_hile_mul_cmp_11_pdswt2_1;
  reg while_mul_cmp_11_hile_mul_cmp_11_pdswt1_1;
  reg while_mul_cmp_11_hile_mul_cmp_11_pdswt0_1;
  reg [2:0] while_mul_cmp_11_icwt_1;
  wire [3:0] nl_while_mul_cmp_11_icwt_1;
  wire while_mul_cmp_11_ogwt_2;
  wire while_mul_cmp_11_tiswt3_2;
  reg while_mul_cmp_11_hile_mul_cmp_11_pdswt2_2;
  reg while_mul_cmp_11_hile_mul_cmp_11_pdswt1_2;
  reg while_mul_cmp_11_hile_mul_cmp_11_pdswt0_2;
  reg [2:0] while_mul_cmp_11_icwt_2;
  wire [3:0] nl_while_mul_cmp_11_icwt_2;

  wire[2:0] while_acc_160_nl;
  wire[3:0] nl_while_acc_160_nl;
  wire[1:0] while_acc_161_nl;
  wire[2:0] nl_while_acc_161_nl;
  wire[2:0] while_acc_163_nl;
  wire[3:0] nl_while_acc_163_nl;
  wire[1:0] while_acc_164_nl;
  wire[2:0] nl_while_acc_164_nl;
  wire[2:0] while_acc_166_nl;
  wire[3:0] nl_while_acc_166_nl;
  wire[1:0] while_acc_167_nl;
  wire[2:0] nl_while_acc_167_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_cmp_11_bdwt = while_mul_cmp_11_oswt_unreg & run_wen;
  assign while_mul_cmp_11_tiswt3 = (~ run_wten) & while_mul_cmp_11_iswt3;
  assign while_mul_cmp_11_iden_1 = while_mul_cmp_11_ogwt;
  assign while_mul_cmp_11_ogwt = while_mul_cmp_11_hile_mul_cmp_11_pdswt0 | (while_mul_cmp_11_icwt!=3'b000);
  assign while_mul_cmp_11_bdwt_2 = while_mul_cmp_11_oswt_unreg_1 & run_wen;
  assign while_mul_cmp_11_tiswt3_1 = (~ run_wten) & while_mul_cmp_11_iswt3_1;
  assign while_mul_cmp_11_iden_3 = while_mul_cmp_11_ogwt_1;
  assign while_mul_cmp_11_ogwt_1 = while_mul_cmp_11_hile_mul_cmp_11_pdswt0_1 | (while_mul_cmp_11_icwt_1!=3'b000);
  assign while_mul_cmp_11_bdwt_4 = while_mul_cmp_11_oswt_unreg_2 & run_wen;
  assign while_mul_cmp_11_tiswt3_2 = (~ run_wten) & while_mul_cmp_11_iswt3_2;
  assign while_mul_cmp_11_iden_5 = while_mul_cmp_11_ogwt_2;
  assign while_mul_cmp_11_ogwt_2 = while_mul_cmp_11_hile_mul_cmp_11_pdswt0_2 | (while_mul_cmp_11_icwt_2!=3'b000);
  assign run_cgwt_29 = while_mul_cmp_11_ogwt_2 | while_mul_cmp_11_tiswt3_2 | while_mul_cmp_11_hile_mul_cmp_11_pdswt2_2
      | while_mul_cmp_11_hile_mul_cmp_11_pdswt1_2 | while_mul_cmp_11_ogwt_1 | while_mul_cmp_11_tiswt3_1
      | while_mul_cmp_11_hile_mul_cmp_11_pdswt2_1 | while_mul_cmp_11_hile_mul_cmp_11_pdswt1_1
      | while_mul_cmp_11_ogwt | while_mul_cmp_11_tiswt3 | while_mul_cmp_11_hile_mul_cmp_11_pdswt2
      | while_mul_cmp_11_hile_mul_cmp_11_pdswt1 | (run_wen & while_mul_cmp_11_iswt3_2_pff)
      | (run_wen & while_mul_cmp_11_iswt3_1_pff) | (run_wen & while_mul_cmp_11_iswt3_pff);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_11_hile_mul_cmp_11_pdswt2 <= 1'b0;
      while_mul_cmp_11_hile_mul_cmp_11_pdswt1 <= 1'b0;
      while_mul_cmp_11_hile_mul_cmp_11_pdswt0 <= 1'b0;
      while_mul_cmp_11_icwt <= 3'b000;
      while_mul_cmp_11_hile_mul_cmp_11_pdswt2_1 <= 1'b0;
      while_mul_cmp_11_hile_mul_cmp_11_pdswt1_1 <= 1'b0;
      while_mul_cmp_11_hile_mul_cmp_11_pdswt0_1 <= 1'b0;
      while_mul_cmp_11_icwt_1 <= 3'b000;
      while_mul_cmp_11_hile_mul_cmp_11_pdswt2_2 <= 1'b0;
      while_mul_cmp_11_hile_mul_cmp_11_pdswt1_2 <= 1'b0;
      while_mul_cmp_11_hile_mul_cmp_11_pdswt0_2 <= 1'b0;
      while_mul_cmp_11_icwt_2 <= 3'b000;
    end
    else begin
      while_mul_cmp_11_hile_mul_cmp_11_pdswt2 <= while_mul_cmp_11_tiswt3;
      while_mul_cmp_11_hile_mul_cmp_11_pdswt1 <= while_mul_cmp_11_hile_mul_cmp_11_pdswt2;
      while_mul_cmp_11_hile_mul_cmp_11_pdswt0 <= while_mul_cmp_11_hile_mul_cmp_11_pdswt1;
      while_mul_cmp_11_icwt <= nl_while_mul_cmp_11_icwt[2:0];
      while_mul_cmp_11_hile_mul_cmp_11_pdswt2_1 <= while_mul_cmp_11_tiswt3_1;
      while_mul_cmp_11_hile_mul_cmp_11_pdswt1_1 <= while_mul_cmp_11_hile_mul_cmp_11_pdswt2_1;
      while_mul_cmp_11_hile_mul_cmp_11_pdswt0_1 <= while_mul_cmp_11_hile_mul_cmp_11_pdswt1_1;
      while_mul_cmp_11_icwt_1 <= nl_while_mul_cmp_11_icwt_1[2:0];
      while_mul_cmp_11_hile_mul_cmp_11_pdswt2_2 <= while_mul_cmp_11_tiswt3_2;
      while_mul_cmp_11_hile_mul_cmp_11_pdswt1_2 <= while_mul_cmp_11_hile_mul_cmp_11_pdswt2_2;
      while_mul_cmp_11_hile_mul_cmp_11_pdswt0_2 <= while_mul_cmp_11_hile_mul_cmp_11_pdswt1_2;
      while_mul_cmp_11_icwt_2 <= nl_while_mul_cmp_11_icwt_2[2:0];
    end
  end
  assign nl_while_acc_160_nl = while_mul_cmp_11_icwt + 3'b111;
  assign while_acc_160_nl = nl_while_acc_160_nl[2:0];
  assign nl_while_acc_161_nl = conv_u2u_1_2(while_mul_cmp_11_hile_mul_cmp_11_pdswt0)
      + conv_u2u_1_2(~ while_mul_cmp_11_ogwt);
  assign while_acc_161_nl = nl_while_acc_161_nl[1:0];
  assign nl_while_mul_cmp_11_icwt  = while_acc_160_nl + conv_u2u_2_3(while_acc_161_nl);
  assign nl_while_acc_163_nl = while_mul_cmp_11_icwt_1 + 3'b111;
  assign while_acc_163_nl = nl_while_acc_163_nl[2:0];
  assign nl_while_acc_164_nl = conv_u2u_1_2(while_mul_cmp_11_hile_mul_cmp_11_pdswt0_1)
      + conv_u2u_1_2(~ while_mul_cmp_11_ogwt_1);
  assign while_acc_164_nl = nl_while_acc_164_nl[1:0];
  assign nl_while_mul_cmp_11_icwt_1  = while_acc_163_nl + conv_u2u_2_3(while_acc_164_nl);
  assign nl_while_acc_166_nl = while_mul_cmp_11_icwt_2 + 3'b111;
  assign while_acc_166_nl = nl_while_acc_166_nl[2:0];
  assign nl_while_acc_167_nl = conv_u2u_1_2(while_mul_cmp_11_hile_mul_cmp_11_pdswt0_2)
      + conv_u2u_1_2(~ while_mul_cmp_11_ogwt_2);
  assign while_acc_167_nl = nl_while_acc_167_nl[1:0];
  assign nl_while_mul_cmp_11_icwt_2  = while_acc_166_nl + conv_u2u_2_3(while_acc_167_nl);

  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_cmp_10_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_10
// ------------------------------------------------------------------


module Rotate_run_while_mul_cmp_10_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_10
    (
  clk, rst, while_mul_cmp_10_bawt, while_mul_cmp_10_iden, while_mul_cmp_10_iden_2,
      while_mul_cmp_10_iden_4, while_mul_cmp_10_z_mxwt, while_mul_cmp_10_z_mxwt_1,
      while_mul_cmp_10_z_mxwt_2, while_mul_cmp_10_biwt, while_mul_cmp_10_bdwt, while_mul_cmp_10_biwt_2,
      while_mul_cmp_10_bdwt_2, while_mul_cmp_10_biwt_4, while_mul_cmp_10_bdwt_4,
      while_mul_cmp_10_z
);
  input clk;
  input rst;
  output while_mul_cmp_10_bawt;
  output while_mul_cmp_10_iden;
  output while_mul_cmp_10_iden_2;
  output while_mul_cmp_10_iden_4;
  output [111:0] while_mul_cmp_10_z_mxwt;
  output [111:0] while_mul_cmp_10_z_mxwt_1;
  output [111:0] while_mul_cmp_10_z_mxwt_2;
  input while_mul_cmp_10_biwt;
  input while_mul_cmp_10_bdwt;
  input while_mul_cmp_10_biwt_2;
  input while_mul_cmp_10_bdwt_2;
  input while_mul_cmp_10_biwt_4;
  input while_mul_cmp_10_bdwt_4;
  input [127:0] while_mul_cmp_10_z;


  // Interconnect Declarations
  reg [2:0] while_mul_cmp_10_bcwt;
  wire [3:0] nl_while_mul_cmp_10_bcwt;
  reg [2:0] while_mul_cmp_10_bcwt_1;
  wire [3:0] nl_while_mul_cmp_10_bcwt_1;
  reg [2:0] while_mul_cmp_10_bcwt_2;
  wire [3:0] nl_while_mul_cmp_10_bcwt_2;
  reg [111:0] while_mul_cmp_10_z_bfwt_3_111_0;
  reg [111:0] while_mul_cmp_10_z_bfwt_7_111_0;
  reg [111:0] while_mul_cmp_10_z_bfwt_11_111_0;
  reg [111:0] while_mul_cmp_10_z_bfwt_2_111_0;
  reg [111:0] while_mul_cmp_10_z_bfwt_6_111_0;
  reg [111:0] while_mul_cmp_10_z_bfwt_10_111_0;
  reg [111:0] while_mul_cmp_10_z_bfwt_1_111_0;
  reg [111:0] while_mul_cmp_10_z_bfwt_5_111_0;
  reg [111:0] while_mul_cmp_10_z_bfwt_9_111_0;
  reg [111:0] while_mul_cmp_10_z_bfwt_111_0;
  reg [111:0] while_mul_cmp_10_z_bfwt_4_111_0;
  reg [111:0] while_mul_cmp_10_z_bfwt_8_111_0;

  wire[2:0] while_acc_153_nl;
  wire[3:0] nl_while_acc_153_nl;
  wire[1:0] while_acc_154_nl;
  wire[2:0] nl_while_acc_154_nl;
  wire[2:0] while_acc_156_nl;
  wire[3:0] nl_while_acc_156_nl;
  wire[1:0] while_acc_157_nl;
  wire[2:0] nl_while_acc_157_nl;
  wire[2:0] while_acc_159_nl;
  wire[3:0] nl_while_acc_159_nl;
  wire[1:0] while_acc_160_nl;
  wire[2:0] nl_while_acc_160_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_cmp_10_iden = while_mul_cmp_10_biwt | while_mul_cmp_10_bdwt;
  assign while_mul_cmp_10_bawt = while_mul_cmp_10_biwt | (while_mul_cmp_10_bcwt!=3'b000);
  assign while_mul_cmp_10_iden_2 = while_mul_cmp_10_biwt_2 | while_mul_cmp_10_bdwt_2;
  assign while_mul_cmp_10_iden_4 = while_mul_cmp_10_biwt_4 | while_mul_cmp_10_bdwt_4;
  assign while_mul_cmp_10_z_mxwt = MUX_v_112_5_2((while_mul_cmp_10_z[111:0]), while_mul_cmp_10_z_bfwt_111_0,
      while_mul_cmp_10_z_bfwt_1_111_0, while_mul_cmp_10_z_bfwt_2_111_0, while_mul_cmp_10_z_bfwt_3_111_0,
      while_mul_cmp_10_bcwt_2);
  assign while_mul_cmp_10_z_mxwt_1 = MUX_v_112_5_2((while_mul_cmp_10_z[111:0]), while_mul_cmp_10_z_bfwt_4_111_0,
      while_mul_cmp_10_z_bfwt_5_111_0, while_mul_cmp_10_z_bfwt_6_111_0, while_mul_cmp_10_z_bfwt_7_111_0,
      while_mul_cmp_10_bcwt_1);
  assign while_mul_cmp_10_z_mxwt_2 = MUX_v_112_5_2((while_mul_cmp_10_z[111:0]), while_mul_cmp_10_z_bfwt_8_111_0,
      while_mul_cmp_10_z_bfwt_9_111_0, while_mul_cmp_10_z_bfwt_10_111_0, while_mul_cmp_10_z_bfwt_11_111_0,
      while_mul_cmp_10_bcwt);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_10_bcwt <= 3'b000;
      while_mul_cmp_10_bcwt_1 <= 3'b000;
      while_mul_cmp_10_bcwt_2 <= 3'b000;
    end
    else begin
      while_mul_cmp_10_bcwt <= nl_while_mul_cmp_10_bcwt[2:0];
      while_mul_cmp_10_bcwt_1 <= nl_while_mul_cmp_10_bcwt_1[2:0];
      while_mul_cmp_10_bcwt_2 <= nl_while_mul_cmp_10_bcwt_2[2:0];
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_10_z_bfwt_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_10_z_bfwt_1_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_10_z_bfwt_2_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_10_z_bfwt_3_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_cmp_10_biwt_4 ) begin
      while_mul_cmp_10_z_bfwt_111_0 <= while_mul_cmp_10_z[111:0];
      while_mul_cmp_10_z_bfwt_1_111_0 <= while_mul_cmp_10_z_bfwt_111_0;
      while_mul_cmp_10_z_bfwt_2_111_0 <= while_mul_cmp_10_z_bfwt_1_111_0;
      while_mul_cmp_10_z_bfwt_3_111_0 <= while_mul_cmp_10_z_bfwt_2_111_0;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_10_z_bfwt_4_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_10_z_bfwt_5_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_10_z_bfwt_6_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_10_z_bfwt_7_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_cmp_10_biwt_2 ) begin
      while_mul_cmp_10_z_bfwt_4_111_0 <= while_mul_cmp_10_z[111:0];
      while_mul_cmp_10_z_bfwt_5_111_0 <= while_mul_cmp_10_z_bfwt_4_111_0;
      while_mul_cmp_10_z_bfwt_6_111_0 <= while_mul_cmp_10_z_bfwt_5_111_0;
      while_mul_cmp_10_z_bfwt_7_111_0 <= while_mul_cmp_10_z_bfwt_6_111_0;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_10_z_bfwt_8_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_10_z_bfwt_9_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_10_z_bfwt_10_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_10_z_bfwt_11_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_cmp_10_biwt ) begin
      while_mul_cmp_10_z_bfwt_8_111_0 <= while_mul_cmp_10_z[111:0];
      while_mul_cmp_10_z_bfwt_9_111_0 <= while_mul_cmp_10_z_bfwt_8_111_0;
      while_mul_cmp_10_z_bfwt_10_111_0 <= while_mul_cmp_10_z_bfwt_9_111_0;
      while_mul_cmp_10_z_bfwt_11_111_0 <= while_mul_cmp_10_z_bfwt_10_111_0;
    end
  end
  assign nl_while_acc_153_nl = while_mul_cmp_10_bcwt + 3'b111;
  assign while_acc_153_nl = nl_while_acc_153_nl[2:0];
  assign nl_while_acc_154_nl = conv_u2u_1_2(~ while_mul_cmp_10_bdwt) + conv_u2u_1_2(while_mul_cmp_10_biwt);
  assign while_acc_154_nl = nl_while_acc_154_nl[1:0];
  assign nl_while_mul_cmp_10_bcwt  = while_acc_153_nl + conv_u2u_2_3(while_acc_154_nl);
  assign nl_while_acc_156_nl = while_mul_cmp_10_bcwt_1 + 3'b111;
  assign while_acc_156_nl = nl_while_acc_156_nl[2:0];
  assign nl_while_acc_157_nl = conv_u2u_1_2(~ while_mul_cmp_10_bdwt_2) + conv_u2u_1_2(while_mul_cmp_10_biwt_2);
  assign while_acc_157_nl = nl_while_acc_157_nl[1:0];
  assign nl_while_mul_cmp_10_bcwt_1  = while_acc_156_nl + conv_u2u_2_3(while_acc_157_nl);
  assign nl_while_acc_159_nl = while_mul_cmp_10_bcwt_2 + 3'b111;
  assign while_acc_159_nl = nl_while_acc_159_nl[2:0];
  assign nl_while_acc_160_nl = conv_u2u_1_2(~ while_mul_cmp_10_bdwt_4) + conv_u2u_1_2(while_mul_cmp_10_biwt_4);
  assign while_acc_160_nl = nl_while_acc_160_nl[1:0];
  assign nl_while_mul_cmp_10_bcwt_2  = while_acc_159_nl + conv_u2u_2_3(while_acc_160_nl);

  function automatic [111:0] MUX_v_112_5_2;
    input [111:0] input_0;
    input [111:0] input_1;
    input [111:0] input_2;
    input [111:0] input_3;
    input [111:0] input_4;
    input [2:0] sel;
    reg [111:0] result;
  begin
    case (sel)
      3'b000 : begin
        result = input_0;
      end
      3'b001 : begin
        result = input_1;
      end
      3'b010 : begin
        result = input_2;
      end
      3'b011 : begin
        result = input_3;
      end
      default : begin
        result = input_4;
      end
    endcase
    MUX_v_112_5_2 = result;
  end
  endfunction


  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_cmp_10_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_10
// ------------------------------------------------------------------


module Rotate_run_while_mul_cmp_10_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_10
    (
  clk, rst, run_wen, run_wten, while_mul_cmp_10_oswt_unreg, while_mul_cmp_10_iswt3,
      while_mul_cmp_10_iden_1, while_mul_cmp_10_oswt_unreg_1, while_mul_cmp_10_iswt3_1,
      while_mul_cmp_10_iden_3, while_mul_cmp_10_oswt_unreg_2, while_mul_cmp_10_iswt3_2,
      while_mul_cmp_10_iden_5, run_cgwt_28, while_mul_cmp_10_bdwt, while_mul_cmp_10_bdwt_2,
      while_mul_cmp_10_bdwt_4, while_mul_cmp_10_iswt3_2_pff, while_mul_cmp_10_iswt3_1_pff,
      while_mul_cmp_10_iswt3_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_cmp_10_oswt_unreg;
  input while_mul_cmp_10_iswt3;
  output while_mul_cmp_10_iden_1;
  input while_mul_cmp_10_oswt_unreg_1;
  input while_mul_cmp_10_iswt3_1;
  output while_mul_cmp_10_iden_3;
  input while_mul_cmp_10_oswt_unreg_2;
  input while_mul_cmp_10_iswt3_2;
  output while_mul_cmp_10_iden_5;
  output run_cgwt_28;
  output while_mul_cmp_10_bdwt;
  output while_mul_cmp_10_bdwt_2;
  output while_mul_cmp_10_bdwt_4;
  input while_mul_cmp_10_iswt3_2_pff;
  input while_mul_cmp_10_iswt3_1_pff;
  input while_mul_cmp_10_iswt3_pff;


  // Interconnect Declarations
  wire while_mul_cmp_10_ogwt;
  wire while_mul_cmp_10_tiswt3;
  reg while_mul_cmp_10_hile_mul_cmp_10_pdswt2;
  reg while_mul_cmp_10_hile_mul_cmp_10_pdswt1;
  reg while_mul_cmp_10_hile_mul_cmp_10_pdswt0;
  reg [2:0] while_mul_cmp_10_icwt;
  wire [3:0] nl_while_mul_cmp_10_icwt;
  wire while_mul_cmp_10_ogwt_1;
  wire while_mul_cmp_10_tiswt3_1;
  reg while_mul_cmp_10_hile_mul_cmp_10_pdswt2_1;
  reg while_mul_cmp_10_hile_mul_cmp_10_pdswt1_1;
  reg while_mul_cmp_10_hile_mul_cmp_10_pdswt0_1;
  reg [2:0] while_mul_cmp_10_icwt_1;
  wire [3:0] nl_while_mul_cmp_10_icwt_1;
  wire while_mul_cmp_10_ogwt_2;
  wire while_mul_cmp_10_tiswt3_2;
  reg while_mul_cmp_10_hile_mul_cmp_10_pdswt2_2;
  reg while_mul_cmp_10_hile_mul_cmp_10_pdswt1_2;
  reg while_mul_cmp_10_hile_mul_cmp_10_pdswt0_2;
  reg [2:0] while_mul_cmp_10_icwt_2;
  wire [3:0] nl_while_mul_cmp_10_icwt_2;

  wire[2:0] while_acc_154_nl;
  wire[3:0] nl_while_acc_154_nl;
  wire[1:0] while_acc_155_nl;
  wire[2:0] nl_while_acc_155_nl;
  wire[2:0] while_acc_157_nl;
  wire[3:0] nl_while_acc_157_nl;
  wire[1:0] while_acc_158_nl;
  wire[2:0] nl_while_acc_158_nl;
  wire[2:0] while_acc_160_nl;
  wire[3:0] nl_while_acc_160_nl;
  wire[1:0] while_acc_161_nl;
  wire[2:0] nl_while_acc_161_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_cmp_10_bdwt = while_mul_cmp_10_oswt_unreg & run_wen;
  assign while_mul_cmp_10_tiswt3 = (~ run_wten) & while_mul_cmp_10_iswt3;
  assign while_mul_cmp_10_iden_1 = while_mul_cmp_10_ogwt;
  assign while_mul_cmp_10_ogwt = while_mul_cmp_10_hile_mul_cmp_10_pdswt0 | (while_mul_cmp_10_icwt!=3'b000);
  assign while_mul_cmp_10_bdwt_2 = while_mul_cmp_10_oswt_unreg_1 & run_wen;
  assign while_mul_cmp_10_tiswt3_1 = (~ run_wten) & while_mul_cmp_10_iswt3_1;
  assign while_mul_cmp_10_iden_3 = while_mul_cmp_10_ogwt_1;
  assign while_mul_cmp_10_ogwt_1 = while_mul_cmp_10_hile_mul_cmp_10_pdswt0_1 | (while_mul_cmp_10_icwt_1!=3'b000);
  assign while_mul_cmp_10_bdwt_4 = while_mul_cmp_10_oswt_unreg_2 & run_wen;
  assign while_mul_cmp_10_tiswt3_2 = (~ run_wten) & while_mul_cmp_10_iswt3_2;
  assign while_mul_cmp_10_iden_5 = while_mul_cmp_10_ogwt_2;
  assign while_mul_cmp_10_ogwt_2 = while_mul_cmp_10_hile_mul_cmp_10_pdswt0_2 | (while_mul_cmp_10_icwt_2!=3'b000);
  assign run_cgwt_28 = while_mul_cmp_10_ogwt_2 | while_mul_cmp_10_tiswt3_2 | while_mul_cmp_10_hile_mul_cmp_10_pdswt2_2
      | while_mul_cmp_10_hile_mul_cmp_10_pdswt1_2 | while_mul_cmp_10_ogwt_1 | while_mul_cmp_10_tiswt3_1
      | while_mul_cmp_10_hile_mul_cmp_10_pdswt2_1 | while_mul_cmp_10_hile_mul_cmp_10_pdswt1_1
      | while_mul_cmp_10_ogwt | while_mul_cmp_10_tiswt3 | while_mul_cmp_10_hile_mul_cmp_10_pdswt2
      | while_mul_cmp_10_hile_mul_cmp_10_pdswt1 | (run_wen & while_mul_cmp_10_iswt3_2_pff)
      | (run_wen & while_mul_cmp_10_iswt3_1_pff) | (run_wen & while_mul_cmp_10_iswt3_pff);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_10_hile_mul_cmp_10_pdswt2 <= 1'b0;
      while_mul_cmp_10_hile_mul_cmp_10_pdswt1 <= 1'b0;
      while_mul_cmp_10_hile_mul_cmp_10_pdswt0 <= 1'b0;
      while_mul_cmp_10_icwt <= 3'b000;
      while_mul_cmp_10_hile_mul_cmp_10_pdswt2_1 <= 1'b0;
      while_mul_cmp_10_hile_mul_cmp_10_pdswt1_1 <= 1'b0;
      while_mul_cmp_10_hile_mul_cmp_10_pdswt0_1 <= 1'b0;
      while_mul_cmp_10_icwt_1 <= 3'b000;
      while_mul_cmp_10_hile_mul_cmp_10_pdswt2_2 <= 1'b0;
      while_mul_cmp_10_hile_mul_cmp_10_pdswt1_2 <= 1'b0;
      while_mul_cmp_10_hile_mul_cmp_10_pdswt0_2 <= 1'b0;
      while_mul_cmp_10_icwt_2 <= 3'b000;
    end
    else begin
      while_mul_cmp_10_hile_mul_cmp_10_pdswt2 <= while_mul_cmp_10_tiswt3;
      while_mul_cmp_10_hile_mul_cmp_10_pdswt1 <= while_mul_cmp_10_hile_mul_cmp_10_pdswt2;
      while_mul_cmp_10_hile_mul_cmp_10_pdswt0 <= while_mul_cmp_10_hile_mul_cmp_10_pdswt1;
      while_mul_cmp_10_icwt <= nl_while_mul_cmp_10_icwt[2:0];
      while_mul_cmp_10_hile_mul_cmp_10_pdswt2_1 <= while_mul_cmp_10_tiswt3_1;
      while_mul_cmp_10_hile_mul_cmp_10_pdswt1_1 <= while_mul_cmp_10_hile_mul_cmp_10_pdswt2_1;
      while_mul_cmp_10_hile_mul_cmp_10_pdswt0_1 <= while_mul_cmp_10_hile_mul_cmp_10_pdswt1_1;
      while_mul_cmp_10_icwt_1 <= nl_while_mul_cmp_10_icwt_1[2:0];
      while_mul_cmp_10_hile_mul_cmp_10_pdswt2_2 <= while_mul_cmp_10_tiswt3_2;
      while_mul_cmp_10_hile_mul_cmp_10_pdswt1_2 <= while_mul_cmp_10_hile_mul_cmp_10_pdswt2_2;
      while_mul_cmp_10_hile_mul_cmp_10_pdswt0_2 <= while_mul_cmp_10_hile_mul_cmp_10_pdswt1_2;
      while_mul_cmp_10_icwt_2 <= nl_while_mul_cmp_10_icwt_2[2:0];
    end
  end
  assign nl_while_acc_154_nl = while_mul_cmp_10_icwt + 3'b111;
  assign while_acc_154_nl = nl_while_acc_154_nl[2:0];
  assign nl_while_acc_155_nl = conv_u2u_1_2(while_mul_cmp_10_hile_mul_cmp_10_pdswt0)
      + conv_u2u_1_2(~ while_mul_cmp_10_ogwt);
  assign while_acc_155_nl = nl_while_acc_155_nl[1:0];
  assign nl_while_mul_cmp_10_icwt  = while_acc_154_nl + conv_u2u_2_3(while_acc_155_nl);
  assign nl_while_acc_157_nl = while_mul_cmp_10_icwt_1 + 3'b111;
  assign while_acc_157_nl = nl_while_acc_157_nl[2:0];
  assign nl_while_acc_158_nl = conv_u2u_1_2(while_mul_cmp_10_hile_mul_cmp_10_pdswt0_1)
      + conv_u2u_1_2(~ while_mul_cmp_10_ogwt_1);
  assign while_acc_158_nl = nl_while_acc_158_nl[1:0];
  assign nl_while_mul_cmp_10_icwt_1  = while_acc_157_nl + conv_u2u_2_3(while_acc_158_nl);
  assign nl_while_acc_160_nl = while_mul_cmp_10_icwt_2 + 3'b111;
  assign while_acc_160_nl = nl_while_acc_160_nl[2:0];
  assign nl_while_acc_161_nl = conv_u2u_1_2(while_mul_cmp_10_hile_mul_cmp_10_pdswt0_2)
      + conv_u2u_1_2(~ while_mul_cmp_10_ogwt_2);
  assign while_acc_161_nl = nl_while_acc_161_nl[1:0];
  assign nl_while_mul_cmp_10_icwt_2  = while_acc_160_nl + conv_u2u_2_3(while_acc_161_nl);

  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_cmp_9_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_9
// ------------------------------------------------------------------


module Rotate_run_while_mul_cmp_9_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_9
    (
  clk, rst, while_mul_cmp_9_bawt, while_mul_cmp_9_iden, while_mul_cmp_9_iden_2, while_mul_cmp_9_iden_4,
      while_mul_cmp_9_z_mxwt, while_mul_cmp_9_z_mxwt_1, while_mul_cmp_9_z_mxwt_2,
      while_mul_cmp_9_biwt, while_mul_cmp_9_bdwt, while_mul_cmp_9_biwt_2, while_mul_cmp_9_bdwt_2,
      while_mul_cmp_9_biwt_4, while_mul_cmp_9_bdwt_4, while_mul_cmp_9_z
);
  input clk;
  input rst;
  output while_mul_cmp_9_bawt;
  output while_mul_cmp_9_iden;
  output while_mul_cmp_9_iden_2;
  output while_mul_cmp_9_iden_4;
  output [111:0] while_mul_cmp_9_z_mxwt;
  output [111:0] while_mul_cmp_9_z_mxwt_1;
  output [111:0] while_mul_cmp_9_z_mxwt_2;
  input while_mul_cmp_9_biwt;
  input while_mul_cmp_9_bdwt;
  input while_mul_cmp_9_biwt_2;
  input while_mul_cmp_9_bdwt_2;
  input while_mul_cmp_9_biwt_4;
  input while_mul_cmp_9_bdwt_4;
  input [127:0] while_mul_cmp_9_z;


  // Interconnect Declarations
  reg [2:0] while_mul_cmp_9_bcwt;
  wire [3:0] nl_while_mul_cmp_9_bcwt;
  reg [2:0] while_mul_cmp_9_bcwt_1;
  wire [3:0] nl_while_mul_cmp_9_bcwt_1;
  reg [2:0] while_mul_cmp_9_bcwt_2;
  wire [3:0] nl_while_mul_cmp_9_bcwt_2;
  reg [111:0] while_mul_cmp_9_z_bfwt_3_111_0;
  reg [111:0] while_mul_cmp_9_z_bfwt_7_111_0;
  reg [111:0] while_mul_cmp_9_z_bfwt_11_111_0;
  reg [111:0] while_mul_cmp_9_z_bfwt_2_111_0;
  reg [111:0] while_mul_cmp_9_z_bfwt_6_111_0;
  reg [111:0] while_mul_cmp_9_z_bfwt_10_111_0;
  reg [111:0] while_mul_cmp_9_z_bfwt_1_111_0;
  reg [111:0] while_mul_cmp_9_z_bfwt_5_111_0;
  reg [111:0] while_mul_cmp_9_z_bfwt_9_111_0;
  reg [111:0] while_mul_cmp_9_z_bfwt_111_0;
  reg [111:0] while_mul_cmp_9_z_bfwt_4_111_0;
  reg [111:0] while_mul_cmp_9_z_bfwt_8_111_0;

  wire[2:0] while_acc_147_nl;
  wire[3:0] nl_while_acc_147_nl;
  wire[1:0] while_acc_148_nl;
  wire[2:0] nl_while_acc_148_nl;
  wire[2:0] while_acc_150_nl;
  wire[3:0] nl_while_acc_150_nl;
  wire[1:0] while_acc_151_nl;
  wire[2:0] nl_while_acc_151_nl;
  wire[2:0] while_acc_153_nl;
  wire[3:0] nl_while_acc_153_nl;
  wire[1:0] while_acc_154_nl;
  wire[2:0] nl_while_acc_154_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_cmp_9_iden = while_mul_cmp_9_biwt | while_mul_cmp_9_bdwt;
  assign while_mul_cmp_9_bawt = while_mul_cmp_9_biwt | (while_mul_cmp_9_bcwt!=3'b000);
  assign while_mul_cmp_9_iden_2 = while_mul_cmp_9_biwt_2 | while_mul_cmp_9_bdwt_2;
  assign while_mul_cmp_9_iden_4 = while_mul_cmp_9_biwt_4 | while_mul_cmp_9_bdwt_4;
  assign while_mul_cmp_9_z_mxwt = MUX_v_112_5_2((while_mul_cmp_9_z[111:0]), while_mul_cmp_9_z_bfwt_111_0,
      while_mul_cmp_9_z_bfwt_1_111_0, while_mul_cmp_9_z_bfwt_2_111_0, while_mul_cmp_9_z_bfwt_3_111_0,
      while_mul_cmp_9_bcwt_2);
  assign while_mul_cmp_9_z_mxwt_1 = MUX_v_112_5_2((while_mul_cmp_9_z[111:0]), while_mul_cmp_9_z_bfwt_4_111_0,
      while_mul_cmp_9_z_bfwt_5_111_0, while_mul_cmp_9_z_bfwt_6_111_0, while_mul_cmp_9_z_bfwt_7_111_0,
      while_mul_cmp_9_bcwt_1);
  assign while_mul_cmp_9_z_mxwt_2 = MUX_v_112_5_2((while_mul_cmp_9_z[111:0]), while_mul_cmp_9_z_bfwt_8_111_0,
      while_mul_cmp_9_z_bfwt_9_111_0, while_mul_cmp_9_z_bfwt_10_111_0, while_mul_cmp_9_z_bfwt_11_111_0,
      while_mul_cmp_9_bcwt);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_9_bcwt <= 3'b000;
      while_mul_cmp_9_bcwt_1 <= 3'b000;
      while_mul_cmp_9_bcwt_2 <= 3'b000;
    end
    else begin
      while_mul_cmp_9_bcwt <= nl_while_mul_cmp_9_bcwt[2:0];
      while_mul_cmp_9_bcwt_1 <= nl_while_mul_cmp_9_bcwt_1[2:0];
      while_mul_cmp_9_bcwt_2 <= nl_while_mul_cmp_9_bcwt_2[2:0];
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_9_z_bfwt_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_9_z_bfwt_1_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_9_z_bfwt_2_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_9_z_bfwt_3_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_cmp_9_biwt_4 ) begin
      while_mul_cmp_9_z_bfwt_111_0 <= while_mul_cmp_9_z[111:0];
      while_mul_cmp_9_z_bfwt_1_111_0 <= while_mul_cmp_9_z_bfwt_111_0;
      while_mul_cmp_9_z_bfwt_2_111_0 <= while_mul_cmp_9_z_bfwt_1_111_0;
      while_mul_cmp_9_z_bfwt_3_111_0 <= while_mul_cmp_9_z_bfwt_2_111_0;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_9_z_bfwt_4_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_9_z_bfwt_5_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_9_z_bfwt_6_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_9_z_bfwt_7_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_cmp_9_biwt_2 ) begin
      while_mul_cmp_9_z_bfwt_4_111_0 <= while_mul_cmp_9_z[111:0];
      while_mul_cmp_9_z_bfwt_5_111_0 <= while_mul_cmp_9_z_bfwt_4_111_0;
      while_mul_cmp_9_z_bfwt_6_111_0 <= while_mul_cmp_9_z_bfwt_5_111_0;
      while_mul_cmp_9_z_bfwt_7_111_0 <= while_mul_cmp_9_z_bfwt_6_111_0;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_9_z_bfwt_8_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_9_z_bfwt_9_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_9_z_bfwt_10_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_9_z_bfwt_11_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_cmp_9_biwt ) begin
      while_mul_cmp_9_z_bfwt_8_111_0 <= while_mul_cmp_9_z[111:0];
      while_mul_cmp_9_z_bfwt_9_111_0 <= while_mul_cmp_9_z_bfwt_8_111_0;
      while_mul_cmp_9_z_bfwt_10_111_0 <= while_mul_cmp_9_z_bfwt_9_111_0;
      while_mul_cmp_9_z_bfwt_11_111_0 <= while_mul_cmp_9_z_bfwt_10_111_0;
    end
  end
  assign nl_while_acc_147_nl = while_mul_cmp_9_bcwt + 3'b111;
  assign while_acc_147_nl = nl_while_acc_147_nl[2:0];
  assign nl_while_acc_148_nl = conv_u2u_1_2(~ while_mul_cmp_9_bdwt) + conv_u2u_1_2(while_mul_cmp_9_biwt);
  assign while_acc_148_nl = nl_while_acc_148_nl[1:0];
  assign nl_while_mul_cmp_9_bcwt  = while_acc_147_nl + conv_u2u_2_3(while_acc_148_nl);
  assign nl_while_acc_150_nl = while_mul_cmp_9_bcwt_1 + 3'b111;
  assign while_acc_150_nl = nl_while_acc_150_nl[2:0];
  assign nl_while_acc_151_nl = conv_u2u_1_2(~ while_mul_cmp_9_bdwt_2) + conv_u2u_1_2(while_mul_cmp_9_biwt_2);
  assign while_acc_151_nl = nl_while_acc_151_nl[1:0];
  assign nl_while_mul_cmp_9_bcwt_1  = while_acc_150_nl + conv_u2u_2_3(while_acc_151_nl);
  assign nl_while_acc_153_nl = while_mul_cmp_9_bcwt_2 + 3'b111;
  assign while_acc_153_nl = nl_while_acc_153_nl[2:0];
  assign nl_while_acc_154_nl = conv_u2u_1_2(~ while_mul_cmp_9_bdwt_4) + conv_u2u_1_2(while_mul_cmp_9_biwt_4);
  assign while_acc_154_nl = nl_while_acc_154_nl[1:0];
  assign nl_while_mul_cmp_9_bcwt_2  = while_acc_153_nl + conv_u2u_2_3(while_acc_154_nl);

  function automatic [111:0] MUX_v_112_5_2;
    input [111:0] input_0;
    input [111:0] input_1;
    input [111:0] input_2;
    input [111:0] input_3;
    input [111:0] input_4;
    input [2:0] sel;
    reg [111:0] result;
  begin
    case (sel)
      3'b000 : begin
        result = input_0;
      end
      3'b001 : begin
        result = input_1;
      end
      3'b010 : begin
        result = input_2;
      end
      3'b011 : begin
        result = input_3;
      end
      default : begin
        result = input_4;
      end
    endcase
    MUX_v_112_5_2 = result;
  end
  endfunction


  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_cmp_9_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_9
// ------------------------------------------------------------------


module Rotate_run_while_mul_cmp_9_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_9
    (
  clk, rst, run_wen, run_wten, while_mul_cmp_9_oswt_unreg, while_mul_cmp_9_iswt3,
      while_mul_cmp_9_iden_1, while_mul_cmp_9_oswt_unreg_1, while_mul_cmp_9_iswt3_1,
      while_mul_cmp_9_iden_3, while_mul_cmp_9_oswt_unreg_2, while_mul_cmp_9_iswt3_2,
      while_mul_cmp_9_iden_5, run_cgwt_27, while_mul_cmp_9_bdwt, while_mul_cmp_9_bdwt_2,
      while_mul_cmp_9_bdwt_4, while_mul_cmp_9_iswt3_2_pff, while_mul_cmp_9_iswt3_1_pff,
      while_mul_cmp_9_iswt3_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_cmp_9_oswt_unreg;
  input while_mul_cmp_9_iswt3;
  output while_mul_cmp_9_iden_1;
  input while_mul_cmp_9_oswt_unreg_1;
  input while_mul_cmp_9_iswt3_1;
  output while_mul_cmp_9_iden_3;
  input while_mul_cmp_9_oswt_unreg_2;
  input while_mul_cmp_9_iswt3_2;
  output while_mul_cmp_9_iden_5;
  output run_cgwt_27;
  output while_mul_cmp_9_bdwt;
  output while_mul_cmp_9_bdwt_2;
  output while_mul_cmp_9_bdwt_4;
  input while_mul_cmp_9_iswt3_2_pff;
  input while_mul_cmp_9_iswt3_1_pff;
  input while_mul_cmp_9_iswt3_pff;


  // Interconnect Declarations
  wire while_mul_cmp_9_ogwt;
  wire while_mul_cmp_9_tiswt3;
  reg while_mul_cmp_9_hile_mul_cmp_9_pdswt2;
  reg while_mul_cmp_9_hile_mul_cmp_9_pdswt1;
  reg while_mul_cmp_9_hile_mul_cmp_9_pdswt0;
  reg [2:0] while_mul_cmp_9_icwt;
  wire [3:0] nl_while_mul_cmp_9_icwt;
  wire while_mul_cmp_9_ogwt_1;
  wire while_mul_cmp_9_tiswt3_1;
  reg while_mul_cmp_9_hile_mul_cmp_9_pdswt2_1;
  reg while_mul_cmp_9_hile_mul_cmp_9_pdswt1_1;
  reg while_mul_cmp_9_hile_mul_cmp_9_pdswt0_1;
  reg [2:0] while_mul_cmp_9_icwt_1;
  wire [3:0] nl_while_mul_cmp_9_icwt_1;
  wire while_mul_cmp_9_ogwt_2;
  wire while_mul_cmp_9_tiswt3_2;
  reg while_mul_cmp_9_hile_mul_cmp_9_pdswt2_2;
  reg while_mul_cmp_9_hile_mul_cmp_9_pdswt1_2;
  reg while_mul_cmp_9_hile_mul_cmp_9_pdswt0_2;
  reg [2:0] while_mul_cmp_9_icwt_2;
  wire [3:0] nl_while_mul_cmp_9_icwt_2;

  wire[2:0] while_acc_148_nl;
  wire[3:0] nl_while_acc_148_nl;
  wire[1:0] while_acc_149_nl;
  wire[2:0] nl_while_acc_149_nl;
  wire[2:0] while_acc_151_nl;
  wire[3:0] nl_while_acc_151_nl;
  wire[1:0] while_acc_152_nl;
  wire[2:0] nl_while_acc_152_nl;
  wire[2:0] while_acc_154_nl;
  wire[3:0] nl_while_acc_154_nl;
  wire[1:0] while_acc_155_nl;
  wire[2:0] nl_while_acc_155_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_cmp_9_bdwt = while_mul_cmp_9_oswt_unreg & run_wen;
  assign while_mul_cmp_9_tiswt3 = (~ run_wten) & while_mul_cmp_9_iswt3;
  assign while_mul_cmp_9_iden_1 = while_mul_cmp_9_ogwt;
  assign while_mul_cmp_9_ogwt = while_mul_cmp_9_hile_mul_cmp_9_pdswt0 | (while_mul_cmp_9_icwt!=3'b000);
  assign while_mul_cmp_9_bdwt_2 = while_mul_cmp_9_oswt_unreg_1 & run_wen;
  assign while_mul_cmp_9_tiswt3_1 = (~ run_wten) & while_mul_cmp_9_iswt3_1;
  assign while_mul_cmp_9_iden_3 = while_mul_cmp_9_ogwt_1;
  assign while_mul_cmp_9_ogwt_1 = while_mul_cmp_9_hile_mul_cmp_9_pdswt0_1 | (while_mul_cmp_9_icwt_1!=3'b000);
  assign while_mul_cmp_9_bdwt_4 = while_mul_cmp_9_oswt_unreg_2 & run_wen;
  assign while_mul_cmp_9_tiswt3_2 = (~ run_wten) & while_mul_cmp_9_iswt3_2;
  assign while_mul_cmp_9_iden_5 = while_mul_cmp_9_ogwt_2;
  assign while_mul_cmp_9_ogwt_2 = while_mul_cmp_9_hile_mul_cmp_9_pdswt0_2 | (while_mul_cmp_9_icwt_2!=3'b000);
  assign run_cgwt_27 = while_mul_cmp_9_ogwt_2 | while_mul_cmp_9_tiswt3_2 | while_mul_cmp_9_hile_mul_cmp_9_pdswt2_2
      | while_mul_cmp_9_hile_mul_cmp_9_pdswt1_2 | while_mul_cmp_9_ogwt_1 | while_mul_cmp_9_tiswt3_1
      | while_mul_cmp_9_hile_mul_cmp_9_pdswt2_1 | while_mul_cmp_9_hile_mul_cmp_9_pdswt1_1
      | while_mul_cmp_9_ogwt | while_mul_cmp_9_tiswt3 | while_mul_cmp_9_hile_mul_cmp_9_pdswt2
      | while_mul_cmp_9_hile_mul_cmp_9_pdswt1 | (run_wen & while_mul_cmp_9_iswt3_2_pff)
      | (run_wen & while_mul_cmp_9_iswt3_1_pff) | (run_wen & while_mul_cmp_9_iswt3_pff);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_9_hile_mul_cmp_9_pdswt2 <= 1'b0;
      while_mul_cmp_9_hile_mul_cmp_9_pdswt1 <= 1'b0;
      while_mul_cmp_9_hile_mul_cmp_9_pdswt0 <= 1'b0;
      while_mul_cmp_9_icwt <= 3'b000;
      while_mul_cmp_9_hile_mul_cmp_9_pdswt2_1 <= 1'b0;
      while_mul_cmp_9_hile_mul_cmp_9_pdswt1_1 <= 1'b0;
      while_mul_cmp_9_hile_mul_cmp_9_pdswt0_1 <= 1'b0;
      while_mul_cmp_9_icwt_1 <= 3'b000;
      while_mul_cmp_9_hile_mul_cmp_9_pdswt2_2 <= 1'b0;
      while_mul_cmp_9_hile_mul_cmp_9_pdswt1_2 <= 1'b0;
      while_mul_cmp_9_hile_mul_cmp_9_pdswt0_2 <= 1'b0;
      while_mul_cmp_9_icwt_2 <= 3'b000;
    end
    else begin
      while_mul_cmp_9_hile_mul_cmp_9_pdswt2 <= while_mul_cmp_9_tiswt3;
      while_mul_cmp_9_hile_mul_cmp_9_pdswt1 <= while_mul_cmp_9_hile_mul_cmp_9_pdswt2;
      while_mul_cmp_9_hile_mul_cmp_9_pdswt0 <= while_mul_cmp_9_hile_mul_cmp_9_pdswt1;
      while_mul_cmp_9_icwt <= nl_while_mul_cmp_9_icwt[2:0];
      while_mul_cmp_9_hile_mul_cmp_9_pdswt2_1 <= while_mul_cmp_9_tiswt3_1;
      while_mul_cmp_9_hile_mul_cmp_9_pdswt1_1 <= while_mul_cmp_9_hile_mul_cmp_9_pdswt2_1;
      while_mul_cmp_9_hile_mul_cmp_9_pdswt0_1 <= while_mul_cmp_9_hile_mul_cmp_9_pdswt1_1;
      while_mul_cmp_9_icwt_1 <= nl_while_mul_cmp_9_icwt_1[2:0];
      while_mul_cmp_9_hile_mul_cmp_9_pdswt2_2 <= while_mul_cmp_9_tiswt3_2;
      while_mul_cmp_9_hile_mul_cmp_9_pdswt1_2 <= while_mul_cmp_9_hile_mul_cmp_9_pdswt2_2;
      while_mul_cmp_9_hile_mul_cmp_9_pdswt0_2 <= while_mul_cmp_9_hile_mul_cmp_9_pdswt1_2;
      while_mul_cmp_9_icwt_2 <= nl_while_mul_cmp_9_icwt_2[2:0];
    end
  end
  assign nl_while_acc_148_nl = while_mul_cmp_9_icwt + 3'b111;
  assign while_acc_148_nl = nl_while_acc_148_nl[2:0];
  assign nl_while_acc_149_nl = conv_u2u_1_2(while_mul_cmp_9_hile_mul_cmp_9_pdswt0)
      + conv_u2u_1_2(~ while_mul_cmp_9_ogwt);
  assign while_acc_149_nl = nl_while_acc_149_nl[1:0];
  assign nl_while_mul_cmp_9_icwt  = while_acc_148_nl + conv_u2u_2_3(while_acc_149_nl);
  assign nl_while_acc_151_nl = while_mul_cmp_9_icwt_1 + 3'b111;
  assign while_acc_151_nl = nl_while_acc_151_nl[2:0];
  assign nl_while_acc_152_nl = conv_u2u_1_2(while_mul_cmp_9_hile_mul_cmp_9_pdswt0_1)
      + conv_u2u_1_2(~ while_mul_cmp_9_ogwt_1);
  assign while_acc_152_nl = nl_while_acc_152_nl[1:0];
  assign nl_while_mul_cmp_9_icwt_1  = while_acc_151_nl + conv_u2u_2_3(while_acc_152_nl);
  assign nl_while_acc_154_nl = while_mul_cmp_9_icwt_2 + 3'b111;
  assign while_acc_154_nl = nl_while_acc_154_nl[2:0];
  assign nl_while_acc_155_nl = conv_u2u_1_2(while_mul_cmp_9_hile_mul_cmp_9_pdswt0_2)
      + conv_u2u_1_2(~ while_mul_cmp_9_ogwt_2);
  assign while_acc_155_nl = nl_while_acc_155_nl[1:0];
  assign nl_while_mul_cmp_9_icwt_2  = while_acc_154_nl + conv_u2u_2_3(while_acc_155_nl);

  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_cmp_8_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_8
// ------------------------------------------------------------------


module Rotate_run_while_mul_cmp_8_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_8
    (
  clk, rst, while_mul_cmp_8_bawt, while_mul_cmp_8_iden, while_mul_cmp_8_iden_2, while_mul_cmp_8_iden_4,
      while_mul_cmp_8_z_mxwt, while_mul_cmp_8_z_mxwt_1, while_mul_cmp_8_z_mxwt_2,
      while_mul_cmp_8_biwt, while_mul_cmp_8_bdwt, while_mul_cmp_8_biwt_2, while_mul_cmp_8_bdwt_2,
      while_mul_cmp_8_biwt_4, while_mul_cmp_8_bdwt_4, while_mul_cmp_8_z
);
  input clk;
  input rst;
  output while_mul_cmp_8_bawt;
  output while_mul_cmp_8_iden;
  output while_mul_cmp_8_iden_2;
  output while_mul_cmp_8_iden_4;
  output [111:0] while_mul_cmp_8_z_mxwt;
  output [111:0] while_mul_cmp_8_z_mxwt_1;
  output [111:0] while_mul_cmp_8_z_mxwt_2;
  input while_mul_cmp_8_biwt;
  input while_mul_cmp_8_bdwt;
  input while_mul_cmp_8_biwt_2;
  input while_mul_cmp_8_bdwt_2;
  input while_mul_cmp_8_biwt_4;
  input while_mul_cmp_8_bdwt_4;
  input [127:0] while_mul_cmp_8_z;


  // Interconnect Declarations
  reg [2:0] while_mul_cmp_8_bcwt;
  wire [3:0] nl_while_mul_cmp_8_bcwt;
  reg [2:0] while_mul_cmp_8_bcwt_1;
  wire [3:0] nl_while_mul_cmp_8_bcwt_1;
  reg [2:0] while_mul_cmp_8_bcwt_2;
  wire [3:0] nl_while_mul_cmp_8_bcwt_2;
  reg [111:0] while_mul_cmp_8_z_bfwt_3_111_0;
  reg [111:0] while_mul_cmp_8_z_bfwt_7_111_0;
  reg [111:0] while_mul_cmp_8_z_bfwt_11_111_0;
  reg [111:0] while_mul_cmp_8_z_bfwt_2_111_0;
  reg [111:0] while_mul_cmp_8_z_bfwt_6_111_0;
  reg [111:0] while_mul_cmp_8_z_bfwt_10_111_0;
  reg [111:0] while_mul_cmp_8_z_bfwt_1_111_0;
  reg [111:0] while_mul_cmp_8_z_bfwt_5_111_0;
  reg [111:0] while_mul_cmp_8_z_bfwt_9_111_0;
  reg [111:0] while_mul_cmp_8_z_bfwt_111_0;
  reg [111:0] while_mul_cmp_8_z_bfwt_4_111_0;
  reg [111:0] while_mul_cmp_8_z_bfwt_8_111_0;

  wire[2:0] while_acc_141_nl;
  wire[3:0] nl_while_acc_141_nl;
  wire[1:0] while_acc_142_nl;
  wire[2:0] nl_while_acc_142_nl;
  wire[2:0] while_acc_144_nl;
  wire[3:0] nl_while_acc_144_nl;
  wire[1:0] while_acc_145_nl;
  wire[2:0] nl_while_acc_145_nl;
  wire[2:0] while_acc_147_nl;
  wire[3:0] nl_while_acc_147_nl;
  wire[1:0] while_acc_148_nl;
  wire[2:0] nl_while_acc_148_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_cmp_8_iden = while_mul_cmp_8_biwt | while_mul_cmp_8_bdwt;
  assign while_mul_cmp_8_bawt = while_mul_cmp_8_biwt | (while_mul_cmp_8_bcwt!=3'b000);
  assign while_mul_cmp_8_iden_2 = while_mul_cmp_8_biwt_2 | while_mul_cmp_8_bdwt_2;
  assign while_mul_cmp_8_iden_4 = while_mul_cmp_8_biwt_4 | while_mul_cmp_8_bdwt_4;
  assign while_mul_cmp_8_z_mxwt = MUX_v_112_5_2((while_mul_cmp_8_z[111:0]), while_mul_cmp_8_z_bfwt_111_0,
      while_mul_cmp_8_z_bfwt_1_111_0, while_mul_cmp_8_z_bfwt_2_111_0, while_mul_cmp_8_z_bfwt_3_111_0,
      while_mul_cmp_8_bcwt_2);
  assign while_mul_cmp_8_z_mxwt_1 = MUX_v_112_5_2((while_mul_cmp_8_z[111:0]), while_mul_cmp_8_z_bfwt_4_111_0,
      while_mul_cmp_8_z_bfwt_5_111_0, while_mul_cmp_8_z_bfwt_6_111_0, while_mul_cmp_8_z_bfwt_7_111_0,
      while_mul_cmp_8_bcwt_1);
  assign while_mul_cmp_8_z_mxwt_2 = MUX_v_112_5_2((while_mul_cmp_8_z[111:0]), while_mul_cmp_8_z_bfwt_8_111_0,
      while_mul_cmp_8_z_bfwt_9_111_0, while_mul_cmp_8_z_bfwt_10_111_0, while_mul_cmp_8_z_bfwt_11_111_0,
      while_mul_cmp_8_bcwt);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_8_bcwt <= 3'b000;
      while_mul_cmp_8_bcwt_1 <= 3'b000;
      while_mul_cmp_8_bcwt_2 <= 3'b000;
    end
    else begin
      while_mul_cmp_8_bcwt <= nl_while_mul_cmp_8_bcwt[2:0];
      while_mul_cmp_8_bcwt_1 <= nl_while_mul_cmp_8_bcwt_1[2:0];
      while_mul_cmp_8_bcwt_2 <= nl_while_mul_cmp_8_bcwt_2[2:0];
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_8_z_bfwt_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_8_z_bfwt_1_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_8_z_bfwt_2_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_8_z_bfwt_3_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_cmp_8_biwt_4 ) begin
      while_mul_cmp_8_z_bfwt_111_0 <= while_mul_cmp_8_z[111:0];
      while_mul_cmp_8_z_bfwt_1_111_0 <= while_mul_cmp_8_z_bfwt_111_0;
      while_mul_cmp_8_z_bfwt_2_111_0 <= while_mul_cmp_8_z_bfwt_1_111_0;
      while_mul_cmp_8_z_bfwt_3_111_0 <= while_mul_cmp_8_z_bfwt_2_111_0;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_8_z_bfwt_4_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_8_z_bfwt_5_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_8_z_bfwt_6_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_8_z_bfwt_7_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_cmp_8_biwt_2 ) begin
      while_mul_cmp_8_z_bfwt_4_111_0 <= while_mul_cmp_8_z[111:0];
      while_mul_cmp_8_z_bfwt_5_111_0 <= while_mul_cmp_8_z_bfwt_4_111_0;
      while_mul_cmp_8_z_bfwt_6_111_0 <= while_mul_cmp_8_z_bfwt_5_111_0;
      while_mul_cmp_8_z_bfwt_7_111_0 <= while_mul_cmp_8_z_bfwt_6_111_0;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_8_z_bfwt_8_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_8_z_bfwt_9_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_8_z_bfwt_10_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_8_z_bfwt_11_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_cmp_8_biwt ) begin
      while_mul_cmp_8_z_bfwt_8_111_0 <= while_mul_cmp_8_z[111:0];
      while_mul_cmp_8_z_bfwt_9_111_0 <= while_mul_cmp_8_z_bfwt_8_111_0;
      while_mul_cmp_8_z_bfwt_10_111_0 <= while_mul_cmp_8_z_bfwt_9_111_0;
      while_mul_cmp_8_z_bfwt_11_111_0 <= while_mul_cmp_8_z_bfwt_10_111_0;
    end
  end
  assign nl_while_acc_141_nl = while_mul_cmp_8_bcwt + 3'b111;
  assign while_acc_141_nl = nl_while_acc_141_nl[2:0];
  assign nl_while_acc_142_nl = conv_u2u_1_2(~ while_mul_cmp_8_bdwt) + conv_u2u_1_2(while_mul_cmp_8_biwt);
  assign while_acc_142_nl = nl_while_acc_142_nl[1:0];
  assign nl_while_mul_cmp_8_bcwt  = while_acc_141_nl + conv_u2u_2_3(while_acc_142_nl);
  assign nl_while_acc_144_nl = while_mul_cmp_8_bcwt_1 + 3'b111;
  assign while_acc_144_nl = nl_while_acc_144_nl[2:0];
  assign nl_while_acc_145_nl = conv_u2u_1_2(~ while_mul_cmp_8_bdwt_2) + conv_u2u_1_2(while_mul_cmp_8_biwt_2);
  assign while_acc_145_nl = nl_while_acc_145_nl[1:0];
  assign nl_while_mul_cmp_8_bcwt_1  = while_acc_144_nl + conv_u2u_2_3(while_acc_145_nl);
  assign nl_while_acc_147_nl = while_mul_cmp_8_bcwt_2 + 3'b111;
  assign while_acc_147_nl = nl_while_acc_147_nl[2:0];
  assign nl_while_acc_148_nl = conv_u2u_1_2(~ while_mul_cmp_8_bdwt_4) + conv_u2u_1_2(while_mul_cmp_8_biwt_4);
  assign while_acc_148_nl = nl_while_acc_148_nl[1:0];
  assign nl_while_mul_cmp_8_bcwt_2  = while_acc_147_nl + conv_u2u_2_3(while_acc_148_nl);

  function automatic [111:0] MUX_v_112_5_2;
    input [111:0] input_0;
    input [111:0] input_1;
    input [111:0] input_2;
    input [111:0] input_3;
    input [111:0] input_4;
    input [2:0] sel;
    reg [111:0] result;
  begin
    case (sel)
      3'b000 : begin
        result = input_0;
      end
      3'b001 : begin
        result = input_1;
      end
      3'b010 : begin
        result = input_2;
      end
      3'b011 : begin
        result = input_3;
      end
      default : begin
        result = input_4;
      end
    endcase
    MUX_v_112_5_2 = result;
  end
  endfunction


  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_cmp_8_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_8
// ------------------------------------------------------------------


module Rotate_run_while_mul_cmp_8_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_8
    (
  clk, rst, run_wen, run_wten, while_mul_cmp_8_oswt_unreg, while_mul_cmp_8_iswt3,
      while_mul_cmp_8_iden_1, while_mul_cmp_8_oswt_unreg_1, while_mul_cmp_8_iswt3_1,
      while_mul_cmp_8_iden_3, while_mul_cmp_8_oswt_unreg_2, while_mul_cmp_8_iswt3_2,
      while_mul_cmp_8_iden_5, run_cgwt_26, while_mul_cmp_8_bdwt, while_mul_cmp_8_bdwt_2,
      while_mul_cmp_8_bdwt_4, while_mul_cmp_8_iswt3_2_pff, while_mul_cmp_8_iswt3_1_pff,
      while_mul_cmp_8_iswt3_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_cmp_8_oswt_unreg;
  input while_mul_cmp_8_iswt3;
  output while_mul_cmp_8_iden_1;
  input while_mul_cmp_8_oswt_unreg_1;
  input while_mul_cmp_8_iswt3_1;
  output while_mul_cmp_8_iden_3;
  input while_mul_cmp_8_oswt_unreg_2;
  input while_mul_cmp_8_iswt3_2;
  output while_mul_cmp_8_iden_5;
  output run_cgwt_26;
  output while_mul_cmp_8_bdwt;
  output while_mul_cmp_8_bdwt_2;
  output while_mul_cmp_8_bdwt_4;
  input while_mul_cmp_8_iswt3_2_pff;
  input while_mul_cmp_8_iswt3_1_pff;
  input while_mul_cmp_8_iswt3_pff;


  // Interconnect Declarations
  wire while_mul_cmp_8_ogwt;
  wire while_mul_cmp_8_tiswt3;
  reg while_mul_cmp_8_hile_mul_cmp_8_pdswt2;
  reg while_mul_cmp_8_hile_mul_cmp_8_pdswt1;
  reg while_mul_cmp_8_hile_mul_cmp_8_pdswt0;
  reg [2:0] while_mul_cmp_8_icwt;
  wire [3:0] nl_while_mul_cmp_8_icwt;
  wire while_mul_cmp_8_ogwt_1;
  wire while_mul_cmp_8_tiswt3_1;
  reg while_mul_cmp_8_hile_mul_cmp_8_pdswt2_1;
  reg while_mul_cmp_8_hile_mul_cmp_8_pdswt1_1;
  reg while_mul_cmp_8_hile_mul_cmp_8_pdswt0_1;
  reg [2:0] while_mul_cmp_8_icwt_1;
  wire [3:0] nl_while_mul_cmp_8_icwt_1;
  wire while_mul_cmp_8_ogwt_2;
  wire while_mul_cmp_8_tiswt3_2;
  reg while_mul_cmp_8_hile_mul_cmp_8_pdswt2_2;
  reg while_mul_cmp_8_hile_mul_cmp_8_pdswt1_2;
  reg while_mul_cmp_8_hile_mul_cmp_8_pdswt0_2;
  reg [2:0] while_mul_cmp_8_icwt_2;
  wire [3:0] nl_while_mul_cmp_8_icwt_2;

  wire[2:0] while_acc_142_nl;
  wire[3:0] nl_while_acc_142_nl;
  wire[1:0] while_acc_143_nl;
  wire[2:0] nl_while_acc_143_nl;
  wire[2:0] while_acc_145_nl;
  wire[3:0] nl_while_acc_145_nl;
  wire[1:0] while_acc_146_nl;
  wire[2:0] nl_while_acc_146_nl;
  wire[2:0] while_acc_148_nl;
  wire[3:0] nl_while_acc_148_nl;
  wire[1:0] while_acc_149_nl;
  wire[2:0] nl_while_acc_149_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_cmp_8_bdwt = while_mul_cmp_8_oswt_unreg & run_wen;
  assign while_mul_cmp_8_tiswt3 = (~ run_wten) & while_mul_cmp_8_iswt3;
  assign while_mul_cmp_8_iden_1 = while_mul_cmp_8_ogwt;
  assign while_mul_cmp_8_ogwt = while_mul_cmp_8_hile_mul_cmp_8_pdswt0 | (while_mul_cmp_8_icwt!=3'b000);
  assign while_mul_cmp_8_bdwt_2 = while_mul_cmp_8_oswt_unreg_1 & run_wen;
  assign while_mul_cmp_8_tiswt3_1 = (~ run_wten) & while_mul_cmp_8_iswt3_1;
  assign while_mul_cmp_8_iden_3 = while_mul_cmp_8_ogwt_1;
  assign while_mul_cmp_8_ogwt_1 = while_mul_cmp_8_hile_mul_cmp_8_pdswt0_1 | (while_mul_cmp_8_icwt_1!=3'b000);
  assign while_mul_cmp_8_bdwt_4 = while_mul_cmp_8_oswt_unreg_2 & run_wen;
  assign while_mul_cmp_8_tiswt3_2 = (~ run_wten) & while_mul_cmp_8_iswt3_2;
  assign while_mul_cmp_8_iden_5 = while_mul_cmp_8_ogwt_2;
  assign while_mul_cmp_8_ogwt_2 = while_mul_cmp_8_hile_mul_cmp_8_pdswt0_2 | (while_mul_cmp_8_icwt_2!=3'b000);
  assign run_cgwt_26 = while_mul_cmp_8_ogwt_2 | while_mul_cmp_8_tiswt3_2 | while_mul_cmp_8_hile_mul_cmp_8_pdswt2_2
      | while_mul_cmp_8_hile_mul_cmp_8_pdswt1_2 | while_mul_cmp_8_ogwt_1 | while_mul_cmp_8_tiswt3_1
      | while_mul_cmp_8_hile_mul_cmp_8_pdswt2_1 | while_mul_cmp_8_hile_mul_cmp_8_pdswt1_1
      | while_mul_cmp_8_ogwt | while_mul_cmp_8_tiswt3 | while_mul_cmp_8_hile_mul_cmp_8_pdswt2
      | while_mul_cmp_8_hile_mul_cmp_8_pdswt1 | (run_wen & while_mul_cmp_8_iswt3_2_pff)
      | (run_wen & while_mul_cmp_8_iswt3_1_pff) | (run_wen & while_mul_cmp_8_iswt3_pff);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_8_hile_mul_cmp_8_pdswt2 <= 1'b0;
      while_mul_cmp_8_hile_mul_cmp_8_pdswt1 <= 1'b0;
      while_mul_cmp_8_hile_mul_cmp_8_pdswt0 <= 1'b0;
      while_mul_cmp_8_icwt <= 3'b000;
      while_mul_cmp_8_hile_mul_cmp_8_pdswt2_1 <= 1'b0;
      while_mul_cmp_8_hile_mul_cmp_8_pdswt1_1 <= 1'b0;
      while_mul_cmp_8_hile_mul_cmp_8_pdswt0_1 <= 1'b0;
      while_mul_cmp_8_icwt_1 <= 3'b000;
      while_mul_cmp_8_hile_mul_cmp_8_pdswt2_2 <= 1'b0;
      while_mul_cmp_8_hile_mul_cmp_8_pdswt1_2 <= 1'b0;
      while_mul_cmp_8_hile_mul_cmp_8_pdswt0_2 <= 1'b0;
      while_mul_cmp_8_icwt_2 <= 3'b000;
    end
    else begin
      while_mul_cmp_8_hile_mul_cmp_8_pdswt2 <= while_mul_cmp_8_tiswt3;
      while_mul_cmp_8_hile_mul_cmp_8_pdswt1 <= while_mul_cmp_8_hile_mul_cmp_8_pdswt2;
      while_mul_cmp_8_hile_mul_cmp_8_pdswt0 <= while_mul_cmp_8_hile_mul_cmp_8_pdswt1;
      while_mul_cmp_8_icwt <= nl_while_mul_cmp_8_icwt[2:0];
      while_mul_cmp_8_hile_mul_cmp_8_pdswt2_1 <= while_mul_cmp_8_tiswt3_1;
      while_mul_cmp_8_hile_mul_cmp_8_pdswt1_1 <= while_mul_cmp_8_hile_mul_cmp_8_pdswt2_1;
      while_mul_cmp_8_hile_mul_cmp_8_pdswt0_1 <= while_mul_cmp_8_hile_mul_cmp_8_pdswt1_1;
      while_mul_cmp_8_icwt_1 <= nl_while_mul_cmp_8_icwt_1[2:0];
      while_mul_cmp_8_hile_mul_cmp_8_pdswt2_2 <= while_mul_cmp_8_tiswt3_2;
      while_mul_cmp_8_hile_mul_cmp_8_pdswt1_2 <= while_mul_cmp_8_hile_mul_cmp_8_pdswt2_2;
      while_mul_cmp_8_hile_mul_cmp_8_pdswt0_2 <= while_mul_cmp_8_hile_mul_cmp_8_pdswt1_2;
      while_mul_cmp_8_icwt_2 <= nl_while_mul_cmp_8_icwt_2[2:0];
    end
  end
  assign nl_while_acc_142_nl = while_mul_cmp_8_icwt + 3'b111;
  assign while_acc_142_nl = nl_while_acc_142_nl[2:0];
  assign nl_while_acc_143_nl = conv_u2u_1_2(while_mul_cmp_8_hile_mul_cmp_8_pdswt0)
      + conv_u2u_1_2(~ while_mul_cmp_8_ogwt);
  assign while_acc_143_nl = nl_while_acc_143_nl[1:0];
  assign nl_while_mul_cmp_8_icwt  = while_acc_142_nl + conv_u2u_2_3(while_acc_143_nl);
  assign nl_while_acc_145_nl = while_mul_cmp_8_icwt_1 + 3'b111;
  assign while_acc_145_nl = nl_while_acc_145_nl[2:0];
  assign nl_while_acc_146_nl = conv_u2u_1_2(while_mul_cmp_8_hile_mul_cmp_8_pdswt0_1)
      + conv_u2u_1_2(~ while_mul_cmp_8_ogwt_1);
  assign while_acc_146_nl = nl_while_acc_146_nl[1:0];
  assign nl_while_mul_cmp_8_icwt_1  = while_acc_145_nl + conv_u2u_2_3(while_acc_146_nl);
  assign nl_while_acc_148_nl = while_mul_cmp_8_icwt_2 + 3'b111;
  assign while_acc_148_nl = nl_while_acc_148_nl[2:0];
  assign nl_while_acc_149_nl = conv_u2u_1_2(while_mul_cmp_8_hile_mul_cmp_8_pdswt0_2)
      + conv_u2u_1_2(~ while_mul_cmp_8_ogwt_2);
  assign while_acc_149_nl = nl_while_acc_149_nl[1:0];
  assign nl_while_mul_cmp_8_icwt_2  = while_acc_148_nl + conv_u2u_2_3(while_acc_149_nl);

  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_cmp_7_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_7
// ------------------------------------------------------------------


module Rotate_run_while_mul_cmp_7_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_7
    (
  clk, rst, while_mul_cmp_7_bawt, while_mul_cmp_7_iden, while_mul_cmp_7_iden_2, while_mul_cmp_7_iden_4,
      while_mul_cmp_7_z_mxwt, while_mul_cmp_7_z_mxwt_1, while_mul_cmp_7_z_mxwt_2,
      while_mul_cmp_7_biwt, while_mul_cmp_7_bdwt, while_mul_cmp_7_biwt_2, while_mul_cmp_7_bdwt_2,
      while_mul_cmp_7_biwt_4, while_mul_cmp_7_bdwt_4, while_mul_cmp_7_z
);
  input clk;
  input rst;
  output while_mul_cmp_7_bawt;
  output while_mul_cmp_7_iden;
  output while_mul_cmp_7_iden_2;
  output while_mul_cmp_7_iden_4;
  output [111:0] while_mul_cmp_7_z_mxwt;
  output [111:0] while_mul_cmp_7_z_mxwt_1;
  output [111:0] while_mul_cmp_7_z_mxwt_2;
  input while_mul_cmp_7_biwt;
  input while_mul_cmp_7_bdwt;
  input while_mul_cmp_7_biwt_2;
  input while_mul_cmp_7_bdwt_2;
  input while_mul_cmp_7_biwt_4;
  input while_mul_cmp_7_bdwt_4;
  input [127:0] while_mul_cmp_7_z;


  // Interconnect Declarations
  reg [2:0] while_mul_cmp_7_bcwt;
  wire [3:0] nl_while_mul_cmp_7_bcwt;
  reg [2:0] while_mul_cmp_7_bcwt_1;
  wire [3:0] nl_while_mul_cmp_7_bcwt_1;
  reg [2:0] while_mul_cmp_7_bcwt_2;
  wire [3:0] nl_while_mul_cmp_7_bcwt_2;
  reg [111:0] while_mul_cmp_7_z_bfwt_3_111_0;
  reg [111:0] while_mul_cmp_7_z_bfwt_7_111_0;
  reg [111:0] while_mul_cmp_7_z_bfwt_11_111_0;
  reg [111:0] while_mul_cmp_7_z_bfwt_2_111_0;
  reg [111:0] while_mul_cmp_7_z_bfwt_6_111_0;
  reg [111:0] while_mul_cmp_7_z_bfwt_10_111_0;
  reg [111:0] while_mul_cmp_7_z_bfwt_1_111_0;
  reg [111:0] while_mul_cmp_7_z_bfwt_5_111_0;
  reg [111:0] while_mul_cmp_7_z_bfwt_9_111_0;
  reg [111:0] while_mul_cmp_7_z_bfwt_111_0;
  reg [111:0] while_mul_cmp_7_z_bfwt_4_111_0;
  reg [111:0] while_mul_cmp_7_z_bfwt_8_111_0;

  wire[2:0] while_acc_135_nl;
  wire[3:0] nl_while_acc_135_nl;
  wire[1:0] while_acc_136_nl;
  wire[2:0] nl_while_acc_136_nl;
  wire[2:0] while_acc_138_nl;
  wire[3:0] nl_while_acc_138_nl;
  wire[1:0] while_acc_139_nl;
  wire[2:0] nl_while_acc_139_nl;
  wire[2:0] while_acc_141_nl;
  wire[3:0] nl_while_acc_141_nl;
  wire[1:0] while_acc_142_nl;
  wire[2:0] nl_while_acc_142_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_cmp_7_iden = while_mul_cmp_7_biwt | while_mul_cmp_7_bdwt;
  assign while_mul_cmp_7_bawt = while_mul_cmp_7_biwt | (while_mul_cmp_7_bcwt!=3'b000);
  assign while_mul_cmp_7_iden_2 = while_mul_cmp_7_biwt_2 | while_mul_cmp_7_bdwt_2;
  assign while_mul_cmp_7_iden_4 = while_mul_cmp_7_biwt_4 | while_mul_cmp_7_bdwt_4;
  assign while_mul_cmp_7_z_mxwt = MUX_v_112_5_2((while_mul_cmp_7_z[111:0]), while_mul_cmp_7_z_bfwt_111_0,
      while_mul_cmp_7_z_bfwt_1_111_0, while_mul_cmp_7_z_bfwt_2_111_0, while_mul_cmp_7_z_bfwt_3_111_0,
      while_mul_cmp_7_bcwt_2);
  assign while_mul_cmp_7_z_mxwt_1 = MUX_v_112_5_2((while_mul_cmp_7_z[111:0]), while_mul_cmp_7_z_bfwt_4_111_0,
      while_mul_cmp_7_z_bfwt_5_111_0, while_mul_cmp_7_z_bfwt_6_111_0, while_mul_cmp_7_z_bfwt_7_111_0,
      while_mul_cmp_7_bcwt_1);
  assign while_mul_cmp_7_z_mxwt_2 = MUX_v_112_5_2((while_mul_cmp_7_z[111:0]), while_mul_cmp_7_z_bfwt_8_111_0,
      while_mul_cmp_7_z_bfwt_9_111_0, while_mul_cmp_7_z_bfwt_10_111_0, while_mul_cmp_7_z_bfwt_11_111_0,
      while_mul_cmp_7_bcwt);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_7_bcwt <= 3'b000;
      while_mul_cmp_7_bcwt_1 <= 3'b000;
      while_mul_cmp_7_bcwt_2 <= 3'b000;
    end
    else begin
      while_mul_cmp_7_bcwt <= nl_while_mul_cmp_7_bcwt[2:0];
      while_mul_cmp_7_bcwt_1 <= nl_while_mul_cmp_7_bcwt_1[2:0];
      while_mul_cmp_7_bcwt_2 <= nl_while_mul_cmp_7_bcwt_2[2:0];
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_7_z_bfwt_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_7_z_bfwt_1_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_7_z_bfwt_2_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_7_z_bfwt_3_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_cmp_7_biwt_4 ) begin
      while_mul_cmp_7_z_bfwt_111_0 <= while_mul_cmp_7_z[111:0];
      while_mul_cmp_7_z_bfwt_1_111_0 <= while_mul_cmp_7_z_bfwt_111_0;
      while_mul_cmp_7_z_bfwt_2_111_0 <= while_mul_cmp_7_z_bfwt_1_111_0;
      while_mul_cmp_7_z_bfwt_3_111_0 <= while_mul_cmp_7_z_bfwt_2_111_0;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_7_z_bfwt_4_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_7_z_bfwt_5_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_7_z_bfwt_6_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_7_z_bfwt_7_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_cmp_7_biwt_2 ) begin
      while_mul_cmp_7_z_bfwt_4_111_0 <= while_mul_cmp_7_z[111:0];
      while_mul_cmp_7_z_bfwt_5_111_0 <= while_mul_cmp_7_z_bfwt_4_111_0;
      while_mul_cmp_7_z_bfwt_6_111_0 <= while_mul_cmp_7_z_bfwt_5_111_0;
      while_mul_cmp_7_z_bfwt_7_111_0 <= while_mul_cmp_7_z_bfwt_6_111_0;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_7_z_bfwt_8_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_7_z_bfwt_9_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_7_z_bfwt_10_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_7_z_bfwt_11_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_cmp_7_biwt ) begin
      while_mul_cmp_7_z_bfwt_8_111_0 <= while_mul_cmp_7_z[111:0];
      while_mul_cmp_7_z_bfwt_9_111_0 <= while_mul_cmp_7_z_bfwt_8_111_0;
      while_mul_cmp_7_z_bfwt_10_111_0 <= while_mul_cmp_7_z_bfwt_9_111_0;
      while_mul_cmp_7_z_bfwt_11_111_0 <= while_mul_cmp_7_z_bfwt_10_111_0;
    end
  end
  assign nl_while_acc_135_nl = while_mul_cmp_7_bcwt + 3'b111;
  assign while_acc_135_nl = nl_while_acc_135_nl[2:0];
  assign nl_while_acc_136_nl = conv_u2u_1_2(~ while_mul_cmp_7_bdwt) + conv_u2u_1_2(while_mul_cmp_7_biwt);
  assign while_acc_136_nl = nl_while_acc_136_nl[1:0];
  assign nl_while_mul_cmp_7_bcwt  = while_acc_135_nl + conv_u2u_2_3(while_acc_136_nl);
  assign nl_while_acc_138_nl = while_mul_cmp_7_bcwt_1 + 3'b111;
  assign while_acc_138_nl = nl_while_acc_138_nl[2:0];
  assign nl_while_acc_139_nl = conv_u2u_1_2(~ while_mul_cmp_7_bdwt_2) + conv_u2u_1_2(while_mul_cmp_7_biwt_2);
  assign while_acc_139_nl = nl_while_acc_139_nl[1:0];
  assign nl_while_mul_cmp_7_bcwt_1  = while_acc_138_nl + conv_u2u_2_3(while_acc_139_nl);
  assign nl_while_acc_141_nl = while_mul_cmp_7_bcwt_2 + 3'b111;
  assign while_acc_141_nl = nl_while_acc_141_nl[2:0];
  assign nl_while_acc_142_nl = conv_u2u_1_2(~ while_mul_cmp_7_bdwt_4) + conv_u2u_1_2(while_mul_cmp_7_biwt_4);
  assign while_acc_142_nl = nl_while_acc_142_nl[1:0];
  assign nl_while_mul_cmp_7_bcwt_2  = while_acc_141_nl + conv_u2u_2_3(while_acc_142_nl);

  function automatic [111:0] MUX_v_112_5_2;
    input [111:0] input_0;
    input [111:0] input_1;
    input [111:0] input_2;
    input [111:0] input_3;
    input [111:0] input_4;
    input [2:0] sel;
    reg [111:0] result;
  begin
    case (sel)
      3'b000 : begin
        result = input_0;
      end
      3'b001 : begin
        result = input_1;
      end
      3'b010 : begin
        result = input_2;
      end
      3'b011 : begin
        result = input_3;
      end
      default : begin
        result = input_4;
      end
    endcase
    MUX_v_112_5_2 = result;
  end
  endfunction


  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_cmp_7_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_7
// ------------------------------------------------------------------


module Rotate_run_while_mul_cmp_7_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_7
    (
  clk, rst, run_wen, run_wten, while_mul_cmp_7_oswt_unreg, while_mul_cmp_7_iswt3,
      while_mul_cmp_7_iden_1, while_mul_cmp_7_oswt_unreg_1, while_mul_cmp_7_iswt3_1,
      while_mul_cmp_7_iden_3, while_mul_cmp_7_oswt_unreg_2, while_mul_cmp_7_iswt3_2,
      while_mul_cmp_7_iden_5, run_cgwt_25, while_mul_cmp_7_bdwt, while_mul_cmp_7_bdwt_2,
      while_mul_cmp_7_bdwt_4, while_mul_cmp_7_iswt3_2_pff, while_mul_cmp_7_iswt3_1_pff,
      while_mul_cmp_7_iswt3_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_cmp_7_oswt_unreg;
  input while_mul_cmp_7_iswt3;
  output while_mul_cmp_7_iden_1;
  input while_mul_cmp_7_oswt_unreg_1;
  input while_mul_cmp_7_iswt3_1;
  output while_mul_cmp_7_iden_3;
  input while_mul_cmp_7_oswt_unreg_2;
  input while_mul_cmp_7_iswt3_2;
  output while_mul_cmp_7_iden_5;
  output run_cgwt_25;
  output while_mul_cmp_7_bdwt;
  output while_mul_cmp_7_bdwt_2;
  output while_mul_cmp_7_bdwt_4;
  input while_mul_cmp_7_iswt3_2_pff;
  input while_mul_cmp_7_iswt3_1_pff;
  input while_mul_cmp_7_iswt3_pff;


  // Interconnect Declarations
  wire while_mul_cmp_7_ogwt;
  wire while_mul_cmp_7_tiswt3;
  reg while_mul_cmp_7_hile_mul_cmp_7_pdswt2;
  reg while_mul_cmp_7_hile_mul_cmp_7_pdswt1;
  reg while_mul_cmp_7_hile_mul_cmp_7_pdswt0;
  reg [2:0] while_mul_cmp_7_icwt;
  wire [3:0] nl_while_mul_cmp_7_icwt;
  wire while_mul_cmp_7_ogwt_1;
  wire while_mul_cmp_7_tiswt3_1;
  reg while_mul_cmp_7_hile_mul_cmp_7_pdswt2_1;
  reg while_mul_cmp_7_hile_mul_cmp_7_pdswt1_1;
  reg while_mul_cmp_7_hile_mul_cmp_7_pdswt0_1;
  reg [2:0] while_mul_cmp_7_icwt_1;
  wire [3:0] nl_while_mul_cmp_7_icwt_1;
  wire while_mul_cmp_7_ogwt_2;
  wire while_mul_cmp_7_tiswt3_2;
  reg while_mul_cmp_7_hile_mul_cmp_7_pdswt2_2;
  reg while_mul_cmp_7_hile_mul_cmp_7_pdswt1_2;
  reg while_mul_cmp_7_hile_mul_cmp_7_pdswt0_2;
  reg [2:0] while_mul_cmp_7_icwt_2;
  wire [3:0] nl_while_mul_cmp_7_icwt_2;

  wire[2:0] while_acc_136_nl;
  wire[3:0] nl_while_acc_136_nl;
  wire[1:0] while_acc_137_nl;
  wire[2:0] nl_while_acc_137_nl;
  wire[2:0] while_acc_139_nl;
  wire[3:0] nl_while_acc_139_nl;
  wire[1:0] while_acc_140_nl;
  wire[2:0] nl_while_acc_140_nl;
  wire[2:0] while_acc_142_nl;
  wire[3:0] nl_while_acc_142_nl;
  wire[1:0] while_acc_143_nl;
  wire[2:0] nl_while_acc_143_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_cmp_7_bdwt = while_mul_cmp_7_oswt_unreg & run_wen;
  assign while_mul_cmp_7_tiswt3 = (~ run_wten) & while_mul_cmp_7_iswt3;
  assign while_mul_cmp_7_iden_1 = while_mul_cmp_7_ogwt;
  assign while_mul_cmp_7_ogwt = while_mul_cmp_7_hile_mul_cmp_7_pdswt0 | (while_mul_cmp_7_icwt!=3'b000);
  assign while_mul_cmp_7_bdwt_2 = while_mul_cmp_7_oswt_unreg_1 & run_wen;
  assign while_mul_cmp_7_tiswt3_1 = (~ run_wten) & while_mul_cmp_7_iswt3_1;
  assign while_mul_cmp_7_iden_3 = while_mul_cmp_7_ogwt_1;
  assign while_mul_cmp_7_ogwt_1 = while_mul_cmp_7_hile_mul_cmp_7_pdswt0_1 | (while_mul_cmp_7_icwt_1!=3'b000);
  assign while_mul_cmp_7_bdwt_4 = while_mul_cmp_7_oswt_unreg_2 & run_wen;
  assign while_mul_cmp_7_tiswt3_2 = (~ run_wten) & while_mul_cmp_7_iswt3_2;
  assign while_mul_cmp_7_iden_5 = while_mul_cmp_7_ogwt_2;
  assign while_mul_cmp_7_ogwt_2 = while_mul_cmp_7_hile_mul_cmp_7_pdswt0_2 | (while_mul_cmp_7_icwt_2!=3'b000);
  assign run_cgwt_25 = while_mul_cmp_7_ogwt_2 | while_mul_cmp_7_tiswt3_2 | while_mul_cmp_7_hile_mul_cmp_7_pdswt2_2
      | while_mul_cmp_7_hile_mul_cmp_7_pdswt1_2 | while_mul_cmp_7_ogwt_1 | while_mul_cmp_7_tiswt3_1
      | while_mul_cmp_7_hile_mul_cmp_7_pdswt2_1 | while_mul_cmp_7_hile_mul_cmp_7_pdswt1_1
      | while_mul_cmp_7_ogwt | while_mul_cmp_7_tiswt3 | while_mul_cmp_7_hile_mul_cmp_7_pdswt2
      | while_mul_cmp_7_hile_mul_cmp_7_pdswt1 | (run_wen & while_mul_cmp_7_iswt3_2_pff)
      | (run_wen & while_mul_cmp_7_iswt3_1_pff) | (run_wen & while_mul_cmp_7_iswt3_pff);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_7_hile_mul_cmp_7_pdswt2 <= 1'b0;
      while_mul_cmp_7_hile_mul_cmp_7_pdswt1 <= 1'b0;
      while_mul_cmp_7_hile_mul_cmp_7_pdswt0 <= 1'b0;
      while_mul_cmp_7_icwt <= 3'b000;
      while_mul_cmp_7_hile_mul_cmp_7_pdswt2_1 <= 1'b0;
      while_mul_cmp_7_hile_mul_cmp_7_pdswt1_1 <= 1'b0;
      while_mul_cmp_7_hile_mul_cmp_7_pdswt0_1 <= 1'b0;
      while_mul_cmp_7_icwt_1 <= 3'b000;
      while_mul_cmp_7_hile_mul_cmp_7_pdswt2_2 <= 1'b0;
      while_mul_cmp_7_hile_mul_cmp_7_pdswt1_2 <= 1'b0;
      while_mul_cmp_7_hile_mul_cmp_7_pdswt0_2 <= 1'b0;
      while_mul_cmp_7_icwt_2 <= 3'b000;
    end
    else begin
      while_mul_cmp_7_hile_mul_cmp_7_pdswt2 <= while_mul_cmp_7_tiswt3;
      while_mul_cmp_7_hile_mul_cmp_7_pdswt1 <= while_mul_cmp_7_hile_mul_cmp_7_pdswt2;
      while_mul_cmp_7_hile_mul_cmp_7_pdswt0 <= while_mul_cmp_7_hile_mul_cmp_7_pdswt1;
      while_mul_cmp_7_icwt <= nl_while_mul_cmp_7_icwt[2:0];
      while_mul_cmp_7_hile_mul_cmp_7_pdswt2_1 <= while_mul_cmp_7_tiswt3_1;
      while_mul_cmp_7_hile_mul_cmp_7_pdswt1_1 <= while_mul_cmp_7_hile_mul_cmp_7_pdswt2_1;
      while_mul_cmp_7_hile_mul_cmp_7_pdswt0_1 <= while_mul_cmp_7_hile_mul_cmp_7_pdswt1_1;
      while_mul_cmp_7_icwt_1 <= nl_while_mul_cmp_7_icwt_1[2:0];
      while_mul_cmp_7_hile_mul_cmp_7_pdswt2_2 <= while_mul_cmp_7_tiswt3_2;
      while_mul_cmp_7_hile_mul_cmp_7_pdswt1_2 <= while_mul_cmp_7_hile_mul_cmp_7_pdswt2_2;
      while_mul_cmp_7_hile_mul_cmp_7_pdswt0_2 <= while_mul_cmp_7_hile_mul_cmp_7_pdswt1_2;
      while_mul_cmp_7_icwt_2 <= nl_while_mul_cmp_7_icwt_2[2:0];
    end
  end
  assign nl_while_acc_136_nl = while_mul_cmp_7_icwt + 3'b111;
  assign while_acc_136_nl = nl_while_acc_136_nl[2:0];
  assign nl_while_acc_137_nl = conv_u2u_1_2(while_mul_cmp_7_hile_mul_cmp_7_pdswt0)
      + conv_u2u_1_2(~ while_mul_cmp_7_ogwt);
  assign while_acc_137_nl = nl_while_acc_137_nl[1:0];
  assign nl_while_mul_cmp_7_icwt  = while_acc_136_nl + conv_u2u_2_3(while_acc_137_nl);
  assign nl_while_acc_139_nl = while_mul_cmp_7_icwt_1 + 3'b111;
  assign while_acc_139_nl = nl_while_acc_139_nl[2:0];
  assign nl_while_acc_140_nl = conv_u2u_1_2(while_mul_cmp_7_hile_mul_cmp_7_pdswt0_1)
      + conv_u2u_1_2(~ while_mul_cmp_7_ogwt_1);
  assign while_acc_140_nl = nl_while_acc_140_nl[1:0];
  assign nl_while_mul_cmp_7_icwt_1  = while_acc_139_nl + conv_u2u_2_3(while_acc_140_nl);
  assign nl_while_acc_142_nl = while_mul_cmp_7_icwt_2 + 3'b111;
  assign while_acc_142_nl = nl_while_acc_142_nl[2:0];
  assign nl_while_acc_143_nl = conv_u2u_1_2(while_mul_cmp_7_hile_mul_cmp_7_pdswt0_2)
      + conv_u2u_1_2(~ while_mul_cmp_7_ogwt_2);
  assign while_acc_143_nl = nl_while_acc_143_nl[1:0];
  assign nl_while_mul_cmp_7_icwt_2  = while_acc_142_nl + conv_u2u_2_3(while_acc_143_nl);

  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_cmp_6_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_6
// ------------------------------------------------------------------


module Rotate_run_while_mul_cmp_6_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_6
    (
  clk, rst, while_mul_cmp_6_bawt, while_mul_cmp_6_iden, while_mul_cmp_6_iden_2, while_mul_cmp_6_iden_4,
      while_mul_cmp_6_z_mxwt, while_mul_cmp_6_z_mxwt_1, while_mul_cmp_6_z_mxwt_2,
      while_mul_cmp_6_biwt, while_mul_cmp_6_bdwt, while_mul_cmp_6_biwt_2, while_mul_cmp_6_bdwt_2,
      while_mul_cmp_6_biwt_4, while_mul_cmp_6_bdwt_4, while_mul_cmp_6_z
);
  input clk;
  input rst;
  output while_mul_cmp_6_bawt;
  output while_mul_cmp_6_iden;
  output while_mul_cmp_6_iden_2;
  output while_mul_cmp_6_iden_4;
  output [111:0] while_mul_cmp_6_z_mxwt;
  output [111:0] while_mul_cmp_6_z_mxwt_1;
  output [111:0] while_mul_cmp_6_z_mxwt_2;
  input while_mul_cmp_6_biwt;
  input while_mul_cmp_6_bdwt;
  input while_mul_cmp_6_biwt_2;
  input while_mul_cmp_6_bdwt_2;
  input while_mul_cmp_6_biwt_4;
  input while_mul_cmp_6_bdwt_4;
  input [127:0] while_mul_cmp_6_z;


  // Interconnect Declarations
  reg [2:0] while_mul_cmp_6_bcwt;
  wire [3:0] nl_while_mul_cmp_6_bcwt;
  reg [2:0] while_mul_cmp_6_bcwt_1;
  wire [3:0] nl_while_mul_cmp_6_bcwt_1;
  reg [2:0] while_mul_cmp_6_bcwt_2;
  wire [3:0] nl_while_mul_cmp_6_bcwt_2;
  reg [111:0] while_mul_cmp_6_z_bfwt_3_111_0;
  reg [111:0] while_mul_cmp_6_z_bfwt_7_111_0;
  reg [111:0] while_mul_cmp_6_z_bfwt_11_111_0;
  reg [111:0] while_mul_cmp_6_z_bfwt_2_111_0;
  reg [111:0] while_mul_cmp_6_z_bfwt_6_111_0;
  reg [111:0] while_mul_cmp_6_z_bfwt_10_111_0;
  reg [111:0] while_mul_cmp_6_z_bfwt_1_111_0;
  reg [111:0] while_mul_cmp_6_z_bfwt_5_111_0;
  reg [111:0] while_mul_cmp_6_z_bfwt_9_111_0;
  reg [111:0] while_mul_cmp_6_z_bfwt_111_0;
  reg [111:0] while_mul_cmp_6_z_bfwt_4_111_0;
  reg [111:0] while_mul_cmp_6_z_bfwt_8_111_0;

  wire[2:0] while_acc_129_nl;
  wire[3:0] nl_while_acc_129_nl;
  wire[1:0] while_acc_130_nl;
  wire[2:0] nl_while_acc_130_nl;
  wire[2:0] while_acc_132_nl;
  wire[3:0] nl_while_acc_132_nl;
  wire[1:0] while_acc_133_nl;
  wire[2:0] nl_while_acc_133_nl;
  wire[2:0] while_acc_135_nl;
  wire[3:0] nl_while_acc_135_nl;
  wire[1:0] while_acc_136_nl;
  wire[2:0] nl_while_acc_136_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_cmp_6_iden = while_mul_cmp_6_biwt | while_mul_cmp_6_bdwt;
  assign while_mul_cmp_6_bawt = while_mul_cmp_6_biwt | (while_mul_cmp_6_bcwt!=3'b000);
  assign while_mul_cmp_6_iden_2 = while_mul_cmp_6_biwt_2 | while_mul_cmp_6_bdwt_2;
  assign while_mul_cmp_6_iden_4 = while_mul_cmp_6_biwt_4 | while_mul_cmp_6_bdwt_4;
  assign while_mul_cmp_6_z_mxwt = MUX_v_112_5_2((while_mul_cmp_6_z[111:0]), while_mul_cmp_6_z_bfwt_111_0,
      while_mul_cmp_6_z_bfwt_1_111_0, while_mul_cmp_6_z_bfwt_2_111_0, while_mul_cmp_6_z_bfwt_3_111_0,
      while_mul_cmp_6_bcwt_2);
  assign while_mul_cmp_6_z_mxwt_1 = MUX_v_112_5_2((while_mul_cmp_6_z[111:0]), while_mul_cmp_6_z_bfwt_4_111_0,
      while_mul_cmp_6_z_bfwt_5_111_0, while_mul_cmp_6_z_bfwt_6_111_0, while_mul_cmp_6_z_bfwt_7_111_0,
      while_mul_cmp_6_bcwt_1);
  assign while_mul_cmp_6_z_mxwt_2 = MUX_v_112_5_2((while_mul_cmp_6_z[111:0]), while_mul_cmp_6_z_bfwt_8_111_0,
      while_mul_cmp_6_z_bfwt_9_111_0, while_mul_cmp_6_z_bfwt_10_111_0, while_mul_cmp_6_z_bfwt_11_111_0,
      while_mul_cmp_6_bcwt);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_6_bcwt <= 3'b000;
      while_mul_cmp_6_bcwt_1 <= 3'b000;
      while_mul_cmp_6_bcwt_2 <= 3'b000;
    end
    else begin
      while_mul_cmp_6_bcwt <= nl_while_mul_cmp_6_bcwt[2:0];
      while_mul_cmp_6_bcwt_1 <= nl_while_mul_cmp_6_bcwt_1[2:0];
      while_mul_cmp_6_bcwt_2 <= nl_while_mul_cmp_6_bcwt_2[2:0];
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_6_z_bfwt_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_6_z_bfwt_1_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_6_z_bfwt_2_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_6_z_bfwt_3_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_cmp_6_biwt_4 ) begin
      while_mul_cmp_6_z_bfwt_111_0 <= while_mul_cmp_6_z[111:0];
      while_mul_cmp_6_z_bfwt_1_111_0 <= while_mul_cmp_6_z_bfwt_111_0;
      while_mul_cmp_6_z_bfwt_2_111_0 <= while_mul_cmp_6_z_bfwt_1_111_0;
      while_mul_cmp_6_z_bfwt_3_111_0 <= while_mul_cmp_6_z_bfwt_2_111_0;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_6_z_bfwt_4_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_6_z_bfwt_5_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_6_z_bfwt_6_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_6_z_bfwt_7_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_cmp_6_biwt_2 ) begin
      while_mul_cmp_6_z_bfwt_4_111_0 <= while_mul_cmp_6_z[111:0];
      while_mul_cmp_6_z_bfwt_5_111_0 <= while_mul_cmp_6_z_bfwt_4_111_0;
      while_mul_cmp_6_z_bfwt_6_111_0 <= while_mul_cmp_6_z_bfwt_5_111_0;
      while_mul_cmp_6_z_bfwt_7_111_0 <= while_mul_cmp_6_z_bfwt_6_111_0;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_6_z_bfwt_8_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_6_z_bfwt_9_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_6_z_bfwt_10_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_6_z_bfwt_11_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_cmp_6_biwt ) begin
      while_mul_cmp_6_z_bfwt_8_111_0 <= while_mul_cmp_6_z[111:0];
      while_mul_cmp_6_z_bfwt_9_111_0 <= while_mul_cmp_6_z_bfwt_8_111_0;
      while_mul_cmp_6_z_bfwt_10_111_0 <= while_mul_cmp_6_z_bfwt_9_111_0;
      while_mul_cmp_6_z_bfwt_11_111_0 <= while_mul_cmp_6_z_bfwt_10_111_0;
    end
  end
  assign nl_while_acc_129_nl = while_mul_cmp_6_bcwt + 3'b111;
  assign while_acc_129_nl = nl_while_acc_129_nl[2:0];
  assign nl_while_acc_130_nl = conv_u2u_1_2(~ while_mul_cmp_6_bdwt) + conv_u2u_1_2(while_mul_cmp_6_biwt);
  assign while_acc_130_nl = nl_while_acc_130_nl[1:0];
  assign nl_while_mul_cmp_6_bcwt  = while_acc_129_nl + conv_u2u_2_3(while_acc_130_nl);
  assign nl_while_acc_132_nl = while_mul_cmp_6_bcwt_1 + 3'b111;
  assign while_acc_132_nl = nl_while_acc_132_nl[2:0];
  assign nl_while_acc_133_nl = conv_u2u_1_2(~ while_mul_cmp_6_bdwt_2) + conv_u2u_1_2(while_mul_cmp_6_biwt_2);
  assign while_acc_133_nl = nl_while_acc_133_nl[1:0];
  assign nl_while_mul_cmp_6_bcwt_1  = while_acc_132_nl + conv_u2u_2_3(while_acc_133_nl);
  assign nl_while_acc_135_nl = while_mul_cmp_6_bcwt_2 + 3'b111;
  assign while_acc_135_nl = nl_while_acc_135_nl[2:0];
  assign nl_while_acc_136_nl = conv_u2u_1_2(~ while_mul_cmp_6_bdwt_4) + conv_u2u_1_2(while_mul_cmp_6_biwt_4);
  assign while_acc_136_nl = nl_while_acc_136_nl[1:0];
  assign nl_while_mul_cmp_6_bcwt_2  = while_acc_135_nl + conv_u2u_2_3(while_acc_136_nl);

  function automatic [111:0] MUX_v_112_5_2;
    input [111:0] input_0;
    input [111:0] input_1;
    input [111:0] input_2;
    input [111:0] input_3;
    input [111:0] input_4;
    input [2:0] sel;
    reg [111:0] result;
  begin
    case (sel)
      3'b000 : begin
        result = input_0;
      end
      3'b001 : begin
        result = input_1;
      end
      3'b010 : begin
        result = input_2;
      end
      3'b011 : begin
        result = input_3;
      end
      default : begin
        result = input_4;
      end
    endcase
    MUX_v_112_5_2 = result;
  end
  endfunction


  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_cmp_6_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_6
// ------------------------------------------------------------------


module Rotate_run_while_mul_cmp_6_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_6
    (
  clk, rst, run_wen, run_wten, while_mul_cmp_6_oswt_unreg, while_mul_cmp_6_iswt3,
      while_mul_cmp_6_iden_1, while_mul_cmp_6_oswt_unreg_1, while_mul_cmp_6_iswt3_1,
      while_mul_cmp_6_iden_3, while_mul_cmp_6_oswt_unreg_2, while_mul_cmp_6_iswt3_2,
      while_mul_cmp_6_iden_5, run_cgwt_24, while_mul_cmp_6_bdwt, while_mul_cmp_6_bdwt_2,
      while_mul_cmp_6_bdwt_4, while_mul_cmp_6_iswt3_2_pff, while_mul_cmp_6_iswt3_1_pff,
      while_mul_cmp_6_iswt3_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_cmp_6_oswt_unreg;
  input while_mul_cmp_6_iswt3;
  output while_mul_cmp_6_iden_1;
  input while_mul_cmp_6_oswt_unreg_1;
  input while_mul_cmp_6_iswt3_1;
  output while_mul_cmp_6_iden_3;
  input while_mul_cmp_6_oswt_unreg_2;
  input while_mul_cmp_6_iswt3_2;
  output while_mul_cmp_6_iden_5;
  output run_cgwt_24;
  output while_mul_cmp_6_bdwt;
  output while_mul_cmp_6_bdwt_2;
  output while_mul_cmp_6_bdwt_4;
  input while_mul_cmp_6_iswt3_2_pff;
  input while_mul_cmp_6_iswt3_1_pff;
  input while_mul_cmp_6_iswt3_pff;


  // Interconnect Declarations
  wire while_mul_cmp_6_ogwt;
  wire while_mul_cmp_6_tiswt3;
  reg while_mul_cmp_6_hile_mul_cmp_6_pdswt2;
  reg while_mul_cmp_6_hile_mul_cmp_6_pdswt1;
  reg while_mul_cmp_6_hile_mul_cmp_6_pdswt0;
  reg [2:0] while_mul_cmp_6_icwt;
  wire [3:0] nl_while_mul_cmp_6_icwt;
  wire while_mul_cmp_6_ogwt_1;
  wire while_mul_cmp_6_tiswt3_1;
  reg while_mul_cmp_6_hile_mul_cmp_6_pdswt2_1;
  reg while_mul_cmp_6_hile_mul_cmp_6_pdswt1_1;
  reg while_mul_cmp_6_hile_mul_cmp_6_pdswt0_1;
  reg [2:0] while_mul_cmp_6_icwt_1;
  wire [3:0] nl_while_mul_cmp_6_icwt_1;
  wire while_mul_cmp_6_ogwt_2;
  wire while_mul_cmp_6_tiswt3_2;
  reg while_mul_cmp_6_hile_mul_cmp_6_pdswt2_2;
  reg while_mul_cmp_6_hile_mul_cmp_6_pdswt1_2;
  reg while_mul_cmp_6_hile_mul_cmp_6_pdswt0_2;
  reg [2:0] while_mul_cmp_6_icwt_2;
  wire [3:0] nl_while_mul_cmp_6_icwt_2;

  wire[2:0] while_acc_130_nl;
  wire[3:0] nl_while_acc_130_nl;
  wire[1:0] while_acc_131_nl;
  wire[2:0] nl_while_acc_131_nl;
  wire[2:0] while_acc_133_nl;
  wire[3:0] nl_while_acc_133_nl;
  wire[1:0] while_acc_134_nl;
  wire[2:0] nl_while_acc_134_nl;
  wire[2:0] while_acc_136_nl;
  wire[3:0] nl_while_acc_136_nl;
  wire[1:0] while_acc_137_nl;
  wire[2:0] nl_while_acc_137_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_cmp_6_bdwt = while_mul_cmp_6_oswt_unreg & run_wen;
  assign while_mul_cmp_6_tiswt3 = (~ run_wten) & while_mul_cmp_6_iswt3;
  assign while_mul_cmp_6_iden_1 = while_mul_cmp_6_ogwt;
  assign while_mul_cmp_6_ogwt = while_mul_cmp_6_hile_mul_cmp_6_pdswt0 | (while_mul_cmp_6_icwt!=3'b000);
  assign while_mul_cmp_6_bdwt_2 = while_mul_cmp_6_oswt_unreg_1 & run_wen;
  assign while_mul_cmp_6_tiswt3_1 = (~ run_wten) & while_mul_cmp_6_iswt3_1;
  assign while_mul_cmp_6_iden_3 = while_mul_cmp_6_ogwt_1;
  assign while_mul_cmp_6_ogwt_1 = while_mul_cmp_6_hile_mul_cmp_6_pdswt0_1 | (while_mul_cmp_6_icwt_1!=3'b000);
  assign while_mul_cmp_6_bdwt_4 = while_mul_cmp_6_oswt_unreg_2 & run_wen;
  assign while_mul_cmp_6_tiswt3_2 = (~ run_wten) & while_mul_cmp_6_iswt3_2;
  assign while_mul_cmp_6_iden_5 = while_mul_cmp_6_ogwt_2;
  assign while_mul_cmp_6_ogwt_2 = while_mul_cmp_6_hile_mul_cmp_6_pdswt0_2 | (while_mul_cmp_6_icwt_2!=3'b000);
  assign run_cgwt_24 = while_mul_cmp_6_ogwt_2 | while_mul_cmp_6_tiswt3_2 | while_mul_cmp_6_hile_mul_cmp_6_pdswt2_2
      | while_mul_cmp_6_hile_mul_cmp_6_pdswt1_2 | while_mul_cmp_6_ogwt_1 | while_mul_cmp_6_tiswt3_1
      | while_mul_cmp_6_hile_mul_cmp_6_pdswt2_1 | while_mul_cmp_6_hile_mul_cmp_6_pdswt1_1
      | while_mul_cmp_6_ogwt | while_mul_cmp_6_tiswt3 | while_mul_cmp_6_hile_mul_cmp_6_pdswt2
      | while_mul_cmp_6_hile_mul_cmp_6_pdswt1 | (run_wen & while_mul_cmp_6_iswt3_2_pff)
      | (run_wen & while_mul_cmp_6_iswt3_1_pff) | (run_wen & while_mul_cmp_6_iswt3_pff);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_6_hile_mul_cmp_6_pdswt2 <= 1'b0;
      while_mul_cmp_6_hile_mul_cmp_6_pdswt1 <= 1'b0;
      while_mul_cmp_6_hile_mul_cmp_6_pdswt0 <= 1'b0;
      while_mul_cmp_6_icwt <= 3'b000;
      while_mul_cmp_6_hile_mul_cmp_6_pdswt2_1 <= 1'b0;
      while_mul_cmp_6_hile_mul_cmp_6_pdswt1_1 <= 1'b0;
      while_mul_cmp_6_hile_mul_cmp_6_pdswt0_1 <= 1'b0;
      while_mul_cmp_6_icwt_1 <= 3'b000;
      while_mul_cmp_6_hile_mul_cmp_6_pdswt2_2 <= 1'b0;
      while_mul_cmp_6_hile_mul_cmp_6_pdswt1_2 <= 1'b0;
      while_mul_cmp_6_hile_mul_cmp_6_pdswt0_2 <= 1'b0;
      while_mul_cmp_6_icwt_2 <= 3'b000;
    end
    else begin
      while_mul_cmp_6_hile_mul_cmp_6_pdswt2 <= while_mul_cmp_6_tiswt3;
      while_mul_cmp_6_hile_mul_cmp_6_pdswt1 <= while_mul_cmp_6_hile_mul_cmp_6_pdswt2;
      while_mul_cmp_6_hile_mul_cmp_6_pdswt0 <= while_mul_cmp_6_hile_mul_cmp_6_pdswt1;
      while_mul_cmp_6_icwt <= nl_while_mul_cmp_6_icwt[2:0];
      while_mul_cmp_6_hile_mul_cmp_6_pdswt2_1 <= while_mul_cmp_6_tiswt3_1;
      while_mul_cmp_6_hile_mul_cmp_6_pdswt1_1 <= while_mul_cmp_6_hile_mul_cmp_6_pdswt2_1;
      while_mul_cmp_6_hile_mul_cmp_6_pdswt0_1 <= while_mul_cmp_6_hile_mul_cmp_6_pdswt1_1;
      while_mul_cmp_6_icwt_1 <= nl_while_mul_cmp_6_icwt_1[2:0];
      while_mul_cmp_6_hile_mul_cmp_6_pdswt2_2 <= while_mul_cmp_6_tiswt3_2;
      while_mul_cmp_6_hile_mul_cmp_6_pdswt1_2 <= while_mul_cmp_6_hile_mul_cmp_6_pdswt2_2;
      while_mul_cmp_6_hile_mul_cmp_6_pdswt0_2 <= while_mul_cmp_6_hile_mul_cmp_6_pdswt1_2;
      while_mul_cmp_6_icwt_2 <= nl_while_mul_cmp_6_icwt_2[2:0];
    end
  end
  assign nl_while_acc_130_nl = while_mul_cmp_6_icwt + 3'b111;
  assign while_acc_130_nl = nl_while_acc_130_nl[2:0];
  assign nl_while_acc_131_nl = conv_u2u_1_2(while_mul_cmp_6_hile_mul_cmp_6_pdswt0)
      + conv_u2u_1_2(~ while_mul_cmp_6_ogwt);
  assign while_acc_131_nl = nl_while_acc_131_nl[1:0];
  assign nl_while_mul_cmp_6_icwt  = while_acc_130_nl + conv_u2u_2_3(while_acc_131_nl);
  assign nl_while_acc_133_nl = while_mul_cmp_6_icwt_1 + 3'b111;
  assign while_acc_133_nl = nl_while_acc_133_nl[2:0];
  assign nl_while_acc_134_nl = conv_u2u_1_2(while_mul_cmp_6_hile_mul_cmp_6_pdswt0_1)
      + conv_u2u_1_2(~ while_mul_cmp_6_ogwt_1);
  assign while_acc_134_nl = nl_while_acc_134_nl[1:0];
  assign nl_while_mul_cmp_6_icwt_1  = while_acc_133_nl + conv_u2u_2_3(while_acc_134_nl);
  assign nl_while_acc_136_nl = while_mul_cmp_6_icwt_2 + 3'b111;
  assign while_acc_136_nl = nl_while_acc_136_nl[2:0];
  assign nl_while_acc_137_nl = conv_u2u_1_2(while_mul_cmp_6_hile_mul_cmp_6_pdswt0_2)
      + conv_u2u_1_2(~ while_mul_cmp_6_ogwt_2);
  assign while_acc_137_nl = nl_while_acc_137_nl[1:0];
  assign nl_while_mul_cmp_6_icwt_2  = while_acc_136_nl + conv_u2u_2_3(while_acc_137_nl);

  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_cmp_5_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_5
// ------------------------------------------------------------------


module Rotate_run_while_mul_cmp_5_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_5
    (
  clk, rst, while_mul_cmp_5_bawt, while_mul_cmp_5_iden, while_mul_cmp_5_iden_2, while_mul_cmp_5_iden_4,
      while_mul_cmp_5_z_mxwt, while_mul_cmp_5_z_mxwt_1, while_mul_cmp_5_z_mxwt_2,
      while_mul_cmp_5_biwt, while_mul_cmp_5_bdwt, while_mul_cmp_5_biwt_2, while_mul_cmp_5_bdwt_2,
      while_mul_cmp_5_biwt_4, while_mul_cmp_5_bdwt_4, while_mul_cmp_5_z
);
  input clk;
  input rst;
  output while_mul_cmp_5_bawt;
  output while_mul_cmp_5_iden;
  output while_mul_cmp_5_iden_2;
  output while_mul_cmp_5_iden_4;
  output [111:0] while_mul_cmp_5_z_mxwt;
  output [111:0] while_mul_cmp_5_z_mxwt_1;
  output [111:0] while_mul_cmp_5_z_mxwt_2;
  input while_mul_cmp_5_biwt;
  input while_mul_cmp_5_bdwt;
  input while_mul_cmp_5_biwt_2;
  input while_mul_cmp_5_bdwt_2;
  input while_mul_cmp_5_biwt_4;
  input while_mul_cmp_5_bdwt_4;
  input [127:0] while_mul_cmp_5_z;


  // Interconnect Declarations
  reg [2:0] while_mul_cmp_5_bcwt;
  wire [3:0] nl_while_mul_cmp_5_bcwt;
  reg [2:0] while_mul_cmp_5_bcwt_1;
  wire [3:0] nl_while_mul_cmp_5_bcwt_1;
  reg [2:0] while_mul_cmp_5_bcwt_2;
  wire [3:0] nl_while_mul_cmp_5_bcwt_2;
  reg [111:0] while_mul_cmp_5_z_bfwt_3_111_0;
  reg [111:0] while_mul_cmp_5_z_bfwt_7_111_0;
  reg [111:0] while_mul_cmp_5_z_bfwt_11_111_0;
  reg [111:0] while_mul_cmp_5_z_bfwt_2_111_0;
  reg [111:0] while_mul_cmp_5_z_bfwt_6_111_0;
  reg [111:0] while_mul_cmp_5_z_bfwt_10_111_0;
  reg [111:0] while_mul_cmp_5_z_bfwt_1_111_0;
  reg [111:0] while_mul_cmp_5_z_bfwt_5_111_0;
  reg [111:0] while_mul_cmp_5_z_bfwt_9_111_0;
  reg [111:0] while_mul_cmp_5_z_bfwt_111_0;
  reg [111:0] while_mul_cmp_5_z_bfwt_4_111_0;
  reg [111:0] while_mul_cmp_5_z_bfwt_8_111_0;

  wire[2:0] while_acc_123_nl;
  wire[3:0] nl_while_acc_123_nl;
  wire[1:0] while_acc_124_nl;
  wire[2:0] nl_while_acc_124_nl;
  wire[2:0] while_acc_126_nl;
  wire[3:0] nl_while_acc_126_nl;
  wire[1:0] while_acc_127_nl;
  wire[2:0] nl_while_acc_127_nl;
  wire[2:0] while_acc_129_nl;
  wire[3:0] nl_while_acc_129_nl;
  wire[1:0] while_acc_130_nl;
  wire[2:0] nl_while_acc_130_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_cmp_5_iden = while_mul_cmp_5_biwt | while_mul_cmp_5_bdwt;
  assign while_mul_cmp_5_bawt = while_mul_cmp_5_biwt | (while_mul_cmp_5_bcwt!=3'b000);
  assign while_mul_cmp_5_iden_2 = while_mul_cmp_5_biwt_2 | while_mul_cmp_5_bdwt_2;
  assign while_mul_cmp_5_iden_4 = while_mul_cmp_5_biwt_4 | while_mul_cmp_5_bdwt_4;
  assign while_mul_cmp_5_z_mxwt = MUX_v_112_5_2((while_mul_cmp_5_z[111:0]), while_mul_cmp_5_z_bfwt_111_0,
      while_mul_cmp_5_z_bfwt_1_111_0, while_mul_cmp_5_z_bfwt_2_111_0, while_mul_cmp_5_z_bfwt_3_111_0,
      while_mul_cmp_5_bcwt_2);
  assign while_mul_cmp_5_z_mxwt_1 = MUX_v_112_5_2((while_mul_cmp_5_z[111:0]), while_mul_cmp_5_z_bfwt_4_111_0,
      while_mul_cmp_5_z_bfwt_5_111_0, while_mul_cmp_5_z_bfwt_6_111_0, while_mul_cmp_5_z_bfwt_7_111_0,
      while_mul_cmp_5_bcwt_1);
  assign while_mul_cmp_5_z_mxwt_2 = MUX_v_112_5_2((while_mul_cmp_5_z[111:0]), while_mul_cmp_5_z_bfwt_8_111_0,
      while_mul_cmp_5_z_bfwt_9_111_0, while_mul_cmp_5_z_bfwt_10_111_0, while_mul_cmp_5_z_bfwt_11_111_0,
      while_mul_cmp_5_bcwt);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_5_bcwt <= 3'b000;
      while_mul_cmp_5_bcwt_1 <= 3'b000;
      while_mul_cmp_5_bcwt_2 <= 3'b000;
    end
    else begin
      while_mul_cmp_5_bcwt <= nl_while_mul_cmp_5_bcwt[2:0];
      while_mul_cmp_5_bcwt_1 <= nl_while_mul_cmp_5_bcwt_1[2:0];
      while_mul_cmp_5_bcwt_2 <= nl_while_mul_cmp_5_bcwt_2[2:0];
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_5_z_bfwt_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_5_z_bfwt_1_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_5_z_bfwt_2_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_5_z_bfwt_3_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_cmp_5_biwt_4 ) begin
      while_mul_cmp_5_z_bfwt_111_0 <= while_mul_cmp_5_z[111:0];
      while_mul_cmp_5_z_bfwt_1_111_0 <= while_mul_cmp_5_z_bfwt_111_0;
      while_mul_cmp_5_z_bfwt_2_111_0 <= while_mul_cmp_5_z_bfwt_1_111_0;
      while_mul_cmp_5_z_bfwt_3_111_0 <= while_mul_cmp_5_z_bfwt_2_111_0;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_5_z_bfwt_4_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_5_z_bfwt_5_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_5_z_bfwt_6_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_5_z_bfwt_7_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_cmp_5_biwt_2 ) begin
      while_mul_cmp_5_z_bfwt_4_111_0 <= while_mul_cmp_5_z[111:0];
      while_mul_cmp_5_z_bfwt_5_111_0 <= while_mul_cmp_5_z_bfwt_4_111_0;
      while_mul_cmp_5_z_bfwt_6_111_0 <= while_mul_cmp_5_z_bfwt_5_111_0;
      while_mul_cmp_5_z_bfwt_7_111_0 <= while_mul_cmp_5_z_bfwt_6_111_0;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_5_z_bfwt_8_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_5_z_bfwt_9_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_5_z_bfwt_10_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_5_z_bfwt_11_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_cmp_5_biwt ) begin
      while_mul_cmp_5_z_bfwt_8_111_0 <= while_mul_cmp_5_z[111:0];
      while_mul_cmp_5_z_bfwt_9_111_0 <= while_mul_cmp_5_z_bfwt_8_111_0;
      while_mul_cmp_5_z_bfwt_10_111_0 <= while_mul_cmp_5_z_bfwt_9_111_0;
      while_mul_cmp_5_z_bfwt_11_111_0 <= while_mul_cmp_5_z_bfwt_10_111_0;
    end
  end
  assign nl_while_acc_123_nl = while_mul_cmp_5_bcwt + 3'b111;
  assign while_acc_123_nl = nl_while_acc_123_nl[2:0];
  assign nl_while_acc_124_nl = conv_u2u_1_2(~ while_mul_cmp_5_bdwt) + conv_u2u_1_2(while_mul_cmp_5_biwt);
  assign while_acc_124_nl = nl_while_acc_124_nl[1:0];
  assign nl_while_mul_cmp_5_bcwt  = while_acc_123_nl + conv_u2u_2_3(while_acc_124_nl);
  assign nl_while_acc_126_nl = while_mul_cmp_5_bcwt_1 + 3'b111;
  assign while_acc_126_nl = nl_while_acc_126_nl[2:0];
  assign nl_while_acc_127_nl = conv_u2u_1_2(~ while_mul_cmp_5_bdwt_2) + conv_u2u_1_2(while_mul_cmp_5_biwt_2);
  assign while_acc_127_nl = nl_while_acc_127_nl[1:0];
  assign nl_while_mul_cmp_5_bcwt_1  = while_acc_126_nl + conv_u2u_2_3(while_acc_127_nl);
  assign nl_while_acc_129_nl = while_mul_cmp_5_bcwt_2 + 3'b111;
  assign while_acc_129_nl = nl_while_acc_129_nl[2:0];
  assign nl_while_acc_130_nl = conv_u2u_1_2(~ while_mul_cmp_5_bdwt_4) + conv_u2u_1_2(while_mul_cmp_5_biwt_4);
  assign while_acc_130_nl = nl_while_acc_130_nl[1:0];
  assign nl_while_mul_cmp_5_bcwt_2  = while_acc_129_nl + conv_u2u_2_3(while_acc_130_nl);

  function automatic [111:0] MUX_v_112_5_2;
    input [111:0] input_0;
    input [111:0] input_1;
    input [111:0] input_2;
    input [111:0] input_3;
    input [111:0] input_4;
    input [2:0] sel;
    reg [111:0] result;
  begin
    case (sel)
      3'b000 : begin
        result = input_0;
      end
      3'b001 : begin
        result = input_1;
      end
      3'b010 : begin
        result = input_2;
      end
      3'b011 : begin
        result = input_3;
      end
      default : begin
        result = input_4;
      end
    endcase
    MUX_v_112_5_2 = result;
  end
  endfunction


  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_cmp_5_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_5
// ------------------------------------------------------------------


module Rotate_run_while_mul_cmp_5_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_5
    (
  clk, rst, run_wen, run_wten, while_mul_cmp_5_oswt_unreg, while_mul_cmp_5_iswt3,
      while_mul_cmp_5_iden_1, while_mul_cmp_5_oswt_unreg_1, while_mul_cmp_5_iswt3_1,
      while_mul_cmp_5_iden_3, while_mul_cmp_5_oswt_unreg_2, while_mul_cmp_5_iswt3_2,
      while_mul_cmp_5_iden_5, run_cgwt_23, while_mul_cmp_5_bdwt, while_mul_cmp_5_bdwt_2,
      while_mul_cmp_5_bdwt_4, while_mul_cmp_5_iswt3_2_pff, while_mul_cmp_5_iswt3_1_pff,
      while_mul_cmp_5_iswt3_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_cmp_5_oswt_unreg;
  input while_mul_cmp_5_iswt3;
  output while_mul_cmp_5_iden_1;
  input while_mul_cmp_5_oswt_unreg_1;
  input while_mul_cmp_5_iswt3_1;
  output while_mul_cmp_5_iden_3;
  input while_mul_cmp_5_oswt_unreg_2;
  input while_mul_cmp_5_iswt3_2;
  output while_mul_cmp_5_iden_5;
  output run_cgwt_23;
  output while_mul_cmp_5_bdwt;
  output while_mul_cmp_5_bdwt_2;
  output while_mul_cmp_5_bdwt_4;
  input while_mul_cmp_5_iswt3_2_pff;
  input while_mul_cmp_5_iswt3_1_pff;
  input while_mul_cmp_5_iswt3_pff;


  // Interconnect Declarations
  wire while_mul_cmp_5_ogwt;
  wire while_mul_cmp_5_tiswt3;
  reg while_mul_cmp_5_hile_mul_cmp_5_pdswt2;
  reg while_mul_cmp_5_hile_mul_cmp_5_pdswt1;
  reg while_mul_cmp_5_hile_mul_cmp_5_pdswt0;
  reg [2:0] while_mul_cmp_5_icwt;
  wire [3:0] nl_while_mul_cmp_5_icwt;
  wire while_mul_cmp_5_ogwt_1;
  wire while_mul_cmp_5_tiswt3_1;
  reg while_mul_cmp_5_hile_mul_cmp_5_pdswt2_1;
  reg while_mul_cmp_5_hile_mul_cmp_5_pdswt1_1;
  reg while_mul_cmp_5_hile_mul_cmp_5_pdswt0_1;
  reg [2:0] while_mul_cmp_5_icwt_1;
  wire [3:0] nl_while_mul_cmp_5_icwt_1;
  wire while_mul_cmp_5_ogwt_2;
  wire while_mul_cmp_5_tiswt3_2;
  reg while_mul_cmp_5_hile_mul_cmp_5_pdswt2_2;
  reg while_mul_cmp_5_hile_mul_cmp_5_pdswt1_2;
  reg while_mul_cmp_5_hile_mul_cmp_5_pdswt0_2;
  reg [2:0] while_mul_cmp_5_icwt_2;
  wire [3:0] nl_while_mul_cmp_5_icwt_2;

  wire[2:0] while_acc_124_nl;
  wire[3:0] nl_while_acc_124_nl;
  wire[1:0] while_acc_125_nl;
  wire[2:0] nl_while_acc_125_nl;
  wire[2:0] while_acc_127_nl;
  wire[3:0] nl_while_acc_127_nl;
  wire[1:0] while_acc_128_nl;
  wire[2:0] nl_while_acc_128_nl;
  wire[2:0] while_acc_130_nl;
  wire[3:0] nl_while_acc_130_nl;
  wire[1:0] while_acc_131_nl;
  wire[2:0] nl_while_acc_131_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_cmp_5_bdwt = while_mul_cmp_5_oswt_unreg & run_wen;
  assign while_mul_cmp_5_tiswt3 = (~ run_wten) & while_mul_cmp_5_iswt3;
  assign while_mul_cmp_5_iden_1 = while_mul_cmp_5_ogwt;
  assign while_mul_cmp_5_ogwt = while_mul_cmp_5_hile_mul_cmp_5_pdswt0 | (while_mul_cmp_5_icwt!=3'b000);
  assign while_mul_cmp_5_bdwt_2 = while_mul_cmp_5_oswt_unreg_1 & run_wen;
  assign while_mul_cmp_5_tiswt3_1 = (~ run_wten) & while_mul_cmp_5_iswt3_1;
  assign while_mul_cmp_5_iden_3 = while_mul_cmp_5_ogwt_1;
  assign while_mul_cmp_5_ogwt_1 = while_mul_cmp_5_hile_mul_cmp_5_pdswt0_1 | (while_mul_cmp_5_icwt_1!=3'b000);
  assign while_mul_cmp_5_bdwt_4 = while_mul_cmp_5_oswt_unreg_2 & run_wen;
  assign while_mul_cmp_5_tiswt3_2 = (~ run_wten) & while_mul_cmp_5_iswt3_2;
  assign while_mul_cmp_5_iden_5 = while_mul_cmp_5_ogwt_2;
  assign while_mul_cmp_5_ogwt_2 = while_mul_cmp_5_hile_mul_cmp_5_pdswt0_2 | (while_mul_cmp_5_icwt_2!=3'b000);
  assign run_cgwt_23 = while_mul_cmp_5_ogwt_2 | while_mul_cmp_5_tiswt3_2 | while_mul_cmp_5_hile_mul_cmp_5_pdswt2_2
      | while_mul_cmp_5_hile_mul_cmp_5_pdswt1_2 | while_mul_cmp_5_ogwt_1 | while_mul_cmp_5_tiswt3_1
      | while_mul_cmp_5_hile_mul_cmp_5_pdswt2_1 | while_mul_cmp_5_hile_mul_cmp_5_pdswt1_1
      | while_mul_cmp_5_ogwt | while_mul_cmp_5_tiswt3 | while_mul_cmp_5_hile_mul_cmp_5_pdswt2
      | while_mul_cmp_5_hile_mul_cmp_5_pdswt1 | (run_wen & while_mul_cmp_5_iswt3_2_pff)
      | (run_wen & while_mul_cmp_5_iswt3_1_pff) | (run_wen & while_mul_cmp_5_iswt3_pff);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_5_hile_mul_cmp_5_pdswt2 <= 1'b0;
      while_mul_cmp_5_hile_mul_cmp_5_pdswt1 <= 1'b0;
      while_mul_cmp_5_hile_mul_cmp_5_pdswt0 <= 1'b0;
      while_mul_cmp_5_icwt <= 3'b000;
      while_mul_cmp_5_hile_mul_cmp_5_pdswt2_1 <= 1'b0;
      while_mul_cmp_5_hile_mul_cmp_5_pdswt1_1 <= 1'b0;
      while_mul_cmp_5_hile_mul_cmp_5_pdswt0_1 <= 1'b0;
      while_mul_cmp_5_icwt_1 <= 3'b000;
      while_mul_cmp_5_hile_mul_cmp_5_pdswt2_2 <= 1'b0;
      while_mul_cmp_5_hile_mul_cmp_5_pdswt1_2 <= 1'b0;
      while_mul_cmp_5_hile_mul_cmp_5_pdswt0_2 <= 1'b0;
      while_mul_cmp_5_icwt_2 <= 3'b000;
    end
    else begin
      while_mul_cmp_5_hile_mul_cmp_5_pdswt2 <= while_mul_cmp_5_tiswt3;
      while_mul_cmp_5_hile_mul_cmp_5_pdswt1 <= while_mul_cmp_5_hile_mul_cmp_5_pdswt2;
      while_mul_cmp_5_hile_mul_cmp_5_pdswt0 <= while_mul_cmp_5_hile_mul_cmp_5_pdswt1;
      while_mul_cmp_5_icwt <= nl_while_mul_cmp_5_icwt[2:0];
      while_mul_cmp_5_hile_mul_cmp_5_pdswt2_1 <= while_mul_cmp_5_tiswt3_1;
      while_mul_cmp_5_hile_mul_cmp_5_pdswt1_1 <= while_mul_cmp_5_hile_mul_cmp_5_pdswt2_1;
      while_mul_cmp_5_hile_mul_cmp_5_pdswt0_1 <= while_mul_cmp_5_hile_mul_cmp_5_pdswt1_1;
      while_mul_cmp_5_icwt_1 <= nl_while_mul_cmp_5_icwt_1[2:0];
      while_mul_cmp_5_hile_mul_cmp_5_pdswt2_2 <= while_mul_cmp_5_tiswt3_2;
      while_mul_cmp_5_hile_mul_cmp_5_pdswt1_2 <= while_mul_cmp_5_hile_mul_cmp_5_pdswt2_2;
      while_mul_cmp_5_hile_mul_cmp_5_pdswt0_2 <= while_mul_cmp_5_hile_mul_cmp_5_pdswt1_2;
      while_mul_cmp_5_icwt_2 <= nl_while_mul_cmp_5_icwt_2[2:0];
    end
  end
  assign nl_while_acc_124_nl = while_mul_cmp_5_icwt + 3'b111;
  assign while_acc_124_nl = nl_while_acc_124_nl[2:0];
  assign nl_while_acc_125_nl = conv_u2u_1_2(while_mul_cmp_5_hile_mul_cmp_5_pdswt0)
      + conv_u2u_1_2(~ while_mul_cmp_5_ogwt);
  assign while_acc_125_nl = nl_while_acc_125_nl[1:0];
  assign nl_while_mul_cmp_5_icwt  = while_acc_124_nl + conv_u2u_2_3(while_acc_125_nl);
  assign nl_while_acc_127_nl = while_mul_cmp_5_icwt_1 + 3'b111;
  assign while_acc_127_nl = nl_while_acc_127_nl[2:0];
  assign nl_while_acc_128_nl = conv_u2u_1_2(while_mul_cmp_5_hile_mul_cmp_5_pdswt0_1)
      + conv_u2u_1_2(~ while_mul_cmp_5_ogwt_1);
  assign while_acc_128_nl = nl_while_acc_128_nl[1:0];
  assign nl_while_mul_cmp_5_icwt_1  = while_acc_127_nl + conv_u2u_2_3(while_acc_128_nl);
  assign nl_while_acc_130_nl = while_mul_cmp_5_icwt_2 + 3'b111;
  assign while_acc_130_nl = nl_while_acc_130_nl[2:0];
  assign nl_while_acc_131_nl = conv_u2u_1_2(while_mul_cmp_5_hile_mul_cmp_5_pdswt0_2)
      + conv_u2u_1_2(~ while_mul_cmp_5_ogwt_2);
  assign while_acc_131_nl = nl_while_acc_131_nl[1:0];
  assign nl_while_mul_cmp_5_icwt_2  = while_acc_130_nl + conv_u2u_2_3(while_acc_131_nl);

  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_cmp_4_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_4
// ------------------------------------------------------------------


module Rotate_run_while_mul_cmp_4_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_4
    (
  clk, rst, while_mul_cmp_4_bawt, while_mul_cmp_4_iden, while_mul_cmp_4_iden_2, while_mul_cmp_4_iden_4,
      while_mul_cmp_4_z_mxwt, while_mul_cmp_4_z_mxwt_1, while_mul_cmp_4_z_mxwt_2,
      while_mul_cmp_4_biwt, while_mul_cmp_4_bdwt, while_mul_cmp_4_biwt_2, while_mul_cmp_4_bdwt_2,
      while_mul_cmp_4_biwt_4, while_mul_cmp_4_bdwt_4, while_mul_cmp_4_z
);
  input clk;
  input rst;
  output while_mul_cmp_4_bawt;
  output while_mul_cmp_4_iden;
  output while_mul_cmp_4_iden_2;
  output while_mul_cmp_4_iden_4;
  output [111:0] while_mul_cmp_4_z_mxwt;
  output [111:0] while_mul_cmp_4_z_mxwt_1;
  output [111:0] while_mul_cmp_4_z_mxwt_2;
  input while_mul_cmp_4_biwt;
  input while_mul_cmp_4_bdwt;
  input while_mul_cmp_4_biwt_2;
  input while_mul_cmp_4_bdwt_2;
  input while_mul_cmp_4_biwt_4;
  input while_mul_cmp_4_bdwt_4;
  input [127:0] while_mul_cmp_4_z;


  // Interconnect Declarations
  reg [2:0] while_mul_cmp_4_bcwt;
  wire [3:0] nl_while_mul_cmp_4_bcwt;
  reg [2:0] while_mul_cmp_4_bcwt_1;
  wire [3:0] nl_while_mul_cmp_4_bcwt_1;
  reg [2:0] while_mul_cmp_4_bcwt_2;
  wire [3:0] nl_while_mul_cmp_4_bcwt_2;
  reg [111:0] while_mul_cmp_4_z_bfwt_3_111_0;
  reg [111:0] while_mul_cmp_4_z_bfwt_7_111_0;
  reg [111:0] while_mul_cmp_4_z_bfwt_11_111_0;
  reg [111:0] while_mul_cmp_4_z_bfwt_2_111_0;
  reg [111:0] while_mul_cmp_4_z_bfwt_6_111_0;
  reg [111:0] while_mul_cmp_4_z_bfwt_10_111_0;
  reg [111:0] while_mul_cmp_4_z_bfwt_1_111_0;
  reg [111:0] while_mul_cmp_4_z_bfwt_5_111_0;
  reg [111:0] while_mul_cmp_4_z_bfwt_9_111_0;
  reg [111:0] while_mul_cmp_4_z_bfwt_111_0;
  reg [111:0] while_mul_cmp_4_z_bfwt_4_111_0;
  reg [111:0] while_mul_cmp_4_z_bfwt_8_111_0;

  wire[2:0] while_acc_117_nl;
  wire[3:0] nl_while_acc_117_nl;
  wire[1:0] while_acc_118_nl;
  wire[2:0] nl_while_acc_118_nl;
  wire[2:0] while_acc_120_nl;
  wire[3:0] nl_while_acc_120_nl;
  wire[1:0] while_acc_121_nl;
  wire[2:0] nl_while_acc_121_nl;
  wire[2:0] while_acc_123_nl;
  wire[3:0] nl_while_acc_123_nl;
  wire[1:0] while_acc_124_nl;
  wire[2:0] nl_while_acc_124_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_cmp_4_iden = while_mul_cmp_4_biwt | while_mul_cmp_4_bdwt;
  assign while_mul_cmp_4_bawt = while_mul_cmp_4_biwt | (while_mul_cmp_4_bcwt!=3'b000);
  assign while_mul_cmp_4_iden_2 = while_mul_cmp_4_biwt_2 | while_mul_cmp_4_bdwt_2;
  assign while_mul_cmp_4_iden_4 = while_mul_cmp_4_biwt_4 | while_mul_cmp_4_bdwt_4;
  assign while_mul_cmp_4_z_mxwt = MUX_v_112_5_2((while_mul_cmp_4_z[111:0]), while_mul_cmp_4_z_bfwt_111_0,
      while_mul_cmp_4_z_bfwt_1_111_0, while_mul_cmp_4_z_bfwt_2_111_0, while_mul_cmp_4_z_bfwt_3_111_0,
      while_mul_cmp_4_bcwt_2);
  assign while_mul_cmp_4_z_mxwt_1 = MUX_v_112_5_2((while_mul_cmp_4_z[111:0]), while_mul_cmp_4_z_bfwt_4_111_0,
      while_mul_cmp_4_z_bfwt_5_111_0, while_mul_cmp_4_z_bfwt_6_111_0, while_mul_cmp_4_z_bfwt_7_111_0,
      while_mul_cmp_4_bcwt_1);
  assign while_mul_cmp_4_z_mxwt_2 = MUX_v_112_5_2((while_mul_cmp_4_z[111:0]), while_mul_cmp_4_z_bfwt_8_111_0,
      while_mul_cmp_4_z_bfwt_9_111_0, while_mul_cmp_4_z_bfwt_10_111_0, while_mul_cmp_4_z_bfwt_11_111_0,
      while_mul_cmp_4_bcwt);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_4_bcwt <= 3'b000;
      while_mul_cmp_4_bcwt_1 <= 3'b000;
      while_mul_cmp_4_bcwt_2 <= 3'b000;
    end
    else begin
      while_mul_cmp_4_bcwt <= nl_while_mul_cmp_4_bcwt[2:0];
      while_mul_cmp_4_bcwt_1 <= nl_while_mul_cmp_4_bcwt_1[2:0];
      while_mul_cmp_4_bcwt_2 <= nl_while_mul_cmp_4_bcwt_2[2:0];
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_4_z_bfwt_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_4_z_bfwt_1_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_4_z_bfwt_2_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_4_z_bfwt_3_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_cmp_4_biwt_4 ) begin
      while_mul_cmp_4_z_bfwt_111_0 <= while_mul_cmp_4_z[111:0];
      while_mul_cmp_4_z_bfwt_1_111_0 <= while_mul_cmp_4_z_bfwt_111_0;
      while_mul_cmp_4_z_bfwt_2_111_0 <= while_mul_cmp_4_z_bfwt_1_111_0;
      while_mul_cmp_4_z_bfwt_3_111_0 <= while_mul_cmp_4_z_bfwt_2_111_0;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_4_z_bfwt_4_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_4_z_bfwt_5_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_4_z_bfwt_6_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_4_z_bfwt_7_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_cmp_4_biwt_2 ) begin
      while_mul_cmp_4_z_bfwt_4_111_0 <= while_mul_cmp_4_z[111:0];
      while_mul_cmp_4_z_bfwt_5_111_0 <= while_mul_cmp_4_z_bfwt_4_111_0;
      while_mul_cmp_4_z_bfwt_6_111_0 <= while_mul_cmp_4_z_bfwt_5_111_0;
      while_mul_cmp_4_z_bfwt_7_111_0 <= while_mul_cmp_4_z_bfwt_6_111_0;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_4_z_bfwt_8_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_4_z_bfwt_9_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_4_z_bfwt_10_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_4_z_bfwt_11_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_cmp_4_biwt ) begin
      while_mul_cmp_4_z_bfwt_8_111_0 <= while_mul_cmp_4_z[111:0];
      while_mul_cmp_4_z_bfwt_9_111_0 <= while_mul_cmp_4_z_bfwt_8_111_0;
      while_mul_cmp_4_z_bfwt_10_111_0 <= while_mul_cmp_4_z_bfwt_9_111_0;
      while_mul_cmp_4_z_bfwt_11_111_0 <= while_mul_cmp_4_z_bfwt_10_111_0;
    end
  end
  assign nl_while_acc_117_nl = while_mul_cmp_4_bcwt + 3'b111;
  assign while_acc_117_nl = nl_while_acc_117_nl[2:0];
  assign nl_while_acc_118_nl = conv_u2u_1_2(~ while_mul_cmp_4_bdwt) + conv_u2u_1_2(while_mul_cmp_4_biwt);
  assign while_acc_118_nl = nl_while_acc_118_nl[1:0];
  assign nl_while_mul_cmp_4_bcwt  = while_acc_117_nl + conv_u2u_2_3(while_acc_118_nl);
  assign nl_while_acc_120_nl = while_mul_cmp_4_bcwt_1 + 3'b111;
  assign while_acc_120_nl = nl_while_acc_120_nl[2:0];
  assign nl_while_acc_121_nl = conv_u2u_1_2(~ while_mul_cmp_4_bdwt_2) + conv_u2u_1_2(while_mul_cmp_4_biwt_2);
  assign while_acc_121_nl = nl_while_acc_121_nl[1:0];
  assign nl_while_mul_cmp_4_bcwt_1  = while_acc_120_nl + conv_u2u_2_3(while_acc_121_nl);
  assign nl_while_acc_123_nl = while_mul_cmp_4_bcwt_2 + 3'b111;
  assign while_acc_123_nl = nl_while_acc_123_nl[2:0];
  assign nl_while_acc_124_nl = conv_u2u_1_2(~ while_mul_cmp_4_bdwt_4) + conv_u2u_1_2(while_mul_cmp_4_biwt_4);
  assign while_acc_124_nl = nl_while_acc_124_nl[1:0];
  assign nl_while_mul_cmp_4_bcwt_2  = while_acc_123_nl + conv_u2u_2_3(while_acc_124_nl);

  function automatic [111:0] MUX_v_112_5_2;
    input [111:0] input_0;
    input [111:0] input_1;
    input [111:0] input_2;
    input [111:0] input_3;
    input [111:0] input_4;
    input [2:0] sel;
    reg [111:0] result;
  begin
    case (sel)
      3'b000 : begin
        result = input_0;
      end
      3'b001 : begin
        result = input_1;
      end
      3'b010 : begin
        result = input_2;
      end
      3'b011 : begin
        result = input_3;
      end
      default : begin
        result = input_4;
      end
    endcase
    MUX_v_112_5_2 = result;
  end
  endfunction


  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_cmp_4_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_4
// ------------------------------------------------------------------


module Rotate_run_while_mul_cmp_4_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_4
    (
  clk, rst, run_wen, run_wten, while_mul_cmp_4_oswt_unreg, while_mul_cmp_4_iswt3,
      while_mul_cmp_4_iden_1, while_mul_cmp_4_oswt_unreg_1, while_mul_cmp_4_iswt3_1,
      while_mul_cmp_4_iden_3, while_mul_cmp_4_oswt_unreg_2, while_mul_cmp_4_iswt3_2,
      while_mul_cmp_4_iden_5, run_cgwt_22, while_mul_cmp_4_bdwt, while_mul_cmp_4_bdwt_2,
      while_mul_cmp_4_bdwt_4, while_mul_cmp_4_iswt3_2_pff, while_mul_cmp_4_iswt3_1_pff,
      while_mul_cmp_4_iswt3_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_cmp_4_oswt_unreg;
  input while_mul_cmp_4_iswt3;
  output while_mul_cmp_4_iden_1;
  input while_mul_cmp_4_oswt_unreg_1;
  input while_mul_cmp_4_iswt3_1;
  output while_mul_cmp_4_iden_3;
  input while_mul_cmp_4_oswt_unreg_2;
  input while_mul_cmp_4_iswt3_2;
  output while_mul_cmp_4_iden_5;
  output run_cgwt_22;
  output while_mul_cmp_4_bdwt;
  output while_mul_cmp_4_bdwt_2;
  output while_mul_cmp_4_bdwt_4;
  input while_mul_cmp_4_iswt3_2_pff;
  input while_mul_cmp_4_iswt3_1_pff;
  input while_mul_cmp_4_iswt3_pff;


  // Interconnect Declarations
  wire while_mul_cmp_4_ogwt;
  wire while_mul_cmp_4_tiswt3;
  reg while_mul_cmp_4_hile_mul_cmp_4_pdswt2;
  reg while_mul_cmp_4_hile_mul_cmp_4_pdswt1;
  reg while_mul_cmp_4_hile_mul_cmp_4_pdswt0;
  reg [2:0] while_mul_cmp_4_icwt;
  wire [3:0] nl_while_mul_cmp_4_icwt;
  wire while_mul_cmp_4_ogwt_1;
  wire while_mul_cmp_4_tiswt3_1;
  reg while_mul_cmp_4_hile_mul_cmp_4_pdswt2_1;
  reg while_mul_cmp_4_hile_mul_cmp_4_pdswt1_1;
  reg while_mul_cmp_4_hile_mul_cmp_4_pdswt0_1;
  reg [2:0] while_mul_cmp_4_icwt_1;
  wire [3:0] nl_while_mul_cmp_4_icwt_1;
  wire while_mul_cmp_4_ogwt_2;
  wire while_mul_cmp_4_tiswt3_2;
  reg while_mul_cmp_4_hile_mul_cmp_4_pdswt2_2;
  reg while_mul_cmp_4_hile_mul_cmp_4_pdswt1_2;
  reg while_mul_cmp_4_hile_mul_cmp_4_pdswt0_2;
  reg [2:0] while_mul_cmp_4_icwt_2;
  wire [3:0] nl_while_mul_cmp_4_icwt_2;

  wire[2:0] while_acc_118_nl;
  wire[3:0] nl_while_acc_118_nl;
  wire[1:0] while_acc_119_nl;
  wire[2:0] nl_while_acc_119_nl;
  wire[2:0] while_acc_121_nl;
  wire[3:0] nl_while_acc_121_nl;
  wire[1:0] while_acc_122_nl;
  wire[2:0] nl_while_acc_122_nl;
  wire[2:0] while_acc_124_nl;
  wire[3:0] nl_while_acc_124_nl;
  wire[1:0] while_acc_125_nl;
  wire[2:0] nl_while_acc_125_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_cmp_4_bdwt = while_mul_cmp_4_oswt_unreg & run_wen;
  assign while_mul_cmp_4_tiswt3 = (~ run_wten) & while_mul_cmp_4_iswt3;
  assign while_mul_cmp_4_iden_1 = while_mul_cmp_4_ogwt;
  assign while_mul_cmp_4_ogwt = while_mul_cmp_4_hile_mul_cmp_4_pdswt0 | (while_mul_cmp_4_icwt!=3'b000);
  assign while_mul_cmp_4_bdwt_2 = while_mul_cmp_4_oswt_unreg_1 & run_wen;
  assign while_mul_cmp_4_tiswt3_1 = (~ run_wten) & while_mul_cmp_4_iswt3_1;
  assign while_mul_cmp_4_iden_3 = while_mul_cmp_4_ogwt_1;
  assign while_mul_cmp_4_ogwt_1 = while_mul_cmp_4_hile_mul_cmp_4_pdswt0_1 | (while_mul_cmp_4_icwt_1!=3'b000);
  assign while_mul_cmp_4_bdwt_4 = while_mul_cmp_4_oswt_unreg_2 & run_wen;
  assign while_mul_cmp_4_tiswt3_2 = (~ run_wten) & while_mul_cmp_4_iswt3_2;
  assign while_mul_cmp_4_iden_5 = while_mul_cmp_4_ogwt_2;
  assign while_mul_cmp_4_ogwt_2 = while_mul_cmp_4_hile_mul_cmp_4_pdswt0_2 | (while_mul_cmp_4_icwt_2!=3'b000);
  assign run_cgwt_22 = while_mul_cmp_4_ogwt_2 | while_mul_cmp_4_tiswt3_2 | while_mul_cmp_4_hile_mul_cmp_4_pdswt2_2
      | while_mul_cmp_4_hile_mul_cmp_4_pdswt1_2 | while_mul_cmp_4_ogwt_1 | while_mul_cmp_4_tiswt3_1
      | while_mul_cmp_4_hile_mul_cmp_4_pdswt2_1 | while_mul_cmp_4_hile_mul_cmp_4_pdswt1_1
      | while_mul_cmp_4_ogwt | while_mul_cmp_4_tiswt3 | while_mul_cmp_4_hile_mul_cmp_4_pdswt2
      | while_mul_cmp_4_hile_mul_cmp_4_pdswt1 | (run_wen & while_mul_cmp_4_iswt3_2_pff)
      | (run_wen & while_mul_cmp_4_iswt3_1_pff) | (run_wen & while_mul_cmp_4_iswt3_pff);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_4_hile_mul_cmp_4_pdswt2 <= 1'b0;
      while_mul_cmp_4_hile_mul_cmp_4_pdswt1 <= 1'b0;
      while_mul_cmp_4_hile_mul_cmp_4_pdswt0 <= 1'b0;
      while_mul_cmp_4_icwt <= 3'b000;
      while_mul_cmp_4_hile_mul_cmp_4_pdswt2_1 <= 1'b0;
      while_mul_cmp_4_hile_mul_cmp_4_pdswt1_1 <= 1'b0;
      while_mul_cmp_4_hile_mul_cmp_4_pdswt0_1 <= 1'b0;
      while_mul_cmp_4_icwt_1 <= 3'b000;
      while_mul_cmp_4_hile_mul_cmp_4_pdswt2_2 <= 1'b0;
      while_mul_cmp_4_hile_mul_cmp_4_pdswt1_2 <= 1'b0;
      while_mul_cmp_4_hile_mul_cmp_4_pdswt0_2 <= 1'b0;
      while_mul_cmp_4_icwt_2 <= 3'b000;
    end
    else begin
      while_mul_cmp_4_hile_mul_cmp_4_pdswt2 <= while_mul_cmp_4_tiswt3;
      while_mul_cmp_4_hile_mul_cmp_4_pdswt1 <= while_mul_cmp_4_hile_mul_cmp_4_pdswt2;
      while_mul_cmp_4_hile_mul_cmp_4_pdswt0 <= while_mul_cmp_4_hile_mul_cmp_4_pdswt1;
      while_mul_cmp_4_icwt <= nl_while_mul_cmp_4_icwt[2:0];
      while_mul_cmp_4_hile_mul_cmp_4_pdswt2_1 <= while_mul_cmp_4_tiswt3_1;
      while_mul_cmp_4_hile_mul_cmp_4_pdswt1_1 <= while_mul_cmp_4_hile_mul_cmp_4_pdswt2_1;
      while_mul_cmp_4_hile_mul_cmp_4_pdswt0_1 <= while_mul_cmp_4_hile_mul_cmp_4_pdswt1_1;
      while_mul_cmp_4_icwt_1 <= nl_while_mul_cmp_4_icwt_1[2:0];
      while_mul_cmp_4_hile_mul_cmp_4_pdswt2_2 <= while_mul_cmp_4_tiswt3_2;
      while_mul_cmp_4_hile_mul_cmp_4_pdswt1_2 <= while_mul_cmp_4_hile_mul_cmp_4_pdswt2_2;
      while_mul_cmp_4_hile_mul_cmp_4_pdswt0_2 <= while_mul_cmp_4_hile_mul_cmp_4_pdswt1_2;
      while_mul_cmp_4_icwt_2 <= nl_while_mul_cmp_4_icwt_2[2:0];
    end
  end
  assign nl_while_acc_118_nl = while_mul_cmp_4_icwt + 3'b111;
  assign while_acc_118_nl = nl_while_acc_118_nl[2:0];
  assign nl_while_acc_119_nl = conv_u2u_1_2(while_mul_cmp_4_hile_mul_cmp_4_pdswt0)
      + conv_u2u_1_2(~ while_mul_cmp_4_ogwt);
  assign while_acc_119_nl = nl_while_acc_119_nl[1:0];
  assign nl_while_mul_cmp_4_icwt  = while_acc_118_nl + conv_u2u_2_3(while_acc_119_nl);
  assign nl_while_acc_121_nl = while_mul_cmp_4_icwt_1 + 3'b111;
  assign while_acc_121_nl = nl_while_acc_121_nl[2:0];
  assign nl_while_acc_122_nl = conv_u2u_1_2(while_mul_cmp_4_hile_mul_cmp_4_pdswt0_1)
      + conv_u2u_1_2(~ while_mul_cmp_4_ogwt_1);
  assign while_acc_122_nl = nl_while_acc_122_nl[1:0];
  assign nl_while_mul_cmp_4_icwt_1  = while_acc_121_nl + conv_u2u_2_3(while_acc_122_nl);
  assign nl_while_acc_124_nl = while_mul_cmp_4_icwt_2 + 3'b111;
  assign while_acc_124_nl = nl_while_acc_124_nl[2:0];
  assign nl_while_acc_125_nl = conv_u2u_1_2(while_mul_cmp_4_hile_mul_cmp_4_pdswt0_2)
      + conv_u2u_1_2(~ while_mul_cmp_4_ogwt_2);
  assign while_acc_125_nl = nl_while_acc_125_nl[1:0];
  assign nl_while_mul_cmp_4_icwt_2  = while_acc_124_nl + conv_u2u_2_3(while_acc_125_nl);

  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_cmp_3_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_3
// ------------------------------------------------------------------


module Rotate_run_while_mul_cmp_3_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_3
    (
  clk, rst, while_mul_cmp_3_bawt, while_mul_cmp_3_iden, while_mul_cmp_3_iden_2, while_mul_cmp_3_iden_4,
      while_mul_cmp_3_z_mxwt, while_mul_cmp_3_z_mxwt_1, while_mul_cmp_3_z_mxwt_2,
      while_mul_cmp_3_biwt, while_mul_cmp_3_bdwt, while_mul_cmp_3_biwt_2, while_mul_cmp_3_bdwt_2,
      while_mul_cmp_3_biwt_4, while_mul_cmp_3_bdwt_4, while_mul_cmp_3_z
);
  input clk;
  input rst;
  output while_mul_cmp_3_bawt;
  output while_mul_cmp_3_iden;
  output while_mul_cmp_3_iden_2;
  output while_mul_cmp_3_iden_4;
  output [111:0] while_mul_cmp_3_z_mxwt;
  output [111:0] while_mul_cmp_3_z_mxwt_1;
  output [111:0] while_mul_cmp_3_z_mxwt_2;
  input while_mul_cmp_3_biwt;
  input while_mul_cmp_3_bdwt;
  input while_mul_cmp_3_biwt_2;
  input while_mul_cmp_3_bdwt_2;
  input while_mul_cmp_3_biwt_4;
  input while_mul_cmp_3_bdwt_4;
  input [127:0] while_mul_cmp_3_z;


  // Interconnect Declarations
  reg [2:0] while_mul_cmp_3_bcwt;
  wire [3:0] nl_while_mul_cmp_3_bcwt;
  reg [2:0] while_mul_cmp_3_bcwt_1;
  wire [3:0] nl_while_mul_cmp_3_bcwt_1;
  reg [2:0] while_mul_cmp_3_bcwt_2;
  wire [3:0] nl_while_mul_cmp_3_bcwt_2;
  reg [111:0] while_mul_cmp_3_z_bfwt_3_111_0;
  reg [111:0] while_mul_cmp_3_z_bfwt_7_111_0;
  reg [111:0] while_mul_cmp_3_z_bfwt_11_111_0;
  reg [111:0] while_mul_cmp_3_z_bfwt_2_111_0;
  reg [111:0] while_mul_cmp_3_z_bfwt_6_111_0;
  reg [111:0] while_mul_cmp_3_z_bfwt_10_111_0;
  reg [111:0] while_mul_cmp_3_z_bfwt_1_111_0;
  reg [111:0] while_mul_cmp_3_z_bfwt_5_111_0;
  reg [111:0] while_mul_cmp_3_z_bfwt_9_111_0;
  reg [111:0] while_mul_cmp_3_z_bfwt_111_0;
  reg [111:0] while_mul_cmp_3_z_bfwt_4_111_0;
  reg [111:0] while_mul_cmp_3_z_bfwt_8_111_0;

  wire[2:0] while_acc_111_nl;
  wire[3:0] nl_while_acc_111_nl;
  wire[1:0] while_acc_112_nl;
  wire[2:0] nl_while_acc_112_nl;
  wire[2:0] while_acc_114_nl;
  wire[3:0] nl_while_acc_114_nl;
  wire[1:0] while_acc_115_nl;
  wire[2:0] nl_while_acc_115_nl;
  wire[2:0] while_acc_117_nl;
  wire[3:0] nl_while_acc_117_nl;
  wire[1:0] while_acc_118_nl;
  wire[2:0] nl_while_acc_118_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_cmp_3_iden = while_mul_cmp_3_biwt | while_mul_cmp_3_bdwt;
  assign while_mul_cmp_3_bawt = while_mul_cmp_3_biwt | (while_mul_cmp_3_bcwt!=3'b000);
  assign while_mul_cmp_3_iden_2 = while_mul_cmp_3_biwt_2 | while_mul_cmp_3_bdwt_2;
  assign while_mul_cmp_3_iden_4 = while_mul_cmp_3_biwt_4 | while_mul_cmp_3_bdwt_4;
  assign while_mul_cmp_3_z_mxwt = MUX_v_112_5_2((while_mul_cmp_3_z[111:0]), while_mul_cmp_3_z_bfwt_111_0,
      while_mul_cmp_3_z_bfwt_1_111_0, while_mul_cmp_3_z_bfwt_2_111_0, while_mul_cmp_3_z_bfwt_3_111_0,
      while_mul_cmp_3_bcwt_2);
  assign while_mul_cmp_3_z_mxwt_1 = MUX_v_112_5_2((while_mul_cmp_3_z[111:0]), while_mul_cmp_3_z_bfwt_4_111_0,
      while_mul_cmp_3_z_bfwt_5_111_0, while_mul_cmp_3_z_bfwt_6_111_0, while_mul_cmp_3_z_bfwt_7_111_0,
      while_mul_cmp_3_bcwt_1);
  assign while_mul_cmp_3_z_mxwt_2 = MUX_v_112_5_2((while_mul_cmp_3_z[111:0]), while_mul_cmp_3_z_bfwt_8_111_0,
      while_mul_cmp_3_z_bfwt_9_111_0, while_mul_cmp_3_z_bfwt_10_111_0, while_mul_cmp_3_z_bfwt_11_111_0,
      while_mul_cmp_3_bcwt);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_3_bcwt <= 3'b000;
      while_mul_cmp_3_bcwt_1 <= 3'b000;
      while_mul_cmp_3_bcwt_2 <= 3'b000;
    end
    else begin
      while_mul_cmp_3_bcwt <= nl_while_mul_cmp_3_bcwt[2:0];
      while_mul_cmp_3_bcwt_1 <= nl_while_mul_cmp_3_bcwt_1[2:0];
      while_mul_cmp_3_bcwt_2 <= nl_while_mul_cmp_3_bcwt_2[2:0];
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_3_z_bfwt_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_3_z_bfwt_1_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_3_z_bfwt_2_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_3_z_bfwt_3_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_cmp_3_biwt_4 ) begin
      while_mul_cmp_3_z_bfwt_111_0 <= while_mul_cmp_3_z[111:0];
      while_mul_cmp_3_z_bfwt_1_111_0 <= while_mul_cmp_3_z_bfwt_111_0;
      while_mul_cmp_3_z_bfwt_2_111_0 <= while_mul_cmp_3_z_bfwt_1_111_0;
      while_mul_cmp_3_z_bfwt_3_111_0 <= while_mul_cmp_3_z_bfwt_2_111_0;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_3_z_bfwt_4_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_3_z_bfwt_5_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_3_z_bfwt_6_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_3_z_bfwt_7_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_cmp_3_biwt_2 ) begin
      while_mul_cmp_3_z_bfwt_4_111_0 <= while_mul_cmp_3_z[111:0];
      while_mul_cmp_3_z_bfwt_5_111_0 <= while_mul_cmp_3_z_bfwt_4_111_0;
      while_mul_cmp_3_z_bfwt_6_111_0 <= while_mul_cmp_3_z_bfwt_5_111_0;
      while_mul_cmp_3_z_bfwt_7_111_0 <= while_mul_cmp_3_z_bfwt_6_111_0;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_3_z_bfwt_8_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_3_z_bfwt_9_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_3_z_bfwt_10_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_3_z_bfwt_11_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_cmp_3_biwt ) begin
      while_mul_cmp_3_z_bfwt_8_111_0 <= while_mul_cmp_3_z[111:0];
      while_mul_cmp_3_z_bfwt_9_111_0 <= while_mul_cmp_3_z_bfwt_8_111_0;
      while_mul_cmp_3_z_bfwt_10_111_0 <= while_mul_cmp_3_z_bfwt_9_111_0;
      while_mul_cmp_3_z_bfwt_11_111_0 <= while_mul_cmp_3_z_bfwt_10_111_0;
    end
  end
  assign nl_while_acc_111_nl = while_mul_cmp_3_bcwt + 3'b111;
  assign while_acc_111_nl = nl_while_acc_111_nl[2:0];
  assign nl_while_acc_112_nl = conv_u2u_1_2(~ while_mul_cmp_3_bdwt) + conv_u2u_1_2(while_mul_cmp_3_biwt);
  assign while_acc_112_nl = nl_while_acc_112_nl[1:0];
  assign nl_while_mul_cmp_3_bcwt  = while_acc_111_nl + conv_u2u_2_3(while_acc_112_nl);
  assign nl_while_acc_114_nl = while_mul_cmp_3_bcwt_1 + 3'b111;
  assign while_acc_114_nl = nl_while_acc_114_nl[2:0];
  assign nl_while_acc_115_nl = conv_u2u_1_2(~ while_mul_cmp_3_bdwt_2) + conv_u2u_1_2(while_mul_cmp_3_biwt_2);
  assign while_acc_115_nl = nl_while_acc_115_nl[1:0];
  assign nl_while_mul_cmp_3_bcwt_1  = while_acc_114_nl + conv_u2u_2_3(while_acc_115_nl);
  assign nl_while_acc_117_nl = while_mul_cmp_3_bcwt_2 + 3'b111;
  assign while_acc_117_nl = nl_while_acc_117_nl[2:0];
  assign nl_while_acc_118_nl = conv_u2u_1_2(~ while_mul_cmp_3_bdwt_4) + conv_u2u_1_2(while_mul_cmp_3_biwt_4);
  assign while_acc_118_nl = nl_while_acc_118_nl[1:0];
  assign nl_while_mul_cmp_3_bcwt_2  = while_acc_117_nl + conv_u2u_2_3(while_acc_118_nl);

  function automatic [111:0] MUX_v_112_5_2;
    input [111:0] input_0;
    input [111:0] input_1;
    input [111:0] input_2;
    input [111:0] input_3;
    input [111:0] input_4;
    input [2:0] sel;
    reg [111:0] result;
  begin
    case (sel)
      3'b000 : begin
        result = input_0;
      end
      3'b001 : begin
        result = input_1;
      end
      3'b010 : begin
        result = input_2;
      end
      3'b011 : begin
        result = input_3;
      end
      default : begin
        result = input_4;
      end
    endcase
    MUX_v_112_5_2 = result;
  end
  endfunction


  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_cmp_3_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_3
// ------------------------------------------------------------------


module Rotate_run_while_mul_cmp_3_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_3
    (
  clk, rst, run_wen, run_wten, while_mul_cmp_3_oswt_unreg, while_mul_cmp_3_iswt3,
      while_mul_cmp_3_iden_1, while_mul_cmp_3_oswt_unreg_1, while_mul_cmp_3_iswt3_1,
      while_mul_cmp_3_iden_3, while_mul_cmp_3_oswt_unreg_2, while_mul_cmp_3_iswt3_2,
      while_mul_cmp_3_iden_5, run_cgwt_21, while_mul_cmp_3_bdwt, while_mul_cmp_3_bdwt_2,
      while_mul_cmp_3_bdwt_4, while_mul_cmp_3_iswt3_2_pff, while_mul_cmp_3_iswt3_1_pff,
      while_mul_cmp_3_iswt3_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_cmp_3_oswt_unreg;
  input while_mul_cmp_3_iswt3;
  output while_mul_cmp_3_iden_1;
  input while_mul_cmp_3_oswt_unreg_1;
  input while_mul_cmp_3_iswt3_1;
  output while_mul_cmp_3_iden_3;
  input while_mul_cmp_3_oswt_unreg_2;
  input while_mul_cmp_3_iswt3_2;
  output while_mul_cmp_3_iden_5;
  output run_cgwt_21;
  output while_mul_cmp_3_bdwt;
  output while_mul_cmp_3_bdwt_2;
  output while_mul_cmp_3_bdwt_4;
  input while_mul_cmp_3_iswt3_2_pff;
  input while_mul_cmp_3_iswt3_1_pff;
  input while_mul_cmp_3_iswt3_pff;


  // Interconnect Declarations
  wire while_mul_cmp_3_ogwt;
  wire while_mul_cmp_3_tiswt3;
  reg while_mul_cmp_3_hile_mul_cmp_3_pdswt2;
  reg while_mul_cmp_3_hile_mul_cmp_3_pdswt1;
  reg while_mul_cmp_3_hile_mul_cmp_3_pdswt0;
  reg [2:0] while_mul_cmp_3_icwt;
  wire [3:0] nl_while_mul_cmp_3_icwt;
  wire while_mul_cmp_3_ogwt_1;
  wire while_mul_cmp_3_tiswt3_1;
  reg while_mul_cmp_3_hile_mul_cmp_3_pdswt2_1;
  reg while_mul_cmp_3_hile_mul_cmp_3_pdswt1_1;
  reg while_mul_cmp_3_hile_mul_cmp_3_pdswt0_1;
  reg [2:0] while_mul_cmp_3_icwt_1;
  wire [3:0] nl_while_mul_cmp_3_icwt_1;
  wire while_mul_cmp_3_ogwt_2;
  wire while_mul_cmp_3_tiswt3_2;
  reg while_mul_cmp_3_hile_mul_cmp_3_pdswt2_2;
  reg while_mul_cmp_3_hile_mul_cmp_3_pdswt1_2;
  reg while_mul_cmp_3_hile_mul_cmp_3_pdswt0_2;
  reg [2:0] while_mul_cmp_3_icwt_2;
  wire [3:0] nl_while_mul_cmp_3_icwt_2;

  wire[2:0] while_acc_112_nl;
  wire[3:0] nl_while_acc_112_nl;
  wire[1:0] while_acc_113_nl;
  wire[2:0] nl_while_acc_113_nl;
  wire[2:0] while_acc_115_nl;
  wire[3:0] nl_while_acc_115_nl;
  wire[1:0] while_acc_116_nl;
  wire[2:0] nl_while_acc_116_nl;
  wire[2:0] while_acc_118_nl;
  wire[3:0] nl_while_acc_118_nl;
  wire[1:0] while_acc_119_nl;
  wire[2:0] nl_while_acc_119_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_cmp_3_bdwt = while_mul_cmp_3_oswt_unreg & run_wen;
  assign while_mul_cmp_3_tiswt3 = (~ run_wten) & while_mul_cmp_3_iswt3;
  assign while_mul_cmp_3_iden_1 = while_mul_cmp_3_ogwt;
  assign while_mul_cmp_3_ogwt = while_mul_cmp_3_hile_mul_cmp_3_pdswt0 | (while_mul_cmp_3_icwt!=3'b000);
  assign while_mul_cmp_3_bdwt_2 = while_mul_cmp_3_oswt_unreg_1 & run_wen;
  assign while_mul_cmp_3_tiswt3_1 = (~ run_wten) & while_mul_cmp_3_iswt3_1;
  assign while_mul_cmp_3_iden_3 = while_mul_cmp_3_ogwt_1;
  assign while_mul_cmp_3_ogwt_1 = while_mul_cmp_3_hile_mul_cmp_3_pdswt0_1 | (while_mul_cmp_3_icwt_1!=3'b000);
  assign while_mul_cmp_3_bdwt_4 = while_mul_cmp_3_oswt_unreg_2 & run_wen;
  assign while_mul_cmp_3_tiswt3_2 = (~ run_wten) & while_mul_cmp_3_iswt3_2;
  assign while_mul_cmp_3_iden_5 = while_mul_cmp_3_ogwt_2;
  assign while_mul_cmp_3_ogwt_2 = while_mul_cmp_3_hile_mul_cmp_3_pdswt0_2 | (while_mul_cmp_3_icwt_2!=3'b000);
  assign run_cgwt_21 = while_mul_cmp_3_ogwt_2 | while_mul_cmp_3_tiswt3_2 | while_mul_cmp_3_hile_mul_cmp_3_pdswt2_2
      | while_mul_cmp_3_hile_mul_cmp_3_pdswt1_2 | while_mul_cmp_3_ogwt_1 | while_mul_cmp_3_tiswt3_1
      | while_mul_cmp_3_hile_mul_cmp_3_pdswt2_1 | while_mul_cmp_3_hile_mul_cmp_3_pdswt1_1
      | while_mul_cmp_3_ogwt | while_mul_cmp_3_tiswt3 | while_mul_cmp_3_hile_mul_cmp_3_pdswt2
      | while_mul_cmp_3_hile_mul_cmp_3_pdswt1 | (run_wen & while_mul_cmp_3_iswt3_2_pff)
      | (run_wen & while_mul_cmp_3_iswt3_1_pff) | (run_wen & while_mul_cmp_3_iswt3_pff);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_3_hile_mul_cmp_3_pdswt2 <= 1'b0;
      while_mul_cmp_3_hile_mul_cmp_3_pdswt1 <= 1'b0;
      while_mul_cmp_3_hile_mul_cmp_3_pdswt0 <= 1'b0;
      while_mul_cmp_3_icwt <= 3'b000;
      while_mul_cmp_3_hile_mul_cmp_3_pdswt2_1 <= 1'b0;
      while_mul_cmp_3_hile_mul_cmp_3_pdswt1_1 <= 1'b0;
      while_mul_cmp_3_hile_mul_cmp_3_pdswt0_1 <= 1'b0;
      while_mul_cmp_3_icwt_1 <= 3'b000;
      while_mul_cmp_3_hile_mul_cmp_3_pdswt2_2 <= 1'b0;
      while_mul_cmp_3_hile_mul_cmp_3_pdswt1_2 <= 1'b0;
      while_mul_cmp_3_hile_mul_cmp_3_pdswt0_2 <= 1'b0;
      while_mul_cmp_3_icwt_2 <= 3'b000;
    end
    else begin
      while_mul_cmp_3_hile_mul_cmp_3_pdswt2 <= while_mul_cmp_3_tiswt3;
      while_mul_cmp_3_hile_mul_cmp_3_pdswt1 <= while_mul_cmp_3_hile_mul_cmp_3_pdswt2;
      while_mul_cmp_3_hile_mul_cmp_3_pdswt0 <= while_mul_cmp_3_hile_mul_cmp_3_pdswt1;
      while_mul_cmp_3_icwt <= nl_while_mul_cmp_3_icwt[2:0];
      while_mul_cmp_3_hile_mul_cmp_3_pdswt2_1 <= while_mul_cmp_3_tiswt3_1;
      while_mul_cmp_3_hile_mul_cmp_3_pdswt1_1 <= while_mul_cmp_3_hile_mul_cmp_3_pdswt2_1;
      while_mul_cmp_3_hile_mul_cmp_3_pdswt0_1 <= while_mul_cmp_3_hile_mul_cmp_3_pdswt1_1;
      while_mul_cmp_3_icwt_1 <= nl_while_mul_cmp_3_icwt_1[2:0];
      while_mul_cmp_3_hile_mul_cmp_3_pdswt2_2 <= while_mul_cmp_3_tiswt3_2;
      while_mul_cmp_3_hile_mul_cmp_3_pdswt1_2 <= while_mul_cmp_3_hile_mul_cmp_3_pdswt2_2;
      while_mul_cmp_3_hile_mul_cmp_3_pdswt0_2 <= while_mul_cmp_3_hile_mul_cmp_3_pdswt1_2;
      while_mul_cmp_3_icwt_2 <= nl_while_mul_cmp_3_icwt_2[2:0];
    end
  end
  assign nl_while_acc_112_nl = while_mul_cmp_3_icwt + 3'b111;
  assign while_acc_112_nl = nl_while_acc_112_nl[2:0];
  assign nl_while_acc_113_nl = conv_u2u_1_2(while_mul_cmp_3_hile_mul_cmp_3_pdswt0)
      + conv_u2u_1_2(~ while_mul_cmp_3_ogwt);
  assign while_acc_113_nl = nl_while_acc_113_nl[1:0];
  assign nl_while_mul_cmp_3_icwt  = while_acc_112_nl + conv_u2u_2_3(while_acc_113_nl);
  assign nl_while_acc_115_nl = while_mul_cmp_3_icwt_1 + 3'b111;
  assign while_acc_115_nl = nl_while_acc_115_nl[2:0];
  assign nl_while_acc_116_nl = conv_u2u_1_2(while_mul_cmp_3_hile_mul_cmp_3_pdswt0_1)
      + conv_u2u_1_2(~ while_mul_cmp_3_ogwt_1);
  assign while_acc_116_nl = nl_while_acc_116_nl[1:0];
  assign nl_while_mul_cmp_3_icwt_1  = while_acc_115_nl + conv_u2u_2_3(while_acc_116_nl);
  assign nl_while_acc_118_nl = while_mul_cmp_3_icwt_2 + 3'b111;
  assign while_acc_118_nl = nl_while_acc_118_nl[2:0];
  assign nl_while_acc_119_nl = conv_u2u_1_2(while_mul_cmp_3_hile_mul_cmp_3_pdswt0_2)
      + conv_u2u_1_2(~ while_mul_cmp_3_ogwt_2);
  assign while_acc_119_nl = nl_while_acc_119_nl[1:0];
  assign nl_while_mul_cmp_3_icwt_2  = while_acc_118_nl + conv_u2u_2_3(while_acc_119_nl);

  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_cmp_2_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_2
// ------------------------------------------------------------------


module Rotate_run_while_mul_cmp_2_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_2
    (
  clk, rst, while_mul_cmp_2_bawt, while_mul_cmp_2_iden, while_mul_cmp_2_iden_2, while_mul_cmp_2_iden_4,
      while_mul_cmp_2_z_mxwt, while_mul_cmp_2_z_mxwt_1, while_mul_cmp_2_z_mxwt_2,
      while_mul_cmp_2_biwt, while_mul_cmp_2_bdwt, while_mul_cmp_2_biwt_2, while_mul_cmp_2_bdwt_2,
      while_mul_cmp_2_biwt_4, while_mul_cmp_2_bdwt_4, while_mul_cmp_2_z
);
  input clk;
  input rst;
  output while_mul_cmp_2_bawt;
  output while_mul_cmp_2_iden;
  output while_mul_cmp_2_iden_2;
  output while_mul_cmp_2_iden_4;
  output [111:0] while_mul_cmp_2_z_mxwt;
  output [111:0] while_mul_cmp_2_z_mxwt_1;
  output [127:0] while_mul_cmp_2_z_mxwt_2;
  input while_mul_cmp_2_biwt;
  input while_mul_cmp_2_bdwt;
  input while_mul_cmp_2_biwt_2;
  input while_mul_cmp_2_bdwt_2;
  input while_mul_cmp_2_biwt_4;
  input while_mul_cmp_2_bdwt_4;
  input [127:0] while_mul_cmp_2_z;


  // Interconnect Declarations
  reg [2:0] while_mul_cmp_2_bcwt;
  wire [3:0] nl_while_mul_cmp_2_bcwt;
  reg [2:0] while_mul_cmp_2_bcwt_1;
  wire [3:0] nl_while_mul_cmp_2_bcwt_1;
  reg [2:0] while_mul_cmp_2_bcwt_2;
  wire [3:0] nl_while_mul_cmp_2_bcwt_2;
  reg [127:0] while_mul_cmp_2_z_bfwt_8;
  reg [127:0] while_mul_cmp_2_z_bfwt_9;
  reg [127:0] while_mul_cmp_2_z_bfwt_10;
  reg [127:0] while_mul_cmp_2_z_bfwt_11;
  reg [111:0] while_mul_cmp_2_z_bfwt_3_111_0;
  reg [111:0] while_mul_cmp_2_z_bfwt_7_111_0;
  reg [111:0] while_mul_cmp_2_z_bfwt_2_111_0;
  reg [111:0] while_mul_cmp_2_z_bfwt_6_111_0;
  reg [111:0] while_mul_cmp_2_z_bfwt_1_111_0;
  reg [111:0] while_mul_cmp_2_z_bfwt_5_111_0;
  reg [111:0] while_mul_cmp_2_z_bfwt_111_0;
  reg [111:0] while_mul_cmp_2_z_bfwt_4_111_0;

  wire[2:0] while_acc_105_nl;
  wire[3:0] nl_while_acc_105_nl;
  wire[1:0] while_acc_106_nl;
  wire[2:0] nl_while_acc_106_nl;
  wire[2:0] while_acc_108_nl;
  wire[3:0] nl_while_acc_108_nl;
  wire[1:0] while_acc_109_nl;
  wire[2:0] nl_while_acc_109_nl;
  wire[2:0] while_acc_111_nl;
  wire[3:0] nl_while_acc_111_nl;
  wire[1:0] while_acc_112_nl;
  wire[2:0] nl_while_acc_112_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_cmp_2_iden = while_mul_cmp_2_biwt | while_mul_cmp_2_bdwt;
  assign while_mul_cmp_2_bawt = while_mul_cmp_2_biwt | (while_mul_cmp_2_bcwt!=3'b000);
  assign while_mul_cmp_2_iden_2 = while_mul_cmp_2_biwt_2 | while_mul_cmp_2_bdwt_2;
  assign while_mul_cmp_2_iden_4 = while_mul_cmp_2_biwt_4 | while_mul_cmp_2_bdwt_4;
  assign while_mul_cmp_2_z_mxwt_2 = MUX_v_128_5_2(while_mul_cmp_2_z, while_mul_cmp_2_z_bfwt_8,
      while_mul_cmp_2_z_bfwt_9, while_mul_cmp_2_z_bfwt_10, while_mul_cmp_2_z_bfwt_11,
      while_mul_cmp_2_bcwt);
  assign while_mul_cmp_2_z_mxwt = MUX_v_112_5_2((while_mul_cmp_2_z[111:0]), while_mul_cmp_2_z_bfwt_111_0,
      while_mul_cmp_2_z_bfwt_1_111_0, while_mul_cmp_2_z_bfwt_2_111_0, while_mul_cmp_2_z_bfwt_3_111_0,
      while_mul_cmp_2_bcwt_2);
  assign while_mul_cmp_2_z_mxwt_1 = MUX_v_112_5_2((while_mul_cmp_2_z[111:0]), while_mul_cmp_2_z_bfwt_4_111_0,
      while_mul_cmp_2_z_bfwt_5_111_0, while_mul_cmp_2_z_bfwt_6_111_0, while_mul_cmp_2_z_bfwt_7_111_0,
      while_mul_cmp_2_bcwt_1);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_2_bcwt <= 3'b000;
      while_mul_cmp_2_bcwt_1 <= 3'b000;
      while_mul_cmp_2_bcwt_2 <= 3'b000;
    end
    else begin
      while_mul_cmp_2_bcwt <= nl_while_mul_cmp_2_bcwt[2:0];
      while_mul_cmp_2_bcwt_1 <= nl_while_mul_cmp_2_bcwt_1[2:0];
      while_mul_cmp_2_bcwt_2 <= nl_while_mul_cmp_2_bcwt_2[2:0];
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_2_z_bfwt_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_2_z_bfwt_1_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_2_z_bfwt_2_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_2_z_bfwt_3_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_cmp_2_biwt_4 ) begin
      while_mul_cmp_2_z_bfwt_111_0 <= while_mul_cmp_2_z[111:0];
      while_mul_cmp_2_z_bfwt_1_111_0 <= while_mul_cmp_2_z_bfwt_111_0;
      while_mul_cmp_2_z_bfwt_2_111_0 <= while_mul_cmp_2_z_bfwt_1_111_0;
      while_mul_cmp_2_z_bfwt_3_111_0 <= while_mul_cmp_2_z_bfwt_2_111_0;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_2_z_bfwt_4_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_2_z_bfwt_5_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_2_z_bfwt_6_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_2_z_bfwt_7_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_cmp_2_biwt_2 ) begin
      while_mul_cmp_2_z_bfwt_4_111_0 <= while_mul_cmp_2_z[111:0];
      while_mul_cmp_2_z_bfwt_5_111_0 <= while_mul_cmp_2_z_bfwt_4_111_0;
      while_mul_cmp_2_z_bfwt_6_111_0 <= while_mul_cmp_2_z_bfwt_5_111_0;
      while_mul_cmp_2_z_bfwt_7_111_0 <= while_mul_cmp_2_z_bfwt_6_111_0;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_2_z_bfwt_8 <= 128'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_2_z_bfwt_9 <= 128'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_2_z_bfwt_10 <= 128'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_2_z_bfwt_11 <= 128'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_cmp_2_biwt ) begin
      while_mul_cmp_2_z_bfwt_8 <= while_mul_cmp_2_z;
      while_mul_cmp_2_z_bfwt_9 <= while_mul_cmp_2_z_bfwt_8;
      while_mul_cmp_2_z_bfwt_10 <= while_mul_cmp_2_z_bfwt_9;
      while_mul_cmp_2_z_bfwt_11 <= while_mul_cmp_2_z_bfwt_10;
    end
  end
  assign nl_while_acc_105_nl = while_mul_cmp_2_bcwt + 3'b111;
  assign while_acc_105_nl = nl_while_acc_105_nl[2:0];
  assign nl_while_acc_106_nl = conv_u2u_1_2(~ while_mul_cmp_2_bdwt) + conv_u2u_1_2(while_mul_cmp_2_biwt);
  assign while_acc_106_nl = nl_while_acc_106_nl[1:0];
  assign nl_while_mul_cmp_2_bcwt  = while_acc_105_nl + conv_u2u_2_3(while_acc_106_nl);
  assign nl_while_acc_108_nl = while_mul_cmp_2_bcwt_1 + 3'b111;
  assign while_acc_108_nl = nl_while_acc_108_nl[2:0];
  assign nl_while_acc_109_nl = conv_u2u_1_2(~ while_mul_cmp_2_bdwt_2) + conv_u2u_1_2(while_mul_cmp_2_biwt_2);
  assign while_acc_109_nl = nl_while_acc_109_nl[1:0];
  assign nl_while_mul_cmp_2_bcwt_1  = while_acc_108_nl + conv_u2u_2_3(while_acc_109_nl);
  assign nl_while_acc_111_nl = while_mul_cmp_2_bcwt_2 + 3'b111;
  assign while_acc_111_nl = nl_while_acc_111_nl[2:0];
  assign nl_while_acc_112_nl = conv_u2u_1_2(~ while_mul_cmp_2_bdwt_4) + conv_u2u_1_2(while_mul_cmp_2_biwt_4);
  assign while_acc_112_nl = nl_while_acc_112_nl[1:0];
  assign nl_while_mul_cmp_2_bcwt_2  = while_acc_111_nl + conv_u2u_2_3(while_acc_112_nl);

  function automatic [111:0] MUX_v_112_5_2;
    input [111:0] input_0;
    input [111:0] input_1;
    input [111:0] input_2;
    input [111:0] input_3;
    input [111:0] input_4;
    input [2:0] sel;
    reg [111:0] result;
  begin
    case (sel)
      3'b000 : begin
        result = input_0;
      end
      3'b001 : begin
        result = input_1;
      end
      3'b010 : begin
        result = input_2;
      end
      3'b011 : begin
        result = input_3;
      end
      default : begin
        result = input_4;
      end
    endcase
    MUX_v_112_5_2 = result;
  end
  endfunction


  function automatic [127:0] MUX_v_128_5_2;
    input [127:0] input_0;
    input [127:0] input_1;
    input [127:0] input_2;
    input [127:0] input_3;
    input [127:0] input_4;
    input [2:0] sel;
    reg [127:0] result;
  begin
    case (sel)
      3'b000 : begin
        result = input_0;
      end
      3'b001 : begin
        result = input_1;
      end
      3'b010 : begin
        result = input_2;
      end
      3'b011 : begin
        result = input_3;
      end
      default : begin
        result = input_4;
      end
    endcase
    MUX_v_128_5_2 = result;
  end
  endfunction


  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_cmp_2_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_2
// ------------------------------------------------------------------


module Rotate_run_while_mul_cmp_2_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_2
    (
  clk, rst, run_wen, run_wten, while_mul_cmp_2_oswt_unreg, while_mul_cmp_2_iswt3,
      while_mul_cmp_2_iden_1, while_mul_cmp_2_oswt_unreg_1, while_mul_cmp_2_iswt3_1,
      while_mul_cmp_2_iden_3, while_mul_cmp_2_oswt_unreg_2, while_mul_cmp_2_iswt3_2,
      while_mul_cmp_2_iden_5, run_cgwt_20, while_mul_cmp_2_bdwt, while_mul_cmp_2_bdwt_2,
      while_mul_cmp_2_bdwt_4, while_mul_cmp_2_iswt3_2_pff, while_mul_cmp_2_iswt3_1_pff,
      while_mul_cmp_2_iswt3_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_cmp_2_oswt_unreg;
  input while_mul_cmp_2_iswt3;
  output while_mul_cmp_2_iden_1;
  input while_mul_cmp_2_oswt_unreg_1;
  input while_mul_cmp_2_iswt3_1;
  output while_mul_cmp_2_iden_3;
  input while_mul_cmp_2_oswt_unreg_2;
  input while_mul_cmp_2_iswt3_2;
  output while_mul_cmp_2_iden_5;
  output run_cgwt_20;
  output while_mul_cmp_2_bdwt;
  output while_mul_cmp_2_bdwt_2;
  output while_mul_cmp_2_bdwt_4;
  input while_mul_cmp_2_iswt3_2_pff;
  input while_mul_cmp_2_iswt3_1_pff;
  input while_mul_cmp_2_iswt3_pff;


  // Interconnect Declarations
  wire while_mul_cmp_2_ogwt;
  wire while_mul_cmp_2_tiswt3;
  reg while_mul_cmp_2_hile_mul_cmp_2_pdswt2;
  reg while_mul_cmp_2_hile_mul_cmp_2_pdswt1;
  reg while_mul_cmp_2_hile_mul_cmp_2_pdswt0;
  reg [2:0] while_mul_cmp_2_icwt;
  wire [3:0] nl_while_mul_cmp_2_icwt;
  wire while_mul_cmp_2_ogwt_1;
  wire while_mul_cmp_2_tiswt3_1;
  reg while_mul_cmp_2_hile_mul_cmp_2_pdswt2_1;
  reg while_mul_cmp_2_hile_mul_cmp_2_pdswt1_1;
  reg while_mul_cmp_2_hile_mul_cmp_2_pdswt0_1;
  reg [2:0] while_mul_cmp_2_icwt_1;
  wire [3:0] nl_while_mul_cmp_2_icwt_1;
  wire while_mul_cmp_2_ogwt_2;
  wire while_mul_cmp_2_tiswt3_2;
  reg while_mul_cmp_2_hile_mul_cmp_2_pdswt2_2;
  reg while_mul_cmp_2_hile_mul_cmp_2_pdswt1_2;
  reg while_mul_cmp_2_hile_mul_cmp_2_pdswt0_2;
  reg [2:0] while_mul_cmp_2_icwt_2;
  wire [3:0] nl_while_mul_cmp_2_icwt_2;

  wire[2:0] while_acc_106_nl;
  wire[3:0] nl_while_acc_106_nl;
  wire[1:0] while_acc_107_nl;
  wire[2:0] nl_while_acc_107_nl;
  wire[2:0] while_acc_109_nl;
  wire[3:0] nl_while_acc_109_nl;
  wire[1:0] while_acc_110_nl;
  wire[2:0] nl_while_acc_110_nl;
  wire[2:0] while_acc_112_nl;
  wire[3:0] nl_while_acc_112_nl;
  wire[1:0] while_acc_113_nl;
  wire[2:0] nl_while_acc_113_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_cmp_2_bdwt = while_mul_cmp_2_oswt_unreg & run_wen;
  assign while_mul_cmp_2_tiswt3 = (~ run_wten) & while_mul_cmp_2_iswt3;
  assign while_mul_cmp_2_iden_1 = while_mul_cmp_2_ogwt;
  assign while_mul_cmp_2_ogwt = while_mul_cmp_2_hile_mul_cmp_2_pdswt0 | (while_mul_cmp_2_icwt!=3'b000);
  assign while_mul_cmp_2_bdwt_2 = while_mul_cmp_2_oswt_unreg_1 & run_wen;
  assign while_mul_cmp_2_tiswt3_1 = (~ run_wten) & while_mul_cmp_2_iswt3_1;
  assign while_mul_cmp_2_iden_3 = while_mul_cmp_2_ogwt_1;
  assign while_mul_cmp_2_ogwt_1 = while_mul_cmp_2_hile_mul_cmp_2_pdswt0_1 | (while_mul_cmp_2_icwt_1!=3'b000);
  assign while_mul_cmp_2_bdwt_4 = while_mul_cmp_2_oswt_unreg_2 & run_wen;
  assign while_mul_cmp_2_tiswt3_2 = (~ run_wten) & while_mul_cmp_2_iswt3_2;
  assign while_mul_cmp_2_iden_5 = while_mul_cmp_2_ogwt_2;
  assign while_mul_cmp_2_ogwt_2 = while_mul_cmp_2_hile_mul_cmp_2_pdswt0_2 | (while_mul_cmp_2_icwt_2!=3'b000);
  assign run_cgwt_20 = while_mul_cmp_2_ogwt_2 | while_mul_cmp_2_tiswt3_2 | while_mul_cmp_2_hile_mul_cmp_2_pdswt2_2
      | while_mul_cmp_2_hile_mul_cmp_2_pdswt1_2 | while_mul_cmp_2_ogwt_1 | while_mul_cmp_2_tiswt3_1
      | while_mul_cmp_2_hile_mul_cmp_2_pdswt2_1 | while_mul_cmp_2_hile_mul_cmp_2_pdswt1_1
      | while_mul_cmp_2_ogwt | while_mul_cmp_2_tiswt3 | while_mul_cmp_2_hile_mul_cmp_2_pdswt2
      | while_mul_cmp_2_hile_mul_cmp_2_pdswt1 | (run_wen & while_mul_cmp_2_iswt3_2_pff)
      | (run_wen & while_mul_cmp_2_iswt3_1_pff) | (run_wen & while_mul_cmp_2_iswt3_pff);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_2_hile_mul_cmp_2_pdswt2 <= 1'b0;
      while_mul_cmp_2_hile_mul_cmp_2_pdswt1 <= 1'b0;
      while_mul_cmp_2_hile_mul_cmp_2_pdswt0 <= 1'b0;
      while_mul_cmp_2_icwt <= 3'b000;
      while_mul_cmp_2_hile_mul_cmp_2_pdswt2_1 <= 1'b0;
      while_mul_cmp_2_hile_mul_cmp_2_pdswt1_1 <= 1'b0;
      while_mul_cmp_2_hile_mul_cmp_2_pdswt0_1 <= 1'b0;
      while_mul_cmp_2_icwt_1 <= 3'b000;
      while_mul_cmp_2_hile_mul_cmp_2_pdswt2_2 <= 1'b0;
      while_mul_cmp_2_hile_mul_cmp_2_pdswt1_2 <= 1'b0;
      while_mul_cmp_2_hile_mul_cmp_2_pdswt0_2 <= 1'b0;
      while_mul_cmp_2_icwt_2 <= 3'b000;
    end
    else begin
      while_mul_cmp_2_hile_mul_cmp_2_pdswt2 <= while_mul_cmp_2_tiswt3;
      while_mul_cmp_2_hile_mul_cmp_2_pdswt1 <= while_mul_cmp_2_hile_mul_cmp_2_pdswt2;
      while_mul_cmp_2_hile_mul_cmp_2_pdswt0 <= while_mul_cmp_2_hile_mul_cmp_2_pdswt1;
      while_mul_cmp_2_icwt <= nl_while_mul_cmp_2_icwt[2:0];
      while_mul_cmp_2_hile_mul_cmp_2_pdswt2_1 <= while_mul_cmp_2_tiswt3_1;
      while_mul_cmp_2_hile_mul_cmp_2_pdswt1_1 <= while_mul_cmp_2_hile_mul_cmp_2_pdswt2_1;
      while_mul_cmp_2_hile_mul_cmp_2_pdswt0_1 <= while_mul_cmp_2_hile_mul_cmp_2_pdswt1_1;
      while_mul_cmp_2_icwt_1 <= nl_while_mul_cmp_2_icwt_1[2:0];
      while_mul_cmp_2_hile_mul_cmp_2_pdswt2_2 <= while_mul_cmp_2_tiswt3_2;
      while_mul_cmp_2_hile_mul_cmp_2_pdswt1_2 <= while_mul_cmp_2_hile_mul_cmp_2_pdswt2_2;
      while_mul_cmp_2_hile_mul_cmp_2_pdswt0_2 <= while_mul_cmp_2_hile_mul_cmp_2_pdswt1_2;
      while_mul_cmp_2_icwt_2 <= nl_while_mul_cmp_2_icwt_2[2:0];
    end
  end
  assign nl_while_acc_106_nl = while_mul_cmp_2_icwt + 3'b111;
  assign while_acc_106_nl = nl_while_acc_106_nl[2:0];
  assign nl_while_acc_107_nl = conv_u2u_1_2(while_mul_cmp_2_hile_mul_cmp_2_pdswt0)
      + conv_u2u_1_2(~ while_mul_cmp_2_ogwt);
  assign while_acc_107_nl = nl_while_acc_107_nl[1:0];
  assign nl_while_mul_cmp_2_icwt  = while_acc_106_nl + conv_u2u_2_3(while_acc_107_nl);
  assign nl_while_acc_109_nl = while_mul_cmp_2_icwt_1 + 3'b111;
  assign while_acc_109_nl = nl_while_acc_109_nl[2:0];
  assign nl_while_acc_110_nl = conv_u2u_1_2(while_mul_cmp_2_hile_mul_cmp_2_pdswt0_1)
      + conv_u2u_1_2(~ while_mul_cmp_2_ogwt_1);
  assign while_acc_110_nl = nl_while_acc_110_nl[1:0];
  assign nl_while_mul_cmp_2_icwt_1  = while_acc_109_nl + conv_u2u_2_3(while_acc_110_nl);
  assign nl_while_acc_112_nl = while_mul_cmp_2_icwt_2 + 3'b111;
  assign while_acc_112_nl = nl_while_acc_112_nl[2:0];
  assign nl_while_acc_113_nl = conv_u2u_1_2(while_mul_cmp_2_hile_mul_cmp_2_pdswt0_2)
      + conv_u2u_1_2(~ while_mul_cmp_2_ogwt_2);
  assign while_acc_113_nl = nl_while_acc_113_nl[1:0];
  assign nl_while_mul_cmp_2_icwt_2  = while_acc_112_nl + conv_u2u_2_3(while_acc_113_nl);

  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_cmp_1_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_1
// ------------------------------------------------------------------


module Rotate_run_while_mul_cmp_1_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_1
    (
  clk, rst, while_mul_cmp_1_bawt, while_mul_cmp_1_iden, while_mul_cmp_1_iden_2, while_mul_cmp_1_iden_4,
      while_mul_cmp_1_z_mxwt, while_mul_cmp_1_z_mxwt_1, while_mul_cmp_1_z_mxwt_2,
      while_mul_cmp_1_biwt, while_mul_cmp_1_bdwt, while_mul_cmp_1_biwt_2, while_mul_cmp_1_bdwt_2,
      while_mul_cmp_1_biwt_4, while_mul_cmp_1_bdwt_4, while_mul_cmp_1_z
);
  input clk;
  input rst;
  output while_mul_cmp_1_bawt;
  output while_mul_cmp_1_iden;
  output while_mul_cmp_1_iden_2;
  output while_mul_cmp_1_iden_4;
  output [111:0] while_mul_cmp_1_z_mxwt;
  output [111:0] while_mul_cmp_1_z_mxwt_1;
  output [111:0] while_mul_cmp_1_z_mxwt_2;
  input while_mul_cmp_1_biwt;
  input while_mul_cmp_1_bdwt;
  input while_mul_cmp_1_biwt_2;
  input while_mul_cmp_1_bdwt_2;
  input while_mul_cmp_1_biwt_4;
  input while_mul_cmp_1_bdwt_4;
  input [127:0] while_mul_cmp_1_z;


  // Interconnect Declarations
  reg [2:0] while_mul_cmp_1_bcwt;
  wire [3:0] nl_while_mul_cmp_1_bcwt;
  reg [2:0] while_mul_cmp_1_bcwt_1;
  wire [3:0] nl_while_mul_cmp_1_bcwt_1;
  reg [2:0] while_mul_cmp_1_bcwt_2;
  wire [3:0] nl_while_mul_cmp_1_bcwt_2;
  reg [111:0] while_mul_cmp_1_z_bfwt_3_111_0;
  reg [111:0] while_mul_cmp_1_z_bfwt_7_111_0;
  reg [111:0] while_mul_cmp_1_z_bfwt_11_111_0;
  reg [111:0] while_mul_cmp_1_z_bfwt_2_111_0;
  reg [111:0] while_mul_cmp_1_z_bfwt_6_111_0;
  reg [111:0] while_mul_cmp_1_z_bfwt_10_111_0;
  reg [111:0] while_mul_cmp_1_z_bfwt_1_111_0;
  reg [111:0] while_mul_cmp_1_z_bfwt_5_111_0;
  reg [111:0] while_mul_cmp_1_z_bfwt_9_111_0;
  reg [111:0] while_mul_cmp_1_z_bfwt_111_0;
  reg [111:0] while_mul_cmp_1_z_bfwt_4_111_0;
  reg [111:0] while_mul_cmp_1_z_bfwt_8_111_0;

  wire[2:0] while_acc_99_nl;
  wire[3:0] nl_while_acc_99_nl;
  wire[1:0] while_acc_100_nl;
  wire[2:0] nl_while_acc_100_nl;
  wire[2:0] while_acc_102_nl;
  wire[3:0] nl_while_acc_102_nl;
  wire[1:0] while_acc_103_nl;
  wire[2:0] nl_while_acc_103_nl;
  wire[2:0] while_acc_105_nl;
  wire[3:0] nl_while_acc_105_nl;
  wire[1:0] while_acc_106_nl;
  wire[2:0] nl_while_acc_106_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_cmp_1_iden = while_mul_cmp_1_biwt | while_mul_cmp_1_bdwt;
  assign while_mul_cmp_1_bawt = while_mul_cmp_1_biwt | (while_mul_cmp_1_bcwt!=3'b000);
  assign while_mul_cmp_1_iden_2 = while_mul_cmp_1_biwt_2 | while_mul_cmp_1_bdwt_2;
  assign while_mul_cmp_1_iden_4 = while_mul_cmp_1_biwt_4 | while_mul_cmp_1_bdwt_4;
  assign while_mul_cmp_1_z_mxwt = MUX_v_112_5_2((while_mul_cmp_1_z[111:0]), while_mul_cmp_1_z_bfwt_111_0,
      while_mul_cmp_1_z_bfwt_1_111_0, while_mul_cmp_1_z_bfwt_2_111_0, while_mul_cmp_1_z_bfwt_3_111_0,
      while_mul_cmp_1_bcwt_2);
  assign while_mul_cmp_1_z_mxwt_1 = MUX_v_112_5_2((while_mul_cmp_1_z[111:0]), while_mul_cmp_1_z_bfwt_4_111_0,
      while_mul_cmp_1_z_bfwt_5_111_0, while_mul_cmp_1_z_bfwt_6_111_0, while_mul_cmp_1_z_bfwt_7_111_0,
      while_mul_cmp_1_bcwt_1);
  assign while_mul_cmp_1_z_mxwt_2 = MUX_v_112_5_2((while_mul_cmp_1_z[111:0]), while_mul_cmp_1_z_bfwt_8_111_0,
      while_mul_cmp_1_z_bfwt_9_111_0, while_mul_cmp_1_z_bfwt_10_111_0, while_mul_cmp_1_z_bfwt_11_111_0,
      while_mul_cmp_1_bcwt);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_1_bcwt <= 3'b000;
      while_mul_cmp_1_bcwt_1 <= 3'b000;
      while_mul_cmp_1_bcwt_2 <= 3'b000;
    end
    else begin
      while_mul_cmp_1_bcwt <= nl_while_mul_cmp_1_bcwt[2:0];
      while_mul_cmp_1_bcwt_1 <= nl_while_mul_cmp_1_bcwt_1[2:0];
      while_mul_cmp_1_bcwt_2 <= nl_while_mul_cmp_1_bcwt_2[2:0];
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_1_z_bfwt_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_1_z_bfwt_1_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_1_z_bfwt_2_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_1_z_bfwt_3_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_cmp_1_biwt_4 ) begin
      while_mul_cmp_1_z_bfwt_111_0 <= while_mul_cmp_1_z[111:0];
      while_mul_cmp_1_z_bfwt_1_111_0 <= while_mul_cmp_1_z_bfwt_111_0;
      while_mul_cmp_1_z_bfwt_2_111_0 <= while_mul_cmp_1_z_bfwt_1_111_0;
      while_mul_cmp_1_z_bfwt_3_111_0 <= while_mul_cmp_1_z_bfwt_2_111_0;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_1_z_bfwt_4_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_1_z_bfwt_5_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_1_z_bfwt_6_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_1_z_bfwt_7_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_cmp_1_biwt_2 ) begin
      while_mul_cmp_1_z_bfwt_4_111_0 <= while_mul_cmp_1_z[111:0];
      while_mul_cmp_1_z_bfwt_5_111_0 <= while_mul_cmp_1_z_bfwt_4_111_0;
      while_mul_cmp_1_z_bfwt_6_111_0 <= while_mul_cmp_1_z_bfwt_5_111_0;
      while_mul_cmp_1_z_bfwt_7_111_0 <= while_mul_cmp_1_z_bfwt_6_111_0;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_1_z_bfwt_8_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_1_z_bfwt_9_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_1_z_bfwt_10_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_1_z_bfwt_11_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_cmp_1_biwt ) begin
      while_mul_cmp_1_z_bfwt_8_111_0 <= while_mul_cmp_1_z[111:0];
      while_mul_cmp_1_z_bfwt_9_111_0 <= while_mul_cmp_1_z_bfwt_8_111_0;
      while_mul_cmp_1_z_bfwt_10_111_0 <= while_mul_cmp_1_z_bfwt_9_111_0;
      while_mul_cmp_1_z_bfwt_11_111_0 <= while_mul_cmp_1_z_bfwt_10_111_0;
    end
  end
  assign nl_while_acc_99_nl = while_mul_cmp_1_bcwt + 3'b111;
  assign while_acc_99_nl = nl_while_acc_99_nl[2:0];
  assign nl_while_acc_100_nl = conv_u2u_1_2(~ while_mul_cmp_1_bdwt) + conv_u2u_1_2(while_mul_cmp_1_biwt);
  assign while_acc_100_nl = nl_while_acc_100_nl[1:0];
  assign nl_while_mul_cmp_1_bcwt  = while_acc_99_nl + conv_u2u_2_3(while_acc_100_nl);
  assign nl_while_acc_102_nl = while_mul_cmp_1_bcwt_1 + 3'b111;
  assign while_acc_102_nl = nl_while_acc_102_nl[2:0];
  assign nl_while_acc_103_nl = conv_u2u_1_2(~ while_mul_cmp_1_bdwt_2) + conv_u2u_1_2(while_mul_cmp_1_biwt_2);
  assign while_acc_103_nl = nl_while_acc_103_nl[1:0];
  assign nl_while_mul_cmp_1_bcwt_1  = while_acc_102_nl + conv_u2u_2_3(while_acc_103_nl);
  assign nl_while_acc_105_nl = while_mul_cmp_1_bcwt_2 + 3'b111;
  assign while_acc_105_nl = nl_while_acc_105_nl[2:0];
  assign nl_while_acc_106_nl = conv_u2u_1_2(~ while_mul_cmp_1_bdwt_4) + conv_u2u_1_2(while_mul_cmp_1_biwt_4);
  assign while_acc_106_nl = nl_while_acc_106_nl[1:0];
  assign nl_while_mul_cmp_1_bcwt_2  = while_acc_105_nl + conv_u2u_2_3(while_acc_106_nl);

  function automatic [111:0] MUX_v_112_5_2;
    input [111:0] input_0;
    input [111:0] input_1;
    input [111:0] input_2;
    input [111:0] input_3;
    input [111:0] input_4;
    input [2:0] sel;
    reg [111:0] result;
  begin
    case (sel)
      3'b000 : begin
        result = input_0;
      end
      3'b001 : begin
        result = input_1;
      end
      3'b010 : begin
        result = input_2;
      end
      3'b011 : begin
        result = input_3;
      end
      default : begin
        result = input_4;
      end
    endcase
    MUX_v_112_5_2 = result;
  end
  endfunction


  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_cmp_1_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_1
// ------------------------------------------------------------------


module Rotate_run_while_mul_cmp_1_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_1
    (
  clk, rst, run_wen, run_wten, while_mul_cmp_1_oswt_unreg, while_mul_cmp_1_iswt3,
      while_mul_cmp_1_iden_1, while_mul_cmp_1_oswt_unreg_1, while_mul_cmp_1_iswt3_1,
      while_mul_cmp_1_iden_3, while_mul_cmp_1_oswt_unreg_2, while_mul_cmp_1_iswt3_2,
      while_mul_cmp_1_iden_5, run_cgwt_19, while_mul_cmp_1_bdwt, while_mul_cmp_1_bdwt_2,
      while_mul_cmp_1_bdwt_4, while_mul_cmp_1_iswt3_2_pff, while_mul_cmp_1_iswt3_1_pff,
      while_mul_cmp_1_iswt3_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_cmp_1_oswt_unreg;
  input while_mul_cmp_1_iswt3;
  output while_mul_cmp_1_iden_1;
  input while_mul_cmp_1_oswt_unreg_1;
  input while_mul_cmp_1_iswt3_1;
  output while_mul_cmp_1_iden_3;
  input while_mul_cmp_1_oswt_unreg_2;
  input while_mul_cmp_1_iswt3_2;
  output while_mul_cmp_1_iden_5;
  output run_cgwt_19;
  output while_mul_cmp_1_bdwt;
  output while_mul_cmp_1_bdwt_2;
  output while_mul_cmp_1_bdwt_4;
  input while_mul_cmp_1_iswt3_2_pff;
  input while_mul_cmp_1_iswt3_1_pff;
  input while_mul_cmp_1_iswt3_pff;


  // Interconnect Declarations
  wire while_mul_cmp_1_ogwt;
  wire while_mul_cmp_1_tiswt3;
  reg while_mul_cmp_1_hile_mul_cmp_1_pdswt2;
  reg while_mul_cmp_1_hile_mul_cmp_1_pdswt1;
  reg while_mul_cmp_1_hile_mul_cmp_1_pdswt0;
  reg [2:0] while_mul_cmp_1_icwt;
  wire [3:0] nl_while_mul_cmp_1_icwt;
  wire while_mul_cmp_1_ogwt_1;
  wire while_mul_cmp_1_tiswt3_1;
  reg while_mul_cmp_1_hile_mul_cmp_1_pdswt2_1;
  reg while_mul_cmp_1_hile_mul_cmp_1_pdswt1_1;
  reg while_mul_cmp_1_hile_mul_cmp_1_pdswt0_1;
  reg [2:0] while_mul_cmp_1_icwt_1;
  wire [3:0] nl_while_mul_cmp_1_icwt_1;
  wire while_mul_cmp_1_ogwt_2;
  wire while_mul_cmp_1_tiswt3_2;
  reg while_mul_cmp_1_hile_mul_cmp_1_pdswt2_2;
  reg while_mul_cmp_1_hile_mul_cmp_1_pdswt1_2;
  reg while_mul_cmp_1_hile_mul_cmp_1_pdswt0_2;
  reg [2:0] while_mul_cmp_1_icwt_2;
  wire [3:0] nl_while_mul_cmp_1_icwt_2;

  wire[2:0] while_acc_100_nl;
  wire[3:0] nl_while_acc_100_nl;
  wire[1:0] while_acc_101_nl;
  wire[2:0] nl_while_acc_101_nl;
  wire[2:0] while_acc_103_nl;
  wire[3:0] nl_while_acc_103_nl;
  wire[1:0] while_acc_104_nl;
  wire[2:0] nl_while_acc_104_nl;
  wire[2:0] while_acc_106_nl;
  wire[3:0] nl_while_acc_106_nl;
  wire[1:0] while_acc_107_nl;
  wire[2:0] nl_while_acc_107_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_cmp_1_bdwt = while_mul_cmp_1_oswt_unreg & run_wen;
  assign while_mul_cmp_1_tiswt3 = (~ run_wten) & while_mul_cmp_1_iswt3;
  assign while_mul_cmp_1_iden_1 = while_mul_cmp_1_ogwt;
  assign while_mul_cmp_1_ogwt = while_mul_cmp_1_hile_mul_cmp_1_pdswt0 | (while_mul_cmp_1_icwt!=3'b000);
  assign while_mul_cmp_1_bdwt_2 = while_mul_cmp_1_oswt_unreg_1 & run_wen;
  assign while_mul_cmp_1_tiswt3_1 = (~ run_wten) & while_mul_cmp_1_iswt3_1;
  assign while_mul_cmp_1_iden_3 = while_mul_cmp_1_ogwt_1;
  assign while_mul_cmp_1_ogwt_1 = while_mul_cmp_1_hile_mul_cmp_1_pdswt0_1 | (while_mul_cmp_1_icwt_1!=3'b000);
  assign while_mul_cmp_1_bdwt_4 = while_mul_cmp_1_oswt_unreg_2 & run_wen;
  assign while_mul_cmp_1_tiswt3_2 = (~ run_wten) & while_mul_cmp_1_iswt3_2;
  assign while_mul_cmp_1_iden_5 = while_mul_cmp_1_ogwt_2;
  assign while_mul_cmp_1_ogwt_2 = while_mul_cmp_1_hile_mul_cmp_1_pdswt0_2 | (while_mul_cmp_1_icwt_2!=3'b000);
  assign run_cgwt_19 = while_mul_cmp_1_ogwt_2 | while_mul_cmp_1_tiswt3_2 | while_mul_cmp_1_hile_mul_cmp_1_pdswt2_2
      | while_mul_cmp_1_hile_mul_cmp_1_pdswt1_2 | while_mul_cmp_1_ogwt_1 | while_mul_cmp_1_tiswt3_1
      | while_mul_cmp_1_hile_mul_cmp_1_pdswt2_1 | while_mul_cmp_1_hile_mul_cmp_1_pdswt1_1
      | while_mul_cmp_1_ogwt | while_mul_cmp_1_tiswt3 | while_mul_cmp_1_hile_mul_cmp_1_pdswt2
      | while_mul_cmp_1_hile_mul_cmp_1_pdswt1 | (run_wen & while_mul_cmp_1_iswt3_2_pff)
      | (run_wen & while_mul_cmp_1_iswt3_1_pff) | (run_wen & while_mul_cmp_1_iswt3_pff);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_1_hile_mul_cmp_1_pdswt2 <= 1'b0;
      while_mul_cmp_1_hile_mul_cmp_1_pdswt1 <= 1'b0;
      while_mul_cmp_1_hile_mul_cmp_1_pdswt0 <= 1'b0;
      while_mul_cmp_1_icwt <= 3'b000;
      while_mul_cmp_1_hile_mul_cmp_1_pdswt2_1 <= 1'b0;
      while_mul_cmp_1_hile_mul_cmp_1_pdswt1_1 <= 1'b0;
      while_mul_cmp_1_hile_mul_cmp_1_pdswt0_1 <= 1'b0;
      while_mul_cmp_1_icwt_1 <= 3'b000;
      while_mul_cmp_1_hile_mul_cmp_1_pdswt2_2 <= 1'b0;
      while_mul_cmp_1_hile_mul_cmp_1_pdswt1_2 <= 1'b0;
      while_mul_cmp_1_hile_mul_cmp_1_pdswt0_2 <= 1'b0;
      while_mul_cmp_1_icwt_2 <= 3'b000;
    end
    else begin
      while_mul_cmp_1_hile_mul_cmp_1_pdswt2 <= while_mul_cmp_1_tiswt3;
      while_mul_cmp_1_hile_mul_cmp_1_pdswt1 <= while_mul_cmp_1_hile_mul_cmp_1_pdswt2;
      while_mul_cmp_1_hile_mul_cmp_1_pdswt0 <= while_mul_cmp_1_hile_mul_cmp_1_pdswt1;
      while_mul_cmp_1_icwt <= nl_while_mul_cmp_1_icwt[2:0];
      while_mul_cmp_1_hile_mul_cmp_1_pdswt2_1 <= while_mul_cmp_1_tiswt3_1;
      while_mul_cmp_1_hile_mul_cmp_1_pdswt1_1 <= while_mul_cmp_1_hile_mul_cmp_1_pdswt2_1;
      while_mul_cmp_1_hile_mul_cmp_1_pdswt0_1 <= while_mul_cmp_1_hile_mul_cmp_1_pdswt1_1;
      while_mul_cmp_1_icwt_1 <= nl_while_mul_cmp_1_icwt_1[2:0];
      while_mul_cmp_1_hile_mul_cmp_1_pdswt2_2 <= while_mul_cmp_1_tiswt3_2;
      while_mul_cmp_1_hile_mul_cmp_1_pdswt1_2 <= while_mul_cmp_1_hile_mul_cmp_1_pdswt2_2;
      while_mul_cmp_1_hile_mul_cmp_1_pdswt0_2 <= while_mul_cmp_1_hile_mul_cmp_1_pdswt1_2;
      while_mul_cmp_1_icwt_2 <= nl_while_mul_cmp_1_icwt_2[2:0];
    end
  end
  assign nl_while_acc_100_nl = while_mul_cmp_1_icwt + 3'b111;
  assign while_acc_100_nl = nl_while_acc_100_nl[2:0];
  assign nl_while_acc_101_nl = conv_u2u_1_2(while_mul_cmp_1_hile_mul_cmp_1_pdswt0)
      + conv_u2u_1_2(~ while_mul_cmp_1_ogwt);
  assign while_acc_101_nl = nl_while_acc_101_nl[1:0];
  assign nl_while_mul_cmp_1_icwt  = while_acc_100_nl + conv_u2u_2_3(while_acc_101_nl);
  assign nl_while_acc_103_nl = while_mul_cmp_1_icwt_1 + 3'b111;
  assign while_acc_103_nl = nl_while_acc_103_nl[2:0];
  assign nl_while_acc_104_nl = conv_u2u_1_2(while_mul_cmp_1_hile_mul_cmp_1_pdswt0_1)
      + conv_u2u_1_2(~ while_mul_cmp_1_ogwt_1);
  assign while_acc_104_nl = nl_while_acc_104_nl[1:0];
  assign nl_while_mul_cmp_1_icwt_1  = while_acc_103_nl + conv_u2u_2_3(while_acc_104_nl);
  assign nl_while_acc_106_nl = while_mul_cmp_1_icwt_2 + 3'b111;
  assign while_acc_106_nl = nl_while_acc_106_nl[2:0];
  assign nl_while_acc_107_nl = conv_u2u_1_2(while_mul_cmp_1_hile_mul_cmp_1_pdswt0_2)
      + conv_u2u_1_2(~ while_mul_cmp_1_ogwt_2);
  assign while_acc_107_nl = nl_while_acc_107_nl[1:0];
  assign nl_while_mul_cmp_1_icwt_2  = while_acc_106_nl + conv_u2u_2_3(while_acc_107_nl);

  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_cmp_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp
// ------------------------------------------------------------------


module Rotate_run_while_mul_cmp_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp (
  clk, rst, while_mul_cmp_bawt, while_mul_cmp_iden, while_mul_cmp_iden_2, while_mul_cmp_iden_4,
      while_mul_cmp_z_mxwt, while_mul_cmp_z_mxwt_1, while_mul_cmp_z_mxwt_2, while_mul_cmp_biwt,
      while_mul_cmp_bdwt, while_mul_cmp_biwt_2, while_mul_cmp_bdwt_2, while_mul_cmp_biwt_4,
      while_mul_cmp_bdwt_4, while_mul_cmp_z
);
  input clk;
  input rst;
  output while_mul_cmp_bawt;
  output while_mul_cmp_iden;
  output while_mul_cmp_iden_2;
  output while_mul_cmp_iden_4;
  output [111:0] while_mul_cmp_z_mxwt;
  output [111:0] while_mul_cmp_z_mxwt_1;
  output [111:0] while_mul_cmp_z_mxwt_2;
  input while_mul_cmp_biwt;
  input while_mul_cmp_bdwt;
  input while_mul_cmp_biwt_2;
  input while_mul_cmp_bdwt_2;
  input while_mul_cmp_biwt_4;
  input while_mul_cmp_bdwt_4;
  input [127:0] while_mul_cmp_z;


  // Interconnect Declarations
  reg [2:0] while_mul_cmp_bcwt;
  wire [3:0] nl_while_mul_cmp_bcwt;
  reg [2:0] while_mul_cmp_bcwt_1;
  wire [3:0] nl_while_mul_cmp_bcwt_1;
  reg [2:0] while_mul_cmp_bcwt_2;
  wire [3:0] nl_while_mul_cmp_bcwt_2;
  reg [111:0] while_mul_cmp_z_bfwt_3_111_0;
  reg [111:0] while_mul_cmp_z_bfwt_7_111_0;
  reg [111:0] while_mul_cmp_z_bfwt_11_111_0;
  reg [111:0] while_mul_cmp_z_bfwt_2_111_0;
  reg [111:0] while_mul_cmp_z_bfwt_6_111_0;
  reg [111:0] while_mul_cmp_z_bfwt_10_111_0;
  reg [111:0] while_mul_cmp_z_bfwt_1_111_0;
  reg [111:0] while_mul_cmp_z_bfwt_5_111_0;
  reg [111:0] while_mul_cmp_z_bfwt_9_111_0;
  reg [111:0] while_mul_cmp_z_bfwt_111_0;
  reg [111:0] while_mul_cmp_z_bfwt_4_111_0;
  reg [111:0] while_mul_cmp_z_bfwt_8_111_0;

  wire[2:0] while_acc_93_nl;
  wire[3:0] nl_while_acc_93_nl;
  wire[1:0] while_acc_94_nl;
  wire[2:0] nl_while_acc_94_nl;
  wire[2:0] while_acc_96_nl;
  wire[3:0] nl_while_acc_96_nl;
  wire[1:0] while_acc_97_nl;
  wire[2:0] nl_while_acc_97_nl;
  wire[2:0] while_acc_99_nl;
  wire[3:0] nl_while_acc_99_nl;
  wire[1:0] while_acc_100_nl;
  wire[2:0] nl_while_acc_100_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_cmp_iden = while_mul_cmp_biwt | while_mul_cmp_bdwt;
  assign while_mul_cmp_bawt = while_mul_cmp_biwt | (while_mul_cmp_bcwt!=3'b000);
  assign while_mul_cmp_iden_2 = while_mul_cmp_biwt_2 | while_mul_cmp_bdwt_2;
  assign while_mul_cmp_iden_4 = while_mul_cmp_biwt_4 | while_mul_cmp_bdwt_4;
  assign while_mul_cmp_z_mxwt = MUX_v_112_5_2((while_mul_cmp_z[111:0]), while_mul_cmp_z_bfwt_111_0,
      while_mul_cmp_z_bfwt_1_111_0, while_mul_cmp_z_bfwt_2_111_0, while_mul_cmp_z_bfwt_3_111_0,
      while_mul_cmp_bcwt_2);
  assign while_mul_cmp_z_mxwt_1 = MUX_v_112_5_2((while_mul_cmp_z[111:0]), while_mul_cmp_z_bfwt_4_111_0,
      while_mul_cmp_z_bfwt_5_111_0, while_mul_cmp_z_bfwt_6_111_0, while_mul_cmp_z_bfwt_7_111_0,
      while_mul_cmp_bcwt_1);
  assign while_mul_cmp_z_mxwt_2 = MUX_v_112_5_2((while_mul_cmp_z[111:0]), while_mul_cmp_z_bfwt_8_111_0,
      while_mul_cmp_z_bfwt_9_111_0, while_mul_cmp_z_bfwt_10_111_0, while_mul_cmp_z_bfwt_11_111_0,
      while_mul_cmp_bcwt);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_bcwt <= 3'b000;
      while_mul_cmp_bcwt_1 <= 3'b000;
      while_mul_cmp_bcwt_2 <= 3'b000;
    end
    else begin
      while_mul_cmp_bcwt <= nl_while_mul_cmp_bcwt[2:0];
      while_mul_cmp_bcwt_1 <= nl_while_mul_cmp_bcwt_1[2:0];
      while_mul_cmp_bcwt_2 <= nl_while_mul_cmp_bcwt_2[2:0];
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_z_bfwt_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_z_bfwt_1_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_z_bfwt_2_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_z_bfwt_3_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_cmp_biwt_4 ) begin
      while_mul_cmp_z_bfwt_111_0 <= while_mul_cmp_z[111:0];
      while_mul_cmp_z_bfwt_1_111_0 <= while_mul_cmp_z_bfwt_111_0;
      while_mul_cmp_z_bfwt_2_111_0 <= while_mul_cmp_z_bfwt_1_111_0;
      while_mul_cmp_z_bfwt_3_111_0 <= while_mul_cmp_z_bfwt_2_111_0;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_z_bfwt_4_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_z_bfwt_5_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_z_bfwt_6_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_z_bfwt_7_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_cmp_biwt_2 ) begin
      while_mul_cmp_z_bfwt_4_111_0 <= while_mul_cmp_z[111:0];
      while_mul_cmp_z_bfwt_5_111_0 <= while_mul_cmp_z_bfwt_4_111_0;
      while_mul_cmp_z_bfwt_6_111_0 <= while_mul_cmp_z_bfwt_5_111_0;
      while_mul_cmp_z_bfwt_7_111_0 <= while_mul_cmp_z_bfwt_6_111_0;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_z_bfwt_8_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_z_bfwt_9_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_z_bfwt_10_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_cmp_z_bfwt_11_111_0 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_cmp_biwt ) begin
      while_mul_cmp_z_bfwt_8_111_0 <= while_mul_cmp_z[111:0];
      while_mul_cmp_z_bfwt_9_111_0 <= while_mul_cmp_z_bfwt_8_111_0;
      while_mul_cmp_z_bfwt_10_111_0 <= while_mul_cmp_z_bfwt_9_111_0;
      while_mul_cmp_z_bfwt_11_111_0 <= while_mul_cmp_z_bfwt_10_111_0;
    end
  end
  assign nl_while_acc_93_nl = while_mul_cmp_bcwt + 3'b111;
  assign while_acc_93_nl = nl_while_acc_93_nl[2:0];
  assign nl_while_acc_94_nl = conv_u2u_1_2(~ while_mul_cmp_bdwt) + conv_u2u_1_2(while_mul_cmp_biwt);
  assign while_acc_94_nl = nl_while_acc_94_nl[1:0];
  assign nl_while_mul_cmp_bcwt  = while_acc_93_nl + conv_u2u_2_3(while_acc_94_nl);
  assign nl_while_acc_96_nl = while_mul_cmp_bcwt_1 + 3'b111;
  assign while_acc_96_nl = nl_while_acc_96_nl[2:0];
  assign nl_while_acc_97_nl = conv_u2u_1_2(~ while_mul_cmp_bdwt_2) + conv_u2u_1_2(while_mul_cmp_biwt_2);
  assign while_acc_97_nl = nl_while_acc_97_nl[1:0];
  assign nl_while_mul_cmp_bcwt_1  = while_acc_96_nl + conv_u2u_2_3(while_acc_97_nl);
  assign nl_while_acc_99_nl = while_mul_cmp_bcwt_2 + 3'b111;
  assign while_acc_99_nl = nl_while_acc_99_nl[2:0];
  assign nl_while_acc_100_nl = conv_u2u_1_2(~ while_mul_cmp_bdwt_4) + conv_u2u_1_2(while_mul_cmp_biwt_4);
  assign while_acc_100_nl = nl_while_acc_100_nl[1:0];
  assign nl_while_mul_cmp_bcwt_2  = while_acc_99_nl + conv_u2u_2_3(while_acc_100_nl);

  function automatic [111:0] MUX_v_112_5_2;
    input [111:0] input_0;
    input [111:0] input_1;
    input [111:0] input_2;
    input [111:0] input_3;
    input [111:0] input_4;
    input [2:0] sel;
    reg [111:0] result;
  begin
    case (sel)
      3'b000 : begin
        result = input_0;
      end
      3'b001 : begin
        result = input_1;
      end
      3'b010 : begin
        result = input_2;
      end
      3'b011 : begin
        result = input_3;
      end
      default : begin
        result = input_4;
      end
    endcase
    MUX_v_112_5_2 = result;
  end
  endfunction


  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_cmp_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl
// ------------------------------------------------------------------


module Rotate_run_while_mul_cmp_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl
    (
  clk, rst, run_wen, run_wten, while_mul_cmp_oswt_unreg, while_mul_cmp_iswt3, while_mul_cmp_iden_1,
      while_mul_cmp_oswt_unreg_1, while_mul_cmp_iswt3_1, while_mul_cmp_iden_3, while_mul_cmp_oswt_unreg_2,
      while_mul_cmp_iswt3_2, while_mul_cmp_iden_5, run_cgwt_18, while_mul_cmp_bdwt,
      while_mul_cmp_bdwt_2, while_mul_cmp_bdwt_4, while_mul_cmp_iswt3_2_pff, while_mul_cmp_iswt3_1_pff,
      while_mul_cmp_iswt3_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_cmp_oswt_unreg;
  input while_mul_cmp_iswt3;
  output while_mul_cmp_iden_1;
  input while_mul_cmp_oswt_unreg_1;
  input while_mul_cmp_iswt3_1;
  output while_mul_cmp_iden_3;
  input while_mul_cmp_oswt_unreg_2;
  input while_mul_cmp_iswt3_2;
  output while_mul_cmp_iden_5;
  output run_cgwt_18;
  output while_mul_cmp_bdwt;
  output while_mul_cmp_bdwt_2;
  output while_mul_cmp_bdwt_4;
  input while_mul_cmp_iswt3_2_pff;
  input while_mul_cmp_iswt3_1_pff;
  input while_mul_cmp_iswt3_pff;


  // Interconnect Declarations
  wire while_mul_cmp_ogwt;
  wire while_mul_cmp_tiswt3;
  reg while_mul_cmp_hile_mul_cmp_pdswt2;
  reg while_mul_cmp_hile_mul_cmp_pdswt1;
  reg while_mul_cmp_hile_mul_cmp_pdswt0;
  reg [2:0] while_mul_cmp_icwt;
  wire [3:0] nl_while_mul_cmp_icwt;
  wire while_mul_cmp_ogwt_1;
  wire while_mul_cmp_tiswt3_1;
  reg while_mul_cmp_hile_mul_cmp_pdswt2_1;
  reg while_mul_cmp_hile_mul_cmp_pdswt1_1;
  reg while_mul_cmp_hile_mul_cmp_pdswt0_1;
  reg [2:0] while_mul_cmp_icwt_1;
  wire [3:0] nl_while_mul_cmp_icwt_1;
  wire while_mul_cmp_ogwt_2;
  wire while_mul_cmp_tiswt3_2;
  reg while_mul_cmp_hile_mul_cmp_pdswt2_2;
  reg while_mul_cmp_hile_mul_cmp_pdswt1_2;
  reg while_mul_cmp_hile_mul_cmp_pdswt0_2;
  reg [2:0] while_mul_cmp_icwt_2;
  wire [3:0] nl_while_mul_cmp_icwt_2;

  wire[2:0] while_acc_94_nl;
  wire[3:0] nl_while_acc_94_nl;
  wire[1:0] while_acc_95_nl;
  wire[2:0] nl_while_acc_95_nl;
  wire[2:0] while_acc_97_nl;
  wire[3:0] nl_while_acc_97_nl;
  wire[1:0] while_acc_98_nl;
  wire[2:0] nl_while_acc_98_nl;
  wire[2:0] while_acc_100_nl;
  wire[3:0] nl_while_acc_100_nl;
  wire[1:0] while_acc_101_nl;
  wire[2:0] nl_while_acc_101_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_cmp_bdwt = while_mul_cmp_oswt_unreg & run_wen;
  assign while_mul_cmp_tiswt3 = (~ run_wten) & while_mul_cmp_iswt3;
  assign while_mul_cmp_iden_1 = while_mul_cmp_ogwt;
  assign while_mul_cmp_ogwt = while_mul_cmp_hile_mul_cmp_pdswt0 | (while_mul_cmp_icwt!=3'b000);
  assign while_mul_cmp_bdwt_2 = while_mul_cmp_oswt_unreg_1 & run_wen;
  assign while_mul_cmp_tiswt3_1 = (~ run_wten) & while_mul_cmp_iswt3_1;
  assign while_mul_cmp_iden_3 = while_mul_cmp_ogwt_1;
  assign while_mul_cmp_ogwt_1 = while_mul_cmp_hile_mul_cmp_pdswt0_1 | (while_mul_cmp_icwt_1!=3'b000);
  assign while_mul_cmp_bdwt_4 = while_mul_cmp_oswt_unreg_2 & run_wen;
  assign while_mul_cmp_tiswt3_2 = (~ run_wten) & while_mul_cmp_iswt3_2;
  assign while_mul_cmp_iden_5 = while_mul_cmp_ogwt_2;
  assign while_mul_cmp_ogwt_2 = while_mul_cmp_hile_mul_cmp_pdswt0_2 | (while_mul_cmp_icwt_2!=3'b000);
  assign run_cgwt_18 = while_mul_cmp_ogwt_2 | while_mul_cmp_tiswt3_2 | while_mul_cmp_hile_mul_cmp_pdswt2_2
      | while_mul_cmp_hile_mul_cmp_pdswt1_2 | while_mul_cmp_ogwt_1 | while_mul_cmp_tiswt3_1
      | while_mul_cmp_hile_mul_cmp_pdswt2_1 | while_mul_cmp_hile_mul_cmp_pdswt1_1
      | while_mul_cmp_ogwt | while_mul_cmp_tiswt3 | while_mul_cmp_hile_mul_cmp_pdswt2
      | while_mul_cmp_hile_mul_cmp_pdswt1 | (run_wen & while_mul_cmp_iswt3_2_pff)
      | (run_wen & while_mul_cmp_iswt3_1_pff) | (run_wen & while_mul_cmp_iswt3_pff);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_cmp_hile_mul_cmp_pdswt2 <= 1'b0;
      while_mul_cmp_hile_mul_cmp_pdswt1 <= 1'b0;
      while_mul_cmp_hile_mul_cmp_pdswt0 <= 1'b0;
      while_mul_cmp_icwt <= 3'b000;
      while_mul_cmp_hile_mul_cmp_pdswt2_1 <= 1'b0;
      while_mul_cmp_hile_mul_cmp_pdswt1_1 <= 1'b0;
      while_mul_cmp_hile_mul_cmp_pdswt0_1 <= 1'b0;
      while_mul_cmp_icwt_1 <= 3'b000;
      while_mul_cmp_hile_mul_cmp_pdswt2_2 <= 1'b0;
      while_mul_cmp_hile_mul_cmp_pdswt1_2 <= 1'b0;
      while_mul_cmp_hile_mul_cmp_pdswt0_2 <= 1'b0;
      while_mul_cmp_icwt_2 <= 3'b000;
    end
    else begin
      while_mul_cmp_hile_mul_cmp_pdswt2 <= while_mul_cmp_tiswt3;
      while_mul_cmp_hile_mul_cmp_pdswt1 <= while_mul_cmp_hile_mul_cmp_pdswt2;
      while_mul_cmp_hile_mul_cmp_pdswt0 <= while_mul_cmp_hile_mul_cmp_pdswt1;
      while_mul_cmp_icwt <= nl_while_mul_cmp_icwt[2:0];
      while_mul_cmp_hile_mul_cmp_pdswt2_1 <= while_mul_cmp_tiswt3_1;
      while_mul_cmp_hile_mul_cmp_pdswt1_1 <= while_mul_cmp_hile_mul_cmp_pdswt2_1;
      while_mul_cmp_hile_mul_cmp_pdswt0_1 <= while_mul_cmp_hile_mul_cmp_pdswt1_1;
      while_mul_cmp_icwt_1 <= nl_while_mul_cmp_icwt_1[2:0];
      while_mul_cmp_hile_mul_cmp_pdswt2_2 <= while_mul_cmp_tiswt3_2;
      while_mul_cmp_hile_mul_cmp_pdswt1_2 <= while_mul_cmp_hile_mul_cmp_pdswt2_2;
      while_mul_cmp_hile_mul_cmp_pdswt0_2 <= while_mul_cmp_hile_mul_cmp_pdswt1_2;
      while_mul_cmp_icwt_2 <= nl_while_mul_cmp_icwt_2[2:0];
    end
  end
  assign nl_while_acc_94_nl = while_mul_cmp_icwt + 3'b111;
  assign while_acc_94_nl = nl_while_acc_94_nl[2:0];
  assign nl_while_acc_95_nl = conv_u2u_1_2(while_mul_cmp_hile_mul_cmp_pdswt0) + conv_u2u_1_2(~
      while_mul_cmp_ogwt);
  assign while_acc_95_nl = nl_while_acc_95_nl[1:0];
  assign nl_while_mul_cmp_icwt  = while_acc_94_nl + conv_u2u_2_3(while_acc_95_nl);
  assign nl_while_acc_97_nl = while_mul_cmp_icwt_1 + 3'b111;
  assign while_acc_97_nl = nl_while_acc_97_nl[2:0];
  assign nl_while_acc_98_nl = conv_u2u_1_2(while_mul_cmp_hile_mul_cmp_pdswt0_1) +
      conv_u2u_1_2(~ while_mul_cmp_ogwt_1);
  assign while_acc_98_nl = nl_while_acc_98_nl[1:0];
  assign nl_while_mul_cmp_icwt_1  = while_acc_97_nl + conv_u2u_2_3(while_acc_98_nl);
  assign nl_while_acc_100_nl = while_mul_cmp_icwt_2 + 3'b111;
  assign while_acc_100_nl = nl_while_acc_100_nl[2:0];
  assign nl_while_acc_101_nl = conv_u2u_1_2(while_mul_cmp_hile_mul_cmp_pdswt0_2)
      + conv_u2u_1_2(~ while_mul_cmp_ogwt_2);
  assign while_acc_101_nl = nl_while_acc_101_nl[1:0];
  assign nl_while_mul_cmp_icwt_2  = while_acc_100_nl + conv_u2u_2_3(while_acc_101_nl);

  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_26_cmp_1_mgc_mul_pipe_50_0_64_1_114_1_1_0_0_4_1_wait_dp_1
// ------------------------------------------------------------------


module Rotate_run_while_mul_26_cmp_1_mgc_mul_pipe_50_0_64_1_114_1_1_0_0_4_1_wait_dp_1
    (
  clk, rst, while_mul_26_cmp_1_bawt, while_mul_26_cmp_1_iden, while_mul_26_cmp_1_iden_2,
      while_mul_26_cmp_1_z_mxwt, while_mul_26_cmp_1_z_mxwt_1, while_mul_26_cmp_1_biwt,
      while_mul_26_cmp_1_bdwt, while_mul_26_cmp_1_biwt_2, while_mul_26_cmp_1_bdwt_2,
      while_mul_26_cmp_1_z
);
  input clk;
  input rst;
  output while_mul_26_cmp_1_bawt;
  output while_mul_26_cmp_1_iden;
  output while_mul_26_cmp_1_iden_2;
  output [113:0] while_mul_26_cmp_1_z_mxwt;
  output [113:0] while_mul_26_cmp_1_z_mxwt_1;
  input while_mul_26_cmp_1_biwt;
  input while_mul_26_cmp_1_bdwt;
  input while_mul_26_cmp_1_biwt_2;
  input while_mul_26_cmp_1_bdwt_2;
  input [113:0] while_mul_26_cmp_1_z;


  // Interconnect Declarations
  reg [2:0] while_mul_26_cmp_1_bcwt;
  wire [3:0] nl_while_mul_26_cmp_1_bcwt;
  reg [2:0] while_mul_26_cmp_1_bcwt_1;
  wire [3:0] nl_while_mul_26_cmp_1_bcwt_1;
  reg [113:0] while_mul_26_cmp_1_z_bfwt;
  reg [113:0] while_mul_26_cmp_1_z_bfwt_1;
  reg [113:0] while_mul_26_cmp_1_z_bfwt_2;
  reg [113:0] while_mul_26_cmp_1_z_bfwt_3;
  reg [113:0] while_mul_26_cmp_1_z_bfwt_4;
  reg [113:0] while_mul_26_cmp_1_z_bfwt_5;
  reg [113:0] while_mul_26_cmp_1_z_bfwt_6;
  reg [113:0] while_mul_26_cmp_1_z_bfwt_7;

  wire[2:0] while_acc_87_nl;
  wire[3:0] nl_while_acc_87_nl;
  wire[1:0] while_acc_88_nl;
  wire[2:0] nl_while_acc_88_nl;
  wire[2:0] while_acc_90_nl;
  wire[3:0] nl_while_acc_90_nl;
  wire[1:0] while_acc_91_nl;
  wire[2:0] nl_while_acc_91_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_26_cmp_1_iden = while_mul_26_cmp_1_biwt | while_mul_26_cmp_1_bdwt;
  assign while_mul_26_cmp_1_bawt = while_mul_26_cmp_1_biwt | (while_mul_26_cmp_1_bcwt!=3'b000);
  assign while_mul_26_cmp_1_iden_2 = while_mul_26_cmp_1_biwt_2 | while_mul_26_cmp_1_bdwt_2;
  assign while_mul_26_cmp_1_z_mxwt = MUX_v_114_5_2(while_mul_26_cmp_1_z, while_mul_26_cmp_1_z_bfwt,
      while_mul_26_cmp_1_z_bfwt_1, while_mul_26_cmp_1_z_bfwt_2, while_mul_26_cmp_1_z_bfwt_3,
      while_mul_26_cmp_1_bcwt_1);
  assign while_mul_26_cmp_1_z_mxwt_1 = MUX_v_114_5_2(while_mul_26_cmp_1_z, while_mul_26_cmp_1_z_bfwt_4,
      while_mul_26_cmp_1_z_bfwt_5, while_mul_26_cmp_1_z_bfwt_6, while_mul_26_cmp_1_z_bfwt_7,
      while_mul_26_cmp_1_bcwt);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_26_cmp_1_bcwt <= 3'b000;
      while_mul_26_cmp_1_bcwt_1 <= 3'b000;
    end
    else begin
      while_mul_26_cmp_1_bcwt <= nl_while_mul_26_cmp_1_bcwt[2:0];
      while_mul_26_cmp_1_bcwt_1 <= nl_while_mul_26_cmp_1_bcwt_1[2:0];
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_26_cmp_1_z_bfwt <= 114'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_26_cmp_1_z_bfwt_1 <= 114'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_26_cmp_1_z_bfwt_2 <= 114'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_26_cmp_1_z_bfwt_3 <= 114'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_26_cmp_1_biwt_2 ) begin
      while_mul_26_cmp_1_z_bfwt <= while_mul_26_cmp_1_z;
      while_mul_26_cmp_1_z_bfwt_1 <= while_mul_26_cmp_1_z_bfwt;
      while_mul_26_cmp_1_z_bfwt_2 <= while_mul_26_cmp_1_z_bfwt_1;
      while_mul_26_cmp_1_z_bfwt_3 <= while_mul_26_cmp_1_z_bfwt_2;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_26_cmp_1_z_bfwt_4 <= 114'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_26_cmp_1_z_bfwt_5 <= 114'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_26_cmp_1_z_bfwt_6 <= 114'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_26_cmp_1_z_bfwt_7 <= 114'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_26_cmp_1_biwt ) begin
      while_mul_26_cmp_1_z_bfwt_4 <= while_mul_26_cmp_1_z;
      while_mul_26_cmp_1_z_bfwt_5 <= while_mul_26_cmp_1_z_bfwt_4;
      while_mul_26_cmp_1_z_bfwt_6 <= while_mul_26_cmp_1_z_bfwt_5;
      while_mul_26_cmp_1_z_bfwt_7 <= while_mul_26_cmp_1_z_bfwt_6;
    end
  end
  assign nl_while_acc_87_nl = while_mul_26_cmp_1_bcwt + 3'b111;
  assign while_acc_87_nl = nl_while_acc_87_nl[2:0];
  assign nl_while_acc_88_nl = conv_u2u_1_2(~ while_mul_26_cmp_1_bdwt) + conv_u2u_1_2(while_mul_26_cmp_1_biwt);
  assign while_acc_88_nl = nl_while_acc_88_nl[1:0];
  assign nl_while_mul_26_cmp_1_bcwt  = while_acc_87_nl + conv_u2u_2_3(while_acc_88_nl);
  assign nl_while_acc_90_nl = while_mul_26_cmp_1_bcwt_1 + 3'b111;
  assign while_acc_90_nl = nl_while_acc_90_nl[2:0];
  assign nl_while_acc_91_nl = conv_u2u_1_2(~ while_mul_26_cmp_1_bdwt_2) + conv_u2u_1_2(while_mul_26_cmp_1_biwt_2);
  assign while_acc_91_nl = nl_while_acc_91_nl[1:0];
  assign nl_while_mul_26_cmp_1_bcwt_1  = while_acc_90_nl + conv_u2u_2_3(while_acc_91_nl);

  function automatic [113:0] MUX_v_114_5_2;
    input [113:0] input_0;
    input [113:0] input_1;
    input [113:0] input_2;
    input [113:0] input_3;
    input [113:0] input_4;
    input [2:0] sel;
    reg [113:0] result;
  begin
    case (sel)
      3'b000 : begin
        result = input_0;
      end
      3'b001 : begin
        result = input_1;
      end
      3'b010 : begin
        result = input_2;
      end
      3'b011 : begin
        result = input_3;
      end
      default : begin
        result = input_4;
      end
    endcase
    MUX_v_114_5_2 = result;
  end
  endfunction


  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_26_cmp_1_mgc_mul_pipe_50_0_64_1_114_1_1_0_0_4_1_wait_ctrl_1
// ------------------------------------------------------------------


module Rotate_run_while_mul_26_cmp_1_mgc_mul_pipe_50_0_64_1_114_1_1_0_0_4_1_wait_ctrl_1
    (
  clk, rst, run_wen, run_wten, while_mul_26_cmp_1_oswt_unreg, while_mul_26_cmp_1_iswt3,
      while_mul_26_cmp_1_iden_1, while_mul_26_cmp_1_oswt_unreg_1, while_mul_26_cmp_1_iswt3_1,
      while_mul_26_cmp_1_iden_3, run_cgwt_17, while_mul_26_cmp_1_bdwt, while_mul_26_cmp_1_bdwt_2,
      while_mul_26_cmp_1_iswt3_1_pff, while_mul_26_cmp_1_iswt3_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_26_cmp_1_oswt_unreg;
  input while_mul_26_cmp_1_iswt3;
  output while_mul_26_cmp_1_iden_1;
  input while_mul_26_cmp_1_oswt_unreg_1;
  input while_mul_26_cmp_1_iswt3_1;
  output while_mul_26_cmp_1_iden_3;
  output run_cgwt_17;
  output while_mul_26_cmp_1_bdwt;
  output while_mul_26_cmp_1_bdwt_2;
  input while_mul_26_cmp_1_iswt3_1_pff;
  input while_mul_26_cmp_1_iswt3_pff;


  // Interconnect Declarations
  wire while_mul_26_cmp_1_ogwt;
  wire while_mul_26_cmp_1_tiswt3;
  reg while_mul_26_cmp_1_hile_mul_26_cmp_1_pdswt2;
  reg while_mul_26_cmp_1_hile_mul_26_cmp_1_pdswt1;
  reg while_mul_26_cmp_1_hile_mul_26_cmp_1_pdswt0;
  reg [2:0] while_mul_26_cmp_1_icwt;
  wire [3:0] nl_while_mul_26_cmp_1_icwt;
  wire while_mul_26_cmp_1_ogwt_1;
  wire while_mul_26_cmp_1_tiswt3_1;
  reg while_mul_26_cmp_1_hile_mul_26_cmp_1_pdswt2_1;
  reg while_mul_26_cmp_1_hile_mul_26_cmp_1_pdswt1_1;
  reg while_mul_26_cmp_1_hile_mul_26_cmp_1_pdswt0_1;
  reg [2:0] while_mul_26_cmp_1_icwt_1;
  wire [3:0] nl_while_mul_26_cmp_1_icwt_1;

  wire[2:0] while_acc_88_nl;
  wire[3:0] nl_while_acc_88_nl;
  wire[1:0] while_acc_89_nl;
  wire[2:0] nl_while_acc_89_nl;
  wire[2:0] while_acc_91_nl;
  wire[3:0] nl_while_acc_91_nl;
  wire[1:0] while_acc_92_nl;
  wire[2:0] nl_while_acc_92_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_26_cmp_1_bdwt = while_mul_26_cmp_1_oswt_unreg & run_wen;
  assign while_mul_26_cmp_1_tiswt3 = (~ run_wten) & while_mul_26_cmp_1_iswt3;
  assign while_mul_26_cmp_1_iden_1 = while_mul_26_cmp_1_ogwt;
  assign while_mul_26_cmp_1_ogwt = while_mul_26_cmp_1_hile_mul_26_cmp_1_pdswt0 |
      (while_mul_26_cmp_1_icwt!=3'b000);
  assign while_mul_26_cmp_1_bdwt_2 = while_mul_26_cmp_1_oswt_unreg_1 & run_wen;
  assign while_mul_26_cmp_1_tiswt3_1 = (~ run_wten) & while_mul_26_cmp_1_iswt3_1;
  assign while_mul_26_cmp_1_iden_3 = while_mul_26_cmp_1_ogwt_1;
  assign while_mul_26_cmp_1_ogwt_1 = while_mul_26_cmp_1_hile_mul_26_cmp_1_pdswt0_1
      | (while_mul_26_cmp_1_icwt_1!=3'b000);
  assign run_cgwt_17 = while_mul_26_cmp_1_ogwt_1 | while_mul_26_cmp_1_tiswt3_1 |
      while_mul_26_cmp_1_hile_mul_26_cmp_1_pdswt2_1 | while_mul_26_cmp_1_hile_mul_26_cmp_1_pdswt1_1
      | while_mul_26_cmp_1_ogwt | while_mul_26_cmp_1_tiswt3 | while_mul_26_cmp_1_hile_mul_26_cmp_1_pdswt2
      | while_mul_26_cmp_1_hile_mul_26_cmp_1_pdswt1 | (run_wen & while_mul_26_cmp_1_iswt3_1_pff)
      | (run_wen & while_mul_26_cmp_1_iswt3_pff);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_26_cmp_1_hile_mul_26_cmp_1_pdswt2 <= 1'b0;
      while_mul_26_cmp_1_hile_mul_26_cmp_1_pdswt1 <= 1'b0;
      while_mul_26_cmp_1_hile_mul_26_cmp_1_pdswt0 <= 1'b0;
      while_mul_26_cmp_1_icwt <= 3'b000;
      while_mul_26_cmp_1_hile_mul_26_cmp_1_pdswt2_1 <= 1'b0;
      while_mul_26_cmp_1_hile_mul_26_cmp_1_pdswt1_1 <= 1'b0;
      while_mul_26_cmp_1_hile_mul_26_cmp_1_pdswt0_1 <= 1'b0;
      while_mul_26_cmp_1_icwt_1 <= 3'b000;
    end
    else begin
      while_mul_26_cmp_1_hile_mul_26_cmp_1_pdswt2 <= while_mul_26_cmp_1_tiswt3;
      while_mul_26_cmp_1_hile_mul_26_cmp_1_pdswt1 <= while_mul_26_cmp_1_hile_mul_26_cmp_1_pdswt2;
      while_mul_26_cmp_1_hile_mul_26_cmp_1_pdswt0 <= while_mul_26_cmp_1_hile_mul_26_cmp_1_pdswt1;
      while_mul_26_cmp_1_icwt <= nl_while_mul_26_cmp_1_icwt[2:0];
      while_mul_26_cmp_1_hile_mul_26_cmp_1_pdswt2_1 <= while_mul_26_cmp_1_tiswt3_1;
      while_mul_26_cmp_1_hile_mul_26_cmp_1_pdswt1_1 <= while_mul_26_cmp_1_hile_mul_26_cmp_1_pdswt2_1;
      while_mul_26_cmp_1_hile_mul_26_cmp_1_pdswt0_1 <= while_mul_26_cmp_1_hile_mul_26_cmp_1_pdswt1_1;
      while_mul_26_cmp_1_icwt_1 <= nl_while_mul_26_cmp_1_icwt_1[2:0];
    end
  end
  assign nl_while_acc_88_nl = while_mul_26_cmp_1_icwt + 3'b111;
  assign while_acc_88_nl = nl_while_acc_88_nl[2:0];
  assign nl_while_acc_89_nl = conv_u2u_1_2(while_mul_26_cmp_1_hile_mul_26_cmp_1_pdswt0)
      + conv_u2u_1_2(~ while_mul_26_cmp_1_ogwt);
  assign while_acc_89_nl = nl_while_acc_89_nl[1:0];
  assign nl_while_mul_26_cmp_1_icwt  = while_acc_88_nl + conv_u2u_2_3(while_acc_89_nl);
  assign nl_while_acc_91_nl = while_mul_26_cmp_1_icwt_1 + 3'b111;
  assign while_acc_91_nl = nl_while_acc_91_nl[2:0];
  assign nl_while_acc_92_nl = conv_u2u_1_2(while_mul_26_cmp_1_hile_mul_26_cmp_1_pdswt0_1)
      + conv_u2u_1_2(~ while_mul_26_cmp_1_ogwt_1);
  assign while_acc_92_nl = nl_while_acc_92_nl[1:0];
  assign nl_while_mul_26_cmp_1_icwt_1  = while_acc_91_nl + conv_u2u_2_3(while_acc_92_nl);

  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_26_cmp_mgc_mul_pipe_50_0_64_1_114_1_1_0_0_4_1_wait_dp
// ------------------------------------------------------------------


module Rotate_run_while_mul_26_cmp_mgc_mul_pipe_50_0_64_1_114_1_1_0_0_4_1_wait_dp
    (
  clk, rst, while_mul_26_cmp_bawt, while_mul_26_cmp_iden, while_mul_26_cmp_iden_2,
      while_mul_26_cmp_z_mxwt, while_mul_26_cmp_z_mxwt_1, while_mul_26_cmp_biwt,
      while_mul_26_cmp_bdwt, while_mul_26_cmp_biwt_2, while_mul_26_cmp_bdwt_2, while_mul_26_cmp_z
);
  input clk;
  input rst;
  output while_mul_26_cmp_bawt;
  output while_mul_26_cmp_iden;
  output while_mul_26_cmp_iden_2;
  output [113:0] while_mul_26_cmp_z_mxwt;
  output [112:0] while_mul_26_cmp_z_mxwt_1;
  input while_mul_26_cmp_biwt;
  input while_mul_26_cmp_bdwt;
  input while_mul_26_cmp_biwt_2;
  input while_mul_26_cmp_bdwt_2;
  input [113:0] while_mul_26_cmp_z;


  // Interconnect Declarations
  reg [2:0] while_mul_26_cmp_bcwt;
  wire [3:0] nl_while_mul_26_cmp_bcwt;
  reg [2:0] while_mul_26_cmp_bcwt_1;
  wire [3:0] nl_while_mul_26_cmp_bcwt_1;
  reg [113:0] while_mul_26_cmp_z_bfwt;
  reg [113:0] while_mul_26_cmp_z_bfwt_1;
  reg [113:0] while_mul_26_cmp_z_bfwt_2;
  reg [113:0] while_mul_26_cmp_z_bfwt_3;
  reg [112:0] while_mul_26_cmp_z_bfwt_7_112_0;
  reg [112:0] while_mul_26_cmp_z_bfwt_6_112_0;
  reg [112:0] while_mul_26_cmp_z_bfwt_5_112_0;
  reg [112:0] while_mul_26_cmp_z_bfwt_4_112_0;

  wire[2:0] while_acc_83_nl;
  wire[3:0] nl_while_acc_83_nl;
  wire[1:0] while_acc_84_nl;
  wire[2:0] nl_while_acc_84_nl;
  wire[2:0] while_acc_86_nl;
  wire[3:0] nl_while_acc_86_nl;
  wire[1:0] while_acc_87_nl;
  wire[2:0] nl_while_acc_87_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_26_cmp_iden = while_mul_26_cmp_biwt | while_mul_26_cmp_bdwt;
  assign while_mul_26_cmp_bawt = while_mul_26_cmp_biwt | (while_mul_26_cmp_bcwt!=3'b000);
  assign while_mul_26_cmp_iden_2 = while_mul_26_cmp_biwt_2 | while_mul_26_cmp_bdwt_2;
  assign while_mul_26_cmp_z_mxwt = MUX_v_114_5_2(while_mul_26_cmp_z, while_mul_26_cmp_z_bfwt,
      while_mul_26_cmp_z_bfwt_1, while_mul_26_cmp_z_bfwt_2, while_mul_26_cmp_z_bfwt_3,
      while_mul_26_cmp_bcwt_1);
  assign while_mul_26_cmp_z_mxwt_1 = MUX_v_113_5_2((while_mul_26_cmp_z[112:0]), while_mul_26_cmp_z_bfwt_4_112_0,
      while_mul_26_cmp_z_bfwt_5_112_0, while_mul_26_cmp_z_bfwt_6_112_0, while_mul_26_cmp_z_bfwt_7_112_0,
      while_mul_26_cmp_bcwt);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_26_cmp_bcwt <= 3'b000;
      while_mul_26_cmp_bcwt_1 <= 3'b000;
    end
    else begin
      while_mul_26_cmp_bcwt <= nl_while_mul_26_cmp_bcwt[2:0];
      while_mul_26_cmp_bcwt_1 <= nl_while_mul_26_cmp_bcwt_1[2:0];
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_26_cmp_z_bfwt <= 114'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_26_cmp_z_bfwt_1 <= 114'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_26_cmp_z_bfwt_2 <= 114'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_26_cmp_z_bfwt_3 <= 114'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_26_cmp_biwt_2 ) begin
      while_mul_26_cmp_z_bfwt <= while_mul_26_cmp_z;
      while_mul_26_cmp_z_bfwt_1 <= while_mul_26_cmp_z_bfwt;
      while_mul_26_cmp_z_bfwt_2 <= while_mul_26_cmp_z_bfwt_1;
      while_mul_26_cmp_z_bfwt_3 <= while_mul_26_cmp_z_bfwt_2;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_26_cmp_z_bfwt_4_112_0 <= 113'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_26_cmp_z_bfwt_5_112_0 <= 113'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_26_cmp_z_bfwt_6_112_0 <= 113'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_26_cmp_z_bfwt_7_112_0 <= 113'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_26_cmp_biwt ) begin
      while_mul_26_cmp_z_bfwt_4_112_0 <= while_mul_26_cmp_z[112:0];
      while_mul_26_cmp_z_bfwt_5_112_0 <= while_mul_26_cmp_z_bfwt_4_112_0;
      while_mul_26_cmp_z_bfwt_6_112_0 <= while_mul_26_cmp_z_bfwt_5_112_0;
      while_mul_26_cmp_z_bfwt_7_112_0 <= while_mul_26_cmp_z_bfwt_6_112_0;
    end
  end
  assign nl_while_acc_83_nl = while_mul_26_cmp_bcwt + 3'b111;
  assign while_acc_83_nl = nl_while_acc_83_nl[2:0];
  assign nl_while_acc_84_nl = conv_u2u_1_2(~ while_mul_26_cmp_bdwt) + conv_u2u_1_2(while_mul_26_cmp_biwt);
  assign while_acc_84_nl = nl_while_acc_84_nl[1:0];
  assign nl_while_mul_26_cmp_bcwt  = while_acc_83_nl + conv_u2u_2_3(while_acc_84_nl);
  assign nl_while_acc_86_nl = while_mul_26_cmp_bcwt_1 + 3'b111;
  assign while_acc_86_nl = nl_while_acc_86_nl[2:0];
  assign nl_while_acc_87_nl = conv_u2u_1_2(~ while_mul_26_cmp_bdwt_2) + conv_u2u_1_2(while_mul_26_cmp_biwt_2);
  assign while_acc_87_nl = nl_while_acc_87_nl[1:0];
  assign nl_while_mul_26_cmp_bcwt_1  = while_acc_86_nl + conv_u2u_2_3(while_acc_87_nl);

  function automatic [112:0] MUX_v_113_5_2;
    input [112:0] input_0;
    input [112:0] input_1;
    input [112:0] input_2;
    input [112:0] input_3;
    input [112:0] input_4;
    input [2:0] sel;
    reg [112:0] result;
  begin
    case (sel)
      3'b000 : begin
        result = input_0;
      end
      3'b001 : begin
        result = input_1;
      end
      3'b010 : begin
        result = input_2;
      end
      3'b011 : begin
        result = input_3;
      end
      default : begin
        result = input_4;
      end
    endcase
    MUX_v_113_5_2 = result;
  end
  endfunction


  function automatic [113:0] MUX_v_114_5_2;
    input [113:0] input_0;
    input [113:0] input_1;
    input [113:0] input_2;
    input [113:0] input_3;
    input [113:0] input_4;
    input [2:0] sel;
    reg [113:0] result;
  begin
    case (sel)
      3'b000 : begin
        result = input_0;
      end
      3'b001 : begin
        result = input_1;
      end
      3'b010 : begin
        result = input_2;
      end
      3'b011 : begin
        result = input_3;
      end
      default : begin
        result = input_4;
      end
    endcase
    MUX_v_114_5_2 = result;
  end
  endfunction


  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_26_cmp_mgc_mul_pipe_50_0_64_1_114_1_1_0_0_4_1_wait_ctrl
// ------------------------------------------------------------------


module Rotate_run_while_mul_26_cmp_mgc_mul_pipe_50_0_64_1_114_1_1_0_0_4_1_wait_ctrl
    (
  clk, rst, run_wen, run_wten, while_mul_26_cmp_oswt_unreg, while_mul_26_cmp_iswt3,
      while_mul_26_cmp_iden_1, while_mul_26_cmp_oswt_unreg_1, while_mul_26_cmp_iswt3_1,
      while_mul_26_cmp_iden_3, run_cgwt_16, while_mul_26_cmp_bdwt, while_mul_26_cmp_bdwt_2,
      while_mul_26_cmp_iswt3_1_pff, while_mul_26_cmp_iswt3_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_26_cmp_oswt_unreg;
  input while_mul_26_cmp_iswt3;
  output while_mul_26_cmp_iden_1;
  input while_mul_26_cmp_oswt_unreg_1;
  input while_mul_26_cmp_iswt3_1;
  output while_mul_26_cmp_iden_3;
  output run_cgwt_16;
  output while_mul_26_cmp_bdwt;
  output while_mul_26_cmp_bdwt_2;
  input while_mul_26_cmp_iswt3_1_pff;
  input while_mul_26_cmp_iswt3_pff;


  // Interconnect Declarations
  wire while_mul_26_cmp_ogwt;
  wire while_mul_26_cmp_tiswt3;
  reg while_mul_26_cmp_hile_mul_26_cmp_pdswt2;
  reg while_mul_26_cmp_hile_mul_26_cmp_pdswt1;
  reg while_mul_26_cmp_hile_mul_26_cmp_pdswt0;
  reg [2:0] while_mul_26_cmp_icwt;
  wire [3:0] nl_while_mul_26_cmp_icwt;
  wire while_mul_26_cmp_ogwt_1;
  wire while_mul_26_cmp_tiswt3_1;
  reg while_mul_26_cmp_hile_mul_26_cmp_pdswt2_1;
  reg while_mul_26_cmp_hile_mul_26_cmp_pdswt1_1;
  reg while_mul_26_cmp_hile_mul_26_cmp_pdswt0_1;
  reg [2:0] while_mul_26_cmp_icwt_1;
  wire [3:0] nl_while_mul_26_cmp_icwt_1;

  wire[2:0] while_acc_84_nl;
  wire[3:0] nl_while_acc_84_nl;
  wire[1:0] while_acc_85_nl;
  wire[2:0] nl_while_acc_85_nl;
  wire[2:0] while_acc_87_nl;
  wire[3:0] nl_while_acc_87_nl;
  wire[1:0] while_acc_88_nl;
  wire[2:0] nl_while_acc_88_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_26_cmp_bdwt = while_mul_26_cmp_oswt_unreg & run_wen;
  assign while_mul_26_cmp_tiswt3 = (~ run_wten) & while_mul_26_cmp_iswt3;
  assign while_mul_26_cmp_iden_1 = while_mul_26_cmp_ogwt;
  assign while_mul_26_cmp_ogwt = while_mul_26_cmp_hile_mul_26_cmp_pdswt0 | (while_mul_26_cmp_icwt!=3'b000);
  assign while_mul_26_cmp_bdwt_2 = while_mul_26_cmp_oswt_unreg_1 & run_wen;
  assign while_mul_26_cmp_tiswt3_1 = (~ run_wten) & while_mul_26_cmp_iswt3_1;
  assign while_mul_26_cmp_iden_3 = while_mul_26_cmp_ogwt_1;
  assign while_mul_26_cmp_ogwt_1 = while_mul_26_cmp_hile_mul_26_cmp_pdswt0_1 | (while_mul_26_cmp_icwt_1!=3'b000);
  assign run_cgwt_16 = while_mul_26_cmp_ogwt_1 | while_mul_26_cmp_tiswt3_1 | while_mul_26_cmp_hile_mul_26_cmp_pdswt2_1
      | while_mul_26_cmp_hile_mul_26_cmp_pdswt1_1 | while_mul_26_cmp_ogwt | while_mul_26_cmp_tiswt3
      | while_mul_26_cmp_hile_mul_26_cmp_pdswt2 | while_mul_26_cmp_hile_mul_26_cmp_pdswt1
      | (run_wen & while_mul_26_cmp_iswt3_1_pff) | (run_wen & while_mul_26_cmp_iswt3_pff);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_26_cmp_hile_mul_26_cmp_pdswt2 <= 1'b0;
      while_mul_26_cmp_hile_mul_26_cmp_pdswt1 <= 1'b0;
      while_mul_26_cmp_hile_mul_26_cmp_pdswt0 <= 1'b0;
      while_mul_26_cmp_icwt <= 3'b000;
      while_mul_26_cmp_hile_mul_26_cmp_pdswt2_1 <= 1'b0;
      while_mul_26_cmp_hile_mul_26_cmp_pdswt1_1 <= 1'b0;
      while_mul_26_cmp_hile_mul_26_cmp_pdswt0_1 <= 1'b0;
      while_mul_26_cmp_icwt_1 <= 3'b000;
    end
    else begin
      while_mul_26_cmp_hile_mul_26_cmp_pdswt2 <= while_mul_26_cmp_tiswt3;
      while_mul_26_cmp_hile_mul_26_cmp_pdswt1 <= while_mul_26_cmp_hile_mul_26_cmp_pdswt2;
      while_mul_26_cmp_hile_mul_26_cmp_pdswt0 <= while_mul_26_cmp_hile_mul_26_cmp_pdswt1;
      while_mul_26_cmp_icwt <= nl_while_mul_26_cmp_icwt[2:0];
      while_mul_26_cmp_hile_mul_26_cmp_pdswt2_1 <= while_mul_26_cmp_tiswt3_1;
      while_mul_26_cmp_hile_mul_26_cmp_pdswt1_1 <= while_mul_26_cmp_hile_mul_26_cmp_pdswt2_1;
      while_mul_26_cmp_hile_mul_26_cmp_pdswt0_1 <= while_mul_26_cmp_hile_mul_26_cmp_pdswt1_1;
      while_mul_26_cmp_icwt_1 <= nl_while_mul_26_cmp_icwt_1[2:0];
    end
  end
  assign nl_while_acc_84_nl = while_mul_26_cmp_icwt + 3'b111;
  assign while_acc_84_nl = nl_while_acc_84_nl[2:0];
  assign nl_while_acc_85_nl = conv_u2u_1_2(while_mul_26_cmp_hile_mul_26_cmp_pdswt0)
      + conv_u2u_1_2(~ while_mul_26_cmp_ogwt);
  assign while_acc_85_nl = nl_while_acc_85_nl[1:0];
  assign nl_while_mul_26_cmp_icwt  = while_acc_84_nl + conv_u2u_2_3(while_acc_85_nl);
  assign nl_while_acc_87_nl = while_mul_26_cmp_icwt_1 + 3'b111;
  assign while_acc_87_nl = nl_while_acc_87_nl[2:0];
  assign nl_while_acc_88_nl = conv_u2u_1_2(while_mul_26_cmp_hile_mul_26_cmp_pdswt0_1)
      + conv_u2u_1_2(~ while_mul_26_cmp_ogwt_1);
  assign while_acc_88_nl = nl_while_acc_88_nl[1:0];
  assign nl_while_mul_26_cmp_icwt_1  = while_acc_87_nl + conv_u2u_2_3(while_acc_88_nl);

  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_25_cmp_mgc_mul_pipe_65_1_113_1_178_1_1_0_0_6_1_wait_dp
// ------------------------------------------------------------------


module Rotate_run_while_mul_25_cmp_mgc_mul_pipe_65_1_113_1_178_1_1_0_0_6_1_wait_dp
    (
  clk, rst, while_mul_25_cmp_bawt, while_mul_25_cmp_iden, while_mul_25_cmp_iden_2,
      while_mul_25_cmp_iden_4, while_mul_25_cmp_iden_6, while_mul_25_cmp_z_mxwt,
      while_mul_25_cmp_z_mxwt_1, while_mul_25_cmp_z_mxwt_2, while_mul_25_cmp_z_mxwt_3,
      while_mul_25_cmp_biwt, while_mul_25_cmp_bdwt, while_mul_25_cmp_biwt_2, while_mul_25_cmp_bdwt_2,
      while_mul_25_cmp_biwt_4, while_mul_25_cmp_bdwt_4, while_mul_25_cmp_biwt_6,
      while_mul_25_cmp_bdwt_6, while_mul_25_cmp_z
);
  input clk;
  input rst;
  output while_mul_25_cmp_bawt;
  output while_mul_25_cmp_iden;
  output while_mul_25_cmp_iden_2;
  output while_mul_25_cmp_iden_4;
  output while_mul_25_cmp_iden_6;
  output [177:0] while_mul_25_cmp_z_mxwt;
  output [177:0] while_mul_25_cmp_z_mxwt_1;
  output [176:0] while_mul_25_cmp_z_mxwt_2;
  output [176:0] while_mul_25_cmp_z_mxwt_3;
  input while_mul_25_cmp_biwt;
  input while_mul_25_cmp_bdwt;
  input while_mul_25_cmp_biwt_2;
  input while_mul_25_cmp_bdwt_2;
  input while_mul_25_cmp_biwt_4;
  input while_mul_25_cmp_bdwt_4;
  input while_mul_25_cmp_biwt_6;
  input while_mul_25_cmp_bdwt_6;
  input [177:0] while_mul_25_cmp_z;


  // Interconnect Declarations
  reg [2:0] while_mul_25_cmp_bcwt;
  wire [3:0] nl_while_mul_25_cmp_bcwt;
  reg [2:0] while_mul_25_cmp_bcwt_1;
  wire [3:0] nl_while_mul_25_cmp_bcwt_1;
  reg [2:0] while_mul_25_cmp_bcwt_2;
  wire [3:0] nl_while_mul_25_cmp_bcwt_2;
  reg [2:0] while_mul_25_cmp_bcwt_3;
  wire [3:0] nl_while_mul_25_cmp_bcwt_3;
  reg [177:0] while_mul_25_cmp_z_bfwt;
  reg [177:0] while_mul_25_cmp_z_bfwt_1;
  reg [177:0] while_mul_25_cmp_z_bfwt_2;
  reg [177:0] while_mul_25_cmp_z_bfwt_3;
  reg [177:0] while_mul_25_cmp_z_bfwt_4;
  reg [177:0] while_mul_25_cmp_z_bfwt_5;
  reg [177:0] while_mul_25_cmp_z_bfwt_6;
  reg [177:0] while_mul_25_cmp_z_bfwt_7;
  reg [177:0] while_mul_25_cmp_z_bfwt_8;
  reg [177:0] while_mul_25_cmp_z_bfwt_9;
  reg [177:0] while_mul_25_cmp_z_bfwt_10;
  reg [177:0] while_mul_25_cmp_z_bfwt_11;
  reg [176:0] while_mul_25_cmp_z_bfwt_17_176_0;
  reg [176:0] while_mul_25_cmp_z_bfwt_23_176_0;
  reg [176:0] while_mul_25_cmp_z_bfwt_16_176_0;
  reg [176:0] while_mul_25_cmp_z_bfwt_22_176_0;
  reg [176:0] while_mul_25_cmp_z_bfwt_15_176_0;
  reg [176:0] while_mul_25_cmp_z_bfwt_21_176_0;
  reg [176:0] while_mul_25_cmp_z_bfwt_14_176_0;
  reg [176:0] while_mul_25_cmp_z_bfwt_20_176_0;
  reg [176:0] while_mul_25_cmp_z_bfwt_13_176_0;
  reg [176:0] while_mul_25_cmp_z_bfwt_19_176_0;
  reg [176:0] while_mul_25_cmp_z_bfwt_12_176_0;
  reg [176:0] while_mul_25_cmp_z_bfwt_18_176_0;

  wire[2:0] while_acc_79_nl;
  wire[3:0] nl_while_acc_79_nl;
  wire[1:0] while_acc_80_nl;
  wire[2:0] nl_while_acc_80_nl;
  wire[2:0] while_acc_82_nl;
  wire[3:0] nl_while_acc_82_nl;
  wire[1:0] while_acc_83_nl;
  wire[2:0] nl_while_acc_83_nl;
  wire[2:0] while_acc_85_nl;
  wire[3:0] nl_while_acc_85_nl;
  wire[1:0] while_acc_86_nl;
  wire[2:0] nl_while_acc_86_nl;
  wire[2:0] while_acc_88_nl;
  wire[3:0] nl_while_acc_88_nl;
  wire[1:0] while_acc_89_nl;
  wire[2:0] nl_while_acc_89_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_25_cmp_iden = while_mul_25_cmp_biwt | while_mul_25_cmp_bdwt;
  assign while_mul_25_cmp_bawt = while_mul_25_cmp_biwt | (while_mul_25_cmp_bcwt!=3'b000);
  assign while_mul_25_cmp_iden_2 = while_mul_25_cmp_biwt_2 | while_mul_25_cmp_bdwt_2;
  assign while_mul_25_cmp_iden_4 = while_mul_25_cmp_biwt_4 | while_mul_25_cmp_bdwt_4;
  assign while_mul_25_cmp_iden_6 = while_mul_25_cmp_biwt_6 | while_mul_25_cmp_bdwt_6;
  assign while_mul_25_cmp_z_mxwt = MUX_v_178_7_2(while_mul_25_cmp_z, while_mul_25_cmp_z_bfwt,
      while_mul_25_cmp_z_bfwt_1, while_mul_25_cmp_z_bfwt_2, while_mul_25_cmp_z_bfwt_3,
      while_mul_25_cmp_z_bfwt_4, while_mul_25_cmp_z_bfwt_5, while_mul_25_cmp_bcwt_3);
  assign while_mul_25_cmp_z_mxwt_1 = MUX_v_178_7_2(while_mul_25_cmp_z, while_mul_25_cmp_z_bfwt_6,
      while_mul_25_cmp_z_bfwt_7, while_mul_25_cmp_z_bfwt_8, while_mul_25_cmp_z_bfwt_9,
      while_mul_25_cmp_z_bfwt_10, while_mul_25_cmp_z_bfwt_11, while_mul_25_cmp_bcwt_2);
  assign while_mul_25_cmp_z_mxwt_2 = MUX_v_177_7_2((while_mul_25_cmp_z[176:0]), while_mul_25_cmp_z_bfwt_12_176_0,
      while_mul_25_cmp_z_bfwt_13_176_0, while_mul_25_cmp_z_bfwt_14_176_0, while_mul_25_cmp_z_bfwt_15_176_0,
      while_mul_25_cmp_z_bfwt_16_176_0, while_mul_25_cmp_z_bfwt_17_176_0, while_mul_25_cmp_bcwt_1);
  assign while_mul_25_cmp_z_mxwt_3 = MUX_v_177_7_2((while_mul_25_cmp_z[176:0]), while_mul_25_cmp_z_bfwt_18_176_0,
      while_mul_25_cmp_z_bfwt_19_176_0, while_mul_25_cmp_z_bfwt_20_176_0, while_mul_25_cmp_z_bfwt_21_176_0,
      while_mul_25_cmp_z_bfwt_22_176_0, while_mul_25_cmp_z_bfwt_23_176_0, while_mul_25_cmp_bcwt);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_25_cmp_bcwt <= 3'b000;
      while_mul_25_cmp_bcwt_1 <= 3'b000;
      while_mul_25_cmp_bcwt_2 <= 3'b000;
      while_mul_25_cmp_bcwt_3 <= 3'b000;
    end
    else begin
      while_mul_25_cmp_bcwt <= nl_while_mul_25_cmp_bcwt[2:0];
      while_mul_25_cmp_bcwt_1 <= nl_while_mul_25_cmp_bcwt_1[2:0];
      while_mul_25_cmp_bcwt_2 <= nl_while_mul_25_cmp_bcwt_2[2:0];
      while_mul_25_cmp_bcwt_3 <= nl_while_mul_25_cmp_bcwt_3[2:0];
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_25_cmp_z_bfwt <= 178'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_25_cmp_z_bfwt_1 <= 178'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_25_cmp_z_bfwt_2 <= 178'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_25_cmp_z_bfwt_3 <= 178'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_25_cmp_z_bfwt_4 <= 178'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_25_cmp_z_bfwt_5 <= 178'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_25_cmp_biwt_6 ) begin
      while_mul_25_cmp_z_bfwt <= while_mul_25_cmp_z;
      while_mul_25_cmp_z_bfwt_1 <= while_mul_25_cmp_z_bfwt;
      while_mul_25_cmp_z_bfwt_2 <= while_mul_25_cmp_z_bfwt_1;
      while_mul_25_cmp_z_bfwt_3 <= while_mul_25_cmp_z_bfwt_2;
      while_mul_25_cmp_z_bfwt_4 <= while_mul_25_cmp_z_bfwt_3;
      while_mul_25_cmp_z_bfwt_5 <= while_mul_25_cmp_z_bfwt_4;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_25_cmp_z_bfwt_6 <= 178'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_25_cmp_z_bfwt_7 <= 178'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_25_cmp_z_bfwt_8 <= 178'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_25_cmp_z_bfwt_9 <= 178'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_25_cmp_z_bfwt_10 <= 178'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_25_cmp_z_bfwt_11 <= 178'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_25_cmp_biwt_4 ) begin
      while_mul_25_cmp_z_bfwt_6 <= while_mul_25_cmp_z;
      while_mul_25_cmp_z_bfwt_7 <= while_mul_25_cmp_z_bfwt_6;
      while_mul_25_cmp_z_bfwt_8 <= while_mul_25_cmp_z_bfwt_7;
      while_mul_25_cmp_z_bfwt_9 <= while_mul_25_cmp_z_bfwt_8;
      while_mul_25_cmp_z_bfwt_10 <= while_mul_25_cmp_z_bfwt_9;
      while_mul_25_cmp_z_bfwt_11 <= while_mul_25_cmp_z_bfwt_10;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_25_cmp_z_bfwt_12_176_0 <= 177'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_25_cmp_z_bfwt_13_176_0 <= 177'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_25_cmp_z_bfwt_14_176_0 <= 177'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_25_cmp_z_bfwt_15_176_0 <= 177'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_25_cmp_z_bfwt_16_176_0 <= 177'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_25_cmp_z_bfwt_17_176_0 <= 177'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_25_cmp_biwt_2 ) begin
      while_mul_25_cmp_z_bfwt_12_176_0 <= while_mul_25_cmp_z[176:0];
      while_mul_25_cmp_z_bfwt_13_176_0 <= while_mul_25_cmp_z_bfwt_12_176_0;
      while_mul_25_cmp_z_bfwt_14_176_0 <= while_mul_25_cmp_z_bfwt_13_176_0;
      while_mul_25_cmp_z_bfwt_15_176_0 <= while_mul_25_cmp_z_bfwt_14_176_0;
      while_mul_25_cmp_z_bfwt_16_176_0 <= while_mul_25_cmp_z_bfwt_15_176_0;
      while_mul_25_cmp_z_bfwt_17_176_0 <= while_mul_25_cmp_z_bfwt_16_176_0;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_25_cmp_z_bfwt_18_176_0 <= 177'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_25_cmp_z_bfwt_19_176_0 <= 177'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_25_cmp_z_bfwt_20_176_0 <= 177'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_25_cmp_z_bfwt_21_176_0 <= 177'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_25_cmp_z_bfwt_22_176_0 <= 177'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_25_cmp_z_bfwt_23_176_0 <= 177'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_25_cmp_biwt ) begin
      while_mul_25_cmp_z_bfwt_18_176_0 <= while_mul_25_cmp_z[176:0];
      while_mul_25_cmp_z_bfwt_19_176_0 <= while_mul_25_cmp_z_bfwt_18_176_0;
      while_mul_25_cmp_z_bfwt_20_176_0 <= while_mul_25_cmp_z_bfwt_19_176_0;
      while_mul_25_cmp_z_bfwt_21_176_0 <= while_mul_25_cmp_z_bfwt_20_176_0;
      while_mul_25_cmp_z_bfwt_22_176_0 <= while_mul_25_cmp_z_bfwt_21_176_0;
      while_mul_25_cmp_z_bfwt_23_176_0 <= while_mul_25_cmp_z_bfwt_22_176_0;
    end
  end
  assign nl_while_acc_79_nl = while_mul_25_cmp_bcwt + 3'b111;
  assign while_acc_79_nl = nl_while_acc_79_nl[2:0];
  assign nl_while_acc_80_nl = conv_u2u_1_2(~ while_mul_25_cmp_bdwt) + conv_u2u_1_2(while_mul_25_cmp_biwt);
  assign while_acc_80_nl = nl_while_acc_80_nl[1:0];
  assign nl_while_mul_25_cmp_bcwt  = while_acc_79_nl + conv_u2u_2_3(while_acc_80_nl);
  assign nl_while_acc_82_nl = while_mul_25_cmp_bcwt_1 + 3'b111;
  assign while_acc_82_nl = nl_while_acc_82_nl[2:0];
  assign nl_while_acc_83_nl = conv_u2u_1_2(~ while_mul_25_cmp_bdwt_2) + conv_u2u_1_2(while_mul_25_cmp_biwt_2);
  assign while_acc_83_nl = nl_while_acc_83_nl[1:0];
  assign nl_while_mul_25_cmp_bcwt_1  = while_acc_82_nl + conv_u2u_2_3(while_acc_83_nl);
  assign nl_while_acc_85_nl = while_mul_25_cmp_bcwt_2 + 3'b111;
  assign while_acc_85_nl = nl_while_acc_85_nl[2:0];
  assign nl_while_acc_86_nl = conv_u2u_1_2(~ while_mul_25_cmp_bdwt_4) + conv_u2u_1_2(while_mul_25_cmp_biwt_4);
  assign while_acc_86_nl = nl_while_acc_86_nl[1:0];
  assign nl_while_mul_25_cmp_bcwt_2  = while_acc_85_nl + conv_u2u_2_3(while_acc_86_nl);
  assign nl_while_acc_88_nl = while_mul_25_cmp_bcwt_3 + 3'b111;
  assign while_acc_88_nl = nl_while_acc_88_nl[2:0];
  assign nl_while_acc_89_nl = conv_u2u_1_2(~ while_mul_25_cmp_bdwt_6) + conv_u2u_1_2(while_mul_25_cmp_biwt_6);
  assign while_acc_89_nl = nl_while_acc_89_nl[1:0];
  assign nl_while_mul_25_cmp_bcwt_3  = while_acc_88_nl + conv_u2u_2_3(while_acc_89_nl);

  function automatic [176:0] MUX_v_177_7_2;
    input [176:0] input_0;
    input [176:0] input_1;
    input [176:0] input_2;
    input [176:0] input_3;
    input [176:0] input_4;
    input [176:0] input_5;
    input [176:0] input_6;
    input [2:0] sel;
    reg [176:0] result;
  begin
    case (sel)
      3'b000 : begin
        result = input_0;
      end
      3'b001 : begin
        result = input_1;
      end
      3'b010 : begin
        result = input_2;
      end
      3'b011 : begin
        result = input_3;
      end
      3'b100 : begin
        result = input_4;
      end
      3'b101 : begin
        result = input_5;
      end
      default : begin
        result = input_6;
      end
    endcase
    MUX_v_177_7_2 = result;
  end
  endfunction


  function automatic [177:0] MUX_v_178_7_2;
    input [177:0] input_0;
    input [177:0] input_1;
    input [177:0] input_2;
    input [177:0] input_3;
    input [177:0] input_4;
    input [177:0] input_5;
    input [177:0] input_6;
    input [2:0] sel;
    reg [177:0] result;
  begin
    case (sel)
      3'b000 : begin
        result = input_0;
      end
      3'b001 : begin
        result = input_1;
      end
      3'b010 : begin
        result = input_2;
      end
      3'b011 : begin
        result = input_3;
      end
      3'b100 : begin
        result = input_4;
      end
      3'b101 : begin
        result = input_5;
      end
      default : begin
        result = input_6;
      end
    endcase
    MUX_v_178_7_2 = result;
  end
  endfunction


  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_25_cmp_mgc_mul_pipe_65_1_113_1_178_1_1_0_0_6_1_wait_ctrl
// ------------------------------------------------------------------


module Rotate_run_while_mul_25_cmp_mgc_mul_pipe_65_1_113_1_178_1_1_0_0_6_1_wait_ctrl
    (
  clk, rst, run_wen, run_wten, while_mul_25_cmp_oswt_unreg, while_mul_25_cmp_iswt5,
      while_mul_25_cmp_iden_1, while_mul_25_cmp_oswt_unreg_1, while_mul_25_cmp_iswt5_1,
      while_mul_25_cmp_iden_3, while_mul_25_cmp_oswt_unreg_2, while_mul_25_cmp_iswt5_2,
      while_mul_25_cmp_iden_5, while_mul_25_cmp_oswt_unreg_3, while_mul_25_cmp_iswt5_3,
      while_mul_25_cmp_iden_7, run_cgwt_15, while_mul_25_cmp_bdwt, while_mul_25_cmp_bdwt_2,
      while_mul_25_cmp_bdwt_4, while_mul_25_cmp_bdwt_6, while_mul_25_cmp_iswt5_3_pff,
      while_mul_25_cmp_iswt5_2_pff, while_mul_25_cmp_iswt5_1_pff, while_mul_25_cmp_iswt5_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_25_cmp_oswt_unreg;
  input while_mul_25_cmp_iswt5;
  output while_mul_25_cmp_iden_1;
  input while_mul_25_cmp_oswt_unreg_1;
  input while_mul_25_cmp_iswt5_1;
  output while_mul_25_cmp_iden_3;
  input while_mul_25_cmp_oswt_unreg_2;
  input while_mul_25_cmp_iswt5_2;
  output while_mul_25_cmp_iden_5;
  input while_mul_25_cmp_oswt_unreg_3;
  input while_mul_25_cmp_iswt5_3;
  output while_mul_25_cmp_iden_7;
  output run_cgwt_15;
  output while_mul_25_cmp_bdwt;
  output while_mul_25_cmp_bdwt_2;
  output while_mul_25_cmp_bdwt_4;
  output while_mul_25_cmp_bdwt_6;
  input while_mul_25_cmp_iswt5_3_pff;
  input while_mul_25_cmp_iswt5_2_pff;
  input while_mul_25_cmp_iswt5_1_pff;
  input while_mul_25_cmp_iswt5_pff;


  // Interconnect Declarations
  wire while_mul_25_cmp_ogwt;
  wire while_mul_25_cmp_tiswt5;
  reg while_mul_25_cmp_hile_mul_25_cmp_pdswt4;
  reg while_mul_25_cmp_hile_mul_25_cmp_pdswt3;
  reg while_mul_25_cmp_hile_mul_25_cmp_pdswt2;
  reg while_mul_25_cmp_hile_mul_25_cmp_pdswt1;
  reg while_mul_25_cmp_hile_mul_25_cmp_pdswt0;
  reg [2:0] while_mul_25_cmp_icwt;
  wire [3:0] nl_while_mul_25_cmp_icwt;
  wire while_mul_25_cmp_ogwt_1;
  wire while_mul_25_cmp_tiswt5_1;
  reg while_mul_25_cmp_hile_mul_25_cmp_pdswt4_1;
  reg while_mul_25_cmp_hile_mul_25_cmp_pdswt3_1;
  reg while_mul_25_cmp_hile_mul_25_cmp_pdswt2_1;
  reg while_mul_25_cmp_hile_mul_25_cmp_pdswt1_1;
  reg while_mul_25_cmp_hile_mul_25_cmp_pdswt0_1;
  reg [2:0] while_mul_25_cmp_icwt_1;
  wire [3:0] nl_while_mul_25_cmp_icwt_1;
  wire while_mul_25_cmp_ogwt_2;
  wire while_mul_25_cmp_tiswt5_2;
  reg while_mul_25_cmp_hile_mul_25_cmp_pdswt4_2;
  reg while_mul_25_cmp_hile_mul_25_cmp_pdswt3_2;
  reg while_mul_25_cmp_hile_mul_25_cmp_pdswt2_2;
  reg while_mul_25_cmp_hile_mul_25_cmp_pdswt1_2;
  reg while_mul_25_cmp_hile_mul_25_cmp_pdswt0_2;
  reg [2:0] while_mul_25_cmp_icwt_2;
  wire [3:0] nl_while_mul_25_cmp_icwt_2;
  wire while_mul_25_cmp_ogwt_3;
  wire while_mul_25_cmp_tiswt5_3;
  reg while_mul_25_cmp_hile_mul_25_cmp_pdswt4_3;
  reg while_mul_25_cmp_hile_mul_25_cmp_pdswt3_3;
  reg while_mul_25_cmp_hile_mul_25_cmp_pdswt2_3;
  reg while_mul_25_cmp_hile_mul_25_cmp_pdswt1_3;
  reg while_mul_25_cmp_hile_mul_25_cmp_pdswt0_3;
  reg [2:0] while_mul_25_cmp_icwt_3;
  wire [3:0] nl_while_mul_25_cmp_icwt_3;

  wire[2:0] while_acc_80_nl;
  wire[3:0] nl_while_acc_80_nl;
  wire[1:0] while_acc_81_nl;
  wire[2:0] nl_while_acc_81_nl;
  wire[2:0] while_acc_83_nl;
  wire[3:0] nl_while_acc_83_nl;
  wire[1:0] while_acc_84_nl;
  wire[2:0] nl_while_acc_84_nl;
  wire[2:0] while_acc_86_nl;
  wire[3:0] nl_while_acc_86_nl;
  wire[1:0] while_acc_87_nl;
  wire[2:0] nl_while_acc_87_nl;
  wire[2:0] while_acc_89_nl;
  wire[3:0] nl_while_acc_89_nl;
  wire[1:0] while_acc_90_nl;
  wire[2:0] nl_while_acc_90_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_25_cmp_bdwt = while_mul_25_cmp_oswt_unreg & run_wen;
  assign while_mul_25_cmp_tiswt5 = (~ run_wten) & while_mul_25_cmp_iswt5;
  assign while_mul_25_cmp_iden_1 = while_mul_25_cmp_ogwt;
  assign while_mul_25_cmp_ogwt = while_mul_25_cmp_hile_mul_25_cmp_pdswt0 | (while_mul_25_cmp_icwt!=3'b000);
  assign while_mul_25_cmp_bdwt_2 = while_mul_25_cmp_oswt_unreg_1 & run_wen;
  assign while_mul_25_cmp_tiswt5_1 = (~ run_wten) & while_mul_25_cmp_iswt5_1;
  assign while_mul_25_cmp_iden_3 = while_mul_25_cmp_ogwt_1;
  assign while_mul_25_cmp_ogwt_1 = while_mul_25_cmp_hile_mul_25_cmp_pdswt0_1 | (while_mul_25_cmp_icwt_1!=3'b000);
  assign while_mul_25_cmp_bdwt_4 = while_mul_25_cmp_oswt_unreg_2 & run_wen;
  assign while_mul_25_cmp_tiswt5_2 = (~ run_wten) & while_mul_25_cmp_iswt5_2;
  assign while_mul_25_cmp_iden_5 = while_mul_25_cmp_ogwt_2;
  assign while_mul_25_cmp_ogwt_2 = while_mul_25_cmp_hile_mul_25_cmp_pdswt0_2 | (while_mul_25_cmp_icwt_2!=3'b000);
  assign while_mul_25_cmp_bdwt_6 = while_mul_25_cmp_oswt_unreg_3 & run_wen;
  assign while_mul_25_cmp_tiswt5_3 = (~ run_wten) & while_mul_25_cmp_iswt5_3;
  assign while_mul_25_cmp_iden_7 = while_mul_25_cmp_ogwt_3;
  assign while_mul_25_cmp_ogwt_3 = while_mul_25_cmp_hile_mul_25_cmp_pdswt0_3 | (while_mul_25_cmp_icwt_3!=3'b000);
  assign run_cgwt_15 = while_mul_25_cmp_ogwt_3 | while_mul_25_cmp_tiswt5_3 | while_mul_25_cmp_hile_mul_25_cmp_pdswt4_3
      | while_mul_25_cmp_hile_mul_25_cmp_pdswt3_3 | while_mul_25_cmp_hile_mul_25_cmp_pdswt2_3
      | while_mul_25_cmp_hile_mul_25_cmp_pdswt1_3 | while_mul_25_cmp_ogwt_2 | while_mul_25_cmp_tiswt5_2
      | while_mul_25_cmp_hile_mul_25_cmp_pdswt4_2 | while_mul_25_cmp_hile_mul_25_cmp_pdswt3_2
      | while_mul_25_cmp_hile_mul_25_cmp_pdswt2_2 | while_mul_25_cmp_hile_mul_25_cmp_pdswt1_2
      | while_mul_25_cmp_ogwt_1 | while_mul_25_cmp_tiswt5_1 | while_mul_25_cmp_hile_mul_25_cmp_pdswt4_1
      | while_mul_25_cmp_hile_mul_25_cmp_pdswt3_1 | while_mul_25_cmp_hile_mul_25_cmp_pdswt2_1
      | while_mul_25_cmp_hile_mul_25_cmp_pdswt1_1 | while_mul_25_cmp_ogwt | while_mul_25_cmp_tiswt5
      | while_mul_25_cmp_hile_mul_25_cmp_pdswt4 | while_mul_25_cmp_hile_mul_25_cmp_pdswt3
      | while_mul_25_cmp_hile_mul_25_cmp_pdswt2 | while_mul_25_cmp_hile_mul_25_cmp_pdswt1
      | (run_wen & while_mul_25_cmp_iswt5_3_pff) | (run_wen & while_mul_25_cmp_iswt5_2_pff)
      | (run_wen & while_mul_25_cmp_iswt5_1_pff) | (run_wen & while_mul_25_cmp_iswt5_pff);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_25_cmp_hile_mul_25_cmp_pdswt4 <= 1'b0;
      while_mul_25_cmp_hile_mul_25_cmp_pdswt3 <= 1'b0;
      while_mul_25_cmp_hile_mul_25_cmp_pdswt2 <= 1'b0;
      while_mul_25_cmp_hile_mul_25_cmp_pdswt1 <= 1'b0;
      while_mul_25_cmp_hile_mul_25_cmp_pdswt0 <= 1'b0;
      while_mul_25_cmp_icwt <= 3'b000;
      while_mul_25_cmp_hile_mul_25_cmp_pdswt4_1 <= 1'b0;
      while_mul_25_cmp_hile_mul_25_cmp_pdswt3_1 <= 1'b0;
      while_mul_25_cmp_hile_mul_25_cmp_pdswt2_1 <= 1'b0;
      while_mul_25_cmp_hile_mul_25_cmp_pdswt1_1 <= 1'b0;
      while_mul_25_cmp_hile_mul_25_cmp_pdswt0_1 <= 1'b0;
      while_mul_25_cmp_icwt_1 <= 3'b000;
      while_mul_25_cmp_hile_mul_25_cmp_pdswt4_2 <= 1'b0;
      while_mul_25_cmp_hile_mul_25_cmp_pdswt3_2 <= 1'b0;
      while_mul_25_cmp_hile_mul_25_cmp_pdswt2_2 <= 1'b0;
      while_mul_25_cmp_hile_mul_25_cmp_pdswt1_2 <= 1'b0;
      while_mul_25_cmp_hile_mul_25_cmp_pdswt0_2 <= 1'b0;
      while_mul_25_cmp_icwt_2 <= 3'b000;
      while_mul_25_cmp_hile_mul_25_cmp_pdswt4_3 <= 1'b0;
      while_mul_25_cmp_hile_mul_25_cmp_pdswt3_3 <= 1'b0;
      while_mul_25_cmp_hile_mul_25_cmp_pdswt2_3 <= 1'b0;
      while_mul_25_cmp_hile_mul_25_cmp_pdswt1_3 <= 1'b0;
      while_mul_25_cmp_hile_mul_25_cmp_pdswt0_3 <= 1'b0;
      while_mul_25_cmp_icwt_3 <= 3'b000;
    end
    else begin
      while_mul_25_cmp_hile_mul_25_cmp_pdswt4 <= while_mul_25_cmp_tiswt5;
      while_mul_25_cmp_hile_mul_25_cmp_pdswt3 <= while_mul_25_cmp_hile_mul_25_cmp_pdswt4;
      while_mul_25_cmp_hile_mul_25_cmp_pdswt2 <= while_mul_25_cmp_hile_mul_25_cmp_pdswt3;
      while_mul_25_cmp_hile_mul_25_cmp_pdswt1 <= while_mul_25_cmp_hile_mul_25_cmp_pdswt2;
      while_mul_25_cmp_hile_mul_25_cmp_pdswt0 <= while_mul_25_cmp_hile_mul_25_cmp_pdswt1;
      while_mul_25_cmp_icwt <= nl_while_mul_25_cmp_icwt[2:0];
      while_mul_25_cmp_hile_mul_25_cmp_pdswt4_1 <= while_mul_25_cmp_tiswt5_1;
      while_mul_25_cmp_hile_mul_25_cmp_pdswt3_1 <= while_mul_25_cmp_hile_mul_25_cmp_pdswt4_1;
      while_mul_25_cmp_hile_mul_25_cmp_pdswt2_1 <= while_mul_25_cmp_hile_mul_25_cmp_pdswt3_1;
      while_mul_25_cmp_hile_mul_25_cmp_pdswt1_1 <= while_mul_25_cmp_hile_mul_25_cmp_pdswt2_1;
      while_mul_25_cmp_hile_mul_25_cmp_pdswt0_1 <= while_mul_25_cmp_hile_mul_25_cmp_pdswt1_1;
      while_mul_25_cmp_icwt_1 <= nl_while_mul_25_cmp_icwt_1[2:0];
      while_mul_25_cmp_hile_mul_25_cmp_pdswt4_2 <= while_mul_25_cmp_tiswt5_2;
      while_mul_25_cmp_hile_mul_25_cmp_pdswt3_2 <= while_mul_25_cmp_hile_mul_25_cmp_pdswt4_2;
      while_mul_25_cmp_hile_mul_25_cmp_pdswt2_2 <= while_mul_25_cmp_hile_mul_25_cmp_pdswt3_2;
      while_mul_25_cmp_hile_mul_25_cmp_pdswt1_2 <= while_mul_25_cmp_hile_mul_25_cmp_pdswt2_2;
      while_mul_25_cmp_hile_mul_25_cmp_pdswt0_2 <= while_mul_25_cmp_hile_mul_25_cmp_pdswt1_2;
      while_mul_25_cmp_icwt_2 <= nl_while_mul_25_cmp_icwt_2[2:0];
      while_mul_25_cmp_hile_mul_25_cmp_pdswt4_3 <= while_mul_25_cmp_tiswt5_3;
      while_mul_25_cmp_hile_mul_25_cmp_pdswt3_3 <= while_mul_25_cmp_hile_mul_25_cmp_pdswt4_3;
      while_mul_25_cmp_hile_mul_25_cmp_pdswt2_3 <= while_mul_25_cmp_hile_mul_25_cmp_pdswt3_3;
      while_mul_25_cmp_hile_mul_25_cmp_pdswt1_3 <= while_mul_25_cmp_hile_mul_25_cmp_pdswt2_3;
      while_mul_25_cmp_hile_mul_25_cmp_pdswt0_3 <= while_mul_25_cmp_hile_mul_25_cmp_pdswt1_3;
      while_mul_25_cmp_icwt_3 <= nl_while_mul_25_cmp_icwt_3[2:0];
    end
  end
  assign nl_while_acc_80_nl = while_mul_25_cmp_icwt + 3'b111;
  assign while_acc_80_nl = nl_while_acc_80_nl[2:0];
  assign nl_while_acc_81_nl = conv_u2u_1_2(while_mul_25_cmp_hile_mul_25_cmp_pdswt0)
      + conv_u2u_1_2(~ while_mul_25_cmp_ogwt);
  assign while_acc_81_nl = nl_while_acc_81_nl[1:0];
  assign nl_while_mul_25_cmp_icwt  = while_acc_80_nl + conv_u2u_2_3(while_acc_81_nl);
  assign nl_while_acc_83_nl = while_mul_25_cmp_icwt_1 + 3'b111;
  assign while_acc_83_nl = nl_while_acc_83_nl[2:0];
  assign nl_while_acc_84_nl = conv_u2u_1_2(while_mul_25_cmp_hile_mul_25_cmp_pdswt0_1)
      + conv_u2u_1_2(~ while_mul_25_cmp_ogwt_1);
  assign while_acc_84_nl = nl_while_acc_84_nl[1:0];
  assign nl_while_mul_25_cmp_icwt_1  = while_acc_83_nl + conv_u2u_2_3(while_acc_84_nl);
  assign nl_while_acc_86_nl = while_mul_25_cmp_icwt_2 + 3'b111;
  assign while_acc_86_nl = nl_while_acc_86_nl[2:0];
  assign nl_while_acc_87_nl = conv_u2u_1_2(while_mul_25_cmp_hile_mul_25_cmp_pdswt0_2)
      + conv_u2u_1_2(~ while_mul_25_cmp_ogwt_2);
  assign while_acc_87_nl = nl_while_acc_87_nl[1:0];
  assign nl_while_mul_25_cmp_icwt_2  = while_acc_86_nl + conv_u2u_2_3(while_acc_87_nl);
  assign nl_while_acc_89_nl = while_mul_25_cmp_icwt_3 + 3'b111;
  assign while_acc_89_nl = nl_while_acc_89_nl[2:0];
  assign nl_while_acc_90_nl = conv_u2u_1_2(while_mul_25_cmp_hile_mul_25_cmp_pdswt0_3)
      + conv_u2u_1_2(~ while_mul_25_cmp_ogwt_3);
  assign while_acc_90_nl = nl_while_acc_90_nl[1:0];
  assign nl_while_mul_25_cmp_icwt_3  = while_acc_89_nl + conv_u2u_2_3(while_acc_90_nl);

  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_36_cmp_mgc_mul_pipe_49_0_64_1_113_1_1_0_0_4_1_wait_dp
// ------------------------------------------------------------------


module Rotate_run_while_mul_36_cmp_mgc_mul_pipe_49_0_64_1_113_1_1_0_0_4_1_wait_dp
    (
  clk, rst, while_mul_36_cmp_bawt, while_mul_36_cmp_iden, while_mul_36_cmp_iden_2,
      while_mul_36_cmp_z_mxwt, while_mul_36_cmp_z_mxwt_1, while_mul_36_cmp_biwt,
      while_mul_36_cmp_bdwt, while_mul_36_cmp_biwt_2, while_mul_36_cmp_bdwt_2, while_mul_36_cmp_z
);
  input clk;
  input rst;
  output while_mul_36_cmp_bawt;
  output while_mul_36_cmp_iden;
  output while_mul_36_cmp_iden_2;
  output [112:0] while_mul_36_cmp_z_mxwt;
  output [112:0] while_mul_36_cmp_z_mxwt_1;
  input while_mul_36_cmp_biwt;
  input while_mul_36_cmp_bdwt;
  input while_mul_36_cmp_biwt_2;
  input while_mul_36_cmp_bdwt_2;
  input [112:0] while_mul_36_cmp_z;


  // Interconnect Declarations
  reg [2:0] while_mul_36_cmp_bcwt;
  wire [3:0] nl_while_mul_36_cmp_bcwt;
  reg [2:0] while_mul_36_cmp_bcwt_1;
  wire [3:0] nl_while_mul_36_cmp_bcwt_1;
  reg [112:0] while_mul_36_cmp_z_bfwt;
  reg [112:0] while_mul_36_cmp_z_bfwt_1;
  reg [112:0] while_mul_36_cmp_z_bfwt_2;
  reg [112:0] while_mul_36_cmp_z_bfwt_3;
  reg [112:0] while_mul_36_cmp_z_bfwt_4;
  reg [112:0] while_mul_36_cmp_z_bfwt_5;
  reg [112:0] while_mul_36_cmp_z_bfwt_6;
  reg [112:0] while_mul_36_cmp_z_bfwt_7;

  wire[2:0] while_acc_71_nl;
  wire[3:0] nl_while_acc_71_nl;
  wire[1:0] while_acc_72_nl;
  wire[2:0] nl_while_acc_72_nl;
  wire[2:0] while_acc_74_nl;
  wire[3:0] nl_while_acc_74_nl;
  wire[1:0] while_acc_75_nl;
  wire[2:0] nl_while_acc_75_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_36_cmp_iden = while_mul_36_cmp_biwt | while_mul_36_cmp_bdwt;
  assign while_mul_36_cmp_bawt = while_mul_36_cmp_biwt | (while_mul_36_cmp_bcwt!=3'b000);
  assign while_mul_36_cmp_iden_2 = while_mul_36_cmp_biwt_2 | while_mul_36_cmp_bdwt_2;
  assign while_mul_36_cmp_z_mxwt = MUX_v_113_5_2(while_mul_36_cmp_z, while_mul_36_cmp_z_bfwt,
      while_mul_36_cmp_z_bfwt_1, while_mul_36_cmp_z_bfwt_2, while_mul_36_cmp_z_bfwt_3,
      while_mul_36_cmp_bcwt_1);
  assign while_mul_36_cmp_z_mxwt_1 = MUX_v_113_5_2(while_mul_36_cmp_z, while_mul_36_cmp_z_bfwt_4,
      while_mul_36_cmp_z_bfwt_5, while_mul_36_cmp_z_bfwt_6, while_mul_36_cmp_z_bfwt_7,
      while_mul_36_cmp_bcwt);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_36_cmp_bcwt <= 3'b000;
      while_mul_36_cmp_bcwt_1 <= 3'b000;
    end
    else begin
      while_mul_36_cmp_bcwt <= nl_while_mul_36_cmp_bcwt[2:0];
      while_mul_36_cmp_bcwt_1 <= nl_while_mul_36_cmp_bcwt_1[2:0];
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_36_cmp_z_bfwt <= 113'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_36_cmp_z_bfwt_1 <= 113'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_36_cmp_z_bfwt_2 <= 113'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_36_cmp_z_bfwt_3 <= 113'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_36_cmp_biwt_2 ) begin
      while_mul_36_cmp_z_bfwt <= while_mul_36_cmp_z;
      while_mul_36_cmp_z_bfwt_1 <= while_mul_36_cmp_z_bfwt;
      while_mul_36_cmp_z_bfwt_2 <= while_mul_36_cmp_z_bfwt_1;
      while_mul_36_cmp_z_bfwt_3 <= while_mul_36_cmp_z_bfwt_2;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_36_cmp_z_bfwt_4 <= 113'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_36_cmp_z_bfwt_5 <= 113'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_36_cmp_z_bfwt_6 <= 113'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_36_cmp_z_bfwt_7 <= 113'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_36_cmp_biwt ) begin
      while_mul_36_cmp_z_bfwt_4 <= while_mul_36_cmp_z;
      while_mul_36_cmp_z_bfwt_5 <= while_mul_36_cmp_z_bfwt_4;
      while_mul_36_cmp_z_bfwt_6 <= while_mul_36_cmp_z_bfwt_5;
      while_mul_36_cmp_z_bfwt_7 <= while_mul_36_cmp_z_bfwt_6;
    end
  end
  assign nl_while_acc_71_nl = while_mul_36_cmp_bcwt + 3'b111;
  assign while_acc_71_nl = nl_while_acc_71_nl[2:0];
  assign nl_while_acc_72_nl = conv_u2u_1_2(~ while_mul_36_cmp_bdwt) + conv_u2u_1_2(while_mul_36_cmp_biwt);
  assign while_acc_72_nl = nl_while_acc_72_nl[1:0];
  assign nl_while_mul_36_cmp_bcwt  = while_acc_71_nl + conv_u2u_2_3(while_acc_72_nl);
  assign nl_while_acc_74_nl = while_mul_36_cmp_bcwt_1 + 3'b111;
  assign while_acc_74_nl = nl_while_acc_74_nl[2:0];
  assign nl_while_acc_75_nl = conv_u2u_1_2(~ while_mul_36_cmp_bdwt_2) + conv_u2u_1_2(while_mul_36_cmp_biwt_2);
  assign while_acc_75_nl = nl_while_acc_75_nl[1:0];
  assign nl_while_mul_36_cmp_bcwt_1  = while_acc_74_nl + conv_u2u_2_3(while_acc_75_nl);

  function automatic [112:0] MUX_v_113_5_2;
    input [112:0] input_0;
    input [112:0] input_1;
    input [112:0] input_2;
    input [112:0] input_3;
    input [112:0] input_4;
    input [2:0] sel;
    reg [112:0] result;
  begin
    case (sel)
      3'b000 : begin
        result = input_0;
      end
      3'b001 : begin
        result = input_1;
      end
      3'b010 : begin
        result = input_2;
      end
      3'b011 : begin
        result = input_3;
      end
      default : begin
        result = input_4;
      end
    endcase
    MUX_v_113_5_2 = result;
  end
  endfunction


  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_36_cmp_mgc_mul_pipe_49_0_64_1_113_1_1_0_0_4_1_wait_ctrl
// ------------------------------------------------------------------


module Rotate_run_while_mul_36_cmp_mgc_mul_pipe_49_0_64_1_113_1_1_0_0_4_1_wait_ctrl
    (
  clk, rst, run_wen, run_wten, while_mul_36_cmp_oswt_unreg, while_mul_36_cmp_iswt3,
      while_mul_36_cmp_iden_1, while_mul_36_cmp_oswt_unreg_1, while_mul_36_cmp_iswt3_1,
      while_mul_36_cmp_iden_3, run_cgwt_14, while_mul_36_cmp_bdwt, while_mul_36_cmp_bdwt_2,
      while_mul_36_cmp_iswt3_1_pff, while_mul_36_cmp_iswt3_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_36_cmp_oswt_unreg;
  input while_mul_36_cmp_iswt3;
  output while_mul_36_cmp_iden_1;
  input while_mul_36_cmp_oswt_unreg_1;
  input while_mul_36_cmp_iswt3_1;
  output while_mul_36_cmp_iden_3;
  output run_cgwt_14;
  output while_mul_36_cmp_bdwt;
  output while_mul_36_cmp_bdwt_2;
  input while_mul_36_cmp_iswt3_1_pff;
  input while_mul_36_cmp_iswt3_pff;


  // Interconnect Declarations
  wire while_mul_36_cmp_ogwt;
  wire while_mul_36_cmp_tiswt3;
  reg while_mul_36_cmp_hile_mul_36_cmp_pdswt2;
  reg while_mul_36_cmp_hile_mul_36_cmp_pdswt1;
  reg while_mul_36_cmp_hile_mul_36_cmp_pdswt0;
  reg [2:0] while_mul_36_cmp_icwt;
  wire [3:0] nl_while_mul_36_cmp_icwt;
  wire while_mul_36_cmp_ogwt_1;
  wire while_mul_36_cmp_tiswt3_1;
  reg while_mul_36_cmp_hile_mul_36_cmp_pdswt2_1;
  reg while_mul_36_cmp_hile_mul_36_cmp_pdswt1_1;
  reg while_mul_36_cmp_hile_mul_36_cmp_pdswt0_1;
  reg [2:0] while_mul_36_cmp_icwt_1;
  wire [3:0] nl_while_mul_36_cmp_icwt_1;

  wire[2:0] while_acc_72_nl;
  wire[3:0] nl_while_acc_72_nl;
  wire[1:0] while_acc_73_nl;
  wire[2:0] nl_while_acc_73_nl;
  wire[2:0] while_acc_75_nl;
  wire[3:0] nl_while_acc_75_nl;
  wire[1:0] while_acc_76_nl;
  wire[2:0] nl_while_acc_76_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_36_cmp_bdwt = while_mul_36_cmp_oswt_unreg & run_wen;
  assign while_mul_36_cmp_tiswt3 = (~ run_wten) & while_mul_36_cmp_iswt3;
  assign while_mul_36_cmp_iden_1 = while_mul_36_cmp_ogwt;
  assign while_mul_36_cmp_ogwt = while_mul_36_cmp_hile_mul_36_cmp_pdswt0 | (while_mul_36_cmp_icwt!=3'b000);
  assign while_mul_36_cmp_bdwt_2 = while_mul_36_cmp_oswt_unreg_1 & run_wen;
  assign while_mul_36_cmp_tiswt3_1 = (~ run_wten) & while_mul_36_cmp_iswt3_1;
  assign while_mul_36_cmp_iden_3 = while_mul_36_cmp_ogwt_1;
  assign while_mul_36_cmp_ogwt_1 = while_mul_36_cmp_hile_mul_36_cmp_pdswt0_1 | (while_mul_36_cmp_icwt_1!=3'b000);
  assign run_cgwt_14 = while_mul_36_cmp_ogwt_1 | while_mul_36_cmp_tiswt3_1 | while_mul_36_cmp_hile_mul_36_cmp_pdswt2_1
      | while_mul_36_cmp_hile_mul_36_cmp_pdswt1_1 | while_mul_36_cmp_ogwt | while_mul_36_cmp_tiswt3
      | while_mul_36_cmp_hile_mul_36_cmp_pdswt2 | while_mul_36_cmp_hile_mul_36_cmp_pdswt1
      | (run_wen & while_mul_36_cmp_iswt3_1_pff) | (run_wen & while_mul_36_cmp_iswt3_pff);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_36_cmp_hile_mul_36_cmp_pdswt2 <= 1'b0;
      while_mul_36_cmp_hile_mul_36_cmp_pdswt1 <= 1'b0;
      while_mul_36_cmp_hile_mul_36_cmp_pdswt0 <= 1'b0;
      while_mul_36_cmp_icwt <= 3'b000;
      while_mul_36_cmp_hile_mul_36_cmp_pdswt2_1 <= 1'b0;
      while_mul_36_cmp_hile_mul_36_cmp_pdswt1_1 <= 1'b0;
      while_mul_36_cmp_hile_mul_36_cmp_pdswt0_1 <= 1'b0;
      while_mul_36_cmp_icwt_1 <= 3'b000;
    end
    else begin
      while_mul_36_cmp_hile_mul_36_cmp_pdswt2 <= while_mul_36_cmp_tiswt3;
      while_mul_36_cmp_hile_mul_36_cmp_pdswt1 <= while_mul_36_cmp_hile_mul_36_cmp_pdswt2;
      while_mul_36_cmp_hile_mul_36_cmp_pdswt0 <= while_mul_36_cmp_hile_mul_36_cmp_pdswt1;
      while_mul_36_cmp_icwt <= nl_while_mul_36_cmp_icwt[2:0];
      while_mul_36_cmp_hile_mul_36_cmp_pdswt2_1 <= while_mul_36_cmp_tiswt3_1;
      while_mul_36_cmp_hile_mul_36_cmp_pdswt1_1 <= while_mul_36_cmp_hile_mul_36_cmp_pdswt2_1;
      while_mul_36_cmp_hile_mul_36_cmp_pdswt0_1 <= while_mul_36_cmp_hile_mul_36_cmp_pdswt1_1;
      while_mul_36_cmp_icwt_1 <= nl_while_mul_36_cmp_icwt_1[2:0];
    end
  end
  assign nl_while_acc_72_nl = while_mul_36_cmp_icwt + 3'b111;
  assign while_acc_72_nl = nl_while_acc_72_nl[2:0];
  assign nl_while_acc_73_nl = conv_u2u_1_2(while_mul_36_cmp_hile_mul_36_cmp_pdswt0)
      + conv_u2u_1_2(~ while_mul_36_cmp_ogwt);
  assign while_acc_73_nl = nl_while_acc_73_nl[1:0];
  assign nl_while_mul_36_cmp_icwt  = while_acc_72_nl + conv_u2u_2_3(while_acc_73_nl);
  assign nl_while_acc_75_nl = while_mul_36_cmp_icwt_1 + 3'b111;
  assign while_acc_75_nl = nl_while_acc_75_nl[2:0];
  assign nl_while_acc_76_nl = conv_u2u_1_2(while_mul_36_cmp_hile_mul_36_cmp_pdswt0_1)
      + conv_u2u_1_2(~ while_mul_36_cmp_ogwt_1);
  assign while_acc_76_nl = nl_while_acc_76_nl[1:0];
  assign nl_while_mul_36_cmp_icwt_1  = while_acc_75_nl + conv_u2u_2_3(while_acc_76_nl);

  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_34_cmp_1_mgc_mul_pipe_64_1_178_1_210_1_1_0_0_8_1_wait_dp_1
// ------------------------------------------------------------------


module Rotate_run_while_mul_34_cmp_1_mgc_mul_pipe_64_1_178_1_210_1_1_0_0_8_1_wait_dp_1
    (
  clk, rst, while_mul_34_cmp_1_bawt, while_mul_34_cmp_1_iden, while_mul_34_cmp_1_iden_2,
      while_mul_34_cmp_1_iden_4, while_mul_34_cmp_1_z_mxwt, while_mul_34_cmp_1_z_mxwt_1,
      while_mul_34_cmp_1_z_mxwt_2, while_mul_34_cmp_1_biwt, while_mul_34_cmp_1_bdwt,
      while_mul_34_cmp_1_biwt_2, while_mul_34_cmp_1_bdwt_2, while_mul_34_cmp_1_biwt_4,
      while_mul_34_cmp_1_bdwt_4, while_mul_34_cmp_1_z
);
  input clk;
  input rst;
  output while_mul_34_cmp_1_bawt;
  output while_mul_34_cmp_1_iden;
  output while_mul_34_cmp_1_iden_2;
  output while_mul_34_cmp_1_iden_4;
  output [209:0] while_mul_34_cmp_1_z_mxwt;
  output [206:0] while_mul_34_cmp_1_z_mxwt_1;
  output [207:0] while_mul_34_cmp_1_z_mxwt_2;
  input while_mul_34_cmp_1_biwt;
  input while_mul_34_cmp_1_bdwt;
  input while_mul_34_cmp_1_biwt_2;
  input while_mul_34_cmp_1_bdwt_2;
  input while_mul_34_cmp_1_biwt_4;
  input while_mul_34_cmp_1_bdwt_4;
  input [209:0] while_mul_34_cmp_1_z;


  // Interconnect Declarations
  reg [3:0] while_mul_34_cmp_1_bcwt;
  wire [4:0] nl_while_mul_34_cmp_1_bcwt;
  reg [3:0] while_mul_34_cmp_1_bcwt_1;
  wire [4:0] nl_while_mul_34_cmp_1_bcwt_1;
  reg [3:0] while_mul_34_cmp_1_bcwt_2;
  wire [4:0] nl_while_mul_34_cmp_1_bcwt_2;
  reg [209:0] while_mul_34_cmp_1_z_bfwt;
  reg [209:0] while_mul_34_cmp_1_z_bfwt_1;
  reg [209:0] while_mul_34_cmp_1_z_bfwt_2;
  reg [209:0] while_mul_34_cmp_1_z_bfwt_3;
  reg [209:0] while_mul_34_cmp_1_z_bfwt_4;
  reg [209:0] while_mul_34_cmp_1_z_bfwt_5;
  reg [209:0] while_mul_34_cmp_1_z_bfwt_6;
  reg [209:0] while_mul_34_cmp_1_z_bfwt_7;
  reg [206:0] while_mul_34_cmp_1_z_bfwt_15_207_1;
  reg [207:0] while_mul_34_cmp_1_z_bfwt_23_208_1;
  reg [206:0] while_mul_34_cmp_1_z_bfwt_14_207_1;
  reg [207:0] while_mul_34_cmp_1_z_bfwt_22_208_1;
  reg [206:0] while_mul_34_cmp_1_z_bfwt_13_207_1;
  reg [207:0] while_mul_34_cmp_1_z_bfwt_21_208_1;
  reg [206:0] while_mul_34_cmp_1_z_bfwt_12_207_1;
  reg [207:0] while_mul_34_cmp_1_z_bfwt_20_208_1;
  reg [206:0] while_mul_34_cmp_1_z_bfwt_11_207_1;
  reg [207:0] while_mul_34_cmp_1_z_bfwt_19_208_1;
  reg [206:0] while_mul_34_cmp_1_z_bfwt_10_207_1;
  reg [207:0] while_mul_34_cmp_1_z_bfwt_18_208_1;
  reg [206:0] while_mul_34_cmp_1_z_bfwt_9_207_1;
  reg [207:0] while_mul_34_cmp_1_z_bfwt_17_208_1;
  reg [206:0] while_mul_34_cmp_1_z_bfwt_8_207_1;
  reg [207:0] while_mul_34_cmp_1_z_bfwt_16_208_1;

  wire[3:0] while_acc_67_nl;
  wire[4:0] nl_while_acc_67_nl;
  wire[1:0] while_acc_68_nl;
  wire[2:0] nl_while_acc_68_nl;
  wire[3:0] while_acc_70_nl;
  wire[4:0] nl_while_acc_70_nl;
  wire[1:0] while_acc_71_nl;
  wire[2:0] nl_while_acc_71_nl;
  wire[3:0] while_acc_73_nl;
  wire[4:0] nl_while_acc_73_nl;
  wire[1:0] while_acc_74_nl;
  wire[2:0] nl_while_acc_74_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_34_cmp_1_iden = while_mul_34_cmp_1_biwt | while_mul_34_cmp_1_bdwt;
  assign while_mul_34_cmp_1_bawt = while_mul_34_cmp_1_biwt | (while_mul_34_cmp_1_bcwt!=4'b0000);
  assign while_mul_34_cmp_1_iden_2 = while_mul_34_cmp_1_biwt_2 | while_mul_34_cmp_1_bdwt_2;
  assign while_mul_34_cmp_1_iden_4 = while_mul_34_cmp_1_biwt_4 | while_mul_34_cmp_1_bdwt_4;
  assign while_mul_34_cmp_1_z_mxwt = MUX_v_210_9_2(while_mul_34_cmp_1_z, while_mul_34_cmp_1_z_bfwt,
      while_mul_34_cmp_1_z_bfwt_1, while_mul_34_cmp_1_z_bfwt_2, while_mul_34_cmp_1_z_bfwt_3,
      while_mul_34_cmp_1_z_bfwt_4, while_mul_34_cmp_1_z_bfwt_5, while_mul_34_cmp_1_z_bfwt_6,
      while_mul_34_cmp_1_z_bfwt_7, while_mul_34_cmp_1_bcwt_2);
  assign while_mul_34_cmp_1_z_mxwt_1 = MUX_v_207_9_2((while_mul_34_cmp_1_z[207:1]),
      while_mul_34_cmp_1_z_bfwt_8_207_1, while_mul_34_cmp_1_z_bfwt_9_207_1, while_mul_34_cmp_1_z_bfwt_10_207_1,
      while_mul_34_cmp_1_z_bfwt_11_207_1, while_mul_34_cmp_1_z_bfwt_12_207_1, while_mul_34_cmp_1_z_bfwt_13_207_1,
      while_mul_34_cmp_1_z_bfwt_14_207_1, while_mul_34_cmp_1_z_bfwt_15_207_1, while_mul_34_cmp_1_bcwt_1);
  assign while_mul_34_cmp_1_z_mxwt_2 = MUX_v_208_9_2((while_mul_34_cmp_1_z[208:1]),
      while_mul_34_cmp_1_z_bfwt_16_208_1, while_mul_34_cmp_1_z_bfwt_17_208_1, while_mul_34_cmp_1_z_bfwt_18_208_1,
      while_mul_34_cmp_1_z_bfwt_19_208_1, while_mul_34_cmp_1_z_bfwt_20_208_1, while_mul_34_cmp_1_z_bfwt_21_208_1,
      while_mul_34_cmp_1_z_bfwt_22_208_1, while_mul_34_cmp_1_z_bfwt_23_208_1, while_mul_34_cmp_1_bcwt);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_34_cmp_1_bcwt <= 4'b0000;
      while_mul_34_cmp_1_bcwt_1 <= 4'b0000;
      while_mul_34_cmp_1_bcwt_2 <= 4'b0000;
    end
    else begin
      while_mul_34_cmp_1_bcwt <= nl_while_mul_34_cmp_1_bcwt[3:0];
      while_mul_34_cmp_1_bcwt_1 <= nl_while_mul_34_cmp_1_bcwt_1[3:0];
      while_mul_34_cmp_1_bcwt_2 <= nl_while_mul_34_cmp_1_bcwt_2[3:0];
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_34_cmp_1_z_bfwt <= 210'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_34_cmp_1_z_bfwt_1 <= 210'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_34_cmp_1_z_bfwt_2 <= 210'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_34_cmp_1_z_bfwt_3 <= 210'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_34_cmp_1_z_bfwt_4 <= 210'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_34_cmp_1_z_bfwt_5 <= 210'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_34_cmp_1_z_bfwt_6 <= 210'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_34_cmp_1_z_bfwt_7 <= 210'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_34_cmp_1_biwt_4 ) begin
      while_mul_34_cmp_1_z_bfwt <= while_mul_34_cmp_1_z;
      while_mul_34_cmp_1_z_bfwt_1 <= while_mul_34_cmp_1_z_bfwt;
      while_mul_34_cmp_1_z_bfwt_2 <= while_mul_34_cmp_1_z_bfwt_1;
      while_mul_34_cmp_1_z_bfwt_3 <= while_mul_34_cmp_1_z_bfwt_2;
      while_mul_34_cmp_1_z_bfwt_4 <= while_mul_34_cmp_1_z_bfwt_3;
      while_mul_34_cmp_1_z_bfwt_5 <= while_mul_34_cmp_1_z_bfwt_4;
      while_mul_34_cmp_1_z_bfwt_6 <= while_mul_34_cmp_1_z_bfwt_5;
      while_mul_34_cmp_1_z_bfwt_7 <= while_mul_34_cmp_1_z_bfwt_6;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_34_cmp_1_z_bfwt_8_207_1 <= 207'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_34_cmp_1_z_bfwt_9_207_1 <= 207'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_34_cmp_1_z_bfwt_10_207_1 <= 207'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_34_cmp_1_z_bfwt_11_207_1 <= 207'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_34_cmp_1_z_bfwt_12_207_1 <= 207'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_34_cmp_1_z_bfwt_13_207_1 <= 207'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_34_cmp_1_z_bfwt_14_207_1 <= 207'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_34_cmp_1_z_bfwt_15_207_1 <= 207'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_34_cmp_1_biwt_2 ) begin
      while_mul_34_cmp_1_z_bfwt_8_207_1 <= while_mul_34_cmp_1_z[207:1];
      while_mul_34_cmp_1_z_bfwt_9_207_1 <= while_mul_34_cmp_1_z_bfwt_8_207_1;
      while_mul_34_cmp_1_z_bfwt_10_207_1 <= while_mul_34_cmp_1_z_bfwt_9_207_1;
      while_mul_34_cmp_1_z_bfwt_11_207_1 <= while_mul_34_cmp_1_z_bfwt_10_207_1;
      while_mul_34_cmp_1_z_bfwt_12_207_1 <= while_mul_34_cmp_1_z_bfwt_11_207_1;
      while_mul_34_cmp_1_z_bfwt_13_207_1 <= while_mul_34_cmp_1_z_bfwt_12_207_1;
      while_mul_34_cmp_1_z_bfwt_14_207_1 <= while_mul_34_cmp_1_z_bfwt_13_207_1;
      while_mul_34_cmp_1_z_bfwt_15_207_1 <= while_mul_34_cmp_1_z_bfwt_14_207_1;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_34_cmp_1_z_bfwt_16_208_1 <= 208'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_34_cmp_1_z_bfwt_17_208_1 <= 208'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_34_cmp_1_z_bfwt_18_208_1 <= 208'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_34_cmp_1_z_bfwt_19_208_1 <= 208'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_34_cmp_1_z_bfwt_20_208_1 <= 208'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_34_cmp_1_z_bfwt_21_208_1 <= 208'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_34_cmp_1_z_bfwt_22_208_1 <= 208'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_34_cmp_1_z_bfwt_23_208_1 <= 208'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_34_cmp_1_biwt ) begin
      while_mul_34_cmp_1_z_bfwt_16_208_1 <= while_mul_34_cmp_1_z[208:1];
      while_mul_34_cmp_1_z_bfwt_17_208_1 <= while_mul_34_cmp_1_z_bfwt_16_208_1;
      while_mul_34_cmp_1_z_bfwt_18_208_1 <= while_mul_34_cmp_1_z_bfwt_17_208_1;
      while_mul_34_cmp_1_z_bfwt_19_208_1 <= while_mul_34_cmp_1_z_bfwt_18_208_1;
      while_mul_34_cmp_1_z_bfwt_20_208_1 <= while_mul_34_cmp_1_z_bfwt_19_208_1;
      while_mul_34_cmp_1_z_bfwt_21_208_1 <= while_mul_34_cmp_1_z_bfwt_20_208_1;
      while_mul_34_cmp_1_z_bfwt_22_208_1 <= while_mul_34_cmp_1_z_bfwt_21_208_1;
      while_mul_34_cmp_1_z_bfwt_23_208_1 <= while_mul_34_cmp_1_z_bfwt_22_208_1;
    end
  end
  assign nl_while_acc_67_nl = while_mul_34_cmp_1_bcwt + 4'b1111;
  assign while_acc_67_nl = nl_while_acc_67_nl[3:0];
  assign nl_while_acc_68_nl = conv_u2u_1_2(~ while_mul_34_cmp_1_bdwt) + conv_u2u_1_2(while_mul_34_cmp_1_biwt);
  assign while_acc_68_nl = nl_while_acc_68_nl[1:0];
  assign nl_while_mul_34_cmp_1_bcwt  = while_acc_67_nl + conv_u2u_2_4(while_acc_68_nl);
  assign nl_while_acc_70_nl = while_mul_34_cmp_1_bcwt_1 + 4'b1111;
  assign while_acc_70_nl = nl_while_acc_70_nl[3:0];
  assign nl_while_acc_71_nl = conv_u2u_1_2(~ while_mul_34_cmp_1_bdwt_2) + conv_u2u_1_2(while_mul_34_cmp_1_biwt_2);
  assign while_acc_71_nl = nl_while_acc_71_nl[1:0];
  assign nl_while_mul_34_cmp_1_bcwt_1  = while_acc_70_nl + conv_u2u_2_4(while_acc_71_nl);
  assign nl_while_acc_73_nl = while_mul_34_cmp_1_bcwt_2 + 4'b1111;
  assign while_acc_73_nl = nl_while_acc_73_nl[3:0];
  assign nl_while_acc_74_nl = conv_u2u_1_2(~ while_mul_34_cmp_1_bdwt_4) + conv_u2u_1_2(while_mul_34_cmp_1_biwt_4);
  assign while_acc_74_nl = nl_while_acc_74_nl[1:0];
  assign nl_while_mul_34_cmp_1_bcwt_2  = while_acc_73_nl + conv_u2u_2_4(while_acc_74_nl);

  function automatic [206:0] MUX_v_207_9_2;
    input [206:0] input_0;
    input [206:0] input_1;
    input [206:0] input_2;
    input [206:0] input_3;
    input [206:0] input_4;
    input [206:0] input_5;
    input [206:0] input_6;
    input [206:0] input_7;
    input [206:0] input_8;
    input [3:0] sel;
    reg [206:0] result;
  begin
    case (sel)
      4'b0000 : begin
        result = input_0;
      end
      4'b0001 : begin
        result = input_1;
      end
      4'b0010 : begin
        result = input_2;
      end
      4'b0011 : begin
        result = input_3;
      end
      4'b0100 : begin
        result = input_4;
      end
      4'b0101 : begin
        result = input_5;
      end
      4'b0110 : begin
        result = input_6;
      end
      4'b0111 : begin
        result = input_7;
      end
      default : begin
        result = input_8;
      end
    endcase
    MUX_v_207_9_2 = result;
  end
  endfunction


  function automatic [207:0] MUX_v_208_9_2;
    input [207:0] input_0;
    input [207:0] input_1;
    input [207:0] input_2;
    input [207:0] input_3;
    input [207:0] input_4;
    input [207:0] input_5;
    input [207:0] input_6;
    input [207:0] input_7;
    input [207:0] input_8;
    input [3:0] sel;
    reg [207:0] result;
  begin
    case (sel)
      4'b0000 : begin
        result = input_0;
      end
      4'b0001 : begin
        result = input_1;
      end
      4'b0010 : begin
        result = input_2;
      end
      4'b0011 : begin
        result = input_3;
      end
      4'b0100 : begin
        result = input_4;
      end
      4'b0101 : begin
        result = input_5;
      end
      4'b0110 : begin
        result = input_6;
      end
      4'b0111 : begin
        result = input_7;
      end
      default : begin
        result = input_8;
      end
    endcase
    MUX_v_208_9_2 = result;
  end
  endfunction


  function automatic [209:0] MUX_v_210_9_2;
    input [209:0] input_0;
    input [209:0] input_1;
    input [209:0] input_2;
    input [209:0] input_3;
    input [209:0] input_4;
    input [209:0] input_5;
    input [209:0] input_6;
    input [209:0] input_7;
    input [209:0] input_8;
    input [3:0] sel;
    reg [209:0] result;
  begin
    case (sel)
      4'b0000 : begin
        result = input_0;
      end
      4'b0001 : begin
        result = input_1;
      end
      4'b0010 : begin
        result = input_2;
      end
      4'b0011 : begin
        result = input_3;
      end
      4'b0100 : begin
        result = input_4;
      end
      4'b0101 : begin
        result = input_5;
      end
      4'b0110 : begin
        result = input_6;
      end
      4'b0111 : begin
        result = input_7;
      end
      default : begin
        result = input_8;
      end
    endcase
    MUX_v_210_9_2 = result;
  end
  endfunction


  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [3:0] conv_u2u_2_4 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_4 = {{2{1'b0}}, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_34_cmp_1_mgc_mul_pipe_64_1_178_1_210_1_1_0_0_8_1_wait_ctrl_1
// ------------------------------------------------------------------


module Rotate_run_while_mul_34_cmp_1_mgc_mul_pipe_64_1_178_1_210_1_1_0_0_8_1_wait_ctrl_1
    (
  clk, rst, run_wen, run_wten, while_mul_34_cmp_1_oswt_unreg, while_mul_34_cmp_1_iswt7,
      while_mul_34_cmp_1_iden_1, while_mul_34_cmp_1_oswt_unreg_1, while_mul_34_cmp_1_iswt7_1,
      while_mul_34_cmp_1_iden_3, while_mul_34_cmp_1_oswt_unreg_2, while_mul_34_cmp_1_iswt7_2,
      while_mul_34_cmp_1_iden_5, run_cgwt_13, while_mul_34_cmp_1_bdwt, while_mul_34_cmp_1_bdwt_2,
      while_mul_34_cmp_1_bdwt_4, while_mul_34_cmp_1_iswt7_2_pff, while_mul_34_cmp_1_iswt7_1_pff,
      while_mul_34_cmp_1_iswt7_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_34_cmp_1_oswt_unreg;
  input while_mul_34_cmp_1_iswt7;
  output while_mul_34_cmp_1_iden_1;
  input while_mul_34_cmp_1_oswt_unreg_1;
  input while_mul_34_cmp_1_iswt7_1;
  output while_mul_34_cmp_1_iden_3;
  input while_mul_34_cmp_1_oswt_unreg_2;
  input while_mul_34_cmp_1_iswt7_2;
  output while_mul_34_cmp_1_iden_5;
  output run_cgwt_13;
  output while_mul_34_cmp_1_bdwt;
  output while_mul_34_cmp_1_bdwt_2;
  output while_mul_34_cmp_1_bdwt_4;
  input while_mul_34_cmp_1_iswt7_2_pff;
  input while_mul_34_cmp_1_iswt7_1_pff;
  input while_mul_34_cmp_1_iswt7_pff;


  // Interconnect Declarations
  wire while_mul_34_cmp_1_ogwt;
  wire while_mul_34_cmp_1_tiswt7;
  reg while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt6;
  reg while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt5;
  reg while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt4;
  reg while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt3;
  reg while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt2;
  reg while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt1;
  reg while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt0;
  reg [3:0] while_mul_34_cmp_1_icwt;
  wire [4:0] nl_while_mul_34_cmp_1_icwt;
  wire while_mul_34_cmp_1_ogwt_1;
  wire while_mul_34_cmp_1_tiswt7_1;
  reg while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt6_1;
  reg while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt5_1;
  reg while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt4_1;
  reg while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt3_1;
  reg while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt2_1;
  reg while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt1_1;
  reg while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt0_1;
  reg [3:0] while_mul_34_cmp_1_icwt_1;
  wire [4:0] nl_while_mul_34_cmp_1_icwt_1;
  wire while_mul_34_cmp_1_ogwt_2;
  wire while_mul_34_cmp_1_tiswt7_2;
  reg while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt6_2;
  reg while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt5_2;
  reg while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt4_2;
  reg while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt3_2;
  reg while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt2_2;
  reg while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt1_2;
  reg while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt0_2;
  reg [3:0] while_mul_34_cmp_1_icwt_2;
  wire [4:0] nl_while_mul_34_cmp_1_icwt_2;

  wire[3:0] while_acc_68_nl;
  wire[4:0] nl_while_acc_68_nl;
  wire[1:0] while_acc_69_nl;
  wire[2:0] nl_while_acc_69_nl;
  wire[3:0] while_acc_71_nl;
  wire[4:0] nl_while_acc_71_nl;
  wire[1:0] while_acc_72_nl;
  wire[2:0] nl_while_acc_72_nl;
  wire[3:0] while_acc_74_nl;
  wire[4:0] nl_while_acc_74_nl;
  wire[1:0] while_acc_75_nl;
  wire[2:0] nl_while_acc_75_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_34_cmp_1_bdwt = while_mul_34_cmp_1_oswt_unreg & run_wen;
  assign while_mul_34_cmp_1_tiswt7 = (~ run_wten) & while_mul_34_cmp_1_iswt7;
  assign while_mul_34_cmp_1_iden_1 = while_mul_34_cmp_1_ogwt;
  assign while_mul_34_cmp_1_ogwt = while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt0 |
      (while_mul_34_cmp_1_icwt!=4'b0000);
  assign while_mul_34_cmp_1_bdwt_2 = while_mul_34_cmp_1_oswt_unreg_1 & run_wen;
  assign while_mul_34_cmp_1_tiswt7_1 = (~ run_wten) & while_mul_34_cmp_1_iswt7_1;
  assign while_mul_34_cmp_1_iden_3 = while_mul_34_cmp_1_ogwt_1;
  assign while_mul_34_cmp_1_ogwt_1 = while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt0_1
      | (while_mul_34_cmp_1_icwt_1!=4'b0000);
  assign while_mul_34_cmp_1_bdwt_4 = while_mul_34_cmp_1_oswt_unreg_2 & run_wen;
  assign while_mul_34_cmp_1_tiswt7_2 = (~ run_wten) & while_mul_34_cmp_1_iswt7_2;
  assign while_mul_34_cmp_1_iden_5 = while_mul_34_cmp_1_ogwt_2;
  assign while_mul_34_cmp_1_ogwt_2 = while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt0_2
      | (while_mul_34_cmp_1_icwt_2!=4'b0000);
  assign run_cgwt_13 = while_mul_34_cmp_1_ogwt_2 | while_mul_34_cmp_1_tiswt7_2 |
      while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt6_2 | while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt5_2
      | while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt4_2 | while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt3_2
      | while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt2_2 | while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt1_2
      | while_mul_34_cmp_1_ogwt_1 | while_mul_34_cmp_1_tiswt7_1 | while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt6_1
      | while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt5_1 | while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt4_1
      | while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt3_1 | while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt2_1
      | while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt1_1 | while_mul_34_cmp_1_ogwt |
      while_mul_34_cmp_1_tiswt7 | while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt6 | while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt5
      | while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt4 | while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt3
      | while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt2 | while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt1
      | (run_wen & while_mul_34_cmp_1_iswt7_2_pff) | (run_wen & while_mul_34_cmp_1_iswt7_1_pff)
      | (run_wen & while_mul_34_cmp_1_iswt7_pff);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt6 <= 1'b0;
      while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt5 <= 1'b0;
      while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt4 <= 1'b0;
      while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt3 <= 1'b0;
      while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt2 <= 1'b0;
      while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt1 <= 1'b0;
      while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt0 <= 1'b0;
      while_mul_34_cmp_1_icwt <= 4'b0000;
      while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt6_1 <= 1'b0;
      while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt5_1 <= 1'b0;
      while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt4_1 <= 1'b0;
      while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt3_1 <= 1'b0;
      while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt2_1 <= 1'b0;
      while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt1_1 <= 1'b0;
      while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt0_1 <= 1'b0;
      while_mul_34_cmp_1_icwt_1 <= 4'b0000;
      while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt6_2 <= 1'b0;
      while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt5_2 <= 1'b0;
      while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt4_2 <= 1'b0;
      while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt3_2 <= 1'b0;
      while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt2_2 <= 1'b0;
      while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt1_2 <= 1'b0;
      while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt0_2 <= 1'b0;
      while_mul_34_cmp_1_icwt_2 <= 4'b0000;
    end
    else begin
      while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt6 <= while_mul_34_cmp_1_tiswt7;
      while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt5 <= while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt6;
      while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt4 <= while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt5;
      while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt3 <= while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt4;
      while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt2 <= while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt3;
      while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt1 <= while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt2;
      while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt0 <= while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt1;
      while_mul_34_cmp_1_icwt <= nl_while_mul_34_cmp_1_icwt[3:0];
      while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt6_1 <= while_mul_34_cmp_1_tiswt7_1;
      while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt5_1 <= while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt6_1;
      while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt4_1 <= while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt5_1;
      while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt3_1 <= while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt4_1;
      while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt2_1 <= while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt3_1;
      while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt1_1 <= while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt2_1;
      while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt0_1 <= while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt1_1;
      while_mul_34_cmp_1_icwt_1 <= nl_while_mul_34_cmp_1_icwt_1[3:0];
      while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt6_2 <= while_mul_34_cmp_1_tiswt7_2;
      while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt5_2 <= while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt6_2;
      while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt4_2 <= while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt5_2;
      while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt3_2 <= while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt4_2;
      while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt2_2 <= while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt3_2;
      while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt1_2 <= while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt2_2;
      while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt0_2 <= while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt1_2;
      while_mul_34_cmp_1_icwt_2 <= nl_while_mul_34_cmp_1_icwt_2[3:0];
    end
  end
  assign nl_while_acc_68_nl = while_mul_34_cmp_1_icwt + 4'b1111;
  assign while_acc_68_nl = nl_while_acc_68_nl[3:0];
  assign nl_while_acc_69_nl = conv_u2u_1_2(while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt0)
      + conv_u2u_1_2(~ while_mul_34_cmp_1_ogwt);
  assign while_acc_69_nl = nl_while_acc_69_nl[1:0];
  assign nl_while_mul_34_cmp_1_icwt  = while_acc_68_nl + conv_u2u_2_4(while_acc_69_nl);
  assign nl_while_acc_71_nl = while_mul_34_cmp_1_icwt_1 + 4'b1111;
  assign while_acc_71_nl = nl_while_acc_71_nl[3:0];
  assign nl_while_acc_72_nl = conv_u2u_1_2(while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt0_1)
      + conv_u2u_1_2(~ while_mul_34_cmp_1_ogwt_1);
  assign while_acc_72_nl = nl_while_acc_72_nl[1:0];
  assign nl_while_mul_34_cmp_1_icwt_1  = while_acc_71_nl + conv_u2u_2_4(while_acc_72_nl);
  assign nl_while_acc_74_nl = while_mul_34_cmp_1_icwt_2 + 4'b1111;
  assign while_acc_74_nl = nl_while_acc_74_nl[3:0];
  assign nl_while_acc_75_nl = conv_u2u_1_2(while_mul_34_cmp_1_hile_mul_34_cmp_1_pdswt0_2)
      + conv_u2u_1_2(~ while_mul_34_cmp_1_ogwt_2);
  assign while_acc_75_nl = nl_while_acc_75_nl[1:0];
  assign nl_while_mul_34_cmp_1_icwt_2  = while_acc_74_nl + conv_u2u_2_4(while_acc_75_nl);

  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [3:0] conv_u2u_2_4 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_4 = {{2{1'b0}}, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_34_cmp_mgc_mul_pipe_64_1_178_1_210_1_1_0_0_8_1_wait_dp
// ------------------------------------------------------------------


module Rotate_run_while_mul_34_cmp_mgc_mul_pipe_64_1_178_1_210_1_1_0_0_8_1_wait_dp
    (
  clk, rst, while_mul_34_cmp_bawt, while_mul_34_cmp_iden, while_mul_34_cmp_iden_2,
      while_mul_34_cmp_z_mxwt, while_mul_34_cmp_z_mxwt_1, while_mul_34_cmp_biwt,
      while_mul_34_cmp_bdwt, while_mul_34_cmp_biwt_2, while_mul_34_cmp_bdwt_2, while_mul_34_cmp_z
);
  input clk;
  input rst;
  output while_mul_34_cmp_bawt;
  output while_mul_34_cmp_iden;
  output while_mul_34_cmp_iden_2;
  output [209:0] while_mul_34_cmp_z_mxwt;
  output [207:0] while_mul_34_cmp_z_mxwt_1;
  input while_mul_34_cmp_biwt;
  input while_mul_34_cmp_bdwt;
  input while_mul_34_cmp_biwt_2;
  input while_mul_34_cmp_bdwt_2;
  input [209:0] while_mul_34_cmp_z;


  // Interconnect Declarations
  reg [3:0] while_mul_34_cmp_bcwt;
  wire [4:0] nl_while_mul_34_cmp_bcwt;
  reg [3:0] while_mul_34_cmp_bcwt_1;
  wire [4:0] nl_while_mul_34_cmp_bcwt_1;
  reg [209:0] while_mul_34_cmp_z_bfwt;
  reg [209:0] while_mul_34_cmp_z_bfwt_1;
  reg [209:0] while_mul_34_cmp_z_bfwt_2;
  reg [209:0] while_mul_34_cmp_z_bfwt_3;
  reg [209:0] while_mul_34_cmp_z_bfwt_4;
  reg [209:0] while_mul_34_cmp_z_bfwt_5;
  reg [209:0] while_mul_34_cmp_z_bfwt_6;
  reg [209:0] while_mul_34_cmp_z_bfwt_7;
  reg [207:0] while_mul_34_cmp_z_bfwt_15_207_0;
  reg [207:0] while_mul_34_cmp_z_bfwt_14_207_0;
  reg [207:0] while_mul_34_cmp_z_bfwt_13_207_0;
  reg [207:0] while_mul_34_cmp_z_bfwt_12_207_0;
  reg [207:0] while_mul_34_cmp_z_bfwt_11_207_0;
  reg [207:0] while_mul_34_cmp_z_bfwt_10_207_0;
  reg [207:0] while_mul_34_cmp_z_bfwt_9_207_0;
  reg [207:0] while_mul_34_cmp_z_bfwt_8_207_0;

  wire[3:0] while_acc_61_nl;
  wire[4:0] nl_while_acc_61_nl;
  wire[1:0] while_acc_62_nl;
  wire[2:0] nl_while_acc_62_nl;
  wire[3:0] while_acc_64_nl;
  wire[4:0] nl_while_acc_64_nl;
  wire[1:0] while_acc_65_nl;
  wire[2:0] nl_while_acc_65_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_34_cmp_iden = while_mul_34_cmp_biwt | while_mul_34_cmp_bdwt;
  assign while_mul_34_cmp_bawt = while_mul_34_cmp_biwt | (while_mul_34_cmp_bcwt!=4'b0000);
  assign while_mul_34_cmp_iden_2 = while_mul_34_cmp_biwt_2 | while_mul_34_cmp_bdwt_2;
  assign while_mul_34_cmp_z_mxwt = MUX_v_210_9_2(while_mul_34_cmp_z, while_mul_34_cmp_z_bfwt,
      while_mul_34_cmp_z_bfwt_1, while_mul_34_cmp_z_bfwt_2, while_mul_34_cmp_z_bfwt_3,
      while_mul_34_cmp_z_bfwt_4, while_mul_34_cmp_z_bfwt_5, while_mul_34_cmp_z_bfwt_6,
      while_mul_34_cmp_z_bfwt_7, while_mul_34_cmp_bcwt_1);
  assign while_mul_34_cmp_z_mxwt_1 = MUX_v_208_9_2((while_mul_34_cmp_z[207:0]), while_mul_34_cmp_z_bfwt_8_207_0,
      while_mul_34_cmp_z_bfwt_9_207_0, while_mul_34_cmp_z_bfwt_10_207_0, while_mul_34_cmp_z_bfwt_11_207_0,
      while_mul_34_cmp_z_bfwt_12_207_0, while_mul_34_cmp_z_bfwt_13_207_0, while_mul_34_cmp_z_bfwt_14_207_0,
      while_mul_34_cmp_z_bfwt_15_207_0, while_mul_34_cmp_bcwt);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_34_cmp_bcwt <= 4'b0000;
      while_mul_34_cmp_bcwt_1 <= 4'b0000;
    end
    else begin
      while_mul_34_cmp_bcwt <= nl_while_mul_34_cmp_bcwt[3:0];
      while_mul_34_cmp_bcwt_1 <= nl_while_mul_34_cmp_bcwt_1[3:0];
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_34_cmp_z_bfwt <= 210'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_34_cmp_z_bfwt_1 <= 210'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_34_cmp_z_bfwt_2 <= 210'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_34_cmp_z_bfwt_3 <= 210'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_34_cmp_z_bfwt_4 <= 210'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_34_cmp_z_bfwt_5 <= 210'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_34_cmp_z_bfwt_6 <= 210'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_34_cmp_z_bfwt_7 <= 210'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_34_cmp_biwt_2 ) begin
      while_mul_34_cmp_z_bfwt <= while_mul_34_cmp_z;
      while_mul_34_cmp_z_bfwt_1 <= while_mul_34_cmp_z_bfwt;
      while_mul_34_cmp_z_bfwt_2 <= while_mul_34_cmp_z_bfwt_1;
      while_mul_34_cmp_z_bfwt_3 <= while_mul_34_cmp_z_bfwt_2;
      while_mul_34_cmp_z_bfwt_4 <= while_mul_34_cmp_z_bfwt_3;
      while_mul_34_cmp_z_bfwt_5 <= while_mul_34_cmp_z_bfwt_4;
      while_mul_34_cmp_z_bfwt_6 <= while_mul_34_cmp_z_bfwt_5;
      while_mul_34_cmp_z_bfwt_7 <= while_mul_34_cmp_z_bfwt_6;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_34_cmp_z_bfwt_8_207_0 <= 208'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_34_cmp_z_bfwt_9_207_0 <= 208'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_34_cmp_z_bfwt_10_207_0 <= 208'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_34_cmp_z_bfwt_11_207_0 <= 208'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_34_cmp_z_bfwt_12_207_0 <= 208'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_34_cmp_z_bfwt_13_207_0 <= 208'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_34_cmp_z_bfwt_14_207_0 <= 208'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_34_cmp_z_bfwt_15_207_0 <= 208'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_34_cmp_biwt ) begin
      while_mul_34_cmp_z_bfwt_8_207_0 <= while_mul_34_cmp_z[207:0];
      while_mul_34_cmp_z_bfwt_9_207_0 <= while_mul_34_cmp_z_bfwt_8_207_0;
      while_mul_34_cmp_z_bfwt_10_207_0 <= while_mul_34_cmp_z_bfwt_9_207_0;
      while_mul_34_cmp_z_bfwt_11_207_0 <= while_mul_34_cmp_z_bfwt_10_207_0;
      while_mul_34_cmp_z_bfwt_12_207_0 <= while_mul_34_cmp_z_bfwt_11_207_0;
      while_mul_34_cmp_z_bfwt_13_207_0 <= while_mul_34_cmp_z_bfwt_12_207_0;
      while_mul_34_cmp_z_bfwt_14_207_0 <= while_mul_34_cmp_z_bfwt_13_207_0;
      while_mul_34_cmp_z_bfwt_15_207_0 <= while_mul_34_cmp_z_bfwt_14_207_0;
    end
  end
  assign nl_while_acc_61_nl = while_mul_34_cmp_bcwt + 4'b1111;
  assign while_acc_61_nl = nl_while_acc_61_nl[3:0];
  assign nl_while_acc_62_nl = conv_u2u_1_2(~ while_mul_34_cmp_bdwt) + conv_u2u_1_2(while_mul_34_cmp_biwt);
  assign while_acc_62_nl = nl_while_acc_62_nl[1:0];
  assign nl_while_mul_34_cmp_bcwt  = while_acc_61_nl + conv_u2u_2_4(while_acc_62_nl);
  assign nl_while_acc_64_nl = while_mul_34_cmp_bcwt_1 + 4'b1111;
  assign while_acc_64_nl = nl_while_acc_64_nl[3:0];
  assign nl_while_acc_65_nl = conv_u2u_1_2(~ while_mul_34_cmp_bdwt_2) + conv_u2u_1_2(while_mul_34_cmp_biwt_2);
  assign while_acc_65_nl = nl_while_acc_65_nl[1:0];
  assign nl_while_mul_34_cmp_bcwt_1  = while_acc_64_nl + conv_u2u_2_4(while_acc_65_nl);

  function automatic [207:0] MUX_v_208_9_2;
    input [207:0] input_0;
    input [207:0] input_1;
    input [207:0] input_2;
    input [207:0] input_3;
    input [207:0] input_4;
    input [207:0] input_5;
    input [207:0] input_6;
    input [207:0] input_7;
    input [207:0] input_8;
    input [3:0] sel;
    reg [207:0] result;
  begin
    case (sel)
      4'b0000 : begin
        result = input_0;
      end
      4'b0001 : begin
        result = input_1;
      end
      4'b0010 : begin
        result = input_2;
      end
      4'b0011 : begin
        result = input_3;
      end
      4'b0100 : begin
        result = input_4;
      end
      4'b0101 : begin
        result = input_5;
      end
      4'b0110 : begin
        result = input_6;
      end
      4'b0111 : begin
        result = input_7;
      end
      default : begin
        result = input_8;
      end
    endcase
    MUX_v_208_9_2 = result;
  end
  endfunction


  function automatic [209:0] MUX_v_210_9_2;
    input [209:0] input_0;
    input [209:0] input_1;
    input [209:0] input_2;
    input [209:0] input_3;
    input [209:0] input_4;
    input [209:0] input_5;
    input [209:0] input_6;
    input [209:0] input_7;
    input [209:0] input_8;
    input [3:0] sel;
    reg [209:0] result;
  begin
    case (sel)
      4'b0000 : begin
        result = input_0;
      end
      4'b0001 : begin
        result = input_1;
      end
      4'b0010 : begin
        result = input_2;
      end
      4'b0011 : begin
        result = input_3;
      end
      4'b0100 : begin
        result = input_4;
      end
      4'b0101 : begin
        result = input_5;
      end
      4'b0110 : begin
        result = input_6;
      end
      4'b0111 : begin
        result = input_7;
      end
      default : begin
        result = input_8;
      end
    endcase
    MUX_v_210_9_2 = result;
  end
  endfunction


  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [3:0] conv_u2u_2_4 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_4 = {{2{1'b0}}, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_34_cmp_mgc_mul_pipe_64_1_178_1_210_1_1_0_0_8_1_wait_ctrl
// ------------------------------------------------------------------


module Rotate_run_while_mul_34_cmp_mgc_mul_pipe_64_1_178_1_210_1_1_0_0_8_1_wait_ctrl
    (
  clk, rst, run_wen, run_wten, while_mul_34_cmp_oswt_unreg, while_mul_34_cmp_iswt7,
      while_mul_34_cmp_iden_1, while_mul_34_cmp_oswt_unreg_1, while_mul_34_cmp_iswt7_1,
      while_mul_34_cmp_iden_3, run_cgwt_12, while_mul_34_cmp_bdwt, while_mul_34_cmp_bdwt_2,
      while_mul_34_cmp_iswt7_1_pff, while_mul_34_cmp_iswt7_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_34_cmp_oswt_unreg;
  input while_mul_34_cmp_iswt7;
  output while_mul_34_cmp_iden_1;
  input while_mul_34_cmp_oswt_unreg_1;
  input while_mul_34_cmp_iswt7_1;
  output while_mul_34_cmp_iden_3;
  output run_cgwt_12;
  output while_mul_34_cmp_bdwt;
  output while_mul_34_cmp_bdwt_2;
  input while_mul_34_cmp_iswt7_1_pff;
  input while_mul_34_cmp_iswt7_pff;


  // Interconnect Declarations
  wire while_mul_34_cmp_ogwt;
  wire while_mul_34_cmp_tiswt7;
  reg while_mul_34_cmp_hile_mul_34_cmp_pdswt6;
  reg while_mul_34_cmp_hile_mul_34_cmp_pdswt5;
  reg while_mul_34_cmp_hile_mul_34_cmp_pdswt4;
  reg while_mul_34_cmp_hile_mul_34_cmp_pdswt3;
  reg while_mul_34_cmp_hile_mul_34_cmp_pdswt2;
  reg while_mul_34_cmp_hile_mul_34_cmp_pdswt1;
  reg while_mul_34_cmp_hile_mul_34_cmp_pdswt0;
  reg [3:0] while_mul_34_cmp_icwt;
  wire [4:0] nl_while_mul_34_cmp_icwt;
  wire while_mul_34_cmp_ogwt_1;
  wire while_mul_34_cmp_tiswt7_1;
  reg while_mul_34_cmp_hile_mul_34_cmp_pdswt6_1;
  reg while_mul_34_cmp_hile_mul_34_cmp_pdswt5_1;
  reg while_mul_34_cmp_hile_mul_34_cmp_pdswt4_1;
  reg while_mul_34_cmp_hile_mul_34_cmp_pdswt3_1;
  reg while_mul_34_cmp_hile_mul_34_cmp_pdswt2_1;
  reg while_mul_34_cmp_hile_mul_34_cmp_pdswt1_1;
  reg while_mul_34_cmp_hile_mul_34_cmp_pdswt0_1;
  reg [3:0] while_mul_34_cmp_icwt_1;
  wire [4:0] nl_while_mul_34_cmp_icwt_1;

  wire[3:0] while_acc_62_nl;
  wire[4:0] nl_while_acc_62_nl;
  wire[1:0] while_acc_63_nl;
  wire[2:0] nl_while_acc_63_nl;
  wire[3:0] while_acc_65_nl;
  wire[4:0] nl_while_acc_65_nl;
  wire[1:0] while_acc_66_nl;
  wire[2:0] nl_while_acc_66_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_34_cmp_bdwt = while_mul_34_cmp_oswt_unreg & run_wen;
  assign while_mul_34_cmp_tiswt7 = (~ run_wten) & while_mul_34_cmp_iswt7;
  assign while_mul_34_cmp_iden_1 = while_mul_34_cmp_ogwt;
  assign while_mul_34_cmp_ogwt = while_mul_34_cmp_hile_mul_34_cmp_pdswt0 | (while_mul_34_cmp_icwt!=4'b0000);
  assign while_mul_34_cmp_bdwt_2 = while_mul_34_cmp_oswt_unreg_1 & run_wen;
  assign while_mul_34_cmp_tiswt7_1 = (~ run_wten) & while_mul_34_cmp_iswt7_1;
  assign while_mul_34_cmp_iden_3 = while_mul_34_cmp_ogwt_1;
  assign while_mul_34_cmp_ogwt_1 = while_mul_34_cmp_hile_mul_34_cmp_pdswt0_1 | (while_mul_34_cmp_icwt_1!=4'b0000);
  assign run_cgwt_12 = while_mul_34_cmp_ogwt_1 | while_mul_34_cmp_tiswt7_1 | while_mul_34_cmp_hile_mul_34_cmp_pdswt6_1
      | while_mul_34_cmp_hile_mul_34_cmp_pdswt5_1 | while_mul_34_cmp_hile_mul_34_cmp_pdswt4_1
      | while_mul_34_cmp_hile_mul_34_cmp_pdswt3_1 | while_mul_34_cmp_hile_mul_34_cmp_pdswt2_1
      | while_mul_34_cmp_hile_mul_34_cmp_pdswt1_1 | while_mul_34_cmp_ogwt | while_mul_34_cmp_tiswt7
      | while_mul_34_cmp_hile_mul_34_cmp_pdswt6 | while_mul_34_cmp_hile_mul_34_cmp_pdswt5
      | while_mul_34_cmp_hile_mul_34_cmp_pdswt4 | while_mul_34_cmp_hile_mul_34_cmp_pdswt3
      | while_mul_34_cmp_hile_mul_34_cmp_pdswt2 | while_mul_34_cmp_hile_mul_34_cmp_pdswt1
      | (run_wen & while_mul_34_cmp_iswt7_1_pff) | (run_wen & while_mul_34_cmp_iswt7_pff);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_34_cmp_hile_mul_34_cmp_pdswt6 <= 1'b0;
      while_mul_34_cmp_hile_mul_34_cmp_pdswt5 <= 1'b0;
      while_mul_34_cmp_hile_mul_34_cmp_pdswt4 <= 1'b0;
      while_mul_34_cmp_hile_mul_34_cmp_pdswt3 <= 1'b0;
      while_mul_34_cmp_hile_mul_34_cmp_pdswt2 <= 1'b0;
      while_mul_34_cmp_hile_mul_34_cmp_pdswt1 <= 1'b0;
      while_mul_34_cmp_hile_mul_34_cmp_pdswt0 <= 1'b0;
      while_mul_34_cmp_icwt <= 4'b0000;
      while_mul_34_cmp_hile_mul_34_cmp_pdswt6_1 <= 1'b0;
      while_mul_34_cmp_hile_mul_34_cmp_pdswt5_1 <= 1'b0;
      while_mul_34_cmp_hile_mul_34_cmp_pdswt4_1 <= 1'b0;
      while_mul_34_cmp_hile_mul_34_cmp_pdswt3_1 <= 1'b0;
      while_mul_34_cmp_hile_mul_34_cmp_pdswt2_1 <= 1'b0;
      while_mul_34_cmp_hile_mul_34_cmp_pdswt1_1 <= 1'b0;
      while_mul_34_cmp_hile_mul_34_cmp_pdswt0_1 <= 1'b0;
      while_mul_34_cmp_icwt_1 <= 4'b0000;
    end
    else begin
      while_mul_34_cmp_hile_mul_34_cmp_pdswt6 <= while_mul_34_cmp_tiswt7;
      while_mul_34_cmp_hile_mul_34_cmp_pdswt5 <= while_mul_34_cmp_hile_mul_34_cmp_pdswt6;
      while_mul_34_cmp_hile_mul_34_cmp_pdswt4 <= while_mul_34_cmp_hile_mul_34_cmp_pdswt5;
      while_mul_34_cmp_hile_mul_34_cmp_pdswt3 <= while_mul_34_cmp_hile_mul_34_cmp_pdswt4;
      while_mul_34_cmp_hile_mul_34_cmp_pdswt2 <= while_mul_34_cmp_hile_mul_34_cmp_pdswt3;
      while_mul_34_cmp_hile_mul_34_cmp_pdswt1 <= while_mul_34_cmp_hile_mul_34_cmp_pdswt2;
      while_mul_34_cmp_hile_mul_34_cmp_pdswt0 <= while_mul_34_cmp_hile_mul_34_cmp_pdswt1;
      while_mul_34_cmp_icwt <= nl_while_mul_34_cmp_icwt[3:0];
      while_mul_34_cmp_hile_mul_34_cmp_pdswt6_1 <= while_mul_34_cmp_tiswt7_1;
      while_mul_34_cmp_hile_mul_34_cmp_pdswt5_1 <= while_mul_34_cmp_hile_mul_34_cmp_pdswt6_1;
      while_mul_34_cmp_hile_mul_34_cmp_pdswt4_1 <= while_mul_34_cmp_hile_mul_34_cmp_pdswt5_1;
      while_mul_34_cmp_hile_mul_34_cmp_pdswt3_1 <= while_mul_34_cmp_hile_mul_34_cmp_pdswt4_1;
      while_mul_34_cmp_hile_mul_34_cmp_pdswt2_1 <= while_mul_34_cmp_hile_mul_34_cmp_pdswt3_1;
      while_mul_34_cmp_hile_mul_34_cmp_pdswt1_1 <= while_mul_34_cmp_hile_mul_34_cmp_pdswt2_1;
      while_mul_34_cmp_hile_mul_34_cmp_pdswt0_1 <= while_mul_34_cmp_hile_mul_34_cmp_pdswt1_1;
      while_mul_34_cmp_icwt_1 <= nl_while_mul_34_cmp_icwt_1[3:0];
    end
  end
  assign nl_while_acc_62_nl = while_mul_34_cmp_icwt + 4'b1111;
  assign while_acc_62_nl = nl_while_acc_62_nl[3:0];
  assign nl_while_acc_63_nl = conv_u2u_1_2(while_mul_34_cmp_hile_mul_34_cmp_pdswt0)
      + conv_u2u_1_2(~ while_mul_34_cmp_ogwt);
  assign while_acc_63_nl = nl_while_acc_63_nl[1:0];
  assign nl_while_mul_34_cmp_icwt  = while_acc_62_nl + conv_u2u_2_4(while_acc_63_nl);
  assign nl_while_acc_65_nl = while_mul_34_cmp_icwt_1 + 4'b1111;
  assign while_acc_65_nl = nl_while_acc_65_nl[3:0];
  assign nl_while_acc_66_nl = conv_u2u_1_2(while_mul_34_cmp_hile_mul_34_cmp_pdswt0_1)
      + conv_u2u_1_2(~ while_mul_34_cmp_ogwt_1);
  assign while_acc_66_nl = nl_while_acc_66_nl[1:0];
  assign nl_while_mul_34_cmp_icwt_1  = while_acc_65_nl + conv_u2u_2_4(while_acc_66_nl);

  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [3:0] conv_u2u_2_4 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_4 = {{2{1'b0}}, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_37_cmp_mgc_mul_pipe_68_1_128_1_162_1_1_0_0_6_1_wait_dp
// ------------------------------------------------------------------


module Rotate_run_while_mul_37_cmp_mgc_mul_pipe_68_1_128_1_162_1_1_0_0_6_1_wait_dp
    (
  clk, rst, while_mul_37_cmp_bawt, while_mul_37_cmp_iden, while_mul_37_cmp_iden_2,
      while_mul_37_cmp_z_mxwt, while_mul_37_cmp_z_mxwt_1, while_mul_37_cmp_biwt,
      while_mul_37_cmp_bdwt, while_mul_37_cmp_biwt_2, while_mul_37_cmp_bdwt_2, while_mul_37_cmp_z
);
  input clk;
  input rst;
  output while_mul_37_cmp_bawt;
  output while_mul_37_cmp_iden;
  output while_mul_37_cmp_iden_2;
  output [161:0] while_mul_37_cmp_z_mxwt;
  output [159:0] while_mul_37_cmp_z_mxwt_1;
  input while_mul_37_cmp_biwt;
  input while_mul_37_cmp_bdwt;
  input while_mul_37_cmp_biwt_2;
  input while_mul_37_cmp_bdwt_2;
  input [161:0] while_mul_37_cmp_z;


  // Interconnect Declarations
  reg [2:0] while_mul_37_cmp_bcwt;
  wire [3:0] nl_while_mul_37_cmp_bcwt;
  reg [2:0] while_mul_37_cmp_bcwt_1;
  wire [3:0] nl_while_mul_37_cmp_bcwt_1;
  reg [161:0] while_mul_37_cmp_z_bfwt;
  reg [161:0] while_mul_37_cmp_z_bfwt_1;
  reg [161:0] while_mul_37_cmp_z_bfwt_2;
  reg [161:0] while_mul_37_cmp_z_bfwt_3;
  reg [161:0] while_mul_37_cmp_z_bfwt_4;
  reg [161:0] while_mul_37_cmp_z_bfwt_5;
  reg [159:0] while_mul_37_cmp_z_bfwt_11_159_0;
  reg [159:0] while_mul_37_cmp_z_bfwt_10_159_0;
  reg [159:0] while_mul_37_cmp_z_bfwt_9_159_0;
  reg [159:0] while_mul_37_cmp_z_bfwt_8_159_0;
  reg [159:0] while_mul_37_cmp_z_bfwt_7_159_0;
  reg [159:0] while_mul_37_cmp_z_bfwt_6_159_0;

  wire[2:0] while_acc_57_nl;
  wire[3:0] nl_while_acc_57_nl;
  wire[1:0] while_acc_58_nl;
  wire[2:0] nl_while_acc_58_nl;
  wire[2:0] while_acc_60_nl;
  wire[3:0] nl_while_acc_60_nl;
  wire[1:0] while_acc_61_nl;
  wire[2:0] nl_while_acc_61_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_37_cmp_iden = while_mul_37_cmp_biwt | while_mul_37_cmp_bdwt;
  assign while_mul_37_cmp_bawt = while_mul_37_cmp_biwt | (while_mul_37_cmp_bcwt!=3'b000);
  assign while_mul_37_cmp_iden_2 = while_mul_37_cmp_biwt_2 | while_mul_37_cmp_bdwt_2;
  assign while_mul_37_cmp_z_mxwt = MUX_v_162_7_2(while_mul_37_cmp_z, while_mul_37_cmp_z_bfwt,
      while_mul_37_cmp_z_bfwt_1, while_mul_37_cmp_z_bfwt_2, while_mul_37_cmp_z_bfwt_3,
      while_mul_37_cmp_z_bfwt_4, while_mul_37_cmp_z_bfwt_5, while_mul_37_cmp_bcwt_1);
  assign while_mul_37_cmp_z_mxwt_1 = MUX_v_160_7_2((while_mul_37_cmp_z[159:0]), while_mul_37_cmp_z_bfwt_6_159_0,
      while_mul_37_cmp_z_bfwt_7_159_0, while_mul_37_cmp_z_bfwt_8_159_0, while_mul_37_cmp_z_bfwt_9_159_0,
      while_mul_37_cmp_z_bfwt_10_159_0, while_mul_37_cmp_z_bfwt_11_159_0, while_mul_37_cmp_bcwt);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_37_cmp_bcwt <= 3'b000;
      while_mul_37_cmp_bcwt_1 <= 3'b000;
    end
    else begin
      while_mul_37_cmp_bcwt <= nl_while_mul_37_cmp_bcwt[2:0];
      while_mul_37_cmp_bcwt_1 <= nl_while_mul_37_cmp_bcwt_1[2:0];
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_37_cmp_z_bfwt <= 162'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_37_cmp_z_bfwt_1 <= 162'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_37_cmp_z_bfwt_2 <= 162'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_37_cmp_z_bfwt_3 <= 162'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_37_cmp_z_bfwt_4 <= 162'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_37_cmp_z_bfwt_5 <= 162'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_37_cmp_biwt_2 ) begin
      while_mul_37_cmp_z_bfwt <= while_mul_37_cmp_z;
      while_mul_37_cmp_z_bfwt_1 <= while_mul_37_cmp_z_bfwt;
      while_mul_37_cmp_z_bfwt_2 <= while_mul_37_cmp_z_bfwt_1;
      while_mul_37_cmp_z_bfwt_3 <= while_mul_37_cmp_z_bfwt_2;
      while_mul_37_cmp_z_bfwt_4 <= while_mul_37_cmp_z_bfwt_3;
      while_mul_37_cmp_z_bfwt_5 <= while_mul_37_cmp_z_bfwt_4;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_37_cmp_z_bfwt_6_159_0 <= 160'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_37_cmp_z_bfwt_7_159_0 <= 160'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_37_cmp_z_bfwt_8_159_0 <= 160'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_37_cmp_z_bfwt_9_159_0 <= 160'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_37_cmp_z_bfwt_10_159_0 <= 160'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_37_cmp_z_bfwt_11_159_0 <= 160'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_37_cmp_biwt ) begin
      while_mul_37_cmp_z_bfwt_6_159_0 <= while_mul_37_cmp_z[159:0];
      while_mul_37_cmp_z_bfwt_7_159_0 <= while_mul_37_cmp_z_bfwt_6_159_0;
      while_mul_37_cmp_z_bfwt_8_159_0 <= while_mul_37_cmp_z_bfwt_7_159_0;
      while_mul_37_cmp_z_bfwt_9_159_0 <= while_mul_37_cmp_z_bfwt_8_159_0;
      while_mul_37_cmp_z_bfwt_10_159_0 <= while_mul_37_cmp_z_bfwt_9_159_0;
      while_mul_37_cmp_z_bfwt_11_159_0 <= while_mul_37_cmp_z_bfwt_10_159_0;
    end
  end
  assign nl_while_acc_57_nl = while_mul_37_cmp_bcwt + 3'b111;
  assign while_acc_57_nl = nl_while_acc_57_nl[2:0];
  assign nl_while_acc_58_nl = conv_u2u_1_2(~ while_mul_37_cmp_bdwt) + conv_u2u_1_2(while_mul_37_cmp_biwt);
  assign while_acc_58_nl = nl_while_acc_58_nl[1:0];
  assign nl_while_mul_37_cmp_bcwt  = while_acc_57_nl + conv_u2u_2_3(while_acc_58_nl);
  assign nl_while_acc_60_nl = while_mul_37_cmp_bcwt_1 + 3'b111;
  assign while_acc_60_nl = nl_while_acc_60_nl[2:0];
  assign nl_while_acc_61_nl = conv_u2u_1_2(~ while_mul_37_cmp_bdwt_2) + conv_u2u_1_2(while_mul_37_cmp_biwt_2);
  assign while_acc_61_nl = nl_while_acc_61_nl[1:0];
  assign nl_while_mul_37_cmp_bcwt_1  = while_acc_60_nl + conv_u2u_2_3(while_acc_61_nl);

  function automatic [159:0] MUX_v_160_7_2;
    input [159:0] input_0;
    input [159:0] input_1;
    input [159:0] input_2;
    input [159:0] input_3;
    input [159:0] input_4;
    input [159:0] input_5;
    input [159:0] input_6;
    input [2:0] sel;
    reg [159:0] result;
  begin
    case (sel)
      3'b000 : begin
        result = input_0;
      end
      3'b001 : begin
        result = input_1;
      end
      3'b010 : begin
        result = input_2;
      end
      3'b011 : begin
        result = input_3;
      end
      3'b100 : begin
        result = input_4;
      end
      3'b101 : begin
        result = input_5;
      end
      default : begin
        result = input_6;
      end
    endcase
    MUX_v_160_7_2 = result;
  end
  endfunction


  function automatic [161:0] MUX_v_162_7_2;
    input [161:0] input_0;
    input [161:0] input_1;
    input [161:0] input_2;
    input [161:0] input_3;
    input [161:0] input_4;
    input [161:0] input_5;
    input [161:0] input_6;
    input [2:0] sel;
    reg [161:0] result;
  begin
    case (sel)
      3'b000 : begin
        result = input_0;
      end
      3'b001 : begin
        result = input_1;
      end
      3'b010 : begin
        result = input_2;
      end
      3'b011 : begin
        result = input_3;
      end
      3'b100 : begin
        result = input_4;
      end
      3'b101 : begin
        result = input_5;
      end
      default : begin
        result = input_6;
      end
    endcase
    MUX_v_162_7_2 = result;
  end
  endfunction


  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_37_cmp_mgc_mul_pipe_68_1_128_1_162_1_1_0_0_6_1_wait_ctrl
// ------------------------------------------------------------------


module Rotate_run_while_mul_37_cmp_mgc_mul_pipe_68_1_128_1_162_1_1_0_0_6_1_wait_ctrl
    (
  clk, rst, run_wen, run_wten, while_mul_37_cmp_oswt_unreg, while_mul_37_cmp_iswt5,
      while_mul_37_cmp_iden_1, while_mul_37_cmp_oswt_unreg_1, while_mul_37_cmp_iswt5_1,
      while_mul_37_cmp_iden_3, run_cgwt_11, while_mul_37_cmp_bdwt, while_mul_37_cmp_bdwt_2,
      while_mul_37_cmp_iswt5_1_pff, while_mul_37_cmp_iswt5_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_37_cmp_oswt_unreg;
  input while_mul_37_cmp_iswt5;
  output while_mul_37_cmp_iden_1;
  input while_mul_37_cmp_oswt_unreg_1;
  input while_mul_37_cmp_iswt5_1;
  output while_mul_37_cmp_iden_3;
  output run_cgwt_11;
  output while_mul_37_cmp_bdwt;
  output while_mul_37_cmp_bdwt_2;
  input while_mul_37_cmp_iswt5_1_pff;
  input while_mul_37_cmp_iswt5_pff;


  // Interconnect Declarations
  wire while_mul_37_cmp_ogwt;
  wire while_mul_37_cmp_tiswt5;
  reg while_mul_37_cmp_hile_mul_37_cmp_pdswt4;
  reg while_mul_37_cmp_hile_mul_37_cmp_pdswt3;
  reg while_mul_37_cmp_hile_mul_37_cmp_pdswt2;
  reg while_mul_37_cmp_hile_mul_37_cmp_pdswt1;
  reg while_mul_37_cmp_hile_mul_37_cmp_pdswt0;
  reg [2:0] while_mul_37_cmp_icwt;
  wire [3:0] nl_while_mul_37_cmp_icwt;
  wire while_mul_37_cmp_ogwt_1;
  wire while_mul_37_cmp_tiswt5_1;
  reg while_mul_37_cmp_hile_mul_37_cmp_pdswt4_1;
  reg while_mul_37_cmp_hile_mul_37_cmp_pdswt3_1;
  reg while_mul_37_cmp_hile_mul_37_cmp_pdswt2_1;
  reg while_mul_37_cmp_hile_mul_37_cmp_pdswt1_1;
  reg while_mul_37_cmp_hile_mul_37_cmp_pdswt0_1;
  reg [2:0] while_mul_37_cmp_icwt_1;
  wire [3:0] nl_while_mul_37_cmp_icwt_1;

  wire[2:0] while_acc_58_nl;
  wire[3:0] nl_while_acc_58_nl;
  wire[1:0] while_acc_59_nl;
  wire[2:0] nl_while_acc_59_nl;
  wire[2:0] while_acc_61_nl;
  wire[3:0] nl_while_acc_61_nl;
  wire[1:0] while_acc_62_nl;
  wire[2:0] nl_while_acc_62_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_37_cmp_bdwt = while_mul_37_cmp_oswt_unreg & run_wen;
  assign while_mul_37_cmp_tiswt5 = (~ run_wten) & while_mul_37_cmp_iswt5;
  assign while_mul_37_cmp_iden_1 = while_mul_37_cmp_ogwt;
  assign while_mul_37_cmp_ogwt = while_mul_37_cmp_hile_mul_37_cmp_pdswt0 | (while_mul_37_cmp_icwt!=3'b000);
  assign while_mul_37_cmp_bdwt_2 = while_mul_37_cmp_oswt_unreg_1 & run_wen;
  assign while_mul_37_cmp_tiswt5_1 = (~ run_wten) & while_mul_37_cmp_iswt5_1;
  assign while_mul_37_cmp_iden_3 = while_mul_37_cmp_ogwt_1;
  assign while_mul_37_cmp_ogwt_1 = while_mul_37_cmp_hile_mul_37_cmp_pdswt0_1 | (while_mul_37_cmp_icwt_1!=3'b000);
  assign run_cgwt_11 = while_mul_37_cmp_ogwt_1 | while_mul_37_cmp_tiswt5_1 | while_mul_37_cmp_hile_mul_37_cmp_pdswt4_1
      | while_mul_37_cmp_hile_mul_37_cmp_pdswt3_1 | while_mul_37_cmp_hile_mul_37_cmp_pdswt2_1
      | while_mul_37_cmp_hile_mul_37_cmp_pdswt1_1 | while_mul_37_cmp_ogwt | while_mul_37_cmp_tiswt5
      | while_mul_37_cmp_hile_mul_37_cmp_pdswt4 | while_mul_37_cmp_hile_mul_37_cmp_pdswt3
      | while_mul_37_cmp_hile_mul_37_cmp_pdswt2 | while_mul_37_cmp_hile_mul_37_cmp_pdswt1
      | (run_wen & while_mul_37_cmp_iswt5_1_pff) | (run_wen & while_mul_37_cmp_iswt5_pff);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_37_cmp_hile_mul_37_cmp_pdswt4 <= 1'b0;
      while_mul_37_cmp_hile_mul_37_cmp_pdswt3 <= 1'b0;
      while_mul_37_cmp_hile_mul_37_cmp_pdswt2 <= 1'b0;
      while_mul_37_cmp_hile_mul_37_cmp_pdswt1 <= 1'b0;
      while_mul_37_cmp_hile_mul_37_cmp_pdswt0 <= 1'b0;
      while_mul_37_cmp_icwt <= 3'b000;
      while_mul_37_cmp_hile_mul_37_cmp_pdswt4_1 <= 1'b0;
      while_mul_37_cmp_hile_mul_37_cmp_pdswt3_1 <= 1'b0;
      while_mul_37_cmp_hile_mul_37_cmp_pdswt2_1 <= 1'b0;
      while_mul_37_cmp_hile_mul_37_cmp_pdswt1_1 <= 1'b0;
      while_mul_37_cmp_hile_mul_37_cmp_pdswt0_1 <= 1'b0;
      while_mul_37_cmp_icwt_1 <= 3'b000;
    end
    else begin
      while_mul_37_cmp_hile_mul_37_cmp_pdswt4 <= while_mul_37_cmp_tiswt5;
      while_mul_37_cmp_hile_mul_37_cmp_pdswt3 <= while_mul_37_cmp_hile_mul_37_cmp_pdswt4;
      while_mul_37_cmp_hile_mul_37_cmp_pdswt2 <= while_mul_37_cmp_hile_mul_37_cmp_pdswt3;
      while_mul_37_cmp_hile_mul_37_cmp_pdswt1 <= while_mul_37_cmp_hile_mul_37_cmp_pdswt2;
      while_mul_37_cmp_hile_mul_37_cmp_pdswt0 <= while_mul_37_cmp_hile_mul_37_cmp_pdswt1;
      while_mul_37_cmp_icwt <= nl_while_mul_37_cmp_icwt[2:0];
      while_mul_37_cmp_hile_mul_37_cmp_pdswt4_1 <= while_mul_37_cmp_tiswt5_1;
      while_mul_37_cmp_hile_mul_37_cmp_pdswt3_1 <= while_mul_37_cmp_hile_mul_37_cmp_pdswt4_1;
      while_mul_37_cmp_hile_mul_37_cmp_pdswt2_1 <= while_mul_37_cmp_hile_mul_37_cmp_pdswt3_1;
      while_mul_37_cmp_hile_mul_37_cmp_pdswt1_1 <= while_mul_37_cmp_hile_mul_37_cmp_pdswt2_1;
      while_mul_37_cmp_hile_mul_37_cmp_pdswt0_1 <= while_mul_37_cmp_hile_mul_37_cmp_pdswt1_1;
      while_mul_37_cmp_icwt_1 <= nl_while_mul_37_cmp_icwt_1[2:0];
    end
  end
  assign nl_while_acc_58_nl = while_mul_37_cmp_icwt + 3'b111;
  assign while_acc_58_nl = nl_while_acc_58_nl[2:0];
  assign nl_while_acc_59_nl = conv_u2u_1_2(while_mul_37_cmp_hile_mul_37_cmp_pdswt0)
      + conv_u2u_1_2(~ while_mul_37_cmp_ogwt);
  assign while_acc_59_nl = nl_while_acc_59_nl[1:0];
  assign nl_while_mul_37_cmp_icwt  = while_acc_58_nl + conv_u2u_2_3(while_acc_59_nl);
  assign nl_while_acc_61_nl = while_mul_37_cmp_icwt_1 + 3'b111;
  assign while_acc_61_nl = nl_while_acc_61_nl[2:0];
  assign nl_while_acc_62_nl = conv_u2u_1_2(while_mul_37_cmp_hile_mul_37_cmp_pdswt0_1)
      + conv_u2u_1_2(~ while_mul_37_cmp_ogwt_1);
  assign while_acc_62_nl = nl_while_acc_62_nl[1:0];
  assign nl_while_mul_37_cmp_icwt_1  = while_acc_61_nl + conv_u2u_2_3(while_acc_62_nl);

  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_44_cmp_mgc_mul_pipe_64_1_113_1_177_1_1_0_0_6_1_wait_dp
// ------------------------------------------------------------------


module Rotate_run_while_mul_44_cmp_mgc_mul_pipe_64_1_113_1_177_1_1_0_0_6_1_wait_dp
    (
  clk, rst, while_mul_44_cmp_bawt, while_mul_44_cmp_iden, while_mul_44_cmp_iden_2,
      while_mul_44_cmp_z_mxwt, while_mul_44_cmp_z_mxwt_1, while_mul_44_cmp_biwt,
      while_mul_44_cmp_bdwt, while_mul_44_cmp_biwt_2, while_mul_44_cmp_bdwt_2, while_mul_44_cmp_z
);
  input clk;
  input rst;
  output while_mul_44_cmp_bawt;
  output while_mul_44_cmp_iden;
  output while_mul_44_cmp_iden_2;
  output [176:0] while_mul_44_cmp_z_mxwt;
  output [176:0] while_mul_44_cmp_z_mxwt_1;
  input while_mul_44_cmp_biwt;
  input while_mul_44_cmp_bdwt;
  input while_mul_44_cmp_biwt_2;
  input while_mul_44_cmp_bdwt_2;
  input [176:0] while_mul_44_cmp_z;


  // Interconnect Declarations
  reg [2:0] while_mul_44_cmp_bcwt;
  wire [3:0] nl_while_mul_44_cmp_bcwt;
  reg [2:0] while_mul_44_cmp_bcwt_1;
  wire [3:0] nl_while_mul_44_cmp_bcwt_1;
  reg [176:0] while_mul_44_cmp_z_bfwt;
  reg [176:0] while_mul_44_cmp_z_bfwt_1;
  reg [176:0] while_mul_44_cmp_z_bfwt_2;
  reg [176:0] while_mul_44_cmp_z_bfwt_3;
  reg [176:0] while_mul_44_cmp_z_bfwt_4;
  reg [176:0] while_mul_44_cmp_z_bfwt_5;
  reg [176:0] while_mul_44_cmp_z_bfwt_6;
  reg [176:0] while_mul_44_cmp_z_bfwt_7;
  reg [176:0] while_mul_44_cmp_z_bfwt_8;
  reg [176:0] while_mul_44_cmp_z_bfwt_9;
  reg [176:0] while_mul_44_cmp_z_bfwt_10;
  reg [176:0] while_mul_44_cmp_z_bfwt_11;

  wire[2:0] while_acc_53_nl;
  wire[3:0] nl_while_acc_53_nl;
  wire[1:0] while_acc_54_nl;
  wire[2:0] nl_while_acc_54_nl;
  wire[2:0] while_acc_56_nl;
  wire[3:0] nl_while_acc_56_nl;
  wire[1:0] while_acc_57_nl;
  wire[2:0] nl_while_acc_57_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_44_cmp_iden = while_mul_44_cmp_biwt | while_mul_44_cmp_bdwt;
  assign while_mul_44_cmp_bawt = while_mul_44_cmp_biwt | (while_mul_44_cmp_bcwt!=3'b000);
  assign while_mul_44_cmp_iden_2 = while_mul_44_cmp_biwt_2 | while_mul_44_cmp_bdwt_2;
  assign while_mul_44_cmp_z_mxwt = MUX_v_177_7_2(while_mul_44_cmp_z, while_mul_44_cmp_z_bfwt,
      while_mul_44_cmp_z_bfwt_1, while_mul_44_cmp_z_bfwt_2, while_mul_44_cmp_z_bfwt_3,
      while_mul_44_cmp_z_bfwt_4, while_mul_44_cmp_z_bfwt_5, while_mul_44_cmp_bcwt_1);
  assign while_mul_44_cmp_z_mxwt_1 = MUX_v_177_7_2(while_mul_44_cmp_z, while_mul_44_cmp_z_bfwt_6,
      while_mul_44_cmp_z_bfwt_7, while_mul_44_cmp_z_bfwt_8, while_mul_44_cmp_z_bfwt_9,
      while_mul_44_cmp_z_bfwt_10, while_mul_44_cmp_z_bfwt_11, while_mul_44_cmp_bcwt);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_44_cmp_bcwt <= 3'b000;
      while_mul_44_cmp_bcwt_1 <= 3'b000;
    end
    else begin
      while_mul_44_cmp_bcwt <= nl_while_mul_44_cmp_bcwt[2:0];
      while_mul_44_cmp_bcwt_1 <= nl_while_mul_44_cmp_bcwt_1[2:0];
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_44_cmp_z_bfwt <= 177'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_44_cmp_z_bfwt_1 <= 177'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_44_cmp_z_bfwt_2 <= 177'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_44_cmp_z_bfwt_3 <= 177'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_44_cmp_z_bfwt_4 <= 177'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_44_cmp_z_bfwt_5 <= 177'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_44_cmp_biwt_2 ) begin
      while_mul_44_cmp_z_bfwt <= while_mul_44_cmp_z;
      while_mul_44_cmp_z_bfwt_1 <= while_mul_44_cmp_z_bfwt;
      while_mul_44_cmp_z_bfwt_2 <= while_mul_44_cmp_z_bfwt_1;
      while_mul_44_cmp_z_bfwt_3 <= while_mul_44_cmp_z_bfwt_2;
      while_mul_44_cmp_z_bfwt_4 <= while_mul_44_cmp_z_bfwt_3;
      while_mul_44_cmp_z_bfwt_5 <= while_mul_44_cmp_z_bfwt_4;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_44_cmp_z_bfwt_6 <= 177'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_44_cmp_z_bfwt_7 <= 177'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_44_cmp_z_bfwt_8 <= 177'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_44_cmp_z_bfwt_9 <= 177'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_44_cmp_z_bfwt_10 <= 177'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_44_cmp_z_bfwt_11 <= 177'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_44_cmp_biwt ) begin
      while_mul_44_cmp_z_bfwt_6 <= while_mul_44_cmp_z;
      while_mul_44_cmp_z_bfwt_7 <= while_mul_44_cmp_z_bfwt_6;
      while_mul_44_cmp_z_bfwt_8 <= while_mul_44_cmp_z_bfwt_7;
      while_mul_44_cmp_z_bfwt_9 <= while_mul_44_cmp_z_bfwt_8;
      while_mul_44_cmp_z_bfwt_10 <= while_mul_44_cmp_z_bfwt_9;
      while_mul_44_cmp_z_bfwt_11 <= while_mul_44_cmp_z_bfwt_10;
    end
  end
  assign nl_while_acc_53_nl = while_mul_44_cmp_bcwt + 3'b111;
  assign while_acc_53_nl = nl_while_acc_53_nl[2:0];
  assign nl_while_acc_54_nl = conv_u2u_1_2(~ while_mul_44_cmp_bdwt) + conv_u2u_1_2(while_mul_44_cmp_biwt);
  assign while_acc_54_nl = nl_while_acc_54_nl[1:0];
  assign nl_while_mul_44_cmp_bcwt  = while_acc_53_nl + conv_u2u_2_3(while_acc_54_nl);
  assign nl_while_acc_56_nl = while_mul_44_cmp_bcwt_1 + 3'b111;
  assign while_acc_56_nl = nl_while_acc_56_nl[2:0];
  assign nl_while_acc_57_nl = conv_u2u_1_2(~ while_mul_44_cmp_bdwt_2) + conv_u2u_1_2(while_mul_44_cmp_biwt_2);
  assign while_acc_57_nl = nl_while_acc_57_nl[1:0];
  assign nl_while_mul_44_cmp_bcwt_1  = while_acc_56_nl + conv_u2u_2_3(while_acc_57_nl);

  function automatic [176:0] MUX_v_177_7_2;
    input [176:0] input_0;
    input [176:0] input_1;
    input [176:0] input_2;
    input [176:0] input_3;
    input [176:0] input_4;
    input [176:0] input_5;
    input [176:0] input_6;
    input [2:0] sel;
    reg [176:0] result;
  begin
    case (sel)
      3'b000 : begin
        result = input_0;
      end
      3'b001 : begin
        result = input_1;
      end
      3'b010 : begin
        result = input_2;
      end
      3'b011 : begin
        result = input_3;
      end
      3'b100 : begin
        result = input_4;
      end
      3'b101 : begin
        result = input_5;
      end
      default : begin
        result = input_6;
      end
    endcase
    MUX_v_177_7_2 = result;
  end
  endfunction


  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_44_cmp_mgc_mul_pipe_64_1_113_1_177_1_1_0_0_6_1_wait_ctrl
// ------------------------------------------------------------------


module Rotate_run_while_mul_44_cmp_mgc_mul_pipe_64_1_113_1_177_1_1_0_0_6_1_wait_ctrl
    (
  clk, rst, run_wen, run_wten, while_mul_44_cmp_oswt_unreg, while_mul_44_cmp_iswt5,
      while_mul_44_cmp_iden_1, while_mul_44_cmp_oswt_unreg_1, while_mul_44_cmp_iswt5_1,
      while_mul_44_cmp_iden_3, run_cgwt_10, while_mul_44_cmp_bdwt, while_mul_44_cmp_bdwt_2,
      while_mul_44_cmp_iswt5_1_pff, while_mul_44_cmp_iswt5_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_44_cmp_oswt_unreg;
  input while_mul_44_cmp_iswt5;
  output while_mul_44_cmp_iden_1;
  input while_mul_44_cmp_oswt_unreg_1;
  input while_mul_44_cmp_iswt5_1;
  output while_mul_44_cmp_iden_3;
  output run_cgwt_10;
  output while_mul_44_cmp_bdwt;
  output while_mul_44_cmp_bdwt_2;
  input while_mul_44_cmp_iswt5_1_pff;
  input while_mul_44_cmp_iswt5_pff;


  // Interconnect Declarations
  wire while_mul_44_cmp_ogwt;
  wire while_mul_44_cmp_tiswt5;
  reg while_mul_44_cmp_hile_mul_44_cmp_pdswt4;
  reg while_mul_44_cmp_hile_mul_44_cmp_pdswt3;
  reg while_mul_44_cmp_hile_mul_44_cmp_pdswt2;
  reg while_mul_44_cmp_hile_mul_44_cmp_pdswt1;
  reg while_mul_44_cmp_hile_mul_44_cmp_pdswt0;
  reg [2:0] while_mul_44_cmp_icwt;
  wire [3:0] nl_while_mul_44_cmp_icwt;
  wire while_mul_44_cmp_ogwt_1;
  wire while_mul_44_cmp_tiswt5_1;
  reg while_mul_44_cmp_hile_mul_44_cmp_pdswt4_1;
  reg while_mul_44_cmp_hile_mul_44_cmp_pdswt3_1;
  reg while_mul_44_cmp_hile_mul_44_cmp_pdswt2_1;
  reg while_mul_44_cmp_hile_mul_44_cmp_pdswt1_1;
  reg while_mul_44_cmp_hile_mul_44_cmp_pdswt0_1;
  reg [2:0] while_mul_44_cmp_icwt_1;
  wire [3:0] nl_while_mul_44_cmp_icwt_1;

  wire[2:0] while_acc_54_nl;
  wire[3:0] nl_while_acc_54_nl;
  wire[1:0] while_acc_55_nl;
  wire[2:0] nl_while_acc_55_nl;
  wire[2:0] while_acc_57_nl;
  wire[3:0] nl_while_acc_57_nl;
  wire[1:0] while_acc_58_nl;
  wire[2:0] nl_while_acc_58_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_44_cmp_bdwt = while_mul_44_cmp_oswt_unreg & run_wen;
  assign while_mul_44_cmp_tiswt5 = (~ run_wten) & while_mul_44_cmp_iswt5;
  assign while_mul_44_cmp_iden_1 = while_mul_44_cmp_ogwt;
  assign while_mul_44_cmp_ogwt = while_mul_44_cmp_hile_mul_44_cmp_pdswt0 | (while_mul_44_cmp_icwt!=3'b000);
  assign while_mul_44_cmp_bdwt_2 = while_mul_44_cmp_oswt_unreg_1 & run_wen;
  assign while_mul_44_cmp_tiswt5_1 = (~ run_wten) & while_mul_44_cmp_iswt5_1;
  assign while_mul_44_cmp_iden_3 = while_mul_44_cmp_ogwt_1;
  assign while_mul_44_cmp_ogwt_1 = while_mul_44_cmp_hile_mul_44_cmp_pdswt0_1 | (while_mul_44_cmp_icwt_1!=3'b000);
  assign run_cgwt_10 = while_mul_44_cmp_ogwt_1 | while_mul_44_cmp_tiswt5_1 | while_mul_44_cmp_hile_mul_44_cmp_pdswt4_1
      | while_mul_44_cmp_hile_mul_44_cmp_pdswt3_1 | while_mul_44_cmp_hile_mul_44_cmp_pdswt2_1
      | while_mul_44_cmp_hile_mul_44_cmp_pdswt1_1 | while_mul_44_cmp_ogwt | while_mul_44_cmp_tiswt5
      | while_mul_44_cmp_hile_mul_44_cmp_pdswt4 | while_mul_44_cmp_hile_mul_44_cmp_pdswt3
      | while_mul_44_cmp_hile_mul_44_cmp_pdswt2 | while_mul_44_cmp_hile_mul_44_cmp_pdswt1
      | (run_wen & while_mul_44_cmp_iswt5_1_pff) | (run_wen & while_mul_44_cmp_iswt5_pff);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_44_cmp_hile_mul_44_cmp_pdswt4 <= 1'b0;
      while_mul_44_cmp_hile_mul_44_cmp_pdswt3 <= 1'b0;
      while_mul_44_cmp_hile_mul_44_cmp_pdswt2 <= 1'b0;
      while_mul_44_cmp_hile_mul_44_cmp_pdswt1 <= 1'b0;
      while_mul_44_cmp_hile_mul_44_cmp_pdswt0 <= 1'b0;
      while_mul_44_cmp_icwt <= 3'b000;
      while_mul_44_cmp_hile_mul_44_cmp_pdswt4_1 <= 1'b0;
      while_mul_44_cmp_hile_mul_44_cmp_pdswt3_1 <= 1'b0;
      while_mul_44_cmp_hile_mul_44_cmp_pdswt2_1 <= 1'b0;
      while_mul_44_cmp_hile_mul_44_cmp_pdswt1_1 <= 1'b0;
      while_mul_44_cmp_hile_mul_44_cmp_pdswt0_1 <= 1'b0;
      while_mul_44_cmp_icwt_1 <= 3'b000;
    end
    else begin
      while_mul_44_cmp_hile_mul_44_cmp_pdswt4 <= while_mul_44_cmp_tiswt5;
      while_mul_44_cmp_hile_mul_44_cmp_pdswt3 <= while_mul_44_cmp_hile_mul_44_cmp_pdswt4;
      while_mul_44_cmp_hile_mul_44_cmp_pdswt2 <= while_mul_44_cmp_hile_mul_44_cmp_pdswt3;
      while_mul_44_cmp_hile_mul_44_cmp_pdswt1 <= while_mul_44_cmp_hile_mul_44_cmp_pdswt2;
      while_mul_44_cmp_hile_mul_44_cmp_pdswt0 <= while_mul_44_cmp_hile_mul_44_cmp_pdswt1;
      while_mul_44_cmp_icwt <= nl_while_mul_44_cmp_icwt[2:0];
      while_mul_44_cmp_hile_mul_44_cmp_pdswt4_1 <= while_mul_44_cmp_tiswt5_1;
      while_mul_44_cmp_hile_mul_44_cmp_pdswt3_1 <= while_mul_44_cmp_hile_mul_44_cmp_pdswt4_1;
      while_mul_44_cmp_hile_mul_44_cmp_pdswt2_1 <= while_mul_44_cmp_hile_mul_44_cmp_pdswt3_1;
      while_mul_44_cmp_hile_mul_44_cmp_pdswt1_1 <= while_mul_44_cmp_hile_mul_44_cmp_pdswt2_1;
      while_mul_44_cmp_hile_mul_44_cmp_pdswt0_1 <= while_mul_44_cmp_hile_mul_44_cmp_pdswt1_1;
      while_mul_44_cmp_icwt_1 <= nl_while_mul_44_cmp_icwt_1[2:0];
    end
  end
  assign nl_while_acc_54_nl = while_mul_44_cmp_icwt + 3'b111;
  assign while_acc_54_nl = nl_while_acc_54_nl[2:0];
  assign nl_while_acc_55_nl = conv_u2u_1_2(while_mul_44_cmp_hile_mul_44_cmp_pdswt0)
      + conv_u2u_1_2(~ while_mul_44_cmp_ogwt);
  assign while_acc_55_nl = nl_while_acc_55_nl[1:0];
  assign nl_while_mul_44_cmp_icwt  = while_acc_54_nl + conv_u2u_2_3(while_acc_55_nl);
  assign nl_while_acc_57_nl = while_mul_44_cmp_icwt_1 + 3'b111;
  assign while_acc_57_nl = nl_while_acc_57_nl[2:0];
  assign nl_while_acc_58_nl = conv_u2u_1_2(while_mul_44_cmp_hile_mul_44_cmp_pdswt0_1)
      + conv_u2u_1_2(~ while_mul_44_cmp_ogwt_1);
  assign while_acc_58_nl = nl_while_acc_58_nl[1:0];
  assign nl_while_mul_44_cmp_icwt_1  = while_acc_57_nl + conv_u2u_2_3(while_acc_58_nl);

  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_73_cmp_mgc_mul_pipe_64_1_114_1_178_1_1_0_0_6_1_wait_dp
// ------------------------------------------------------------------


module Rotate_run_while_mul_73_cmp_mgc_mul_pipe_64_1_114_1_178_1_1_0_0_6_1_wait_dp
    (
  clk, rst, while_mul_73_cmp_bawt, while_mul_73_cmp_iden, while_mul_73_cmp_iden_2,
      while_mul_73_cmp_z_mxwt, while_mul_73_cmp_z_mxwt_1, while_mul_73_cmp_biwt,
      while_mul_73_cmp_bdwt, while_mul_73_cmp_biwt_2, while_mul_73_cmp_bdwt_2, while_mul_73_cmp_z
);
  input clk;
  input rst;
  output while_mul_73_cmp_bawt;
  output while_mul_73_cmp_iden;
  output while_mul_73_cmp_iden_2;
  output [177:0] while_mul_73_cmp_z_mxwt;
  output [177:0] while_mul_73_cmp_z_mxwt_1;
  input while_mul_73_cmp_biwt;
  input while_mul_73_cmp_bdwt;
  input while_mul_73_cmp_biwt_2;
  input while_mul_73_cmp_bdwt_2;
  input [177:0] while_mul_73_cmp_z;


  // Interconnect Declarations
  reg [2:0] while_mul_73_cmp_bcwt;
  wire [3:0] nl_while_mul_73_cmp_bcwt;
  reg [2:0] while_mul_73_cmp_bcwt_1;
  wire [3:0] nl_while_mul_73_cmp_bcwt_1;
  reg [177:0] while_mul_73_cmp_z_bfwt;
  reg [177:0] while_mul_73_cmp_z_bfwt_1;
  reg [177:0] while_mul_73_cmp_z_bfwt_2;
  reg [177:0] while_mul_73_cmp_z_bfwt_3;
  reg [177:0] while_mul_73_cmp_z_bfwt_4;
  reg [177:0] while_mul_73_cmp_z_bfwt_5;
  reg [177:0] while_mul_73_cmp_z_bfwt_6;
  reg [177:0] while_mul_73_cmp_z_bfwt_7;
  reg [177:0] while_mul_73_cmp_z_bfwt_8;
  reg [177:0] while_mul_73_cmp_z_bfwt_9;
  reg [177:0] while_mul_73_cmp_z_bfwt_10;
  reg [177:0] while_mul_73_cmp_z_bfwt_11;

  wire[2:0] while_acc_49_nl;
  wire[3:0] nl_while_acc_49_nl;
  wire[1:0] while_acc_50_nl;
  wire[2:0] nl_while_acc_50_nl;
  wire[2:0] while_acc_52_nl;
  wire[3:0] nl_while_acc_52_nl;
  wire[1:0] while_acc_53_nl;
  wire[2:0] nl_while_acc_53_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_73_cmp_iden = while_mul_73_cmp_biwt | while_mul_73_cmp_bdwt;
  assign while_mul_73_cmp_bawt = while_mul_73_cmp_biwt | (while_mul_73_cmp_bcwt!=3'b000);
  assign while_mul_73_cmp_iden_2 = while_mul_73_cmp_biwt_2 | while_mul_73_cmp_bdwt_2;
  assign while_mul_73_cmp_z_mxwt = MUX_v_178_7_2(while_mul_73_cmp_z, while_mul_73_cmp_z_bfwt,
      while_mul_73_cmp_z_bfwt_1, while_mul_73_cmp_z_bfwt_2, while_mul_73_cmp_z_bfwt_3,
      while_mul_73_cmp_z_bfwt_4, while_mul_73_cmp_z_bfwt_5, while_mul_73_cmp_bcwt_1);
  assign while_mul_73_cmp_z_mxwt_1 = MUX_v_178_7_2(while_mul_73_cmp_z, while_mul_73_cmp_z_bfwt_6,
      while_mul_73_cmp_z_bfwt_7, while_mul_73_cmp_z_bfwt_8, while_mul_73_cmp_z_bfwt_9,
      while_mul_73_cmp_z_bfwt_10, while_mul_73_cmp_z_bfwt_11, while_mul_73_cmp_bcwt);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_73_cmp_bcwt <= 3'b000;
      while_mul_73_cmp_bcwt_1 <= 3'b000;
    end
    else begin
      while_mul_73_cmp_bcwt <= nl_while_mul_73_cmp_bcwt[2:0];
      while_mul_73_cmp_bcwt_1 <= nl_while_mul_73_cmp_bcwt_1[2:0];
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_73_cmp_z_bfwt <= 178'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_73_cmp_z_bfwt_1 <= 178'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_73_cmp_z_bfwt_2 <= 178'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_73_cmp_z_bfwt_3 <= 178'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_73_cmp_z_bfwt_4 <= 178'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_73_cmp_z_bfwt_5 <= 178'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_73_cmp_biwt_2 ) begin
      while_mul_73_cmp_z_bfwt <= while_mul_73_cmp_z;
      while_mul_73_cmp_z_bfwt_1 <= while_mul_73_cmp_z_bfwt;
      while_mul_73_cmp_z_bfwt_2 <= while_mul_73_cmp_z_bfwt_1;
      while_mul_73_cmp_z_bfwt_3 <= while_mul_73_cmp_z_bfwt_2;
      while_mul_73_cmp_z_bfwt_4 <= while_mul_73_cmp_z_bfwt_3;
      while_mul_73_cmp_z_bfwt_5 <= while_mul_73_cmp_z_bfwt_4;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_73_cmp_z_bfwt_6 <= 178'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_73_cmp_z_bfwt_7 <= 178'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_73_cmp_z_bfwt_8 <= 178'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_73_cmp_z_bfwt_9 <= 178'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_73_cmp_z_bfwt_10 <= 178'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_73_cmp_z_bfwt_11 <= 178'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_73_cmp_biwt ) begin
      while_mul_73_cmp_z_bfwt_6 <= while_mul_73_cmp_z;
      while_mul_73_cmp_z_bfwt_7 <= while_mul_73_cmp_z_bfwt_6;
      while_mul_73_cmp_z_bfwt_8 <= while_mul_73_cmp_z_bfwt_7;
      while_mul_73_cmp_z_bfwt_9 <= while_mul_73_cmp_z_bfwt_8;
      while_mul_73_cmp_z_bfwt_10 <= while_mul_73_cmp_z_bfwt_9;
      while_mul_73_cmp_z_bfwt_11 <= while_mul_73_cmp_z_bfwt_10;
    end
  end
  assign nl_while_acc_49_nl = while_mul_73_cmp_bcwt + 3'b111;
  assign while_acc_49_nl = nl_while_acc_49_nl[2:0];
  assign nl_while_acc_50_nl = conv_u2u_1_2(~ while_mul_73_cmp_bdwt) + conv_u2u_1_2(while_mul_73_cmp_biwt);
  assign while_acc_50_nl = nl_while_acc_50_nl[1:0];
  assign nl_while_mul_73_cmp_bcwt  = while_acc_49_nl + conv_u2u_2_3(while_acc_50_nl);
  assign nl_while_acc_52_nl = while_mul_73_cmp_bcwt_1 + 3'b111;
  assign while_acc_52_nl = nl_while_acc_52_nl[2:0];
  assign nl_while_acc_53_nl = conv_u2u_1_2(~ while_mul_73_cmp_bdwt_2) + conv_u2u_1_2(while_mul_73_cmp_biwt_2);
  assign while_acc_53_nl = nl_while_acc_53_nl[1:0];
  assign nl_while_mul_73_cmp_bcwt_1  = while_acc_52_nl + conv_u2u_2_3(while_acc_53_nl);

  function automatic [177:0] MUX_v_178_7_2;
    input [177:0] input_0;
    input [177:0] input_1;
    input [177:0] input_2;
    input [177:0] input_3;
    input [177:0] input_4;
    input [177:0] input_5;
    input [177:0] input_6;
    input [2:0] sel;
    reg [177:0] result;
  begin
    case (sel)
      3'b000 : begin
        result = input_0;
      end
      3'b001 : begin
        result = input_1;
      end
      3'b010 : begin
        result = input_2;
      end
      3'b011 : begin
        result = input_3;
      end
      3'b100 : begin
        result = input_4;
      end
      3'b101 : begin
        result = input_5;
      end
      default : begin
        result = input_6;
      end
    endcase
    MUX_v_178_7_2 = result;
  end
  endfunction


  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_73_cmp_mgc_mul_pipe_64_1_114_1_178_1_1_0_0_6_1_wait_ctrl
// ------------------------------------------------------------------


module Rotate_run_while_mul_73_cmp_mgc_mul_pipe_64_1_114_1_178_1_1_0_0_6_1_wait_ctrl
    (
  clk, rst, run_wen, run_wten, while_mul_73_cmp_oswt_unreg, while_mul_73_cmp_iswt5,
      while_mul_73_cmp_iden_1, while_mul_73_cmp_oswt_unreg_1, while_mul_73_cmp_iswt5_1,
      while_mul_73_cmp_iden_3, run_cgwt_9, while_mul_73_cmp_bdwt, while_mul_73_cmp_bdwt_2,
      while_mul_73_cmp_iswt5_1_pff, while_mul_73_cmp_iswt5_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_73_cmp_oswt_unreg;
  input while_mul_73_cmp_iswt5;
  output while_mul_73_cmp_iden_1;
  input while_mul_73_cmp_oswt_unreg_1;
  input while_mul_73_cmp_iswt5_1;
  output while_mul_73_cmp_iden_3;
  output run_cgwt_9;
  output while_mul_73_cmp_bdwt;
  output while_mul_73_cmp_bdwt_2;
  input while_mul_73_cmp_iswt5_1_pff;
  input while_mul_73_cmp_iswt5_pff;


  // Interconnect Declarations
  wire while_mul_73_cmp_ogwt;
  wire while_mul_73_cmp_tiswt5;
  reg while_mul_73_cmp_hile_mul_73_cmp_pdswt4;
  reg while_mul_73_cmp_hile_mul_73_cmp_pdswt3;
  reg while_mul_73_cmp_hile_mul_73_cmp_pdswt2;
  reg while_mul_73_cmp_hile_mul_73_cmp_pdswt1;
  reg while_mul_73_cmp_hile_mul_73_cmp_pdswt0;
  reg [2:0] while_mul_73_cmp_icwt;
  wire [3:0] nl_while_mul_73_cmp_icwt;
  wire while_mul_73_cmp_ogwt_1;
  wire while_mul_73_cmp_tiswt5_1;
  reg while_mul_73_cmp_hile_mul_73_cmp_pdswt4_1;
  reg while_mul_73_cmp_hile_mul_73_cmp_pdswt3_1;
  reg while_mul_73_cmp_hile_mul_73_cmp_pdswt2_1;
  reg while_mul_73_cmp_hile_mul_73_cmp_pdswt1_1;
  reg while_mul_73_cmp_hile_mul_73_cmp_pdswt0_1;
  reg [2:0] while_mul_73_cmp_icwt_1;
  wire [3:0] nl_while_mul_73_cmp_icwt_1;

  wire[2:0] while_acc_50_nl;
  wire[3:0] nl_while_acc_50_nl;
  wire[1:0] while_acc_51_nl;
  wire[2:0] nl_while_acc_51_nl;
  wire[2:0] while_acc_53_nl;
  wire[3:0] nl_while_acc_53_nl;
  wire[1:0] while_acc_54_nl;
  wire[2:0] nl_while_acc_54_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_73_cmp_bdwt = while_mul_73_cmp_oswt_unreg & run_wen;
  assign while_mul_73_cmp_tiswt5 = (~ run_wten) & while_mul_73_cmp_iswt5;
  assign while_mul_73_cmp_iden_1 = while_mul_73_cmp_ogwt;
  assign while_mul_73_cmp_ogwt = while_mul_73_cmp_hile_mul_73_cmp_pdswt0 | (while_mul_73_cmp_icwt!=3'b000);
  assign while_mul_73_cmp_bdwt_2 = while_mul_73_cmp_oswt_unreg_1 & run_wen;
  assign while_mul_73_cmp_tiswt5_1 = (~ run_wten) & while_mul_73_cmp_iswt5_1;
  assign while_mul_73_cmp_iden_3 = while_mul_73_cmp_ogwt_1;
  assign while_mul_73_cmp_ogwt_1 = while_mul_73_cmp_hile_mul_73_cmp_pdswt0_1 | (while_mul_73_cmp_icwt_1!=3'b000);
  assign run_cgwt_9 = while_mul_73_cmp_ogwt_1 | while_mul_73_cmp_tiswt5_1 | while_mul_73_cmp_hile_mul_73_cmp_pdswt4_1
      | while_mul_73_cmp_hile_mul_73_cmp_pdswt3_1 | while_mul_73_cmp_hile_mul_73_cmp_pdswt2_1
      | while_mul_73_cmp_hile_mul_73_cmp_pdswt1_1 | while_mul_73_cmp_ogwt | while_mul_73_cmp_tiswt5
      | while_mul_73_cmp_hile_mul_73_cmp_pdswt4 | while_mul_73_cmp_hile_mul_73_cmp_pdswt3
      | while_mul_73_cmp_hile_mul_73_cmp_pdswt2 | while_mul_73_cmp_hile_mul_73_cmp_pdswt1
      | (run_wen & while_mul_73_cmp_iswt5_1_pff) | (run_wen & while_mul_73_cmp_iswt5_pff);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_73_cmp_hile_mul_73_cmp_pdswt4 <= 1'b0;
      while_mul_73_cmp_hile_mul_73_cmp_pdswt3 <= 1'b0;
      while_mul_73_cmp_hile_mul_73_cmp_pdswt2 <= 1'b0;
      while_mul_73_cmp_hile_mul_73_cmp_pdswt1 <= 1'b0;
      while_mul_73_cmp_hile_mul_73_cmp_pdswt0 <= 1'b0;
      while_mul_73_cmp_icwt <= 3'b000;
      while_mul_73_cmp_hile_mul_73_cmp_pdswt4_1 <= 1'b0;
      while_mul_73_cmp_hile_mul_73_cmp_pdswt3_1 <= 1'b0;
      while_mul_73_cmp_hile_mul_73_cmp_pdswt2_1 <= 1'b0;
      while_mul_73_cmp_hile_mul_73_cmp_pdswt1_1 <= 1'b0;
      while_mul_73_cmp_hile_mul_73_cmp_pdswt0_1 <= 1'b0;
      while_mul_73_cmp_icwt_1 <= 3'b000;
    end
    else begin
      while_mul_73_cmp_hile_mul_73_cmp_pdswt4 <= while_mul_73_cmp_tiswt5;
      while_mul_73_cmp_hile_mul_73_cmp_pdswt3 <= while_mul_73_cmp_hile_mul_73_cmp_pdswt4;
      while_mul_73_cmp_hile_mul_73_cmp_pdswt2 <= while_mul_73_cmp_hile_mul_73_cmp_pdswt3;
      while_mul_73_cmp_hile_mul_73_cmp_pdswt1 <= while_mul_73_cmp_hile_mul_73_cmp_pdswt2;
      while_mul_73_cmp_hile_mul_73_cmp_pdswt0 <= while_mul_73_cmp_hile_mul_73_cmp_pdswt1;
      while_mul_73_cmp_icwt <= nl_while_mul_73_cmp_icwt[2:0];
      while_mul_73_cmp_hile_mul_73_cmp_pdswt4_1 <= while_mul_73_cmp_tiswt5_1;
      while_mul_73_cmp_hile_mul_73_cmp_pdswt3_1 <= while_mul_73_cmp_hile_mul_73_cmp_pdswt4_1;
      while_mul_73_cmp_hile_mul_73_cmp_pdswt2_1 <= while_mul_73_cmp_hile_mul_73_cmp_pdswt3_1;
      while_mul_73_cmp_hile_mul_73_cmp_pdswt1_1 <= while_mul_73_cmp_hile_mul_73_cmp_pdswt2_1;
      while_mul_73_cmp_hile_mul_73_cmp_pdswt0_1 <= while_mul_73_cmp_hile_mul_73_cmp_pdswt1_1;
      while_mul_73_cmp_icwt_1 <= nl_while_mul_73_cmp_icwt_1[2:0];
    end
  end
  assign nl_while_acc_50_nl = while_mul_73_cmp_icwt + 3'b111;
  assign while_acc_50_nl = nl_while_acc_50_nl[2:0];
  assign nl_while_acc_51_nl = conv_u2u_1_2(while_mul_73_cmp_hile_mul_73_cmp_pdswt0)
      + conv_u2u_1_2(~ while_mul_73_cmp_ogwt);
  assign while_acc_51_nl = nl_while_acc_51_nl[1:0];
  assign nl_while_mul_73_cmp_icwt  = while_acc_50_nl + conv_u2u_2_3(while_acc_51_nl);
  assign nl_while_acc_53_nl = while_mul_73_cmp_icwt_1 + 3'b111;
  assign while_acc_53_nl = nl_while_acc_53_nl[2:0];
  assign nl_while_acc_54_nl = conv_u2u_1_2(while_mul_73_cmp_hile_mul_73_cmp_pdswt0_1)
      + conv_u2u_1_2(~ while_mul_73_cmp_ogwt_1);
  assign while_acc_54_nl = nl_while_acc_54_nl[1:0];
  assign nl_while_mul_73_cmp_icwt_1  = while_acc_53_nl + conv_u2u_2_3(while_acc_54_nl);

  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_67_cmp_mgc_mul_pipe_64_1_177_1_208_1_1_0_0_8_1_wait_dp
// ------------------------------------------------------------------


module Rotate_run_while_mul_67_cmp_mgc_mul_pipe_64_1_177_1_208_1_1_0_0_8_1_wait_dp
    (
  clk, rst, while_mul_67_cmp_bawt, while_mul_67_cmp_iden, while_mul_67_cmp_iden_2,
      while_mul_67_cmp_z_mxwt, while_mul_67_cmp_z_mxwt_1, while_mul_67_cmp_biwt,
      while_mul_67_cmp_bdwt, while_mul_67_cmp_biwt_2, while_mul_67_cmp_bdwt_2, while_mul_67_cmp_z
);
  input clk;
  input rst;
  output while_mul_67_cmp_bawt;
  output while_mul_67_cmp_iden;
  output while_mul_67_cmp_iden_2;
  output [207:0] while_mul_67_cmp_z_mxwt;
  output [177:0] while_mul_67_cmp_z_mxwt_1;
  input while_mul_67_cmp_biwt;
  input while_mul_67_cmp_bdwt;
  input while_mul_67_cmp_biwt_2;
  input while_mul_67_cmp_bdwt_2;
  input [207:0] while_mul_67_cmp_z;


  // Interconnect Declarations
  reg [3:0] while_mul_67_cmp_bcwt;
  wire [4:0] nl_while_mul_67_cmp_bcwt;
  reg [3:0] while_mul_67_cmp_bcwt_1;
  wire [4:0] nl_while_mul_67_cmp_bcwt_1;
  reg [207:0] while_mul_67_cmp_z_bfwt;
  reg [207:0] while_mul_67_cmp_z_bfwt_1;
  reg [207:0] while_mul_67_cmp_z_bfwt_2;
  reg [207:0] while_mul_67_cmp_z_bfwt_3;
  reg [207:0] while_mul_67_cmp_z_bfwt_4;
  reg [207:0] while_mul_67_cmp_z_bfwt_5;
  reg [207:0] while_mul_67_cmp_z_bfwt_6;
  reg [207:0] while_mul_67_cmp_z_bfwt_7;
  reg [177:0] while_mul_67_cmp_z_bfwt_15_177_0;
  reg [177:0] while_mul_67_cmp_z_bfwt_14_177_0;
  reg [177:0] while_mul_67_cmp_z_bfwt_13_177_0;
  reg [177:0] while_mul_67_cmp_z_bfwt_12_177_0;
  reg [177:0] while_mul_67_cmp_z_bfwt_11_177_0;
  reg [177:0] while_mul_67_cmp_z_bfwt_10_177_0;
  reg [177:0] while_mul_67_cmp_z_bfwt_9_177_0;
  reg [177:0] while_mul_67_cmp_z_bfwt_8_177_0;

  wire[3:0] while_acc_45_nl;
  wire[4:0] nl_while_acc_45_nl;
  wire[1:0] while_acc_46_nl;
  wire[2:0] nl_while_acc_46_nl;
  wire[3:0] while_acc_48_nl;
  wire[4:0] nl_while_acc_48_nl;
  wire[1:0] while_acc_49_nl;
  wire[2:0] nl_while_acc_49_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_67_cmp_iden = while_mul_67_cmp_biwt | while_mul_67_cmp_bdwt;
  assign while_mul_67_cmp_bawt = while_mul_67_cmp_biwt | (while_mul_67_cmp_bcwt!=4'b0000);
  assign while_mul_67_cmp_iden_2 = while_mul_67_cmp_biwt_2 | while_mul_67_cmp_bdwt_2;
  assign while_mul_67_cmp_z_mxwt = MUX_v_208_9_2(while_mul_67_cmp_z, while_mul_67_cmp_z_bfwt,
      while_mul_67_cmp_z_bfwt_1, while_mul_67_cmp_z_bfwt_2, while_mul_67_cmp_z_bfwt_3,
      while_mul_67_cmp_z_bfwt_4, while_mul_67_cmp_z_bfwt_5, while_mul_67_cmp_z_bfwt_6,
      while_mul_67_cmp_z_bfwt_7, while_mul_67_cmp_bcwt_1);
  assign while_mul_67_cmp_z_mxwt_1 = MUX_v_178_9_2((while_mul_67_cmp_z[177:0]), while_mul_67_cmp_z_bfwt_8_177_0,
      while_mul_67_cmp_z_bfwt_9_177_0, while_mul_67_cmp_z_bfwt_10_177_0, while_mul_67_cmp_z_bfwt_11_177_0,
      while_mul_67_cmp_z_bfwt_12_177_0, while_mul_67_cmp_z_bfwt_13_177_0, while_mul_67_cmp_z_bfwt_14_177_0,
      while_mul_67_cmp_z_bfwt_15_177_0, while_mul_67_cmp_bcwt);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_67_cmp_bcwt <= 4'b0000;
      while_mul_67_cmp_bcwt_1 <= 4'b0000;
    end
    else begin
      while_mul_67_cmp_bcwt <= nl_while_mul_67_cmp_bcwt[3:0];
      while_mul_67_cmp_bcwt_1 <= nl_while_mul_67_cmp_bcwt_1[3:0];
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_67_cmp_z_bfwt <= 208'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_67_cmp_z_bfwt_1 <= 208'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_67_cmp_z_bfwt_2 <= 208'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_67_cmp_z_bfwt_3 <= 208'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_67_cmp_z_bfwt_4 <= 208'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_67_cmp_z_bfwt_5 <= 208'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_67_cmp_z_bfwt_6 <= 208'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_67_cmp_z_bfwt_7 <= 208'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_67_cmp_biwt_2 ) begin
      while_mul_67_cmp_z_bfwt <= while_mul_67_cmp_z;
      while_mul_67_cmp_z_bfwt_1 <= while_mul_67_cmp_z_bfwt;
      while_mul_67_cmp_z_bfwt_2 <= while_mul_67_cmp_z_bfwt_1;
      while_mul_67_cmp_z_bfwt_3 <= while_mul_67_cmp_z_bfwt_2;
      while_mul_67_cmp_z_bfwt_4 <= while_mul_67_cmp_z_bfwt_3;
      while_mul_67_cmp_z_bfwt_5 <= while_mul_67_cmp_z_bfwt_4;
      while_mul_67_cmp_z_bfwt_6 <= while_mul_67_cmp_z_bfwt_5;
      while_mul_67_cmp_z_bfwt_7 <= while_mul_67_cmp_z_bfwt_6;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_67_cmp_z_bfwt_8_177_0 <= 178'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_67_cmp_z_bfwt_9_177_0 <= 178'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_67_cmp_z_bfwt_10_177_0 <= 178'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_67_cmp_z_bfwt_11_177_0 <= 178'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_67_cmp_z_bfwt_12_177_0 <= 178'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_67_cmp_z_bfwt_13_177_0 <= 178'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_67_cmp_z_bfwt_14_177_0 <= 178'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_67_cmp_z_bfwt_15_177_0 <= 178'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_67_cmp_biwt ) begin
      while_mul_67_cmp_z_bfwt_8_177_0 <= while_mul_67_cmp_z[177:0];
      while_mul_67_cmp_z_bfwt_9_177_0 <= while_mul_67_cmp_z_bfwt_8_177_0;
      while_mul_67_cmp_z_bfwt_10_177_0 <= while_mul_67_cmp_z_bfwt_9_177_0;
      while_mul_67_cmp_z_bfwt_11_177_0 <= while_mul_67_cmp_z_bfwt_10_177_0;
      while_mul_67_cmp_z_bfwt_12_177_0 <= while_mul_67_cmp_z_bfwt_11_177_0;
      while_mul_67_cmp_z_bfwt_13_177_0 <= while_mul_67_cmp_z_bfwt_12_177_0;
      while_mul_67_cmp_z_bfwt_14_177_0 <= while_mul_67_cmp_z_bfwt_13_177_0;
      while_mul_67_cmp_z_bfwt_15_177_0 <= while_mul_67_cmp_z_bfwt_14_177_0;
    end
  end
  assign nl_while_acc_45_nl = while_mul_67_cmp_bcwt + 4'b1111;
  assign while_acc_45_nl = nl_while_acc_45_nl[3:0];
  assign nl_while_acc_46_nl = conv_u2u_1_2(~ while_mul_67_cmp_bdwt) + conv_u2u_1_2(while_mul_67_cmp_biwt);
  assign while_acc_46_nl = nl_while_acc_46_nl[1:0];
  assign nl_while_mul_67_cmp_bcwt  = while_acc_45_nl + conv_u2u_2_4(while_acc_46_nl);
  assign nl_while_acc_48_nl = while_mul_67_cmp_bcwt_1 + 4'b1111;
  assign while_acc_48_nl = nl_while_acc_48_nl[3:0];
  assign nl_while_acc_49_nl = conv_u2u_1_2(~ while_mul_67_cmp_bdwt_2) + conv_u2u_1_2(while_mul_67_cmp_biwt_2);
  assign while_acc_49_nl = nl_while_acc_49_nl[1:0];
  assign nl_while_mul_67_cmp_bcwt_1  = while_acc_48_nl + conv_u2u_2_4(while_acc_49_nl);

  function automatic [177:0] MUX_v_178_9_2;
    input [177:0] input_0;
    input [177:0] input_1;
    input [177:0] input_2;
    input [177:0] input_3;
    input [177:0] input_4;
    input [177:0] input_5;
    input [177:0] input_6;
    input [177:0] input_7;
    input [177:0] input_8;
    input [3:0] sel;
    reg [177:0] result;
  begin
    case (sel)
      4'b0000 : begin
        result = input_0;
      end
      4'b0001 : begin
        result = input_1;
      end
      4'b0010 : begin
        result = input_2;
      end
      4'b0011 : begin
        result = input_3;
      end
      4'b0100 : begin
        result = input_4;
      end
      4'b0101 : begin
        result = input_5;
      end
      4'b0110 : begin
        result = input_6;
      end
      4'b0111 : begin
        result = input_7;
      end
      default : begin
        result = input_8;
      end
    endcase
    MUX_v_178_9_2 = result;
  end
  endfunction


  function automatic [207:0] MUX_v_208_9_2;
    input [207:0] input_0;
    input [207:0] input_1;
    input [207:0] input_2;
    input [207:0] input_3;
    input [207:0] input_4;
    input [207:0] input_5;
    input [207:0] input_6;
    input [207:0] input_7;
    input [207:0] input_8;
    input [3:0] sel;
    reg [207:0] result;
  begin
    case (sel)
      4'b0000 : begin
        result = input_0;
      end
      4'b0001 : begin
        result = input_1;
      end
      4'b0010 : begin
        result = input_2;
      end
      4'b0011 : begin
        result = input_3;
      end
      4'b0100 : begin
        result = input_4;
      end
      4'b0101 : begin
        result = input_5;
      end
      4'b0110 : begin
        result = input_6;
      end
      4'b0111 : begin
        result = input_7;
      end
      default : begin
        result = input_8;
      end
    endcase
    MUX_v_208_9_2 = result;
  end
  endfunction


  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [3:0] conv_u2u_2_4 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_4 = {{2{1'b0}}, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_67_cmp_mgc_mul_pipe_64_1_177_1_208_1_1_0_0_8_1_wait_ctrl
// ------------------------------------------------------------------


module Rotate_run_while_mul_67_cmp_mgc_mul_pipe_64_1_177_1_208_1_1_0_0_8_1_wait_ctrl
    (
  clk, rst, run_wen, run_wten, while_mul_67_cmp_oswt_unreg, while_mul_67_cmp_iswt7,
      while_mul_67_cmp_iden_1, while_mul_67_cmp_oswt_unreg_1, while_mul_67_cmp_iswt7_1,
      while_mul_67_cmp_iden_3, run_cgwt_8, while_mul_67_cmp_bdwt, while_mul_67_cmp_bdwt_2,
      while_mul_67_cmp_iswt7_1_pff, while_mul_67_cmp_iswt7_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_67_cmp_oswt_unreg;
  input while_mul_67_cmp_iswt7;
  output while_mul_67_cmp_iden_1;
  input while_mul_67_cmp_oswt_unreg_1;
  input while_mul_67_cmp_iswt7_1;
  output while_mul_67_cmp_iden_3;
  output run_cgwt_8;
  output while_mul_67_cmp_bdwt;
  output while_mul_67_cmp_bdwt_2;
  input while_mul_67_cmp_iswt7_1_pff;
  input while_mul_67_cmp_iswt7_pff;


  // Interconnect Declarations
  wire while_mul_67_cmp_ogwt;
  wire while_mul_67_cmp_tiswt7;
  reg while_mul_67_cmp_hile_mul_67_cmp_pdswt6;
  reg while_mul_67_cmp_hile_mul_67_cmp_pdswt5;
  reg while_mul_67_cmp_hile_mul_67_cmp_pdswt4;
  reg while_mul_67_cmp_hile_mul_67_cmp_pdswt3;
  reg while_mul_67_cmp_hile_mul_67_cmp_pdswt2;
  reg while_mul_67_cmp_hile_mul_67_cmp_pdswt1;
  reg while_mul_67_cmp_hile_mul_67_cmp_pdswt0;
  reg [3:0] while_mul_67_cmp_icwt;
  wire [4:0] nl_while_mul_67_cmp_icwt;
  wire while_mul_67_cmp_ogwt_1;
  wire while_mul_67_cmp_tiswt7_1;
  reg while_mul_67_cmp_hile_mul_67_cmp_pdswt6_1;
  reg while_mul_67_cmp_hile_mul_67_cmp_pdswt5_1;
  reg while_mul_67_cmp_hile_mul_67_cmp_pdswt4_1;
  reg while_mul_67_cmp_hile_mul_67_cmp_pdswt3_1;
  reg while_mul_67_cmp_hile_mul_67_cmp_pdswt2_1;
  reg while_mul_67_cmp_hile_mul_67_cmp_pdswt1_1;
  reg while_mul_67_cmp_hile_mul_67_cmp_pdswt0_1;
  reg [3:0] while_mul_67_cmp_icwt_1;
  wire [4:0] nl_while_mul_67_cmp_icwt_1;

  wire[3:0] while_acc_46_nl;
  wire[4:0] nl_while_acc_46_nl;
  wire[1:0] while_acc_47_nl;
  wire[2:0] nl_while_acc_47_nl;
  wire[3:0] while_acc_49_nl;
  wire[4:0] nl_while_acc_49_nl;
  wire[1:0] while_acc_50_nl;
  wire[2:0] nl_while_acc_50_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_67_cmp_bdwt = while_mul_67_cmp_oswt_unreg & run_wen;
  assign while_mul_67_cmp_tiswt7 = (~ run_wten) & while_mul_67_cmp_iswt7;
  assign while_mul_67_cmp_iden_1 = while_mul_67_cmp_ogwt;
  assign while_mul_67_cmp_ogwt = while_mul_67_cmp_hile_mul_67_cmp_pdswt0 | (while_mul_67_cmp_icwt!=4'b0000);
  assign while_mul_67_cmp_bdwt_2 = while_mul_67_cmp_oswt_unreg_1 & run_wen;
  assign while_mul_67_cmp_tiswt7_1 = (~ run_wten) & while_mul_67_cmp_iswt7_1;
  assign while_mul_67_cmp_iden_3 = while_mul_67_cmp_ogwt_1;
  assign while_mul_67_cmp_ogwt_1 = while_mul_67_cmp_hile_mul_67_cmp_pdswt0_1 | (while_mul_67_cmp_icwt_1!=4'b0000);
  assign run_cgwt_8 = while_mul_67_cmp_ogwt_1 | while_mul_67_cmp_tiswt7_1 | while_mul_67_cmp_hile_mul_67_cmp_pdswt6_1
      | while_mul_67_cmp_hile_mul_67_cmp_pdswt5_1 | while_mul_67_cmp_hile_mul_67_cmp_pdswt4_1
      | while_mul_67_cmp_hile_mul_67_cmp_pdswt3_1 | while_mul_67_cmp_hile_mul_67_cmp_pdswt2_1
      | while_mul_67_cmp_hile_mul_67_cmp_pdswt1_1 | while_mul_67_cmp_ogwt | while_mul_67_cmp_tiswt7
      | while_mul_67_cmp_hile_mul_67_cmp_pdswt6 | while_mul_67_cmp_hile_mul_67_cmp_pdswt5
      | while_mul_67_cmp_hile_mul_67_cmp_pdswt4 | while_mul_67_cmp_hile_mul_67_cmp_pdswt3
      | while_mul_67_cmp_hile_mul_67_cmp_pdswt2 | while_mul_67_cmp_hile_mul_67_cmp_pdswt1
      | (run_wen & while_mul_67_cmp_iswt7_1_pff) | (run_wen & while_mul_67_cmp_iswt7_pff);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_67_cmp_hile_mul_67_cmp_pdswt6 <= 1'b0;
      while_mul_67_cmp_hile_mul_67_cmp_pdswt5 <= 1'b0;
      while_mul_67_cmp_hile_mul_67_cmp_pdswt4 <= 1'b0;
      while_mul_67_cmp_hile_mul_67_cmp_pdswt3 <= 1'b0;
      while_mul_67_cmp_hile_mul_67_cmp_pdswt2 <= 1'b0;
      while_mul_67_cmp_hile_mul_67_cmp_pdswt1 <= 1'b0;
      while_mul_67_cmp_hile_mul_67_cmp_pdswt0 <= 1'b0;
      while_mul_67_cmp_icwt <= 4'b0000;
      while_mul_67_cmp_hile_mul_67_cmp_pdswt6_1 <= 1'b0;
      while_mul_67_cmp_hile_mul_67_cmp_pdswt5_1 <= 1'b0;
      while_mul_67_cmp_hile_mul_67_cmp_pdswt4_1 <= 1'b0;
      while_mul_67_cmp_hile_mul_67_cmp_pdswt3_1 <= 1'b0;
      while_mul_67_cmp_hile_mul_67_cmp_pdswt2_1 <= 1'b0;
      while_mul_67_cmp_hile_mul_67_cmp_pdswt1_1 <= 1'b0;
      while_mul_67_cmp_hile_mul_67_cmp_pdswt0_1 <= 1'b0;
      while_mul_67_cmp_icwt_1 <= 4'b0000;
    end
    else begin
      while_mul_67_cmp_hile_mul_67_cmp_pdswt6 <= while_mul_67_cmp_tiswt7;
      while_mul_67_cmp_hile_mul_67_cmp_pdswt5 <= while_mul_67_cmp_hile_mul_67_cmp_pdswt6;
      while_mul_67_cmp_hile_mul_67_cmp_pdswt4 <= while_mul_67_cmp_hile_mul_67_cmp_pdswt5;
      while_mul_67_cmp_hile_mul_67_cmp_pdswt3 <= while_mul_67_cmp_hile_mul_67_cmp_pdswt4;
      while_mul_67_cmp_hile_mul_67_cmp_pdswt2 <= while_mul_67_cmp_hile_mul_67_cmp_pdswt3;
      while_mul_67_cmp_hile_mul_67_cmp_pdswt1 <= while_mul_67_cmp_hile_mul_67_cmp_pdswt2;
      while_mul_67_cmp_hile_mul_67_cmp_pdswt0 <= while_mul_67_cmp_hile_mul_67_cmp_pdswt1;
      while_mul_67_cmp_icwt <= nl_while_mul_67_cmp_icwt[3:0];
      while_mul_67_cmp_hile_mul_67_cmp_pdswt6_1 <= while_mul_67_cmp_tiswt7_1;
      while_mul_67_cmp_hile_mul_67_cmp_pdswt5_1 <= while_mul_67_cmp_hile_mul_67_cmp_pdswt6_1;
      while_mul_67_cmp_hile_mul_67_cmp_pdswt4_1 <= while_mul_67_cmp_hile_mul_67_cmp_pdswt5_1;
      while_mul_67_cmp_hile_mul_67_cmp_pdswt3_1 <= while_mul_67_cmp_hile_mul_67_cmp_pdswt4_1;
      while_mul_67_cmp_hile_mul_67_cmp_pdswt2_1 <= while_mul_67_cmp_hile_mul_67_cmp_pdswt3_1;
      while_mul_67_cmp_hile_mul_67_cmp_pdswt1_1 <= while_mul_67_cmp_hile_mul_67_cmp_pdswt2_1;
      while_mul_67_cmp_hile_mul_67_cmp_pdswt0_1 <= while_mul_67_cmp_hile_mul_67_cmp_pdswt1_1;
      while_mul_67_cmp_icwt_1 <= nl_while_mul_67_cmp_icwt_1[3:0];
    end
  end
  assign nl_while_acc_46_nl = while_mul_67_cmp_icwt + 4'b1111;
  assign while_acc_46_nl = nl_while_acc_46_nl[3:0];
  assign nl_while_acc_47_nl = conv_u2u_1_2(while_mul_67_cmp_hile_mul_67_cmp_pdswt0)
      + conv_u2u_1_2(~ while_mul_67_cmp_ogwt);
  assign while_acc_47_nl = nl_while_acc_47_nl[1:0];
  assign nl_while_mul_67_cmp_icwt  = while_acc_46_nl + conv_u2u_2_4(while_acc_47_nl);
  assign nl_while_acc_49_nl = while_mul_67_cmp_icwt_1 + 4'b1111;
  assign while_acc_49_nl = nl_while_acc_49_nl[3:0];
  assign nl_while_acc_50_nl = conv_u2u_1_2(while_mul_67_cmp_hile_mul_67_cmp_pdswt0_1)
      + conv_u2u_1_2(~ while_mul_67_cmp_ogwt_1);
  assign while_acc_50_nl = nl_while_acc_50_nl[1:0];
  assign nl_while_mul_67_cmp_icwt_1  = while_acc_49_nl + conv_u2u_2_4(while_acc_50_nl);

  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [3:0] conv_u2u_2_4 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_4 = {{2{1'b0}}, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_while_mul_cmp_mgc_mul_pipe_64_1_240_1_256_1_1_0_0_10_1_wait_dp
// ------------------------------------------------------------------


module Rotate_run_while_while_mul_cmp_mgc_mul_pipe_64_1_240_1_256_1_1_0_0_10_1_wait_dp
    (
  clk, rst, while_while_mul_cmp_bawt, while_while_mul_cmp_iden, while_while_mul_cmp_iden_2,
      while_while_mul_cmp_z_mxwt, while_while_mul_cmp_z_mxwt_1, while_while_mul_cmp_biwt,
      while_while_mul_cmp_bdwt, while_while_mul_cmp_biwt_2, while_while_mul_cmp_bdwt_2,
      while_while_mul_cmp_z
);
  input clk;
  input rst;
  output while_while_mul_cmp_bawt;
  output while_while_mul_cmp_iden;
  output while_while_mul_cmp_iden_2;
  output [255:0] while_while_mul_cmp_z_mxwt;
  output [255:0] while_while_mul_cmp_z_mxwt_1;
  input while_while_mul_cmp_biwt;
  input while_while_mul_cmp_bdwt;
  input while_while_mul_cmp_biwt_2;
  input while_while_mul_cmp_bdwt_2;
  input [255:0] while_while_mul_cmp_z;


  // Interconnect Declarations
  reg [3:0] while_while_mul_cmp_bcwt;
  wire [4:0] nl_while_while_mul_cmp_bcwt;
  reg [3:0] while_while_mul_cmp_bcwt_1;
  wire [4:0] nl_while_while_mul_cmp_bcwt_1;
  reg [255:0] while_while_mul_cmp_z_bfwt;
  reg [255:0] while_while_mul_cmp_z_bfwt_1;
  reg [255:0] while_while_mul_cmp_z_bfwt_2;
  reg [255:0] while_while_mul_cmp_z_bfwt_3;
  reg [255:0] while_while_mul_cmp_z_bfwt_4;
  reg [255:0] while_while_mul_cmp_z_bfwt_5;
  reg [255:0] while_while_mul_cmp_z_bfwt_6;
  reg [255:0] while_while_mul_cmp_z_bfwt_7;
  reg [255:0] while_while_mul_cmp_z_bfwt_8;
  reg [255:0] while_while_mul_cmp_z_bfwt_9;
  reg [255:0] while_while_mul_cmp_z_bfwt_10;
  reg [255:0] while_while_mul_cmp_z_bfwt_11;
  reg [255:0] while_while_mul_cmp_z_bfwt_12;
  reg [255:0] while_while_mul_cmp_z_bfwt_13;
  reg [255:0] while_while_mul_cmp_z_bfwt_14;
  reg [255:0] while_while_mul_cmp_z_bfwt_15;
  reg [255:0] while_while_mul_cmp_z_bfwt_16;
  reg [255:0] while_while_mul_cmp_z_bfwt_17;
  reg [255:0] while_while_mul_cmp_z_bfwt_18;
  reg [255:0] while_while_mul_cmp_z_bfwt_19;

  wire[3:0] while_acc_41_nl;
  wire[4:0] nl_while_acc_41_nl;
  wire[1:0] while_acc_42_nl;
  wire[2:0] nl_while_acc_42_nl;
  wire[3:0] while_acc_44_nl;
  wire[4:0] nl_while_acc_44_nl;
  wire[1:0] while_acc_45_nl;
  wire[2:0] nl_while_acc_45_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_while_mul_cmp_iden = while_while_mul_cmp_biwt | while_while_mul_cmp_bdwt;
  assign while_while_mul_cmp_bawt = while_while_mul_cmp_biwt | (while_while_mul_cmp_bcwt!=4'b0000);
  assign while_while_mul_cmp_iden_2 = while_while_mul_cmp_biwt_2 | while_while_mul_cmp_bdwt_2;
  assign while_while_mul_cmp_z_mxwt = MUX_v_256_11_2(while_while_mul_cmp_z, while_while_mul_cmp_z_bfwt,
      while_while_mul_cmp_z_bfwt_1, while_while_mul_cmp_z_bfwt_2, while_while_mul_cmp_z_bfwt_3,
      while_while_mul_cmp_z_bfwt_4, while_while_mul_cmp_z_bfwt_5, while_while_mul_cmp_z_bfwt_6,
      while_while_mul_cmp_z_bfwt_7, while_while_mul_cmp_z_bfwt_8, while_while_mul_cmp_z_bfwt_9,
      while_while_mul_cmp_bcwt_1);
  assign while_while_mul_cmp_z_mxwt_1 = MUX_v_256_11_2(while_while_mul_cmp_z, while_while_mul_cmp_z_bfwt_10,
      while_while_mul_cmp_z_bfwt_11, while_while_mul_cmp_z_bfwt_12, while_while_mul_cmp_z_bfwt_13,
      while_while_mul_cmp_z_bfwt_14, while_while_mul_cmp_z_bfwt_15, while_while_mul_cmp_z_bfwt_16,
      while_while_mul_cmp_z_bfwt_17, while_while_mul_cmp_z_bfwt_18, while_while_mul_cmp_z_bfwt_19,
      while_while_mul_cmp_bcwt);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_while_mul_cmp_bcwt <= 4'b0000;
      while_while_mul_cmp_bcwt_1 <= 4'b0000;
    end
    else begin
      while_while_mul_cmp_bcwt <= nl_while_while_mul_cmp_bcwt[3:0];
      while_while_mul_cmp_bcwt_1 <= nl_while_while_mul_cmp_bcwt_1[3:0];
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_while_mul_cmp_z_bfwt <= 256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_while_mul_cmp_z_bfwt_1 <= 256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_while_mul_cmp_z_bfwt_2 <= 256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_while_mul_cmp_z_bfwt_3 <= 256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_while_mul_cmp_z_bfwt_4 <= 256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_while_mul_cmp_z_bfwt_5 <= 256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_while_mul_cmp_z_bfwt_6 <= 256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_while_mul_cmp_z_bfwt_7 <= 256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_while_mul_cmp_z_bfwt_8 <= 256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_while_mul_cmp_z_bfwt_9 <= 256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_while_mul_cmp_biwt_2 ) begin
      while_while_mul_cmp_z_bfwt <= while_while_mul_cmp_z;
      while_while_mul_cmp_z_bfwt_1 <= while_while_mul_cmp_z_bfwt;
      while_while_mul_cmp_z_bfwt_2 <= while_while_mul_cmp_z_bfwt_1;
      while_while_mul_cmp_z_bfwt_3 <= while_while_mul_cmp_z_bfwt_2;
      while_while_mul_cmp_z_bfwt_4 <= while_while_mul_cmp_z_bfwt_3;
      while_while_mul_cmp_z_bfwt_5 <= while_while_mul_cmp_z_bfwt_4;
      while_while_mul_cmp_z_bfwt_6 <= while_while_mul_cmp_z_bfwt_5;
      while_while_mul_cmp_z_bfwt_7 <= while_while_mul_cmp_z_bfwt_6;
      while_while_mul_cmp_z_bfwt_8 <= while_while_mul_cmp_z_bfwt_7;
      while_while_mul_cmp_z_bfwt_9 <= while_while_mul_cmp_z_bfwt_8;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_while_mul_cmp_z_bfwt_10 <= 256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_while_mul_cmp_z_bfwt_11 <= 256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_while_mul_cmp_z_bfwt_12 <= 256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_while_mul_cmp_z_bfwt_13 <= 256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_while_mul_cmp_z_bfwt_14 <= 256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_while_mul_cmp_z_bfwt_15 <= 256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_while_mul_cmp_z_bfwt_16 <= 256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_while_mul_cmp_z_bfwt_17 <= 256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_while_mul_cmp_z_bfwt_18 <= 256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_while_mul_cmp_z_bfwt_19 <= 256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_while_mul_cmp_biwt ) begin
      while_while_mul_cmp_z_bfwt_10 <= while_while_mul_cmp_z;
      while_while_mul_cmp_z_bfwt_11 <= while_while_mul_cmp_z_bfwt_10;
      while_while_mul_cmp_z_bfwt_12 <= while_while_mul_cmp_z_bfwt_11;
      while_while_mul_cmp_z_bfwt_13 <= while_while_mul_cmp_z_bfwt_12;
      while_while_mul_cmp_z_bfwt_14 <= while_while_mul_cmp_z_bfwt_13;
      while_while_mul_cmp_z_bfwt_15 <= while_while_mul_cmp_z_bfwt_14;
      while_while_mul_cmp_z_bfwt_16 <= while_while_mul_cmp_z_bfwt_15;
      while_while_mul_cmp_z_bfwt_17 <= while_while_mul_cmp_z_bfwt_16;
      while_while_mul_cmp_z_bfwt_18 <= while_while_mul_cmp_z_bfwt_17;
      while_while_mul_cmp_z_bfwt_19 <= while_while_mul_cmp_z_bfwt_18;
    end
  end
  assign nl_while_acc_41_nl = while_while_mul_cmp_bcwt + 4'b1111;
  assign while_acc_41_nl = nl_while_acc_41_nl[3:0];
  assign nl_while_acc_42_nl = conv_u2u_1_2(~ while_while_mul_cmp_bdwt) + conv_u2u_1_2(while_while_mul_cmp_biwt);
  assign while_acc_42_nl = nl_while_acc_42_nl[1:0];
  assign nl_while_while_mul_cmp_bcwt  = while_acc_41_nl + conv_u2u_2_4(while_acc_42_nl);
  assign nl_while_acc_44_nl = while_while_mul_cmp_bcwt_1 + 4'b1111;
  assign while_acc_44_nl = nl_while_acc_44_nl[3:0];
  assign nl_while_acc_45_nl = conv_u2u_1_2(~ while_while_mul_cmp_bdwt_2) + conv_u2u_1_2(while_while_mul_cmp_biwt_2);
  assign while_acc_45_nl = nl_while_acc_45_nl[1:0];
  assign nl_while_while_mul_cmp_bcwt_1  = while_acc_44_nl + conv_u2u_2_4(while_acc_45_nl);

  function automatic [255:0] MUX_v_256_11_2;
    input [255:0] input_0;
    input [255:0] input_1;
    input [255:0] input_2;
    input [255:0] input_3;
    input [255:0] input_4;
    input [255:0] input_5;
    input [255:0] input_6;
    input [255:0] input_7;
    input [255:0] input_8;
    input [255:0] input_9;
    input [255:0] input_10;
    input [3:0] sel;
    reg [255:0] result;
  begin
    case (sel)
      4'b0000 : begin
        result = input_0;
      end
      4'b0001 : begin
        result = input_1;
      end
      4'b0010 : begin
        result = input_2;
      end
      4'b0011 : begin
        result = input_3;
      end
      4'b0100 : begin
        result = input_4;
      end
      4'b0101 : begin
        result = input_5;
      end
      4'b0110 : begin
        result = input_6;
      end
      4'b0111 : begin
        result = input_7;
      end
      4'b1000 : begin
        result = input_8;
      end
      4'b1001 : begin
        result = input_9;
      end
      default : begin
        result = input_10;
      end
    endcase
    MUX_v_256_11_2 = result;
  end
  endfunction


  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [3:0] conv_u2u_2_4 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_4 = {{2{1'b0}}, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_while_mul_cmp_mgc_mul_pipe_64_1_240_1_256_1_1_0_0_10_1_wait_ctrl
// ------------------------------------------------------------------


module Rotate_run_while_while_mul_cmp_mgc_mul_pipe_64_1_240_1_256_1_1_0_0_10_1_wait_ctrl
    (
  clk, rst, run_wen, run_wten, while_while_mul_cmp_oswt_unreg, while_while_mul_cmp_iswt9,
      while_while_mul_cmp_iden_1, while_while_mul_cmp_oswt_unreg_1, while_while_mul_cmp_iswt9_1,
      while_while_mul_cmp_iden_3, run_cgwt_7, while_while_mul_cmp_bdwt, while_while_mul_cmp_bdwt_2,
      while_while_mul_cmp_iswt9_1_pff, while_while_mul_cmp_iswt9_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_while_mul_cmp_oswt_unreg;
  input while_while_mul_cmp_iswt9;
  output while_while_mul_cmp_iden_1;
  input while_while_mul_cmp_oswt_unreg_1;
  input while_while_mul_cmp_iswt9_1;
  output while_while_mul_cmp_iden_3;
  output run_cgwt_7;
  output while_while_mul_cmp_bdwt;
  output while_while_mul_cmp_bdwt_2;
  input while_while_mul_cmp_iswt9_1_pff;
  input while_while_mul_cmp_iswt9_pff;


  // Interconnect Declarations
  wire while_while_mul_cmp_ogwt;
  wire while_while_mul_cmp_tiswt9;
  reg while_while_mul_cmp_hile_while_mul_cmp_pdswt8;
  reg while_while_mul_cmp_hile_while_mul_cmp_pdswt7;
  reg while_while_mul_cmp_hile_while_mul_cmp_pdswt6;
  reg while_while_mul_cmp_hile_while_mul_cmp_pdswt5;
  reg while_while_mul_cmp_hile_while_mul_cmp_pdswt4;
  reg while_while_mul_cmp_hile_while_mul_cmp_pdswt3;
  reg while_while_mul_cmp_hile_while_mul_cmp_pdswt2;
  reg while_while_mul_cmp_hile_while_mul_cmp_pdswt1;
  reg while_while_mul_cmp_hile_while_mul_cmp_pdswt0;
  reg [3:0] while_while_mul_cmp_icwt;
  wire [4:0] nl_while_while_mul_cmp_icwt;
  wire while_while_mul_cmp_ogwt_1;
  wire while_while_mul_cmp_tiswt9_1;
  reg while_while_mul_cmp_hile_while_mul_cmp_pdswt8_1;
  reg while_while_mul_cmp_hile_while_mul_cmp_pdswt7_1;
  reg while_while_mul_cmp_hile_while_mul_cmp_pdswt6_1;
  reg while_while_mul_cmp_hile_while_mul_cmp_pdswt5_1;
  reg while_while_mul_cmp_hile_while_mul_cmp_pdswt4_1;
  reg while_while_mul_cmp_hile_while_mul_cmp_pdswt3_1;
  reg while_while_mul_cmp_hile_while_mul_cmp_pdswt2_1;
  reg while_while_mul_cmp_hile_while_mul_cmp_pdswt1_1;
  reg while_while_mul_cmp_hile_while_mul_cmp_pdswt0_1;
  reg [3:0] while_while_mul_cmp_icwt_1;
  wire [4:0] nl_while_while_mul_cmp_icwt_1;

  wire[3:0] while_acc_42_nl;
  wire[4:0] nl_while_acc_42_nl;
  wire[1:0] while_acc_43_nl;
  wire[2:0] nl_while_acc_43_nl;
  wire[3:0] while_acc_45_nl;
  wire[4:0] nl_while_acc_45_nl;
  wire[1:0] while_acc_46_nl;
  wire[2:0] nl_while_acc_46_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_while_mul_cmp_bdwt = while_while_mul_cmp_oswt_unreg & run_wen;
  assign while_while_mul_cmp_tiswt9 = (~ run_wten) & while_while_mul_cmp_iswt9;
  assign while_while_mul_cmp_iden_1 = while_while_mul_cmp_ogwt;
  assign while_while_mul_cmp_ogwt = while_while_mul_cmp_hile_while_mul_cmp_pdswt0
      | (while_while_mul_cmp_icwt!=4'b0000);
  assign while_while_mul_cmp_bdwt_2 = while_while_mul_cmp_oswt_unreg_1 & run_wen;
  assign while_while_mul_cmp_tiswt9_1 = (~ run_wten) & while_while_mul_cmp_iswt9_1;
  assign while_while_mul_cmp_iden_3 = while_while_mul_cmp_ogwt_1;
  assign while_while_mul_cmp_ogwt_1 = while_while_mul_cmp_hile_while_mul_cmp_pdswt0_1
      | (while_while_mul_cmp_icwt_1!=4'b0000);
  assign run_cgwt_7 = while_while_mul_cmp_ogwt_1 | while_while_mul_cmp_tiswt9_1 |
      while_while_mul_cmp_hile_while_mul_cmp_pdswt8_1 | while_while_mul_cmp_hile_while_mul_cmp_pdswt7_1
      | while_while_mul_cmp_hile_while_mul_cmp_pdswt6_1 | while_while_mul_cmp_hile_while_mul_cmp_pdswt5_1
      | while_while_mul_cmp_hile_while_mul_cmp_pdswt4_1 | while_while_mul_cmp_hile_while_mul_cmp_pdswt3_1
      | while_while_mul_cmp_hile_while_mul_cmp_pdswt2_1 | while_while_mul_cmp_hile_while_mul_cmp_pdswt1_1
      | while_while_mul_cmp_ogwt | while_while_mul_cmp_tiswt9 | while_while_mul_cmp_hile_while_mul_cmp_pdswt8
      | while_while_mul_cmp_hile_while_mul_cmp_pdswt7 | while_while_mul_cmp_hile_while_mul_cmp_pdswt6
      | while_while_mul_cmp_hile_while_mul_cmp_pdswt5 | while_while_mul_cmp_hile_while_mul_cmp_pdswt4
      | while_while_mul_cmp_hile_while_mul_cmp_pdswt3 | while_while_mul_cmp_hile_while_mul_cmp_pdswt2
      | while_while_mul_cmp_hile_while_mul_cmp_pdswt1 | (run_wen & while_while_mul_cmp_iswt9_1_pff)
      | (run_wen & while_while_mul_cmp_iswt9_pff);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_while_mul_cmp_hile_while_mul_cmp_pdswt8 <= 1'b0;
      while_while_mul_cmp_hile_while_mul_cmp_pdswt7 <= 1'b0;
      while_while_mul_cmp_hile_while_mul_cmp_pdswt6 <= 1'b0;
      while_while_mul_cmp_hile_while_mul_cmp_pdswt5 <= 1'b0;
      while_while_mul_cmp_hile_while_mul_cmp_pdswt4 <= 1'b0;
      while_while_mul_cmp_hile_while_mul_cmp_pdswt3 <= 1'b0;
      while_while_mul_cmp_hile_while_mul_cmp_pdswt2 <= 1'b0;
      while_while_mul_cmp_hile_while_mul_cmp_pdswt1 <= 1'b0;
      while_while_mul_cmp_hile_while_mul_cmp_pdswt0 <= 1'b0;
      while_while_mul_cmp_icwt <= 4'b0000;
      while_while_mul_cmp_hile_while_mul_cmp_pdswt8_1 <= 1'b0;
      while_while_mul_cmp_hile_while_mul_cmp_pdswt7_1 <= 1'b0;
      while_while_mul_cmp_hile_while_mul_cmp_pdswt6_1 <= 1'b0;
      while_while_mul_cmp_hile_while_mul_cmp_pdswt5_1 <= 1'b0;
      while_while_mul_cmp_hile_while_mul_cmp_pdswt4_1 <= 1'b0;
      while_while_mul_cmp_hile_while_mul_cmp_pdswt3_1 <= 1'b0;
      while_while_mul_cmp_hile_while_mul_cmp_pdswt2_1 <= 1'b0;
      while_while_mul_cmp_hile_while_mul_cmp_pdswt1_1 <= 1'b0;
      while_while_mul_cmp_hile_while_mul_cmp_pdswt0_1 <= 1'b0;
      while_while_mul_cmp_icwt_1 <= 4'b0000;
    end
    else begin
      while_while_mul_cmp_hile_while_mul_cmp_pdswt8 <= while_while_mul_cmp_tiswt9;
      while_while_mul_cmp_hile_while_mul_cmp_pdswt7 <= while_while_mul_cmp_hile_while_mul_cmp_pdswt8;
      while_while_mul_cmp_hile_while_mul_cmp_pdswt6 <= while_while_mul_cmp_hile_while_mul_cmp_pdswt7;
      while_while_mul_cmp_hile_while_mul_cmp_pdswt5 <= while_while_mul_cmp_hile_while_mul_cmp_pdswt6;
      while_while_mul_cmp_hile_while_mul_cmp_pdswt4 <= while_while_mul_cmp_hile_while_mul_cmp_pdswt5;
      while_while_mul_cmp_hile_while_mul_cmp_pdswt3 <= while_while_mul_cmp_hile_while_mul_cmp_pdswt4;
      while_while_mul_cmp_hile_while_mul_cmp_pdswt2 <= while_while_mul_cmp_hile_while_mul_cmp_pdswt3;
      while_while_mul_cmp_hile_while_mul_cmp_pdswt1 <= while_while_mul_cmp_hile_while_mul_cmp_pdswt2;
      while_while_mul_cmp_hile_while_mul_cmp_pdswt0 <= while_while_mul_cmp_hile_while_mul_cmp_pdswt1;
      while_while_mul_cmp_icwt <= nl_while_while_mul_cmp_icwt[3:0];
      while_while_mul_cmp_hile_while_mul_cmp_pdswt8_1 <= while_while_mul_cmp_tiswt9_1;
      while_while_mul_cmp_hile_while_mul_cmp_pdswt7_1 <= while_while_mul_cmp_hile_while_mul_cmp_pdswt8_1;
      while_while_mul_cmp_hile_while_mul_cmp_pdswt6_1 <= while_while_mul_cmp_hile_while_mul_cmp_pdswt7_1;
      while_while_mul_cmp_hile_while_mul_cmp_pdswt5_1 <= while_while_mul_cmp_hile_while_mul_cmp_pdswt6_1;
      while_while_mul_cmp_hile_while_mul_cmp_pdswt4_1 <= while_while_mul_cmp_hile_while_mul_cmp_pdswt5_1;
      while_while_mul_cmp_hile_while_mul_cmp_pdswt3_1 <= while_while_mul_cmp_hile_while_mul_cmp_pdswt4_1;
      while_while_mul_cmp_hile_while_mul_cmp_pdswt2_1 <= while_while_mul_cmp_hile_while_mul_cmp_pdswt3_1;
      while_while_mul_cmp_hile_while_mul_cmp_pdswt1_1 <= while_while_mul_cmp_hile_while_mul_cmp_pdswt2_1;
      while_while_mul_cmp_hile_while_mul_cmp_pdswt0_1 <= while_while_mul_cmp_hile_while_mul_cmp_pdswt1_1;
      while_while_mul_cmp_icwt_1 <= nl_while_while_mul_cmp_icwt_1[3:0];
    end
  end
  assign nl_while_acc_42_nl = while_while_mul_cmp_icwt + 4'b1111;
  assign while_acc_42_nl = nl_while_acc_42_nl[3:0];
  assign nl_while_acc_43_nl = conv_u2u_1_2(while_while_mul_cmp_hile_while_mul_cmp_pdswt0)
      + conv_u2u_1_2(~ while_while_mul_cmp_ogwt);
  assign while_acc_43_nl = nl_while_acc_43_nl[1:0];
  assign nl_while_while_mul_cmp_icwt  = while_acc_42_nl + conv_u2u_2_4(while_acc_43_nl);
  assign nl_while_acc_45_nl = while_while_mul_cmp_icwt_1 + 4'b1111;
  assign while_acc_45_nl = nl_while_acc_45_nl[3:0];
  assign nl_while_acc_46_nl = conv_u2u_1_2(while_while_mul_cmp_hile_while_mul_cmp_pdswt0_1)
      + conv_u2u_1_2(~ while_while_mul_cmp_ogwt_1);
  assign while_acc_46_nl = nl_while_acc_46_nl[1:0];
  assign nl_while_while_mul_cmp_icwt_1  = while_acc_45_nl + conv_u2u_2_4(while_acc_46_nl);

  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [3:0] conv_u2u_2_4 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_4 = {{2{1'b0}}, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_70_cmp_mgc_mul_pipe_64_1_67_1_115_1_1_0_0_4_1_wait_dp
// ------------------------------------------------------------------


module Rotate_run_while_mul_70_cmp_mgc_mul_pipe_64_1_67_1_115_1_1_0_0_4_1_wait_dp
    (
  clk, rst, while_mul_70_cmp_bawt, while_mul_70_cmp_iden, while_mul_70_cmp_iden_2,
      while_mul_70_cmp_z_mxwt, while_mul_70_cmp_z_mxwt_1, while_mul_70_cmp_biwt,
      while_mul_70_cmp_bdwt, while_mul_70_cmp_biwt_2, while_mul_70_cmp_bdwt_2, while_mul_70_cmp_z
);
  input clk;
  input rst;
  output while_mul_70_cmp_bawt;
  output while_mul_70_cmp_iden;
  output while_mul_70_cmp_iden_2;
  output [113:0] while_mul_70_cmp_z_mxwt;
  output [114:0] while_mul_70_cmp_z_mxwt_1;
  input while_mul_70_cmp_biwt;
  input while_mul_70_cmp_bdwt;
  input while_mul_70_cmp_biwt_2;
  input while_mul_70_cmp_bdwt_2;
  input [114:0] while_mul_70_cmp_z;


  // Interconnect Declarations
  reg [2:0] while_mul_70_cmp_bcwt;
  wire [3:0] nl_while_mul_70_cmp_bcwt;
  reg [2:0] while_mul_70_cmp_bcwt_1;
  wire [3:0] nl_while_mul_70_cmp_bcwt_1;
  reg [114:0] while_mul_70_cmp_z_bfwt_4;
  reg [114:0] while_mul_70_cmp_z_bfwt_5;
  reg [114:0] while_mul_70_cmp_z_bfwt_6;
  reg [114:0] while_mul_70_cmp_z_bfwt_7;
  reg [113:0] while_mul_70_cmp_z_bfwt_3_113_0;
  reg [113:0] while_mul_70_cmp_z_bfwt_2_113_0;
  reg [113:0] while_mul_70_cmp_z_bfwt_1_113_0;
  reg [113:0] while_mul_70_cmp_z_bfwt_113_0;

  wire[2:0] while_acc_37_nl;
  wire[3:0] nl_while_acc_37_nl;
  wire[1:0] while_acc_38_nl;
  wire[2:0] nl_while_acc_38_nl;
  wire[2:0] while_acc_40_nl;
  wire[3:0] nl_while_acc_40_nl;
  wire[1:0] while_acc_41_nl;
  wire[2:0] nl_while_acc_41_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_70_cmp_iden = while_mul_70_cmp_biwt | while_mul_70_cmp_bdwt;
  assign while_mul_70_cmp_bawt = while_mul_70_cmp_biwt | (while_mul_70_cmp_bcwt!=3'b000);
  assign while_mul_70_cmp_iden_2 = while_mul_70_cmp_biwt_2 | while_mul_70_cmp_bdwt_2;
  assign while_mul_70_cmp_z_mxwt_1 = MUX_v_115_5_2(while_mul_70_cmp_z, while_mul_70_cmp_z_bfwt_4,
      while_mul_70_cmp_z_bfwt_5, while_mul_70_cmp_z_bfwt_6, while_mul_70_cmp_z_bfwt_7,
      while_mul_70_cmp_bcwt);
  assign while_mul_70_cmp_z_mxwt = MUX_v_114_5_2((while_mul_70_cmp_z[113:0]), while_mul_70_cmp_z_bfwt_113_0,
      while_mul_70_cmp_z_bfwt_1_113_0, while_mul_70_cmp_z_bfwt_2_113_0, while_mul_70_cmp_z_bfwt_3_113_0,
      while_mul_70_cmp_bcwt_1);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_70_cmp_bcwt <= 3'b000;
      while_mul_70_cmp_bcwt_1 <= 3'b000;
    end
    else begin
      while_mul_70_cmp_bcwt <= nl_while_mul_70_cmp_bcwt[2:0];
      while_mul_70_cmp_bcwt_1 <= nl_while_mul_70_cmp_bcwt_1[2:0];
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_70_cmp_z_bfwt_113_0 <= 114'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_70_cmp_z_bfwt_1_113_0 <= 114'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_70_cmp_z_bfwt_2_113_0 <= 114'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_70_cmp_z_bfwt_3_113_0 <= 114'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_70_cmp_biwt_2 ) begin
      while_mul_70_cmp_z_bfwt_113_0 <= while_mul_70_cmp_z[113:0];
      while_mul_70_cmp_z_bfwt_1_113_0 <= while_mul_70_cmp_z_bfwt_113_0;
      while_mul_70_cmp_z_bfwt_2_113_0 <= while_mul_70_cmp_z_bfwt_1_113_0;
      while_mul_70_cmp_z_bfwt_3_113_0 <= while_mul_70_cmp_z_bfwt_2_113_0;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_70_cmp_z_bfwt_4 <= 115'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_70_cmp_z_bfwt_5 <= 115'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_70_cmp_z_bfwt_6 <= 115'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_70_cmp_z_bfwt_7 <= 115'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_70_cmp_biwt ) begin
      while_mul_70_cmp_z_bfwt_4 <= while_mul_70_cmp_z;
      while_mul_70_cmp_z_bfwt_5 <= while_mul_70_cmp_z_bfwt_4;
      while_mul_70_cmp_z_bfwt_6 <= while_mul_70_cmp_z_bfwt_5;
      while_mul_70_cmp_z_bfwt_7 <= while_mul_70_cmp_z_bfwt_6;
    end
  end
  assign nl_while_acc_37_nl = while_mul_70_cmp_bcwt + 3'b111;
  assign while_acc_37_nl = nl_while_acc_37_nl[2:0];
  assign nl_while_acc_38_nl = conv_u2u_1_2(~ while_mul_70_cmp_bdwt) + conv_u2u_1_2(while_mul_70_cmp_biwt);
  assign while_acc_38_nl = nl_while_acc_38_nl[1:0];
  assign nl_while_mul_70_cmp_bcwt  = while_acc_37_nl + conv_u2u_2_3(while_acc_38_nl);
  assign nl_while_acc_40_nl = while_mul_70_cmp_bcwt_1 + 3'b111;
  assign while_acc_40_nl = nl_while_acc_40_nl[2:0];
  assign nl_while_acc_41_nl = conv_u2u_1_2(~ while_mul_70_cmp_bdwt_2) + conv_u2u_1_2(while_mul_70_cmp_biwt_2);
  assign while_acc_41_nl = nl_while_acc_41_nl[1:0];
  assign nl_while_mul_70_cmp_bcwt_1  = while_acc_40_nl + conv_u2u_2_3(while_acc_41_nl);

  function automatic [113:0] MUX_v_114_5_2;
    input [113:0] input_0;
    input [113:0] input_1;
    input [113:0] input_2;
    input [113:0] input_3;
    input [113:0] input_4;
    input [2:0] sel;
    reg [113:0] result;
  begin
    case (sel)
      3'b000 : begin
        result = input_0;
      end
      3'b001 : begin
        result = input_1;
      end
      3'b010 : begin
        result = input_2;
      end
      3'b011 : begin
        result = input_3;
      end
      default : begin
        result = input_4;
      end
    endcase
    MUX_v_114_5_2 = result;
  end
  endfunction


  function automatic [114:0] MUX_v_115_5_2;
    input [114:0] input_0;
    input [114:0] input_1;
    input [114:0] input_2;
    input [114:0] input_3;
    input [114:0] input_4;
    input [2:0] sel;
    reg [114:0] result;
  begin
    case (sel)
      3'b000 : begin
        result = input_0;
      end
      3'b001 : begin
        result = input_1;
      end
      3'b010 : begin
        result = input_2;
      end
      3'b011 : begin
        result = input_3;
      end
      default : begin
        result = input_4;
      end
    endcase
    MUX_v_115_5_2 = result;
  end
  endfunction


  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_70_cmp_mgc_mul_pipe_64_1_67_1_115_1_1_0_0_4_1_wait_ctrl
// ------------------------------------------------------------------


module Rotate_run_while_mul_70_cmp_mgc_mul_pipe_64_1_67_1_115_1_1_0_0_4_1_wait_ctrl
    (
  clk, rst, run_wen, run_wten, while_mul_70_cmp_oswt_unreg, while_mul_70_cmp_iswt3,
      while_mul_70_cmp_iden_1, while_mul_70_cmp_oswt_unreg_1, while_mul_70_cmp_iswt3_1,
      while_mul_70_cmp_iden_3, run_cgwt_6, while_mul_70_cmp_bdwt, while_mul_70_cmp_bdwt_2,
      while_mul_70_cmp_iswt3_1_pff, while_mul_70_cmp_iswt3_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_70_cmp_oswt_unreg;
  input while_mul_70_cmp_iswt3;
  output while_mul_70_cmp_iden_1;
  input while_mul_70_cmp_oswt_unreg_1;
  input while_mul_70_cmp_iswt3_1;
  output while_mul_70_cmp_iden_3;
  output run_cgwt_6;
  output while_mul_70_cmp_bdwt;
  output while_mul_70_cmp_bdwt_2;
  input while_mul_70_cmp_iswt3_1_pff;
  input while_mul_70_cmp_iswt3_pff;


  // Interconnect Declarations
  wire while_mul_70_cmp_ogwt;
  wire while_mul_70_cmp_tiswt3;
  reg while_mul_70_cmp_hile_mul_70_cmp_pdswt2;
  reg while_mul_70_cmp_hile_mul_70_cmp_pdswt1;
  reg while_mul_70_cmp_hile_mul_70_cmp_pdswt0;
  reg [2:0] while_mul_70_cmp_icwt;
  wire [3:0] nl_while_mul_70_cmp_icwt;
  wire while_mul_70_cmp_ogwt_1;
  wire while_mul_70_cmp_tiswt3_1;
  reg while_mul_70_cmp_hile_mul_70_cmp_pdswt2_1;
  reg while_mul_70_cmp_hile_mul_70_cmp_pdswt1_1;
  reg while_mul_70_cmp_hile_mul_70_cmp_pdswt0_1;
  reg [2:0] while_mul_70_cmp_icwt_1;
  wire [3:0] nl_while_mul_70_cmp_icwt_1;

  wire[2:0] while_acc_38_nl;
  wire[3:0] nl_while_acc_38_nl;
  wire[1:0] while_acc_39_nl;
  wire[2:0] nl_while_acc_39_nl;
  wire[2:0] while_acc_41_nl;
  wire[3:0] nl_while_acc_41_nl;
  wire[1:0] while_acc_42_nl;
  wire[2:0] nl_while_acc_42_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_70_cmp_bdwt = while_mul_70_cmp_oswt_unreg & run_wen;
  assign while_mul_70_cmp_tiswt3 = (~ run_wten) & while_mul_70_cmp_iswt3;
  assign while_mul_70_cmp_iden_1 = while_mul_70_cmp_ogwt;
  assign while_mul_70_cmp_ogwt = while_mul_70_cmp_hile_mul_70_cmp_pdswt0 | (while_mul_70_cmp_icwt!=3'b000);
  assign while_mul_70_cmp_bdwt_2 = while_mul_70_cmp_oswt_unreg_1 & run_wen;
  assign while_mul_70_cmp_tiswt3_1 = (~ run_wten) & while_mul_70_cmp_iswt3_1;
  assign while_mul_70_cmp_iden_3 = while_mul_70_cmp_ogwt_1;
  assign while_mul_70_cmp_ogwt_1 = while_mul_70_cmp_hile_mul_70_cmp_pdswt0_1 | (while_mul_70_cmp_icwt_1!=3'b000);
  assign run_cgwt_6 = while_mul_70_cmp_ogwt_1 | while_mul_70_cmp_tiswt3_1 | while_mul_70_cmp_hile_mul_70_cmp_pdswt2_1
      | while_mul_70_cmp_hile_mul_70_cmp_pdswt1_1 | while_mul_70_cmp_ogwt | while_mul_70_cmp_tiswt3
      | while_mul_70_cmp_hile_mul_70_cmp_pdswt2 | while_mul_70_cmp_hile_mul_70_cmp_pdswt1
      | (run_wen & while_mul_70_cmp_iswt3_1_pff) | (run_wen & while_mul_70_cmp_iswt3_pff);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_70_cmp_hile_mul_70_cmp_pdswt2 <= 1'b0;
      while_mul_70_cmp_hile_mul_70_cmp_pdswt1 <= 1'b0;
      while_mul_70_cmp_hile_mul_70_cmp_pdswt0 <= 1'b0;
      while_mul_70_cmp_icwt <= 3'b000;
      while_mul_70_cmp_hile_mul_70_cmp_pdswt2_1 <= 1'b0;
      while_mul_70_cmp_hile_mul_70_cmp_pdswt1_1 <= 1'b0;
      while_mul_70_cmp_hile_mul_70_cmp_pdswt0_1 <= 1'b0;
      while_mul_70_cmp_icwt_1 <= 3'b000;
    end
    else begin
      while_mul_70_cmp_hile_mul_70_cmp_pdswt2 <= while_mul_70_cmp_tiswt3;
      while_mul_70_cmp_hile_mul_70_cmp_pdswt1 <= while_mul_70_cmp_hile_mul_70_cmp_pdswt2;
      while_mul_70_cmp_hile_mul_70_cmp_pdswt0 <= while_mul_70_cmp_hile_mul_70_cmp_pdswt1;
      while_mul_70_cmp_icwt <= nl_while_mul_70_cmp_icwt[2:0];
      while_mul_70_cmp_hile_mul_70_cmp_pdswt2_1 <= while_mul_70_cmp_tiswt3_1;
      while_mul_70_cmp_hile_mul_70_cmp_pdswt1_1 <= while_mul_70_cmp_hile_mul_70_cmp_pdswt2_1;
      while_mul_70_cmp_hile_mul_70_cmp_pdswt0_1 <= while_mul_70_cmp_hile_mul_70_cmp_pdswt1_1;
      while_mul_70_cmp_icwt_1 <= nl_while_mul_70_cmp_icwt_1[2:0];
    end
  end
  assign nl_while_acc_38_nl = while_mul_70_cmp_icwt + 3'b111;
  assign while_acc_38_nl = nl_while_acc_38_nl[2:0];
  assign nl_while_acc_39_nl = conv_u2u_1_2(while_mul_70_cmp_hile_mul_70_cmp_pdswt0)
      + conv_u2u_1_2(~ while_mul_70_cmp_ogwt);
  assign while_acc_39_nl = nl_while_acc_39_nl[1:0];
  assign nl_while_mul_70_cmp_icwt  = while_acc_38_nl + conv_u2u_2_3(while_acc_39_nl);
  assign nl_while_acc_41_nl = while_mul_70_cmp_icwt_1 + 3'b111;
  assign while_acc_41_nl = nl_while_acc_41_nl[2:0];
  assign nl_while_acc_42_nl = conv_u2u_1_2(while_mul_70_cmp_hile_mul_70_cmp_pdswt0_1)
      + conv_u2u_1_2(~ while_mul_70_cmp_ogwt_1);
  assign while_acc_42_nl = nl_while_acc_42_nl[1:0];
  assign nl_while_mul_70_cmp_icwt_1  = while_acc_41_nl + conv_u2u_2_3(while_acc_42_nl);

  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_77_cmp_mgc_mul_pipe_66_1_112_1_178_1_1_0_0_6_1_wait_dp
// ------------------------------------------------------------------


module Rotate_run_while_mul_77_cmp_mgc_mul_pipe_66_1_112_1_178_1_1_0_0_6_1_wait_dp
    (
  clk, rst, while_mul_77_cmp_bawt, while_mul_77_cmp_iden, while_mul_77_cmp_iden_2,
      while_mul_77_cmp_iden_4, while_mul_77_cmp_z_mxwt, while_mul_77_cmp_z_mxwt_1,
      while_mul_77_cmp_z_mxwt_2, while_mul_77_cmp_biwt, while_mul_77_cmp_bdwt, while_mul_77_cmp_biwt_2,
      while_mul_77_cmp_bdwt_2, while_mul_77_cmp_biwt_4, while_mul_77_cmp_bdwt_4,
      while_mul_77_cmp_z
);
  input clk;
  input rst;
  output while_mul_77_cmp_bawt;
  output while_mul_77_cmp_iden;
  output while_mul_77_cmp_iden_2;
  output while_mul_77_cmp_iden_4;
  output [177:0] while_mul_77_cmp_z_mxwt;
  output [175:0] while_mul_77_cmp_z_mxwt_1;
  output [175:0] while_mul_77_cmp_z_mxwt_2;
  input while_mul_77_cmp_biwt;
  input while_mul_77_cmp_bdwt;
  input while_mul_77_cmp_biwt_2;
  input while_mul_77_cmp_bdwt_2;
  input while_mul_77_cmp_biwt_4;
  input while_mul_77_cmp_bdwt_4;
  input [177:0] while_mul_77_cmp_z;


  // Interconnect Declarations
  reg [2:0] while_mul_77_cmp_bcwt;
  wire [3:0] nl_while_mul_77_cmp_bcwt;
  reg [2:0] while_mul_77_cmp_bcwt_1;
  wire [3:0] nl_while_mul_77_cmp_bcwt_1;
  reg [2:0] while_mul_77_cmp_bcwt_2;
  wire [3:0] nl_while_mul_77_cmp_bcwt_2;
  reg [177:0] while_mul_77_cmp_z_bfwt;
  reg [177:0] while_mul_77_cmp_z_bfwt_1;
  reg [177:0] while_mul_77_cmp_z_bfwt_2;
  reg [177:0] while_mul_77_cmp_z_bfwt_3;
  reg [177:0] while_mul_77_cmp_z_bfwt_4;
  reg [177:0] while_mul_77_cmp_z_bfwt_5;
  reg [175:0] while_mul_77_cmp_z_bfwt_11_175_0;
  reg [175:0] while_mul_77_cmp_z_bfwt_17_175_0;
  reg [175:0] while_mul_77_cmp_z_bfwt_10_175_0;
  reg [175:0] while_mul_77_cmp_z_bfwt_16_175_0;
  reg [175:0] while_mul_77_cmp_z_bfwt_9_175_0;
  reg [175:0] while_mul_77_cmp_z_bfwt_15_175_0;
  reg [175:0] while_mul_77_cmp_z_bfwt_8_175_0;
  reg [175:0] while_mul_77_cmp_z_bfwt_14_175_0;
  reg [175:0] while_mul_77_cmp_z_bfwt_7_175_0;
  reg [175:0] while_mul_77_cmp_z_bfwt_13_175_0;
  reg [175:0] while_mul_77_cmp_z_bfwt_6_175_0;
  reg [175:0] while_mul_77_cmp_z_bfwt_12_175_0;

  wire[2:0] while_acc_33_nl;
  wire[3:0] nl_while_acc_33_nl;
  wire[1:0] while_acc_34_nl;
  wire[2:0] nl_while_acc_34_nl;
  wire[2:0] while_acc_36_nl;
  wire[3:0] nl_while_acc_36_nl;
  wire[1:0] while_acc_37_nl;
  wire[2:0] nl_while_acc_37_nl;
  wire[2:0] while_acc_39_nl;
  wire[3:0] nl_while_acc_39_nl;
  wire[1:0] while_acc_40_nl;
  wire[2:0] nl_while_acc_40_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_77_cmp_iden = while_mul_77_cmp_biwt | while_mul_77_cmp_bdwt;
  assign while_mul_77_cmp_bawt = while_mul_77_cmp_biwt | (while_mul_77_cmp_bcwt!=3'b000);
  assign while_mul_77_cmp_iden_2 = while_mul_77_cmp_biwt_2 | while_mul_77_cmp_bdwt_2;
  assign while_mul_77_cmp_iden_4 = while_mul_77_cmp_biwt_4 | while_mul_77_cmp_bdwt_4;
  assign while_mul_77_cmp_z_mxwt = MUX_v_178_7_2(while_mul_77_cmp_z, while_mul_77_cmp_z_bfwt,
      while_mul_77_cmp_z_bfwt_1, while_mul_77_cmp_z_bfwt_2, while_mul_77_cmp_z_bfwt_3,
      while_mul_77_cmp_z_bfwt_4, while_mul_77_cmp_z_bfwt_5, while_mul_77_cmp_bcwt_2);
  assign while_mul_77_cmp_z_mxwt_1 = MUX_v_176_7_2((while_mul_77_cmp_z[175:0]), while_mul_77_cmp_z_bfwt_6_175_0,
      while_mul_77_cmp_z_bfwt_7_175_0, while_mul_77_cmp_z_bfwt_8_175_0, while_mul_77_cmp_z_bfwt_9_175_0,
      while_mul_77_cmp_z_bfwt_10_175_0, while_mul_77_cmp_z_bfwt_11_175_0, while_mul_77_cmp_bcwt_1);
  assign while_mul_77_cmp_z_mxwt_2 = MUX_v_176_7_2((while_mul_77_cmp_z[175:0]), while_mul_77_cmp_z_bfwt_12_175_0,
      while_mul_77_cmp_z_bfwt_13_175_0, while_mul_77_cmp_z_bfwt_14_175_0, while_mul_77_cmp_z_bfwt_15_175_0,
      while_mul_77_cmp_z_bfwt_16_175_0, while_mul_77_cmp_z_bfwt_17_175_0, while_mul_77_cmp_bcwt);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_77_cmp_bcwt <= 3'b000;
      while_mul_77_cmp_bcwt_1 <= 3'b000;
      while_mul_77_cmp_bcwt_2 <= 3'b000;
    end
    else begin
      while_mul_77_cmp_bcwt <= nl_while_mul_77_cmp_bcwt[2:0];
      while_mul_77_cmp_bcwt_1 <= nl_while_mul_77_cmp_bcwt_1[2:0];
      while_mul_77_cmp_bcwt_2 <= nl_while_mul_77_cmp_bcwt_2[2:0];
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_77_cmp_z_bfwt <= 178'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_77_cmp_z_bfwt_1 <= 178'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_77_cmp_z_bfwt_2 <= 178'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_77_cmp_z_bfwt_3 <= 178'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_77_cmp_z_bfwt_4 <= 178'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_77_cmp_z_bfwt_5 <= 178'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_77_cmp_biwt_4 ) begin
      while_mul_77_cmp_z_bfwt <= while_mul_77_cmp_z;
      while_mul_77_cmp_z_bfwt_1 <= while_mul_77_cmp_z_bfwt;
      while_mul_77_cmp_z_bfwt_2 <= while_mul_77_cmp_z_bfwt_1;
      while_mul_77_cmp_z_bfwt_3 <= while_mul_77_cmp_z_bfwt_2;
      while_mul_77_cmp_z_bfwt_4 <= while_mul_77_cmp_z_bfwt_3;
      while_mul_77_cmp_z_bfwt_5 <= while_mul_77_cmp_z_bfwt_4;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_77_cmp_z_bfwt_6_175_0 <= 176'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_77_cmp_z_bfwt_7_175_0 <= 176'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_77_cmp_z_bfwt_8_175_0 <= 176'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_77_cmp_z_bfwt_9_175_0 <= 176'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_77_cmp_z_bfwt_10_175_0 <= 176'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_77_cmp_z_bfwt_11_175_0 <= 176'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_77_cmp_biwt_2 ) begin
      while_mul_77_cmp_z_bfwt_6_175_0 <= while_mul_77_cmp_z[175:0];
      while_mul_77_cmp_z_bfwt_7_175_0 <= while_mul_77_cmp_z_bfwt_6_175_0;
      while_mul_77_cmp_z_bfwt_8_175_0 <= while_mul_77_cmp_z_bfwt_7_175_0;
      while_mul_77_cmp_z_bfwt_9_175_0 <= while_mul_77_cmp_z_bfwt_8_175_0;
      while_mul_77_cmp_z_bfwt_10_175_0 <= while_mul_77_cmp_z_bfwt_9_175_0;
      while_mul_77_cmp_z_bfwt_11_175_0 <= while_mul_77_cmp_z_bfwt_10_175_0;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_77_cmp_z_bfwt_12_175_0 <= 176'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_77_cmp_z_bfwt_13_175_0 <= 176'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_77_cmp_z_bfwt_14_175_0 <= 176'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_77_cmp_z_bfwt_15_175_0 <= 176'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_77_cmp_z_bfwt_16_175_0 <= 176'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_77_cmp_z_bfwt_17_175_0 <= 176'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_77_cmp_biwt ) begin
      while_mul_77_cmp_z_bfwt_12_175_0 <= while_mul_77_cmp_z[175:0];
      while_mul_77_cmp_z_bfwt_13_175_0 <= while_mul_77_cmp_z_bfwt_12_175_0;
      while_mul_77_cmp_z_bfwt_14_175_0 <= while_mul_77_cmp_z_bfwt_13_175_0;
      while_mul_77_cmp_z_bfwt_15_175_0 <= while_mul_77_cmp_z_bfwt_14_175_0;
      while_mul_77_cmp_z_bfwt_16_175_0 <= while_mul_77_cmp_z_bfwt_15_175_0;
      while_mul_77_cmp_z_bfwt_17_175_0 <= while_mul_77_cmp_z_bfwt_16_175_0;
    end
  end
  assign nl_while_acc_33_nl = while_mul_77_cmp_bcwt + 3'b111;
  assign while_acc_33_nl = nl_while_acc_33_nl[2:0];
  assign nl_while_acc_34_nl = conv_u2u_1_2(~ while_mul_77_cmp_bdwt) + conv_u2u_1_2(while_mul_77_cmp_biwt);
  assign while_acc_34_nl = nl_while_acc_34_nl[1:0];
  assign nl_while_mul_77_cmp_bcwt  = while_acc_33_nl + conv_u2u_2_3(while_acc_34_nl);
  assign nl_while_acc_36_nl = while_mul_77_cmp_bcwt_1 + 3'b111;
  assign while_acc_36_nl = nl_while_acc_36_nl[2:0];
  assign nl_while_acc_37_nl = conv_u2u_1_2(~ while_mul_77_cmp_bdwt_2) + conv_u2u_1_2(while_mul_77_cmp_biwt_2);
  assign while_acc_37_nl = nl_while_acc_37_nl[1:0];
  assign nl_while_mul_77_cmp_bcwt_1  = while_acc_36_nl + conv_u2u_2_3(while_acc_37_nl);
  assign nl_while_acc_39_nl = while_mul_77_cmp_bcwt_2 + 3'b111;
  assign while_acc_39_nl = nl_while_acc_39_nl[2:0];
  assign nl_while_acc_40_nl = conv_u2u_1_2(~ while_mul_77_cmp_bdwt_4) + conv_u2u_1_2(while_mul_77_cmp_biwt_4);
  assign while_acc_40_nl = nl_while_acc_40_nl[1:0];
  assign nl_while_mul_77_cmp_bcwt_2  = while_acc_39_nl + conv_u2u_2_3(while_acc_40_nl);

  function automatic [175:0] MUX_v_176_7_2;
    input [175:0] input_0;
    input [175:0] input_1;
    input [175:0] input_2;
    input [175:0] input_3;
    input [175:0] input_4;
    input [175:0] input_5;
    input [175:0] input_6;
    input [2:0] sel;
    reg [175:0] result;
  begin
    case (sel)
      3'b000 : begin
        result = input_0;
      end
      3'b001 : begin
        result = input_1;
      end
      3'b010 : begin
        result = input_2;
      end
      3'b011 : begin
        result = input_3;
      end
      3'b100 : begin
        result = input_4;
      end
      3'b101 : begin
        result = input_5;
      end
      default : begin
        result = input_6;
      end
    endcase
    MUX_v_176_7_2 = result;
  end
  endfunction


  function automatic [177:0] MUX_v_178_7_2;
    input [177:0] input_0;
    input [177:0] input_1;
    input [177:0] input_2;
    input [177:0] input_3;
    input [177:0] input_4;
    input [177:0] input_5;
    input [177:0] input_6;
    input [2:0] sel;
    reg [177:0] result;
  begin
    case (sel)
      3'b000 : begin
        result = input_0;
      end
      3'b001 : begin
        result = input_1;
      end
      3'b010 : begin
        result = input_2;
      end
      3'b011 : begin
        result = input_3;
      end
      3'b100 : begin
        result = input_4;
      end
      3'b101 : begin
        result = input_5;
      end
      default : begin
        result = input_6;
      end
    endcase
    MUX_v_178_7_2 = result;
  end
  endfunction


  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_77_cmp_mgc_mul_pipe_66_1_112_1_178_1_1_0_0_6_1_wait_ctrl
// ------------------------------------------------------------------


module Rotate_run_while_mul_77_cmp_mgc_mul_pipe_66_1_112_1_178_1_1_0_0_6_1_wait_ctrl
    (
  clk, rst, run_wen, run_wten, while_mul_77_cmp_oswt_unreg, while_mul_77_cmp_iswt5,
      while_mul_77_cmp_iden_1, while_mul_77_cmp_oswt_unreg_1, while_mul_77_cmp_iswt5_1,
      while_mul_77_cmp_iden_3, while_mul_77_cmp_oswt_unreg_2, while_mul_77_cmp_iswt5_2,
      while_mul_77_cmp_iden_5, run_cgwt_5, while_mul_77_cmp_bdwt, while_mul_77_cmp_bdwt_2,
      while_mul_77_cmp_bdwt_4, while_mul_77_cmp_iswt5_2_pff, while_mul_77_cmp_iswt5_1_pff,
      while_mul_77_cmp_iswt5_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_77_cmp_oswt_unreg;
  input while_mul_77_cmp_iswt5;
  output while_mul_77_cmp_iden_1;
  input while_mul_77_cmp_oswt_unreg_1;
  input while_mul_77_cmp_iswt5_1;
  output while_mul_77_cmp_iden_3;
  input while_mul_77_cmp_oswt_unreg_2;
  input while_mul_77_cmp_iswt5_2;
  output while_mul_77_cmp_iden_5;
  output run_cgwt_5;
  output while_mul_77_cmp_bdwt;
  output while_mul_77_cmp_bdwt_2;
  output while_mul_77_cmp_bdwt_4;
  input while_mul_77_cmp_iswt5_2_pff;
  input while_mul_77_cmp_iswt5_1_pff;
  input while_mul_77_cmp_iswt5_pff;


  // Interconnect Declarations
  wire while_mul_77_cmp_ogwt;
  wire while_mul_77_cmp_tiswt5;
  reg while_mul_77_cmp_hile_mul_77_cmp_pdswt4;
  reg while_mul_77_cmp_hile_mul_77_cmp_pdswt3;
  reg while_mul_77_cmp_hile_mul_77_cmp_pdswt2;
  reg while_mul_77_cmp_hile_mul_77_cmp_pdswt1;
  reg while_mul_77_cmp_hile_mul_77_cmp_pdswt0;
  reg [2:0] while_mul_77_cmp_icwt;
  wire [3:0] nl_while_mul_77_cmp_icwt;
  wire while_mul_77_cmp_ogwt_1;
  wire while_mul_77_cmp_tiswt5_1;
  reg while_mul_77_cmp_hile_mul_77_cmp_pdswt4_1;
  reg while_mul_77_cmp_hile_mul_77_cmp_pdswt3_1;
  reg while_mul_77_cmp_hile_mul_77_cmp_pdswt2_1;
  reg while_mul_77_cmp_hile_mul_77_cmp_pdswt1_1;
  reg while_mul_77_cmp_hile_mul_77_cmp_pdswt0_1;
  reg [2:0] while_mul_77_cmp_icwt_1;
  wire [3:0] nl_while_mul_77_cmp_icwt_1;
  wire while_mul_77_cmp_ogwt_2;
  wire while_mul_77_cmp_tiswt5_2;
  reg while_mul_77_cmp_hile_mul_77_cmp_pdswt4_2;
  reg while_mul_77_cmp_hile_mul_77_cmp_pdswt3_2;
  reg while_mul_77_cmp_hile_mul_77_cmp_pdswt2_2;
  reg while_mul_77_cmp_hile_mul_77_cmp_pdswt1_2;
  reg while_mul_77_cmp_hile_mul_77_cmp_pdswt0_2;
  reg [2:0] while_mul_77_cmp_icwt_2;
  wire [3:0] nl_while_mul_77_cmp_icwt_2;

  wire[2:0] while_acc_34_nl;
  wire[3:0] nl_while_acc_34_nl;
  wire[1:0] while_acc_35_nl;
  wire[2:0] nl_while_acc_35_nl;
  wire[2:0] while_acc_37_nl;
  wire[3:0] nl_while_acc_37_nl;
  wire[1:0] while_acc_38_nl;
  wire[2:0] nl_while_acc_38_nl;
  wire[2:0] while_acc_40_nl;
  wire[3:0] nl_while_acc_40_nl;
  wire[1:0] while_acc_41_nl;
  wire[2:0] nl_while_acc_41_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_77_cmp_bdwt = while_mul_77_cmp_oswt_unreg & run_wen;
  assign while_mul_77_cmp_tiswt5 = (~ run_wten) & while_mul_77_cmp_iswt5;
  assign while_mul_77_cmp_iden_1 = while_mul_77_cmp_ogwt;
  assign while_mul_77_cmp_ogwt = while_mul_77_cmp_hile_mul_77_cmp_pdswt0 | (while_mul_77_cmp_icwt!=3'b000);
  assign while_mul_77_cmp_bdwt_2 = while_mul_77_cmp_oswt_unreg_1 & run_wen;
  assign while_mul_77_cmp_tiswt5_1 = (~ run_wten) & while_mul_77_cmp_iswt5_1;
  assign while_mul_77_cmp_iden_3 = while_mul_77_cmp_ogwt_1;
  assign while_mul_77_cmp_ogwt_1 = while_mul_77_cmp_hile_mul_77_cmp_pdswt0_1 | (while_mul_77_cmp_icwt_1!=3'b000);
  assign while_mul_77_cmp_bdwt_4 = while_mul_77_cmp_oswt_unreg_2 & run_wen;
  assign while_mul_77_cmp_tiswt5_2 = (~ run_wten) & while_mul_77_cmp_iswt5_2;
  assign while_mul_77_cmp_iden_5 = while_mul_77_cmp_ogwt_2;
  assign while_mul_77_cmp_ogwt_2 = while_mul_77_cmp_hile_mul_77_cmp_pdswt0_2 | (while_mul_77_cmp_icwt_2!=3'b000);
  assign run_cgwt_5 = while_mul_77_cmp_ogwt_2 | while_mul_77_cmp_tiswt5_2 | while_mul_77_cmp_hile_mul_77_cmp_pdswt4_2
      | while_mul_77_cmp_hile_mul_77_cmp_pdswt3_2 | while_mul_77_cmp_hile_mul_77_cmp_pdswt2_2
      | while_mul_77_cmp_hile_mul_77_cmp_pdswt1_2 | while_mul_77_cmp_ogwt_1 | while_mul_77_cmp_tiswt5_1
      | while_mul_77_cmp_hile_mul_77_cmp_pdswt4_1 | while_mul_77_cmp_hile_mul_77_cmp_pdswt3_1
      | while_mul_77_cmp_hile_mul_77_cmp_pdswt2_1 | while_mul_77_cmp_hile_mul_77_cmp_pdswt1_1
      | while_mul_77_cmp_ogwt | while_mul_77_cmp_tiswt5 | while_mul_77_cmp_hile_mul_77_cmp_pdswt4
      | while_mul_77_cmp_hile_mul_77_cmp_pdswt3 | while_mul_77_cmp_hile_mul_77_cmp_pdswt2
      | while_mul_77_cmp_hile_mul_77_cmp_pdswt1 | (run_wen & while_mul_77_cmp_iswt5_2_pff)
      | (run_wen & while_mul_77_cmp_iswt5_1_pff) | (run_wen & while_mul_77_cmp_iswt5_pff);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_77_cmp_hile_mul_77_cmp_pdswt4 <= 1'b0;
      while_mul_77_cmp_hile_mul_77_cmp_pdswt3 <= 1'b0;
      while_mul_77_cmp_hile_mul_77_cmp_pdswt2 <= 1'b0;
      while_mul_77_cmp_hile_mul_77_cmp_pdswt1 <= 1'b0;
      while_mul_77_cmp_hile_mul_77_cmp_pdswt0 <= 1'b0;
      while_mul_77_cmp_icwt <= 3'b000;
      while_mul_77_cmp_hile_mul_77_cmp_pdswt4_1 <= 1'b0;
      while_mul_77_cmp_hile_mul_77_cmp_pdswt3_1 <= 1'b0;
      while_mul_77_cmp_hile_mul_77_cmp_pdswt2_1 <= 1'b0;
      while_mul_77_cmp_hile_mul_77_cmp_pdswt1_1 <= 1'b0;
      while_mul_77_cmp_hile_mul_77_cmp_pdswt0_1 <= 1'b0;
      while_mul_77_cmp_icwt_1 <= 3'b000;
      while_mul_77_cmp_hile_mul_77_cmp_pdswt4_2 <= 1'b0;
      while_mul_77_cmp_hile_mul_77_cmp_pdswt3_2 <= 1'b0;
      while_mul_77_cmp_hile_mul_77_cmp_pdswt2_2 <= 1'b0;
      while_mul_77_cmp_hile_mul_77_cmp_pdswt1_2 <= 1'b0;
      while_mul_77_cmp_hile_mul_77_cmp_pdswt0_2 <= 1'b0;
      while_mul_77_cmp_icwt_2 <= 3'b000;
    end
    else begin
      while_mul_77_cmp_hile_mul_77_cmp_pdswt4 <= while_mul_77_cmp_tiswt5;
      while_mul_77_cmp_hile_mul_77_cmp_pdswt3 <= while_mul_77_cmp_hile_mul_77_cmp_pdswt4;
      while_mul_77_cmp_hile_mul_77_cmp_pdswt2 <= while_mul_77_cmp_hile_mul_77_cmp_pdswt3;
      while_mul_77_cmp_hile_mul_77_cmp_pdswt1 <= while_mul_77_cmp_hile_mul_77_cmp_pdswt2;
      while_mul_77_cmp_hile_mul_77_cmp_pdswt0 <= while_mul_77_cmp_hile_mul_77_cmp_pdswt1;
      while_mul_77_cmp_icwt <= nl_while_mul_77_cmp_icwt[2:0];
      while_mul_77_cmp_hile_mul_77_cmp_pdswt4_1 <= while_mul_77_cmp_tiswt5_1;
      while_mul_77_cmp_hile_mul_77_cmp_pdswt3_1 <= while_mul_77_cmp_hile_mul_77_cmp_pdswt4_1;
      while_mul_77_cmp_hile_mul_77_cmp_pdswt2_1 <= while_mul_77_cmp_hile_mul_77_cmp_pdswt3_1;
      while_mul_77_cmp_hile_mul_77_cmp_pdswt1_1 <= while_mul_77_cmp_hile_mul_77_cmp_pdswt2_1;
      while_mul_77_cmp_hile_mul_77_cmp_pdswt0_1 <= while_mul_77_cmp_hile_mul_77_cmp_pdswt1_1;
      while_mul_77_cmp_icwt_1 <= nl_while_mul_77_cmp_icwt_1[2:0];
      while_mul_77_cmp_hile_mul_77_cmp_pdswt4_2 <= while_mul_77_cmp_tiswt5_2;
      while_mul_77_cmp_hile_mul_77_cmp_pdswt3_2 <= while_mul_77_cmp_hile_mul_77_cmp_pdswt4_2;
      while_mul_77_cmp_hile_mul_77_cmp_pdswt2_2 <= while_mul_77_cmp_hile_mul_77_cmp_pdswt3_2;
      while_mul_77_cmp_hile_mul_77_cmp_pdswt1_2 <= while_mul_77_cmp_hile_mul_77_cmp_pdswt2_2;
      while_mul_77_cmp_hile_mul_77_cmp_pdswt0_2 <= while_mul_77_cmp_hile_mul_77_cmp_pdswt1_2;
      while_mul_77_cmp_icwt_2 <= nl_while_mul_77_cmp_icwt_2[2:0];
    end
  end
  assign nl_while_acc_34_nl = while_mul_77_cmp_icwt + 3'b111;
  assign while_acc_34_nl = nl_while_acc_34_nl[2:0];
  assign nl_while_acc_35_nl = conv_u2u_1_2(while_mul_77_cmp_hile_mul_77_cmp_pdswt0)
      + conv_u2u_1_2(~ while_mul_77_cmp_ogwt);
  assign while_acc_35_nl = nl_while_acc_35_nl[1:0];
  assign nl_while_mul_77_cmp_icwt  = while_acc_34_nl + conv_u2u_2_3(while_acc_35_nl);
  assign nl_while_acc_37_nl = while_mul_77_cmp_icwt_1 + 3'b111;
  assign while_acc_37_nl = nl_while_acc_37_nl[2:0];
  assign nl_while_acc_38_nl = conv_u2u_1_2(while_mul_77_cmp_hile_mul_77_cmp_pdswt0_1)
      + conv_u2u_1_2(~ while_mul_77_cmp_ogwt_1);
  assign while_acc_38_nl = nl_while_acc_38_nl[1:0];
  assign nl_while_mul_77_cmp_icwt_1  = while_acc_37_nl + conv_u2u_2_3(while_acc_38_nl);
  assign nl_while_acc_40_nl = while_mul_77_cmp_icwt_2 + 3'b111;
  assign while_acc_40_nl = nl_while_acc_40_nl[2:0];
  assign nl_while_acc_41_nl = conv_u2u_1_2(while_mul_77_cmp_hile_mul_77_cmp_pdswt0_2)
      + conv_u2u_1_2(~ while_mul_77_cmp_ogwt_2);
  assign while_acc_41_nl = nl_while_acc_41_nl[1:0];
  assign nl_while_mul_77_cmp_icwt_2  = while_acc_40_nl + conv_u2u_2_3(while_acc_41_nl);

  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_76_cmp_mgc_mul_pipe_64_1_176_1_240_1_1_0_0_8_1_wait_dp
// ------------------------------------------------------------------


module Rotate_run_while_mul_76_cmp_mgc_mul_pipe_64_1_176_1_240_1_1_0_0_8_1_wait_dp
    (
  clk, rst, while_mul_76_cmp_bawt, while_mul_76_cmp_iden, while_mul_76_cmp_iden_2,
      while_mul_76_cmp_z_mxwt, while_mul_76_cmp_z_mxwt_1, while_mul_76_cmp_biwt,
      while_mul_76_cmp_bdwt, while_mul_76_cmp_biwt_2, while_mul_76_cmp_bdwt_2, while_mul_76_cmp_z
);
  input clk;
  input rst;
  output while_mul_76_cmp_bawt;
  output while_mul_76_cmp_iden;
  output while_mul_76_cmp_iden_2;
  output [239:0] while_mul_76_cmp_z_mxwt;
  output [239:0] while_mul_76_cmp_z_mxwt_1;
  input while_mul_76_cmp_biwt;
  input while_mul_76_cmp_bdwt;
  input while_mul_76_cmp_biwt_2;
  input while_mul_76_cmp_bdwt_2;
  input [239:0] while_mul_76_cmp_z;


  // Interconnect Declarations
  reg [3:0] while_mul_76_cmp_bcwt;
  wire [4:0] nl_while_mul_76_cmp_bcwt;
  reg [3:0] while_mul_76_cmp_bcwt_1;
  wire [4:0] nl_while_mul_76_cmp_bcwt_1;
  reg [239:0] while_mul_76_cmp_z_bfwt;
  reg [239:0] while_mul_76_cmp_z_bfwt_1;
  reg [239:0] while_mul_76_cmp_z_bfwt_2;
  reg [239:0] while_mul_76_cmp_z_bfwt_3;
  reg [239:0] while_mul_76_cmp_z_bfwt_4;
  reg [239:0] while_mul_76_cmp_z_bfwt_5;
  reg [239:0] while_mul_76_cmp_z_bfwt_6;
  reg [239:0] while_mul_76_cmp_z_bfwt_7;
  reg [239:0] while_mul_76_cmp_z_bfwt_8;
  reg [239:0] while_mul_76_cmp_z_bfwt_9;
  reg [239:0] while_mul_76_cmp_z_bfwt_10;
  reg [239:0] while_mul_76_cmp_z_bfwt_11;
  reg [239:0] while_mul_76_cmp_z_bfwt_12;
  reg [239:0] while_mul_76_cmp_z_bfwt_13;
  reg [239:0] while_mul_76_cmp_z_bfwt_14;
  reg [239:0] while_mul_76_cmp_z_bfwt_15;

  wire[3:0] while_acc_27_nl;
  wire[4:0] nl_while_acc_27_nl;
  wire[1:0] while_acc_28_nl;
  wire[2:0] nl_while_acc_28_nl;
  wire[3:0] while_acc_30_nl;
  wire[4:0] nl_while_acc_30_nl;
  wire[1:0] while_acc_31_nl;
  wire[2:0] nl_while_acc_31_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_76_cmp_iden = while_mul_76_cmp_biwt | while_mul_76_cmp_bdwt;
  assign while_mul_76_cmp_bawt = while_mul_76_cmp_biwt | (while_mul_76_cmp_bcwt!=4'b0000);
  assign while_mul_76_cmp_iden_2 = while_mul_76_cmp_biwt_2 | while_mul_76_cmp_bdwt_2;
  assign while_mul_76_cmp_z_mxwt = MUX_v_240_9_2(while_mul_76_cmp_z, while_mul_76_cmp_z_bfwt,
      while_mul_76_cmp_z_bfwt_1, while_mul_76_cmp_z_bfwt_2, while_mul_76_cmp_z_bfwt_3,
      while_mul_76_cmp_z_bfwt_4, while_mul_76_cmp_z_bfwt_5, while_mul_76_cmp_z_bfwt_6,
      while_mul_76_cmp_z_bfwt_7, while_mul_76_cmp_bcwt_1);
  assign while_mul_76_cmp_z_mxwt_1 = MUX_v_240_9_2(while_mul_76_cmp_z, while_mul_76_cmp_z_bfwt_8,
      while_mul_76_cmp_z_bfwt_9, while_mul_76_cmp_z_bfwt_10, while_mul_76_cmp_z_bfwt_11,
      while_mul_76_cmp_z_bfwt_12, while_mul_76_cmp_z_bfwt_13, while_mul_76_cmp_z_bfwt_14,
      while_mul_76_cmp_z_bfwt_15, while_mul_76_cmp_bcwt);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_76_cmp_bcwt <= 4'b0000;
      while_mul_76_cmp_bcwt_1 <= 4'b0000;
    end
    else begin
      while_mul_76_cmp_bcwt <= nl_while_mul_76_cmp_bcwt[3:0];
      while_mul_76_cmp_bcwt_1 <= nl_while_mul_76_cmp_bcwt_1[3:0];
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_76_cmp_z_bfwt <= 240'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_76_cmp_z_bfwt_1 <= 240'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_76_cmp_z_bfwt_2 <= 240'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_76_cmp_z_bfwt_3 <= 240'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_76_cmp_z_bfwt_4 <= 240'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_76_cmp_z_bfwt_5 <= 240'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_76_cmp_z_bfwt_6 <= 240'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_76_cmp_z_bfwt_7 <= 240'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_76_cmp_biwt_2 ) begin
      while_mul_76_cmp_z_bfwt <= while_mul_76_cmp_z;
      while_mul_76_cmp_z_bfwt_1 <= while_mul_76_cmp_z_bfwt;
      while_mul_76_cmp_z_bfwt_2 <= while_mul_76_cmp_z_bfwt_1;
      while_mul_76_cmp_z_bfwt_3 <= while_mul_76_cmp_z_bfwt_2;
      while_mul_76_cmp_z_bfwt_4 <= while_mul_76_cmp_z_bfwt_3;
      while_mul_76_cmp_z_bfwt_5 <= while_mul_76_cmp_z_bfwt_4;
      while_mul_76_cmp_z_bfwt_6 <= while_mul_76_cmp_z_bfwt_5;
      while_mul_76_cmp_z_bfwt_7 <= while_mul_76_cmp_z_bfwt_6;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_76_cmp_z_bfwt_8 <= 240'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_76_cmp_z_bfwt_9 <= 240'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_76_cmp_z_bfwt_10 <= 240'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_76_cmp_z_bfwt_11 <= 240'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_76_cmp_z_bfwt_12 <= 240'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_76_cmp_z_bfwt_13 <= 240'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_76_cmp_z_bfwt_14 <= 240'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_76_cmp_z_bfwt_15 <= 240'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_76_cmp_biwt ) begin
      while_mul_76_cmp_z_bfwt_8 <= while_mul_76_cmp_z;
      while_mul_76_cmp_z_bfwt_9 <= while_mul_76_cmp_z_bfwt_8;
      while_mul_76_cmp_z_bfwt_10 <= while_mul_76_cmp_z_bfwt_9;
      while_mul_76_cmp_z_bfwt_11 <= while_mul_76_cmp_z_bfwt_10;
      while_mul_76_cmp_z_bfwt_12 <= while_mul_76_cmp_z_bfwt_11;
      while_mul_76_cmp_z_bfwt_13 <= while_mul_76_cmp_z_bfwt_12;
      while_mul_76_cmp_z_bfwt_14 <= while_mul_76_cmp_z_bfwt_13;
      while_mul_76_cmp_z_bfwt_15 <= while_mul_76_cmp_z_bfwt_14;
    end
  end
  assign nl_while_acc_27_nl = while_mul_76_cmp_bcwt + 4'b1111;
  assign while_acc_27_nl = nl_while_acc_27_nl[3:0];
  assign nl_while_acc_28_nl = conv_u2u_1_2(~ while_mul_76_cmp_bdwt) + conv_u2u_1_2(while_mul_76_cmp_biwt);
  assign while_acc_28_nl = nl_while_acc_28_nl[1:0];
  assign nl_while_mul_76_cmp_bcwt  = while_acc_27_nl + conv_u2u_2_4(while_acc_28_nl);
  assign nl_while_acc_30_nl = while_mul_76_cmp_bcwt_1 + 4'b1111;
  assign while_acc_30_nl = nl_while_acc_30_nl[3:0];
  assign nl_while_acc_31_nl = conv_u2u_1_2(~ while_mul_76_cmp_bdwt_2) + conv_u2u_1_2(while_mul_76_cmp_biwt_2);
  assign while_acc_31_nl = nl_while_acc_31_nl[1:0];
  assign nl_while_mul_76_cmp_bcwt_1  = while_acc_30_nl + conv_u2u_2_4(while_acc_31_nl);

  function automatic [239:0] MUX_v_240_9_2;
    input [239:0] input_0;
    input [239:0] input_1;
    input [239:0] input_2;
    input [239:0] input_3;
    input [239:0] input_4;
    input [239:0] input_5;
    input [239:0] input_6;
    input [239:0] input_7;
    input [239:0] input_8;
    input [3:0] sel;
    reg [239:0] result;
  begin
    case (sel)
      4'b0000 : begin
        result = input_0;
      end
      4'b0001 : begin
        result = input_1;
      end
      4'b0010 : begin
        result = input_2;
      end
      4'b0011 : begin
        result = input_3;
      end
      4'b0100 : begin
        result = input_4;
      end
      4'b0101 : begin
        result = input_5;
      end
      4'b0110 : begin
        result = input_6;
      end
      4'b0111 : begin
        result = input_7;
      end
      default : begin
        result = input_8;
      end
    endcase
    MUX_v_240_9_2 = result;
  end
  endfunction


  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [3:0] conv_u2u_2_4 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_4 = {{2{1'b0}}, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_76_cmp_mgc_mul_pipe_64_1_176_1_240_1_1_0_0_8_1_wait_ctrl
// ------------------------------------------------------------------


module Rotate_run_while_mul_76_cmp_mgc_mul_pipe_64_1_176_1_240_1_1_0_0_8_1_wait_ctrl
    (
  clk, rst, run_wen, run_wten, while_mul_76_cmp_oswt_unreg, while_mul_76_cmp_iswt7,
      while_mul_76_cmp_iden_1, while_mul_76_cmp_oswt_unreg_1, while_mul_76_cmp_iswt7_1,
      while_mul_76_cmp_iden_3, run_cgwt_4, while_mul_76_cmp_bdwt, while_mul_76_cmp_bdwt_2,
      while_mul_76_cmp_iswt7_1_pff, while_mul_76_cmp_iswt7_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_76_cmp_oswt_unreg;
  input while_mul_76_cmp_iswt7;
  output while_mul_76_cmp_iden_1;
  input while_mul_76_cmp_oswt_unreg_1;
  input while_mul_76_cmp_iswt7_1;
  output while_mul_76_cmp_iden_3;
  output run_cgwt_4;
  output while_mul_76_cmp_bdwt;
  output while_mul_76_cmp_bdwt_2;
  input while_mul_76_cmp_iswt7_1_pff;
  input while_mul_76_cmp_iswt7_pff;


  // Interconnect Declarations
  wire while_mul_76_cmp_ogwt;
  wire while_mul_76_cmp_tiswt7;
  reg while_mul_76_cmp_hile_mul_76_cmp_pdswt6;
  reg while_mul_76_cmp_hile_mul_76_cmp_pdswt5;
  reg while_mul_76_cmp_hile_mul_76_cmp_pdswt4;
  reg while_mul_76_cmp_hile_mul_76_cmp_pdswt3;
  reg while_mul_76_cmp_hile_mul_76_cmp_pdswt2;
  reg while_mul_76_cmp_hile_mul_76_cmp_pdswt1;
  reg while_mul_76_cmp_hile_mul_76_cmp_pdswt0;
  reg [3:0] while_mul_76_cmp_icwt;
  wire [4:0] nl_while_mul_76_cmp_icwt;
  wire while_mul_76_cmp_ogwt_1;
  wire while_mul_76_cmp_tiswt7_1;
  reg while_mul_76_cmp_hile_mul_76_cmp_pdswt6_1;
  reg while_mul_76_cmp_hile_mul_76_cmp_pdswt5_1;
  reg while_mul_76_cmp_hile_mul_76_cmp_pdswt4_1;
  reg while_mul_76_cmp_hile_mul_76_cmp_pdswt3_1;
  reg while_mul_76_cmp_hile_mul_76_cmp_pdswt2_1;
  reg while_mul_76_cmp_hile_mul_76_cmp_pdswt1_1;
  reg while_mul_76_cmp_hile_mul_76_cmp_pdswt0_1;
  reg [3:0] while_mul_76_cmp_icwt_1;
  wire [4:0] nl_while_mul_76_cmp_icwt_1;

  wire[3:0] while_acc_28_nl;
  wire[4:0] nl_while_acc_28_nl;
  wire[1:0] while_acc_29_nl;
  wire[2:0] nl_while_acc_29_nl;
  wire[3:0] while_acc_31_nl;
  wire[4:0] nl_while_acc_31_nl;
  wire[1:0] while_acc_32_nl;
  wire[2:0] nl_while_acc_32_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_76_cmp_bdwt = while_mul_76_cmp_oswt_unreg & run_wen;
  assign while_mul_76_cmp_tiswt7 = (~ run_wten) & while_mul_76_cmp_iswt7;
  assign while_mul_76_cmp_iden_1 = while_mul_76_cmp_ogwt;
  assign while_mul_76_cmp_ogwt = while_mul_76_cmp_hile_mul_76_cmp_pdswt0 | (while_mul_76_cmp_icwt!=4'b0000);
  assign while_mul_76_cmp_bdwt_2 = while_mul_76_cmp_oswt_unreg_1 & run_wen;
  assign while_mul_76_cmp_tiswt7_1 = (~ run_wten) & while_mul_76_cmp_iswt7_1;
  assign while_mul_76_cmp_iden_3 = while_mul_76_cmp_ogwt_1;
  assign while_mul_76_cmp_ogwt_1 = while_mul_76_cmp_hile_mul_76_cmp_pdswt0_1 | (while_mul_76_cmp_icwt_1!=4'b0000);
  assign run_cgwt_4 = while_mul_76_cmp_ogwt_1 | while_mul_76_cmp_tiswt7_1 | while_mul_76_cmp_hile_mul_76_cmp_pdswt6_1
      | while_mul_76_cmp_hile_mul_76_cmp_pdswt5_1 | while_mul_76_cmp_hile_mul_76_cmp_pdswt4_1
      | while_mul_76_cmp_hile_mul_76_cmp_pdswt3_1 | while_mul_76_cmp_hile_mul_76_cmp_pdswt2_1
      | while_mul_76_cmp_hile_mul_76_cmp_pdswt1_1 | while_mul_76_cmp_ogwt | while_mul_76_cmp_tiswt7
      | while_mul_76_cmp_hile_mul_76_cmp_pdswt6 | while_mul_76_cmp_hile_mul_76_cmp_pdswt5
      | while_mul_76_cmp_hile_mul_76_cmp_pdswt4 | while_mul_76_cmp_hile_mul_76_cmp_pdswt3
      | while_mul_76_cmp_hile_mul_76_cmp_pdswt2 | while_mul_76_cmp_hile_mul_76_cmp_pdswt1
      | (run_wen & while_mul_76_cmp_iswt7_1_pff) | (run_wen & while_mul_76_cmp_iswt7_pff);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_76_cmp_hile_mul_76_cmp_pdswt6 <= 1'b0;
      while_mul_76_cmp_hile_mul_76_cmp_pdswt5 <= 1'b0;
      while_mul_76_cmp_hile_mul_76_cmp_pdswt4 <= 1'b0;
      while_mul_76_cmp_hile_mul_76_cmp_pdswt3 <= 1'b0;
      while_mul_76_cmp_hile_mul_76_cmp_pdswt2 <= 1'b0;
      while_mul_76_cmp_hile_mul_76_cmp_pdswt1 <= 1'b0;
      while_mul_76_cmp_hile_mul_76_cmp_pdswt0 <= 1'b0;
      while_mul_76_cmp_icwt <= 4'b0000;
      while_mul_76_cmp_hile_mul_76_cmp_pdswt6_1 <= 1'b0;
      while_mul_76_cmp_hile_mul_76_cmp_pdswt5_1 <= 1'b0;
      while_mul_76_cmp_hile_mul_76_cmp_pdswt4_1 <= 1'b0;
      while_mul_76_cmp_hile_mul_76_cmp_pdswt3_1 <= 1'b0;
      while_mul_76_cmp_hile_mul_76_cmp_pdswt2_1 <= 1'b0;
      while_mul_76_cmp_hile_mul_76_cmp_pdswt1_1 <= 1'b0;
      while_mul_76_cmp_hile_mul_76_cmp_pdswt0_1 <= 1'b0;
      while_mul_76_cmp_icwt_1 <= 4'b0000;
    end
    else begin
      while_mul_76_cmp_hile_mul_76_cmp_pdswt6 <= while_mul_76_cmp_tiswt7;
      while_mul_76_cmp_hile_mul_76_cmp_pdswt5 <= while_mul_76_cmp_hile_mul_76_cmp_pdswt6;
      while_mul_76_cmp_hile_mul_76_cmp_pdswt4 <= while_mul_76_cmp_hile_mul_76_cmp_pdswt5;
      while_mul_76_cmp_hile_mul_76_cmp_pdswt3 <= while_mul_76_cmp_hile_mul_76_cmp_pdswt4;
      while_mul_76_cmp_hile_mul_76_cmp_pdswt2 <= while_mul_76_cmp_hile_mul_76_cmp_pdswt3;
      while_mul_76_cmp_hile_mul_76_cmp_pdswt1 <= while_mul_76_cmp_hile_mul_76_cmp_pdswt2;
      while_mul_76_cmp_hile_mul_76_cmp_pdswt0 <= while_mul_76_cmp_hile_mul_76_cmp_pdswt1;
      while_mul_76_cmp_icwt <= nl_while_mul_76_cmp_icwt[3:0];
      while_mul_76_cmp_hile_mul_76_cmp_pdswt6_1 <= while_mul_76_cmp_tiswt7_1;
      while_mul_76_cmp_hile_mul_76_cmp_pdswt5_1 <= while_mul_76_cmp_hile_mul_76_cmp_pdswt6_1;
      while_mul_76_cmp_hile_mul_76_cmp_pdswt4_1 <= while_mul_76_cmp_hile_mul_76_cmp_pdswt5_1;
      while_mul_76_cmp_hile_mul_76_cmp_pdswt3_1 <= while_mul_76_cmp_hile_mul_76_cmp_pdswt4_1;
      while_mul_76_cmp_hile_mul_76_cmp_pdswt2_1 <= while_mul_76_cmp_hile_mul_76_cmp_pdswt3_1;
      while_mul_76_cmp_hile_mul_76_cmp_pdswt1_1 <= while_mul_76_cmp_hile_mul_76_cmp_pdswt2_1;
      while_mul_76_cmp_hile_mul_76_cmp_pdswt0_1 <= while_mul_76_cmp_hile_mul_76_cmp_pdswt1_1;
      while_mul_76_cmp_icwt_1 <= nl_while_mul_76_cmp_icwt_1[3:0];
    end
  end
  assign nl_while_acc_28_nl = while_mul_76_cmp_icwt + 4'b1111;
  assign while_acc_28_nl = nl_while_acc_28_nl[3:0];
  assign nl_while_acc_29_nl = conv_u2u_1_2(while_mul_76_cmp_hile_mul_76_cmp_pdswt0)
      + conv_u2u_1_2(~ while_mul_76_cmp_ogwt);
  assign while_acc_29_nl = nl_while_acc_29_nl[1:0];
  assign nl_while_mul_76_cmp_icwt  = while_acc_28_nl + conv_u2u_2_4(while_acc_29_nl);
  assign nl_while_acc_31_nl = while_mul_76_cmp_icwt_1 + 4'b1111;
  assign while_acc_31_nl = nl_while_acc_31_nl[3:0];
  assign nl_while_acc_32_nl = conv_u2u_1_2(while_mul_76_cmp_hile_mul_76_cmp_pdswt0_1)
      + conv_u2u_1_2(~ while_mul_76_cmp_ogwt_1);
  assign while_acc_32_nl = nl_while_acc_32_nl[1:0];
  assign nl_while_mul_76_cmp_icwt_1  = while_acc_31_nl + conv_u2u_2_4(while_acc_32_nl);

  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [3:0] conv_u2u_2_4 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_4 = {{2{1'b0}}, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_108_cmp_mgc_mul_pipe_48_0_64_1_112_1_1_0_0_4_1_wait_dp
// ------------------------------------------------------------------


module Rotate_run_while_mul_108_cmp_mgc_mul_pipe_48_0_64_1_112_1_1_0_0_4_1_wait_dp
    (
  clk, rst, while_mul_108_cmp_bawt, while_mul_108_cmp_iden, while_mul_108_cmp_iden_2,
      while_mul_108_cmp_z_mxwt, while_mul_108_cmp_z_mxwt_1, while_mul_108_cmp_biwt,
      while_mul_108_cmp_bdwt, while_mul_108_cmp_biwt_2, while_mul_108_cmp_bdwt_2,
      while_mul_108_cmp_z
);
  input clk;
  input rst;
  output while_mul_108_cmp_bawt;
  output while_mul_108_cmp_iden;
  output while_mul_108_cmp_iden_2;
  output [111:0] while_mul_108_cmp_z_mxwt;
  output [111:0] while_mul_108_cmp_z_mxwt_1;
  input while_mul_108_cmp_biwt;
  input while_mul_108_cmp_bdwt;
  input while_mul_108_cmp_biwt_2;
  input while_mul_108_cmp_bdwt_2;
  input [111:0] while_mul_108_cmp_z;


  // Interconnect Declarations
  reg [2:0] while_mul_108_cmp_bcwt;
  wire [3:0] nl_while_mul_108_cmp_bcwt;
  reg [2:0] while_mul_108_cmp_bcwt_1;
  wire [3:0] nl_while_mul_108_cmp_bcwt_1;
  reg [111:0] while_mul_108_cmp_z_bfwt;
  reg [111:0] while_mul_108_cmp_z_bfwt_1;
  reg [111:0] while_mul_108_cmp_z_bfwt_2;
  reg [111:0] while_mul_108_cmp_z_bfwt_3;
  reg [111:0] while_mul_108_cmp_z_bfwt_4;
  reg [111:0] while_mul_108_cmp_z_bfwt_5;
  reg [111:0] while_mul_108_cmp_z_bfwt_6;
  reg [111:0] while_mul_108_cmp_z_bfwt_7;

  wire[2:0] while_acc_23_nl;
  wire[3:0] nl_while_acc_23_nl;
  wire[1:0] while_acc_24_nl;
  wire[2:0] nl_while_acc_24_nl;
  wire[2:0] while_acc_26_nl;
  wire[3:0] nl_while_acc_26_nl;
  wire[1:0] while_acc_27_nl;
  wire[2:0] nl_while_acc_27_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_108_cmp_iden = while_mul_108_cmp_biwt | while_mul_108_cmp_bdwt;
  assign while_mul_108_cmp_bawt = while_mul_108_cmp_biwt | (while_mul_108_cmp_bcwt!=3'b000);
  assign while_mul_108_cmp_iden_2 = while_mul_108_cmp_biwt_2 | while_mul_108_cmp_bdwt_2;
  assign while_mul_108_cmp_z_mxwt = MUX_v_112_5_2(while_mul_108_cmp_z, while_mul_108_cmp_z_bfwt,
      while_mul_108_cmp_z_bfwt_1, while_mul_108_cmp_z_bfwt_2, while_mul_108_cmp_z_bfwt_3,
      while_mul_108_cmp_bcwt_1);
  assign while_mul_108_cmp_z_mxwt_1 = MUX_v_112_5_2(while_mul_108_cmp_z, while_mul_108_cmp_z_bfwt_4,
      while_mul_108_cmp_z_bfwt_5, while_mul_108_cmp_z_bfwt_6, while_mul_108_cmp_z_bfwt_7,
      while_mul_108_cmp_bcwt);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_108_cmp_bcwt <= 3'b000;
      while_mul_108_cmp_bcwt_1 <= 3'b000;
    end
    else begin
      while_mul_108_cmp_bcwt <= nl_while_mul_108_cmp_bcwt[2:0];
      while_mul_108_cmp_bcwt_1 <= nl_while_mul_108_cmp_bcwt_1[2:0];
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_108_cmp_z_bfwt <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_108_cmp_z_bfwt_1 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_108_cmp_z_bfwt_2 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_108_cmp_z_bfwt_3 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_108_cmp_biwt_2 ) begin
      while_mul_108_cmp_z_bfwt <= while_mul_108_cmp_z;
      while_mul_108_cmp_z_bfwt_1 <= while_mul_108_cmp_z_bfwt;
      while_mul_108_cmp_z_bfwt_2 <= while_mul_108_cmp_z_bfwt_1;
      while_mul_108_cmp_z_bfwt_3 <= while_mul_108_cmp_z_bfwt_2;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_108_cmp_z_bfwt_4 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_108_cmp_z_bfwt_5 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_108_cmp_z_bfwt_6 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_108_cmp_z_bfwt_7 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_108_cmp_biwt ) begin
      while_mul_108_cmp_z_bfwt_4 <= while_mul_108_cmp_z;
      while_mul_108_cmp_z_bfwt_5 <= while_mul_108_cmp_z_bfwt_4;
      while_mul_108_cmp_z_bfwt_6 <= while_mul_108_cmp_z_bfwt_5;
      while_mul_108_cmp_z_bfwt_7 <= while_mul_108_cmp_z_bfwt_6;
    end
  end
  assign nl_while_acc_23_nl = while_mul_108_cmp_bcwt + 3'b111;
  assign while_acc_23_nl = nl_while_acc_23_nl[2:0];
  assign nl_while_acc_24_nl = conv_u2u_1_2(~ while_mul_108_cmp_bdwt) + conv_u2u_1_2(while_mul_108_cmp_biwt);
  assign while_acc_24_nl = nl_while_acc_24_nl[1:0];
  assign nl_while_mul_108_cmp_bcwt  = while_acc_23_nl + conv_u2u_2_3(while_acc_24_nl);
  assign nl_while_acc_26_nl = while_mul_108_cmp_bcwt_1 + 3'b111;
  assign while_acc_26_nl = nl_while_acc_26_nl[2:0];
  assign nl_while_acc_27_nl = conv_u2u_1_2(~ while_mul_108_cmp_bdwt_2) + conv_u2u_1_2(while_mul_108_cmp_biwt_2);
  assign while_acc_27_nl = nl_while_acc_27_nl[1:0];
  assign nl_while_mul_108_cmp_bcwt_1  = while_acc_26_nl + conv_u2u_2_3(while_acc_27_nl);

  function automatic [111:0] MUX_v_112_5_2;
    input [111:0] input_0;
    input [111:0] input_1;
    input [111:0] input_2;
    input [111:0] input_3;
    input [111:0] input_4;
    input [2:0] sel;
    reg [111:0] result;
  begin
    case (sel)
      3'b000 : begin
        result = input_0;
      end
      3'b001 : begin
        result = input_1;
      end
      3'b010 : begin
        result = input_2;
      end
      3'b011 : begin
        result = input_3;
      end
      default : begin
        result = input_4;
      end
    endcase
    MUX_v_112_5_2 = result;
  end
  endfunction


  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_108_cmp_mgc_mul_pipe_48_0_64_1_112_1_1_0_0_4_1_wait_ctrl
// ------------------------------------------------------------------


module Rotate_run_while_mul_108_cmp_mgc_mul_pipe_48_0_64_1_112_1_1_0_0_4_1_wait_ctrl
    (
  clk, rst, run_wen, run_wten, while_mul_108_cmp_oswt_unreg, while_mul_108_cmp_iswt3,
      while_mul_108_cmp_iden_1, while_mul_108_cmp_oswt_unreg_1, while_mul_108_cmp_iswt3_1,
      while_mul_108_cmp_iden_3, run_cgwt_3, while_mul_108_cmp_bdwt, while_mul_108_cmp_bdwt_2,
      while_mul_108_cmp_iswt3_1_pff, while_mul_108_cmp_iswt3_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_108_cmp_oswt_unreg;
  input while_mul_108_cmp_iswt3;
  output while_mul_108_cmp_iden_1;
  input while_mul_108_cmp_oswt_unreg_1;
  input while_mul_108_cmp_iswt3_1;
  output while_mul_108_cmp_iden_3;
  output run_cgwt_3;
  output while_mul_108_cmp_bdwt;
  output while_mul_108_cmp_bdwt_2;
  input while_mul_108_cmp_iswt3_1_pff;
  input while_mul_108_cmp_iswt3_pff;


  // Interconnect Declarations
  wire while_mul_108_cmp_ogwt;
  wire while_mul_108_cmp_tiswt3;
  reg while_mul_108_cmp_hile_mul_108_cmp_pdswt2;
  reg while_mul_108_cmp_hile_mul_108_cmp_pdswt1;
  reg while_mul_108_cmp_hile_mul_108_cmp_pdswt0;
  reg [2:0] while_mul_108_cmp_icwt;
  wire [3:0] nl_while_mul_108_cmp_icwt;
  wire while_mul_108_cmp_ogwt_1;
  wire while_mul_108_cmp_tiswt3_1;
  reg while_mul_108_cmp_hile_mul_108_cmp_pdswt2_1;
  reg while_mul_108_cmp_hile_mul_108_cmp_pdswt1_1;
  reg while_mul_108_cmp_hile_mul_108_cmp_pdswt0_1;
  reg [2:0] while_mul_108_cmp_icwt_1;
  wire [3:0] nl_while_mul_108_cmp_icwt_1;

  wire[2:0] while_acc_24_nl;
  wire[3:0] nl_while_acc_24_nl;
  wire[1:0] while_acc_25_nl;
  wire[2:0] nl_while_acc_25_nl;
  wire[2:0] while_acc_27_nl;
  wire[3:0] nl_while_acc_27_nl;
  wire[1:0] while_acc_28_nl;
  wire[2:0] nl_while_acc_28_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_108_cmp_bdwt = while_mul_108_cmp_oswt_unreg & run_wen;
  assign while_mul_108_cmp_tiswt3 = (~ run_wten) & while_mul_108_cmp_iswt3;
  assign while_mul_108_cmp_iden_1 = while_mul_108_cmp_ogwt;
  assign while_mul_108_cmp_ogwt = while_mul_108_cmp_hile_mul_108_cmp_pdswt0 | (while_mul_108_cmp_icwt!=3'b000);
  assign while_mul_108_cmp_bdwt_2 = while_mul_108_cmp_oswt_unreg_1 & run_wen;
  assign while_mul_108_cmp_tiswt3_1 = (~ run_wten) & while_mul_108_cmp_iswt3_1;
  assign while_mul_108_cmp_iden_3 = while_mul_108_cmp_ogwt_1;
  assign while_mul_108_cmp_ogwt_1 = while_mul_108_cmp_hile_mul_108_cmp_pdswt0_1 |
      (while_mul_108_cmp_icwt_1!=3'b000);
  assign run_cgwt_3 = while_mul_108_cmp_ogwt_1 | while_mul_108_cmp_tiswt3_1 | while_mul_108_cmp_hile_mul_108_cmp_pdswt2_1
      | while_mul_108_cmp_hile_mul_108_cmp_pdswt1_1 | while_mul_108_cmp_ogwt | while_mul_108_cmp_tiswt3
      | while_mul_108_cmp_hile_mul_108_cmp_pdswt2 | while_mul_108_cmp_hile_mul_108_cmp_pdswt1
      | (run_wen & while_mul_108_cmp_iswt3_1_pff) | (run_wen & while_mul_108_cmp_iswt3_pff);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_108_cmp_hile_mul_108_cmp_pdswt2 <= 1'b0;
      while_mul_108_cmp_hile_mul_108_cmp_pdswt1 <= 1'b0;
      while_mul_108_cmp_hile_mul_108_cmp_pdswt0 <= 1'b0;
      while_mul_108_cmp_icwt <= 3'b000;
      while_mul_108_cmp_hile_mul_108_cmp_pdswt2_1 <= 1'b0;
      while_mul_108_cmp_hile_mul_108_cmp_pdswt1_1 <= 1'b0;
      while_mul_108_cmp_hile_mul_108_cmp_pdswt0_1 <= 1'b0;
      while_mul_108_cmp_icwt_1 <= 3'b000;
    end
    else begin
      while_mul_108_cmp_hile_mul_108_cmp_pdswt2 <= while_mul_108_cmp_tiswt3;
      while_mul_108_cmp_hile_mul_108_cmp_pdswt1 <= while_mul_108_cmp_hile_mul_108_cmp_pdswt2;
      while_mul_108_cmp_hile_mul_108_cmp_pdswt0 <= while_mul_108_cmp_hile_mul_108_cmp_pdswt1;
      while_mul_108_cmp_icwt <= nl_while_mul_108_cmp_icwt[2:0];
      while_mul_108_cmp_hile_mul_108_cmp_pdswt2_1 <= while_mul_108_cmp_tiswt3_1;
      while_mul_108_cmp_hile_mul_108_cmp_pdswt1_1 <= while_mul_108_cmp_hile_mul_108_cmp_pdswt2_1;
      while_mul_108_cmp_hile_mul_108_cmp_pdswt0_1 <= while_mul_108_cmp_hile_mul_108_cmp_pdswt1_1;
      while_mul_108_cmp_icwt_1 <= nl_while_mul_108_cmp_icwt_1[2:0];
    end
  end
  assign nl_while_acc_24_nl = while_mul_108_cmp_icwt + 3'b111;
  assign while_acc_24_nl = nl_while_acc_24_nl[2:0];
  assign nl_while_acc_25_nl = conv_u2u_1_2(while_mul_108_cmp_hile_mul_108_cmp_pdswt0)
      + conv_u2u_1_2(~ while_mul_108_cmp_ogwt);
  assign while_acc_25_nl = nl_while_acc_25_nl[1:0];
  assign nl_while_mul_108_cmp_icwt  = while_acc_24_nl + conv_u2u_2_3(while_acc_25_nl);
  assign nl_while_acc_27_nl = while_mul_108_cmp_icwt_1 + 3'b111;
  assign while_acc_27_nl = nl_while_acc_27_nl[2:0];
  assign nl_while_acc_28_nl = conv_u2u_1_2(while_mul_108_cmp_hile_mul_108_cmp_pdswt0_1)
      + conv_u2u_1_2(~ while_mul_108_cmp_ogwt_1);
  assign while_acc_28_nl = nl_while_acc_28_nl[1:0];
  assign nl_while_mul_108_cmp_icwt_1  = while_acc_27_nl + conv_u2u_2_3(while_acc_28_nl);

  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_111_cmp_mgc_mul_pipe_64_1_178_1_242_1_1_0_0_8_1_wait_dp
// ------------------------------------------------------------------


module Rotate_run_while_mul_111_cmp_mgc_mul_pipe_64_1_178_1_242_1_1_0_0_8_1_wait_dp
    (
  clk, rst, while_mul_111_cmp_bawt, while_mul_111_cmp_iden, while_mul_111_cmp_iden_2,
      while_mul_111_cmp_iden_4, while_mul_111_cmp_z_mxwt, while_mul_111_cmp_z_mxwt_1,
      while_mul_111_cmp_z_mxwt_2, while_mul_111_cmp_biwt, while_mul_111_cmp_bdwt,
      while_mul_111_cmp_biwt_2, while_mul_111_cmp_bdwt_2, while_mul_111_cmp_biwt_4,
      while_mul_111_cmp_bdwt_4, while_mul_111_cmp_z
);
  input clk;
  input rst;
  output while_mul_111_cmp_bawt;
  output while_mul_111_cmp_iden;
  output while_mul_111_cmp_iden_2;
  output while_mul_111_cmp_iden_4;
  output [241:0] while_mul_111_cmp_z_mxwt;
  output [241:0] while_mul_111_cmp_z_mxwt_1;
  output [241:0] while_mul_111_cmp_z_mxwt_2;
  input while_mul_111_cmp_biwt;
  input while_mul_111_cmp_bdwt;
  input while_mul_111_cmp_biwt_2;
  input while_mul_111_cmp_bdwt_2;
  input while_mul_111_cmp_biwt_4;
  input while_mul_111_cmp_bdwt_4;
  input [241:0] while_mul_111_cmp_z;


  // Interconnect Declarations
  reg [3:0] while_mul_111_cmp_bcwt;
  wire [4:0] nl_while_mul_111_cmp_bcwt;
  reg [3:0] while_mul_111_cmp_bcwt_1;
  wire [4:0] nl_while_mul_111_cmp_bcwt_1;
  reg [3:0] while_mul_111_cmp_bcwt_2;
  wire [4:0] nl_while_mul_111_cmp_bcwt_2;
  reg [241:0] while_mul_111_cmp_z_bfwt;
  reg [241:0] while_mul_111_cmp_z_bfwt_1;
  reg [241:0] while_mul_111_cmp_z_bfwt_2;
  reg [241:0] while_mul_111_cmp_z_bfwt_3;
  reg [241:0] while_mul_111_cmp_z_bfwt_4;
  reg [241:0] while_mul_111_cmp_z_bfwt_5;
  reg [241:0] while_mul_111_cmp_z_bfwt_6;
  reg [241:0] while_mul_111_cmp_z_bfwt_7;
  reg [241:0] while_mul_111_cmp_z_bfwt_8;
  reg [241:0] while_mul_111_cmp_z_bfwt_9;
  reg [241:0] while_mul_111_cmp_z_bfwt_10;
  reg [241:0] while_mul_111_cmp_z_bfwt_11;
  reg [241:0] while_mul_111_cmp_z_bfwt_12;
  reg [241:0] while_mul_111_cmp_z_bfwt_13;
  reg [241:0] while_mul_111_cmp_z_bfwt_14;
  reg [241:0] while_mul_111_cmp_z_bfwt_15;
  reg [241:0] while_mul_111_cmp_z_bfwt_16;
  reg [241:0] while_mul_111_cmp_z_bfwt_17;
  reg [241:0] while_mul_111_cmp_z_bfwt_18;
  reg [241:0] while_mul_111_cmp_z_bfwt_19;
  reg [241:0] while_mul_111_cmp_z_bfwt_20;
  reg [241:0] while_mul_111_cmp_z_bfwt_21;
  reg [241:0] while_mul_111_cmp_z_bfwt_22;
  reg [241:0] while_mul_111_cmp_z_bfwt_23;

  wire[3:0] while_acc_19_nl;
  wire[4:0] nl_while_acc_19_nl;
  wire[1:0] while_acc_20_nl;
  wire[2:0] nl_while_acc_20_nl;
  wire[3:0] while_acc_22_nl;
  wire[4:0] nl_while_acc_22_nl;
  wire[1:0] while_acc_23_nl;
  wire[2:0] nl_while_acc_23_nl;
  wire[3:0] while_acc_25_nl;
  wire[4:0] nl_while_acc_25_nl;
  wire[1:0] while_acc_26_nl;
  wire[2:0] nl_while_acc_26_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_111_cmp_iden = while_mul_111_cmp_biwt | while_mul_111_cmp_bdwt;
  assign while_mul_111_cmp_bawt = while_mul_111_cmp_biwt | (while_mul_111_cmp_bcwt!=4'b0000);
  assign while_mul_111_cmp_iden_2 = while_mul_111_cmp_biwt_2 | while_mul_111_cmp_bdwt_2;
  assign while_mul_111_cmp_iden_4 = while_mul_111_cmp_biwt_4 | while_mul_111_cmp_bdwt_4;
  assign while_mul_111_cmp_z_mxwt = MUX_v_242_9_2(while_mul_111_cmp_z, while_mul_111_cmp_z_bfwt,
      while_mul_111_cmp_z_bfwt_1, while_mul_111_cmp_z_bfwt_2, while_mul_111_cmp_z_bfwt_3,
      while_mul_111_cmp_z_bfwt_4, while_mul_111_cmp_z_bfwt_5, while_mul_111_cmp_z_bfwt_6,
      while_mul_111_cmp_z_bfwt_7, while_mul_111_cmp_bcwt_2);
  assign while_mul_111_cmp_z_mxwt_1 = MUX_v_242_9_2(while_mul_111_cmp_z, while_mul_111_cmp_z_bfwt_8,
      while_mul_111_cmp_z_bfwt_9, while_mul_111_cmp_z_bfwt_10, while_mul_111_cmp_z_bfwt_11,
      while_mul_111_cmp_z_bfwt_12, while_mul_111_cmp_z_bfwt_13, while_mul_111_cmp_z_bfwt_14,
      while_mul_111_cmp_z_bfwt_15, while_mul_111_cmp_bcwt_1);
  assign while_mul_111_cmp_z_mxwt_2 = MUX_v_242_9_2(while_mul_111_cmp_z, while_mul_111_cmp_z_bfwt_16,
      while_mul_111_cmp_z_bfwt_17, while_mul_111_cmp_z_bfwt_18, while_mul_111_cmp_z_bfwt_19,
      while_mul_111_cmp_z_bfwt_20, while_mul_111_cmp_z_bfwt_21, while_mul_111_cmp_z_bfwt_22,
      while_mul_111_cmp_z_bfwt_23, while_mul_111_cmp_bcwt);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_111_cmp_bcwt <= 4'b0000;
      while_mul_111_cmp_bcwt_1 <= 4'b0000;
      while_mul_111_cmp_bcwt_2 <= 4'b0000;
    end
    else begin
      while_mul_111_cmp_bcwt <= nl_while_mul_111_cmp_bcwt[3:0];
      while_mul_111_cmp_bcwt_1 <= nl_while_mul_111_cmp_bcwt_1[3:0];
      while_mul_111_cmp_bcwt_2 <= nl_while_mul_111_cmp_bcwt_2[3:0];
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_111_cmp_z_bfwt <= 242'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_111_cmp_z_bfwt_1 <= 242'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_111_cmp_z_bfwt_2 <= 242'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_111_cmp_z_bfwt_3 <= 242'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_111_cmp_z_bfwt_4 <= 242'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_111_cmp_z_bfwt_5 <= 242'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_111_cmp_z_bfwt_6 <= 242'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_111_cmp_z_bfwt_7 <= 242'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_111_cmp_biwt_4 ) begin
      while_mul_111_cmp_z_bfwt <= while_mul_111_cmp_z;
      while_mul_111_cmp_z_bfwt_1 <= while_mul_111_cmp_z_bfwt;
      while_mul_111_cmp_z_bfwt_2 <= while_mul_111_cmp_z_bfwt_1;
      while_mul_111_cmp_z_bfwt_3 <= while_mul_111_cmp_z_bfwt_2;
      while_mul_111_cmp_z_bfwt_4 <= while_mul_111_cmp_z_bfwt_3;
      while_mul_111_cmp_z_bfwt_5 <= while_mul_111_cmp_z_bfwt_4;
      while_mul_111_cmp_z_bfwt_6 <= while_mul_111_cmp_z_bfwt_5;
      while_mul_111_cmp_z_bfwt_7 <= while_mul_111_cmp_z_bfwt_6;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_111_cmp_z_bfwt_8 <= 242'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_111_cmp_z_bfwt_9 <= 242'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_111_cmp_z_bfwt_10 <= 242'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_111_cmp_z_bfwt_11 <= 242'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_111_cmp_z_bfwt_12 <= 242'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_111_cmp_z_bfwt_13 <= 242'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_111_cmp_z_bfwt_14 <= 242'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_111_cmp_z_bfwt_15 <= 242'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_111_cmp_biwt_2 ) begin
      while_mul_111_cmp_z_bfwt_8 <= while_mul_111_cmp_z;
      while_mul_111_cmp_z_bfwt_9 <= while_mul_111_cmp_z_bfwt_8;
      while_mul_111_cmp_z_bfwt_10 <= while_mul_111_cmp_z_bfwt_9;
      while_mul_111_cmp_z_bfwt_11 <= while_mul_111_cmp_z_bfwt_10;
      while_mul_111_cmp_z_bfwt_12 <= while_mul_111_cmp_z_bfwt_11;
      while_mul_111_cmp_z_bfwt_13 <= while_mul_111_cmp_z_bfwt_12;
      while_mul_111_cmp_z_bfwt_14 <= while_mul_111_cmp_z_bfwt_13;
      while_mul_111_cmp_z_bfwt_15 <= while_mul_111_cmp_z_bfwt_14;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_111_cmp_z_bfwt_16 <= 242'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_111_cmp_z_bfwt_17 <= 242'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_111_cmp_z_bfwt_18 <= 242'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_111_cmp_z_bfwt_19 <= 242'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_111_cmp_z_bfwt_20 <= 242'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_111_cmp_z_bfwt_21 <= 242'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_111_cmp_z_bfwt_22 <= 242'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_111_cmp_z_bfwt_23 <= 242'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_111_cmp_biwt ) begin
      while_mul_111_cmp_z_bfwt_16 <= while_mul_111_cmp_z;
      while_mul_111_cmp_z_bfwt_17 <= while_mul_111_cmp_z_bfwt_16;
      while_mul_111_cmp_z_bfwt_18 <= while_mul_111_cmp_z_bfwt_17;
      while_mul_111_cmp_z_bfwt_19 <= while_mul_111_cmp_z_bfwt_18;
      while_mul_111_cmp_z_bfwt_20 <= while_mul_111_cmp_z_bfwt_19;
      while_mul_111_cmp_z_bfwt_21 <= while_mul_111_cmp_z_bfwt_20;
      while_mul_111_cmp_z_bfwt_22 <= while_mul_111_cmp_z_bfwt_21;
      while_mul_111_cmp_z_bfwt_23 <= while_mul_111_cmp_z_bfwt_22;
    end
  end
  assign nl_while_acc_19_nl = while_mul_111_cmp_bcwt + 4'b1111;
  assign while_acc_19_nl = nl_while_acc_19_nl[3:0];
  assign nl_while_acc_20_nl = conv_u2u_1_2(~ while_mul_111_cmp_bdwt) + conv_u2u_1_2(while_mul_111_cmp_biwt);
  assign while_acc_20_nl = nl_while_acc_20_nl[1:0];
  assign nl_while_mul_111_cmp_bcwt  = while_acc_19_nl + conv_u2u_2_4(while_acc_20_nl);
  assign nl_while_acc_22_nl = while_mul_111_cmp_bcwt_1 + 4'b1111;
  assign while_acc_22_nl = nl_while_acc_22_nl[3:0];
  assign nl_while_acc_23_nl = conv_u2u_1_2(~ while_mul_111_cmp_bdwt_2) + conv_u2u_1_2(while_mul_111_cmp_biwt_2);
  assign while_acc_23_nl = nl_while_acc_23_nl[1:0];
  assign nl_while_mul_111_cmp_bcwt_1  = while_acc_22_nl + conv_u2u_2_4(while_acc_23_nl);
  assign nl_while_acc_25_nl = while_mul_111_cmp_bcwt_2 + 4'b1111;
  assign while_acc_25_nl = nl_while_acc_25_nl[3:0];
  assign nl_while_acc_26_nl = conv_u2u_1_2(~ while_mul_111_cmp_bdwt_4) + conv_u2u_1_2(while_mul_111_cmp_biwt_4);
  assign while_acc_26_nl = nl_while_acc_26_nl[1:0];
  assign nl_while_mul_111_cmp_bcwt_2  = while_acc_25_nl + conv_u2u_2_4(while_acc_26_nl);

  function automatic [241:0] MUX_v_242_9_2;
    input [241:0] input_0;
    input [241:0] input_1;
    input [241:0] input_2;
    input [241:0] input_3;
    input [241:0] input_4;
    input [241:0] input_5;
    input [241:0] input_6;
    input [241:0] input_7;
    input [241:0] input_8;
    input [3:0] sel;
    reg [241:0] result;
  begin
    case (sel)
      4'b0000 : begin
        result = input_0;
      end
      4'b0001 : begin
        result = input_1;
      end
      4'b0010 : begin
        result = input_2;
      end
      4'b0011 : begin
        result = input_3;
      end
      4'b0100 : begin
        result = input_4;
      end
      4'b0101 : begin
        result = input_5;
      end
      4'b0110 : begin
        result = input_6;
      end
      4'b0111 : begin
        result = input_7;
      end
      default : begin
        result = input_8;
      end
    endcase
    MUX_v_242_9_2 = result;
  end
  endfunction


  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [3:0] conv_u2u_2_4 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_4 = {{2{1'b0}}, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_111_cmp_mgc_mul_pipe_64_1_178_1_242_1_1_0_0_8_1_wait_ctrl
// ------------------------------------------------------------------


module Rotate_run_while_mul_111_cmp_mgc_mul_pipe_64_1_178_1_242_1_1_0_0_8_1_wait_ctrl
    (
  clk, rst, run_wen, run_wten, while_mul_111_cmp_oswt_unreg, while_mul_111_cmp_iswt7,
      while_mul_111_cmp_iden_1, while_mul_111_cmp_oswt_unreg_1, while_mul_111_cmp_iswt7_1,
      while_mul_111_cmp_iden_3, while_mul_111_cmp_oswt_unreg_2, while_mul_111_cmp_iswt7_2,
      while_mul_111_cmp_iden_5, run_cgwt_2, while_mul_111_cmp_bdwt, while_mul_111_cmp_bdwt_2,
      while_mul_111_cmp_bdwt_4, while_mul_111_cmp_iswt7_2_pff, while_mul_111_cmp_iswt7_1_pff,
      while_mul_111_cmp_iswt7_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_111_cmp_oswt_unreg;
  input while_mul_111_cmp_iswt7;
  output while_mul_111_cmp_iden_1;
  input while_mul_111_cmp_oswt_unreg_1;
  input while_mul_111_cmp_iswt7_1;
  output while_mul_111_cmp_iden_3;
  input while_mul_111_cmp_oswt_unreg_2;
  input while_mul_111_cmp_iswt7_2;
  output while_mul_111_cmp_iden_5;
  output run_cgwt_2;
  output while_mul_111_cmp_bdwt;
  output while_mul_111_cmp_bdwt_2;
  output while_mul_111_cmp_bdwt_4;
  input while_mul_111_cmp_iswt7_2_pff;
  input while_mul_111_cmp_iswt7_1_pff;
  input while_mul_111_cmp_iswt7_pff;


  // Interconnect Declarations
  wire while_mul_111_cmp_ogwt;
  wire while_mul_111_cmp_tiswt7;
  reg while_mul_111_cmp_hile_mul_111_cmp_pdswt6;
  reg while_mul_111_cmp_hile_mul_111_cmp_pdswt5;
  reg while_mul_111_cmp_hile_mul_111_cmp_pdswt4;
  reg while_mul_111_cmp_hile_mul_111_cmp_pdswt3;
  reg while_mul_111_cmp_hile_mul_111_cmp_pdswt2;
  reg while_mul_111_cmp_hile_mul_111_cmp_pdswt1;
  reg while_mul_111_cmp_hile_mul_111_cmp_pdswt0;
  reg [3:0] while_mul_111_cmp_icwt;
  wire [4:0] nl_while_mul_111_cmp_icwt;
  wire while_mul_111_cmp_ogwt_1;
  wire while_mul_111_cmp_tiswt7_1;
  reg while_mul_111_cmp_hile_mul_111_cmp_pdswt6_1;
  reg while_mul_111_cmp_hile_mul_111_cmp_pdswt5_1;
  reg while_mul_111_cmp_hile_mul_111_cmp_pdswt4_1;
  reg while_mul_111_cmp_hile_mul_111_cmp_pdswt3_1;
  reg while_mul_111_cmp_hile_mul_111_cmp_pdswt2_1;
  reg while_mul_111_cmp_hile_mul_111_cmp_pdswt1_1;
  reg while_mul_111_cmp_hile_mul_111_cmp_pdswt0_1;
  reg [3:0] while_mul_111_cmp_icwt_1;
  wire [4:0] nl_while_mul_111_cmp_icwt_1;
  wire while_mul_111_cmp_ogwt_2;
  wire while_mul_111_cmp_tiswt7_2;
  reg while_mul_111_cmp_hile_mul_111_cmp_pdswt6_2;
  reg while_mul_111_cmp_hile_mul_111_cmp_pdswt5_2;
  reg while_mul_111_cmp_hile_mul_111_cmp_pdswt4_2;
  reg while_mul_111_cmp_hile_mul_111_cmp_pdswt3_2;
  reg while_mul_111_cmp_hile_mul_111_cmp_pdswt2_2;
  reg while_mul_111_cmp_hile_mul_111_cmp_pdswt1_2;
  reg while_mul_111_cmp_hile_mul_111_cmp_pdswt0_2;
  reg [3:0] while_mul_111_cmp_icwt_2;
  wire [4:0] nl_while_mul_111_cmp_icwt_2;

  wire[3:0] while_acc_20_nl;
  wire[4:0] nl_while_acc_20_nl;
  wire[1:0] while_acc_21_nl;
  wire[2:0] nl_while_acc_21_nl;
  wire[3:0] while_acc_23_nl;
  wire[4:0] nl_while_acc_23_nl;
  wire[1:0] while_acc_24_nl;
  wire[2:0] nl_while_acc_24_nl;
  wire[3:0] while_acc_26_nl;
  wire[4:0] nl_while_acc_26_nl;
  wire[1:0] while_acc_27_nl;
  wire[2:0] nl_while_acc_27_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_111_cmp_bdwt = while_mul_111_cmp_oswt_unreg & run_wen;
  assign while_mul_111_cmp_tiswt7 = (~ run_wten) & while_mul_111_cmp_iswt7;
  assign while_mul_111_cmp_iden_1 = while_mul_111_cmp_ogwt;
  assign while_mul_111_cmp_ogwt = while_mul_111_cmp_hile_mul_111_cmp_pdswt0 | (while_mul_111_cmp_icwt!=4'b0000);
  assign while_mul_111_cmp_bdwt_2 = while_mul_111_cmp_oswt_unreg_1 & run_wen;
  assign while_mul_111_cmp_tiswt7_1 = (~ run_wten) & while_mul_111_cmp_iswt7_1;
  assign while_mul_111_cmp_iden_3 = while_mul_111_cmp_ogwt_1;
  assign while_mul_111_cmp_ogwt_1 = while_mul_111_cmp_hile_mul_111_cmp_pdswt0_1 |
      (while_mul_111_cmp_icwt_1!=4'b0000);
  assign while_mul_111_cmp_bdwt_4 = while_mul_111_cmp_oswt_unreg_2 & run_wen;
  assign while_mul_111_cmp_tiswt7_2 = (~ run_wten) & while_mul_111_cmp_iswt7_2;
  assign while_mul_111_cmp_iden_5 = while_mul_111_cmp_ogwt_2;
  assign while_mul_111_cmp_ogwt_2 = while_mul_111_cmp_hile_mul_111_cmp_pdswt0_2 |
      (while_mul_111_cmp_icwt_2!=4'b0000);
  assign run_cgwt_2 = while_mul_111_cmp_ogwt_2 | while_mul_111_cmp_tiswt7_2 | while_mul_111_cmp_hile_mul_111_cmp_pdswt6_2
      | while_mul_111_cmp_hile_mul_111_cmp_pdswt5_2 | while_mul_111_cmp_hile_mul_111_cmp_pdswt4_2
      | while_mul_111_cmp_hile_mul_111_cmp_pdswt3_2 | while_mul_111_cmp_hile_mul_111_cmp_pdswt2_2
      | while_mul_111_cmp_hile_mul_111_cmp_pdswt1_2 | while_mul_111_cmp_ogwt_1 |
      while_mul_111_cmp_tiswt7_1 | while_mul_111_cmp_hile_mul_111_cmp_pdswt6_1 |
      while_mul_111_cmp_hile_mul_111_cmp_pdswt5_1 | while_mul_111_cmp_hile_mul_111_cmp_pdswt4_1
      | while_mul_111_cmp_hile_mul_111_cmp_pdswt3_1 | while_mul_111_cmp_hile_mul_111_cmp_pdswt2_1
      | while_mul_111_cmp_hile_mul_111_cmp_pdswt1_1 | while_mul_111_cmp_ogwt | while_mul_111_cmp_tiswt7
      | while_mul_111_cmp_hile_mul_111_cmp_pdswt6 | while_mul_111_cmp_hile_mul_111_cmp_pdswt5
      | while_mul_111_cmp_hile_mul_111_cmp_pdswt4 | while_mul_111_cmp_hile_mul_111_cmp_pdswt3
      | while_mul_111_cmp_hile_mul_111_cmp_pdswt2 | while_mul_111_cmp_hile_mul_111_cmp_pdswt1
      | (run_wen & while_mul_111_cmp_iswt7_2_pff) | (run_wen & while_mul_111_cmp_iswt7_1_pff)
      | (run_wen & while_mul_111_cmp_iswt7_pff);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_111_cmp_hile_mul_111_cmp_pdswt6 <= 1'b0;
      while_mul_111_cmp_hile_mul_111_cmp_pdswt5 <= 1'b0;
      while_mul_111_cmp_hile_mul_111_cmp_pdswt4 <= 1'b0;
      while_mul_111_cmp_hile_mul_111_cmp_pdswt3 <= 1'b0;
      while_mul_111_cmp_hile_mul_111_cmp_pdswt2 <= 1'b0;
      while_mul_111_cmp_hile_mul_111_cmp_pdswt1 <= 1'b0;
      while_mul_111_cmp_hile_mul_111_cmp_pdswt0 <= 1'b0;
      while_mul_111_cmp_icwt <= 4'b0000;
      while_mul_111_cmp_hile_mul_111_cmp_pdswt6_1 <= 1'b0;
      while_mul_111_cmp_hile_mul_111_cmp_pdswt5_1 <= 1'b0;
      while_mul_111_cmp_hile_mul_111_cmp_pdswt4_1 <= 1'b0;
      while_mul_111_cmp_hile_mul_111_cmp_pdswt3_1 <= 1'b0;
      while_mul_111_cmp_hile_mul_111_cmp_pdswt2_1 <= 1'b0;
      while_mul_111_cmp_hile_mul_111_cmp_pdswt1_1 <= 1'b0;
      while_mul_111_cmp_hile_mul_111_cmp_pdswt0_1 <= 1'b0;
      while_mul_111_cmp_icwt_1 <= 4'b0000;
      while_mul_111_cmp_hile_mul_111_cmp_pdswt6_2 <= 1'b0;
      while_mul_111_cmp_hile_mul_111_cmp_pdswt5_2 <= 1'b0;
      while_mul_111_cmp_hile_mul_111_cmp_pdswt4_2 <= 1'b0;
      while_mul_111_cmp_hile_mul_111_cmp_pdswt3_2 <= 1'b0;
      while_mul_111_cmp_hile_mul_111_cmp_pdswt2_2 <= 1'b0;
      while_mul_111_cmp_hile_mul_111_cmp_pdswt1_2 <= 1'b0;
      while_mul_111_cmp_hile_mul_111_cmp_pdswt0_2 <= 1'b0;
      while_mul_111_cmp_icwt_2 <= 4'b0000;
    end
    else begin
      while_mul_111_cmp_hile_mul_111_cmp_pdswt6 <= while_mul_111_cmp_tiswt7;
      while_mul_111_cmp_hile_mul_111_cmp_pdswt5 <= while_mul_111_cmp_hile_mul_111_cmp_pdswt6;
      while_mul_111_cmp_hile_mul_111_cmp_pdswt4 <= while_mul_111_cmp_hile_mul_111_cmp_pdswt5;
      while_mul_111_cmp_hile_mul_111_cmp_pdswt3 <= while_mul_111_cmp_hile_mul_111_cmp_pdswt4;
      while_mul_111_cmp_hile_mul_111_cmp_pdswt2 <= while_mul_111_cmp_hile_mul_111_cmp_pdswt3;
      while_mul_111_cmp_hile_mul_111_cmp_pdswt1 <= while_mul_111_cmp_hile_mul_111_cmp_pdswt2;
      while_mul_111_cmp_hile_mul_111_cmp_pdswt0 <= while_mul_111_cmp_hile_mul_111_cmp_pdswt1;
      while_mul_111_cmp_icwt <= nl_while_mul_111_cmp_icwt[3:0];
      while_mul_111_cmp_hile_mul_111_cmp_pdswt6_1 <= while_mul_111_cmp_tiswt7_1;
      while_mul_111_cmp_hile_mul_111_cmp_pdswt5_1 <= while_mul_111_cmp_hile_mul_111_cmp_pdswt6_1;
      while_mul_111_cmp_hile_mul_111_cmp_pdswt4_1 <= while_mul_111_cmp_hile_mul_111_cmp_pdswt5_1;
      while_mul_111_cmp_hile_mul_111_cmp_pdswt3_1 <= while_mul_111_cmp_hile_mul_111_cmp_pdswt4_1;
      while_mul_111_cmp_hile_mul_111_cmp_pdswt2_1 <= while_mul_111_cmp_hile_mul_111_cmp_pdswt3_1;
      while_mul_111_cmp_hile_mul_111_cmp_pdswt1_1 <= while_mul_111_cmp_hile_mul_111_cmp_pdswt2_1;
      while_mul_111_cmp_hile_mul_111_cmp_pdswt0_1 <= while_mul_111_cmp_hile_mul_111_cmp_pdswt1_1;
      while_mul_111_cmp_icwt_1 <= nl_while_mul_111_cmp_icwt_1[3:0];
      while_mul_111_cmp_hile_mul_111_cmp_pdswt6_2 <= while_mul_111_cmp_tiswt7_2;
      while_mul_111_cmp_hile_mul_111_cmp_pdswt5_2 <= while_mul_111_cmp_hile_mul_111_cmp_pdswt6_2;
      while_mul_111_cmp_hile_mul_111_cmp_pdswt4_2 <= while_mul_111_cmp_hile_mul_111_cmp_pdswt5_2;
      while_mul_111_cmp_hile_mul_111_cmp_pdswt3_2 <= while_mul_111_cmp_hile_mul_111_cmp_pdswt4_2;
      while_mul_111_cmp_hile_mul_111_cmp_pdswt2_2 <= while_mul_111_cmp_hile_mul_111_cmp_pdswt3_2;
      while_mul_111_cmp_hile_mul_111_cmp_pdswt1_2 <= while_mul_111_cmp_hile_mul_111_cmp_pdswt2_2;
      while_mul_111_cmp_hile_mul_111_cmp_pdswt0_2 <= while_mul_111_cmp_hile_mul_111_cmp_pdswt1_2;
      while_mul_111_cmp_icwt_2 <= nl_while_mul_111_cmp_icwt_2[3:0];
    end
  end
  assign nl_while_acc_20_nl = while_mul_111_cmp_icwt + 4'b1111;
  assign while_acc_20_nl = nl_while_acc_20_nl[3:0];
  assign nl_while_acc_21_nl = conv_u2u_1_2(while_mul_111_cmp_hile_mul_111_cmp_pdswt0)
      + conv_u2u_1_2(~ while_mul_111_cmp_ogwt);
  assign while_acc_21_nl = nl_while_acc_21_nl[1:0];
  assign nl_while_mul_111_cmp_icwt  = while_acc_20_nl + conv_u2u_2_4(while_acc_21_nl);
  assign nl_while_acc_23_nl = while_mul_111_cmp_icwt_1 + 4'b1111;
  assign while_acc_23_nl = nl_while_acc_23_nl[3:0];
  assign nl_while_acc_24_nl = conv_u2u_1_2(while_mul_111_cmp_hile_mul_111_cmp_pdswt0_1)
      + conv_u2u_1_2(~ while_mul_111_cmp_ogwt_1);
  assign while_acc_24_nl = nl_while_acc_24_nl[1:0];
  assign nl_while_mul_111_cmp_icwt_1  = while_acc_23_nl + conv_u2u_2_4(while_acc_24_nl);
  assign nl_while_acc_26_nl = while_mul_111_cmp_icwt_2 + 4'b1111;
  assign while_acc_26_nl = nl_while_acc_26_nl[3:0];
  assign nl_while_acc_27_nl = conv_u2u_1_2(while_mul_111_cmp_hile_mul_111_cmp_pdswt0_2)
      + conv_u2u_1_2(~ while_mul_111_cmp_ogwt_2);
  assign while_acc_27_nl = nl_while_acc_27_nl[1:0];
  assign nl_while_mul_111_cmp_icwt_2  = while_acc_26_nl + conv_u2u_2_4(while_acc_27_nl);

  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [3:0] conv_u2u_2_4 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_4 = {{2{1'b0}}, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_110_cmp_mgc_mul_pipe_64_1_242_1_258_1_1_0_0_10_1_wait_dp
// ------------------------------------------------------------------


module Rotate_run_while_mul_110_cmp_mgc_mul_pipe_64_1_242_1_258_1_1_0_0_10_1_wait_dp
    (
  clk, rst, while_mul_110_cmp_bawt, while_mul_110_cmp_iden, while_mul_110_cmp_iden_2,
      while_mul_110_cmp_iden_4, while_mul_110_cmp_z_mxwt, while_mul_110_cmp_z_mxwt_1,
      while_mul_110_cmp_z_mxwt_2, while_mul_110_cmp_biwt, while_mul_110_cmp_bdwt,
      while_mul_110_cmp_biwt_2, while_mul_110_cmp_bdwt_2, while_mul_110_cmp_biwt_4,
      while_mul_110_cmp_bdwt_4, while_mul_110_cmp_z
);
  input clk;
  input rst;
  output while_mul_110_cmp_bawt;
  output while_mul_110_cmp_iden;
  output while_mul_110_cmp_iden_2;
  output while_mul_110_cmp_iden_4;
  output [255:0] while_mul_110_cmp_z_mxwt;
  output [255:0] while_mul_110_cmp_z_mxwt_1;
  output [209:0] while_mul_110_cmp_z_mxwt_2;
  input while_mul_110_cmp_biwt;
  input while_mul_110_cmp_bdwt;
  input while_mul_110_cmp_biwt_2;
  input while_mul_110_cmp_bdwt_2;
  input while_mul_110_cmp_biwt_4;
  input while_mul_110_cmp_bdwt_4;
  input [257:0] while_mul_110_cmp_z;


  // Interconnect Declarations
  reg [3:0] while_mul_110_cmp_bcwt;
  wire [4:0] nl_while_mul_110_cmp_bcwt;
  reg [3:0] while_mul_110_cmp_bcwt_1;
  wire [4:0] nl_while_mul_110_cmp_bcwt_1;
  reg [3:0] while_mul_110_cmp_bcwt_2;
  wire [4:0] nl_while_mul_110_cmp_bcwt_2;
  reg [255:0] while_mul_110_cmp_z_bfwt_9_256_1;
  reg [255:0] while_mul_110_cmp_z_bfwt_19_257_2;
  reg [209:0] while_mul_110_cmp_z_bfwt_29_256_47;
  reg [255:0] while_mul_110_cmp_z_bfwt_8_256_1;
  reg [255:0] while_mul_110_cmp_z_bfwt_18_257_2;
  reg [209:0] while_mul_110_cmp_z_bfwt_28_256_47;
  reg [255:0] while_mul_110_cmp_z_bfwt_7_256_1;
  reg [255:0] while_mul_110_cmp_z_bfwt_17_257_2;
  reg [209:0] while_mul_110_cmp_z_bfwt_27_256_47;
  reg [255:0] while_mul_110_cmp_z_bfwt_6_256_1;
  reg [255:0] while_mul_110_cmp_z_bfwt_16_257_2;
  reg [209:0] while_mul_110_cmp_z_bfwt_26_256_47;
  reg [255:0] while_mul_110_cmp_z_bfwt_5_256_1;
  reg [255:0] while_mul_110_cmp_z_bfwt_15_257_2;
  reg [209:0] while_mul_110_cmp_z_bfwt_25_256_47;
  reg [255:0] while_mul_110_cmp_z_bfwt_4_256_1;
  reg [255:0] while_mul_110_cmp_z_bfwt_14_257_2;
  reg [209:0] while_mul_110_cmp_z_bfwt_24_256_47;
  reg [255:0] while_mul_110_cmp_z_bfwt_3_256_1;
  reg [255:0] while_mul_110_cmp_z_bfwt_13_257_2;
  reg [209:0] while_mul_110_cmp_z_bfwt_23_256_47;
  reg [255:0] while_mul_110_cmp_z_bfwt_2_256_1;
  reg [255:0] while_mul_110_cmp_z_bfwt_12_257_2;
  reg [209:0] while_mul_110_cmp_z_bfwt_22_256_47;
  reg [255:0] while_mul_110_cmp_z_bfwt_1_256_1;
  reg [255:0] while_mul_110_cmp_z_bfwt_11_257_2;
  reg [209:0] while_mul_110_cmp_z_bfwt_21_256_47;
  reg [255:0] while_mul_110_cmp_z_bfwt_256_1;
  reg [255:0] while_mul_110_cmp_z_bfwt_10_257_2;
  reg [209:0] while_mul_110_cmp_z_bfwt_20_256_47;

  wire[3:0] while_acc_13_nl;
  wire[4:0] nl_while_acc_13_nl;
  wire[1:0] while_acc_14_nl;
  wire[2:0] nl_while_acc_14_nl;
  wire[3:0] while_acc_16_nl;
  wire[4:0] nl_while_acc_16_nl;
  wire[1:0] while_acc_17_nl;
  wire[2:0] nl_while_acc_17_nl;
  wire[3:0] while_acc_19_nl;
  wire[4:0] nl_while_acc_19_nl;
  wire[1:0] while_acc_20_nl;
  wire[2:0] nl_while_acc_20_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_110_cmp_iden = while_mul_110_cmp_biwt | while_mul_110_cmp_bdwt;
  assign while_mul_110_cmp_bawt = while_mul_110_cmp_biwt | (while_mul_110_cmp_bcwt!=4'b0000);
  assign while_mul_110_cmp_iden_2 = while_mul_110_cmp_biwt_2 | while_mul_110_cmp_bdwt_2;
  assign while_mul_110_cmp_iden_4 = while_mul_110_cmp_biwt_4 | while_mul_110_cmp_bdwt_4;
  assign while_mul_110_cmp_z_mxwt = MUX_v_256_11_2((while_mul_110_cmp_z[256:1]),
      while_mul_110_cmp_z_bfwt_256_1, while_mul_110_cmp_z_bfwt_1_256_1, while_mul_110_cmp_z_bfwt_2_256_1,
      while_mul_110_cmp_z_bfwt_3_256_1, while_mul_110_cmp_z_bfwt_4_256_1, while_mul_110_cmp_z_bfwt_5_256_1,
      while_mul_110_cmp_z_bfwt_6_256_1, while_mul_110_cmp_z_bfwt_7_256_1, while_mul_110_cmp_z_bfwt_8_256_1,
      while_mul_110_cmp_z_bfwt_9_256_1, while_mul_110_cmp_bcwt_2);
  assign while_mul_110_cmp_z_mxwt_1 = MUX_v_256_11_2((while_mul_110_cmp_z[257:2]),
      while_mul_110_cmp_z_bfwt_10_257_2, while_mul_110_cmp_z_bfwt_11_257_2, while_mul_110_cmp_z_bfwt_12_257_2,
      while_mul_110_cmp_z_bfwt_13_257_2, while_mul_110_cmp_z_bfwt_14_257_2, while_mul_110_cmp_z_bfwt_15_257_2,
      while_mul_110_cmp_z_bfwt_16_257_2, while_mul_110_cmp_z_bfwt_17_257_2, while_mul_110_cmp_z_bfwt_18_257_2,
      while_mul_110_cmp_z_bfwt_19_257_2, while_mul_110_cmp_bcwt_1);
  assign while_mul_110_cmp_z_mxwt_2 = MUX_v_210_11_2((while_mul_110_cmp_z[256:47]),
      while_mul_110_cmp_z_bfwt_20_256_47, while_mul_110_cmp_z_bfwt_21_256_47, while_mul_110_cmp_z_bfwt_22_256_47,
      while_mul_110_cmp_z_bfwt_23_256_47, while_mul_110_cmp_z_bfwt_24_256_47, while_mul_110_cmp_z_bfwt_25_256_47,
      while_mul_110_cmp_z_bfwt_26_256_47, while_mul_110_cmp_z_bfwt_27_256_47, while_mul_110_cmp_z_bfwt_28_256_47,
      while_mul_110_cmp_z_bfwt_29_256_47, while_mul_110_cmp_bcwt);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_110_cmp_bcwt <= 4'b0000;
      while_mul_110_cmp_bcwt_1 <= 4'b0000;
      while_mul_110_cmp_bcwt_2 <= 4'b0000;
    end
    else begin
      while_mul_110_cmp_bcwt <= nl_while_mul_110_cmp_bcwt[3:0];
      while_mul_110_cmp_bcwt_1 <= nl_while_mul_110_cmp_bcwt_1[3:0];
      while_mul_110_cmp_bcwt_2 <= nl_while_mul_110_cmp_bcwt_2[3:0];
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_110_cmp_z_bfwt_256_1 <= 256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_110_cmp_z_bfwt_1_256_1 <= 256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_110_cmp_z_bfwt_2_256_1 <= 256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_110_cmp_z_bfwt_3_256_1 <= 256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_110_cmp_z_bfwt_4_256_1 <= 256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_110_cmp_z_bfwt_5_256_1 <= 256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_110_cmp_z_bfwt_6_256_1 <= 256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_110_cmp_z_bfwt_7_256_1 <= 256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_110_cmp_z_bfwt_8_256_1 <= 256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_110_cmp_z_bfwt_9_256_1 <= 256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_110_cmp_biwt_4 ) begin
      while_mul_110_cmp_z_bfwt_256_1 <= while_mul_110_cmp_z[256:1];
      while_mul_110_cmp_z_bfwt_1_256_1 <= while_mul_110_cmp_z_bfwt_256_1;
      while_mul_110_cmp_z_bfwt_2_256_1 <= while_mul_110_cmp_z_bfwt_1_256_1;
      while_mul_110_cmp_z_bfwt_3_256_1 <= while_mul_110_cmp_z_bfwt_2_256_1;
      while_mul_110_cmp_z_bfwt_4_256_1 <= while_mul_110_cmp_z_bfwt_3_256_1;
      while_mul_110_cmp_z_bfwt_5_256_1 <= while_mul_110_cmp_z_bfwt_4_256_1;
      while_mul_110_cmp_z_bfwt_6_256_1 <= while_mul_110_cmp_z_bfwt_5_256_1;
      while_mul_110_cmp_z_bfwt_7_256_1 <= while_mul_110_cmp_z_bfwt_6_256_1;
      while_mul_110_cmp_z_bfwt_8_256_1 <= while_mul_110_cmp_z_bfwt_7_256_1;
      while_mul_110_cmp_z_bfwt_9_256_1 <= while_mul_110_cmp_z_bfwt_8_256_1;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_110_cmp_z_bfwt_10_257_2 <= 256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_110_cmp_z_bfwt_11_257_2 <= 256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_110_cmp_z_bfwt_12_257_2 <= 256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_110_cmp_z_bfwt_13_257_2 <= 256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_110_cmp_z_bfwt_14_257_2 <= 256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_110_cmp_z_bfwt_15_257_2 <= 256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_110_cmp_z_bfwt_16_257_2 <= 256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_110_cmp_z_bfwt_17_257_2 <= 256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_110_cmp_z_bfwt_18_257_2 <= 256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_110_cmp_z_bfwt_19_257_2 <= 256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_110_cmp_biwt_2 ) begin
      while_mul_110_cmp_z_bfwt_10_257_2 <= while_mul_110_cmp_z[257:2];
      while_mul_110_cmp_z_bfwt_11_257_2 <= while_mul_110_cmp_z_bfwt_10_257_2;
      while_mul_110_cmp_z_bfwt_12_257_2 <= while_mul_110_cmp_z_bfwt_11_257_2;
      while_mul_110_cmp_z_bfwt_13_257_2 <= while_mul_110_cmp_z_bfwt_12_257_2;
      while_mul_110_cmp_z_bfwt_14_257_2 <= while_mul_110_cmp_z_bfwt_13_257_2;
      while_mul_110_cmp_z_bfwt_15_257_2 <= while_mul_110_cmp_z_bfwt_14_257_2;
      while_mul_110_cmp_z_bfwt_16_257_2 <= while_mul_110_cmp_z_bfwt_15_257_2;
      while_mul_110_cmp_z_bfwt_17_257_2 <= while_mul_110_cmp_z_bfwt_16_257_2;
      while_mul_110_cmp_z_bfwt_18_257_2 <= while_mul_110_cmp_z_bfwt_17_257_2;
      while_mul_110_cmp_z_bfwt_19_257_2 <= while_mul_110_cmp_z_bfwt_18_257_2;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_110_cmp_z_bfwt_20_256_47 <= 210'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_110_cmp_z_bfwt_21_256_47 <= 210'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_110_cmp_z_bfwt_22_256_47 <= 210'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_110_cmp_z_bfwt_23_256_47 <= 210'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_110_cmp_z_bfwt_24_256_47 <= 210'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_110_cmp_z_bfwt_25_256_47 <= 210'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_110_cmp_z_bfwt_26_256_47 <= 210'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_110_cmp_z_bfwt_27_256_47 <= 210'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_110_cmp_z_bfwt_28_256_47 <= 210'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_110_cmp_z_bfwt_29_256_47 <= 210'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_110_cmp_biwt ) begin
      while_mul_110_cmp_z_bfwt_20_256_47 <= while_mul_110_cmp_z[256:47];
      while_mul_110_cmp_z_bfwt_21_256_47 <= while_mul_110_cmp_z_bfwt_20_256_47;
      while_mul_110_cmp_z_bfwt_22_256_47 <= while_mul_110_cmp_z_bfwt_21_256_47;
      while_mul_110_cmp_z_bfwt_23_256_47 <= while_mul_110_cmp_z_bfwt_22_256_47;
      while_mul_110_cmp_z_bfwt_24_256_47 <= while_mul_110_cmp_z_bfwt_23_256_47;
      while_mul_110_cmp_z_bfwt_25_256_47 <= while_mul_110_cmp_z_bfwt_24_256_47;
      while_mul_110_cmp_z_bfwt_26_256_47 <= while_mul_110_cmp_z_bfwt_25_256_47;
      while_mul_110_cmp_z_bfwt_27_256_47 <= while_mul_110_cmp_z_bfwt_26_256_47;
      while_mul_110_cmp_z_bfwt_28_256_47 <= while_mul_110_cmp_z_bfwt_27_256_47;
      while_mul_110_cmp_z_bfwt_29_256_47 <= while_mul_110_cmp_z_bfwt_28_256_47;
    end
  end
  assign nl_while_acc_13_nl = while_mul_110_cmp_bcwt + 4'b1111;
  assign while_acc_13_nl = nl_while_acc_13_nl[3:0];
  assign nl_while_acc_14_nl = conv_u2u_1_2(~ while_mul_110_cmp_bdwt) + conv_u2u_1_2(while_mul_110_cmp_biwt);
  assign while_acc_14_nl = nl_while_acc_14_nl[1:0];
  assign nl_while_mul_110_cmp_bcwt  = while_acc_13_nl + conv_u2u_2_4(while_acc_14_nl);
  assign nl_while_acc_16_nl = while_mul_110_cmp_bcwt_1 + 4'b1111;
  assign while_acc_16_nl = nl_while_acc_16_nl[3:0];
  assign nl_while_acc_17_nl = conv_u2u_1_2(~ while_mul_110_cmp_bdwt_2) + conv_u2u_1_2(while_mul_110_cmp_biwt_2);
  assign while_acc_17_nl = nl_while_acc_17_nl[1:0];
  assign nl_while_mul_110_cmp_bcwt_1  = while_acc_16_nl + conv_u2u_2_4(while_acc_17_nl);
  assign nl_while_acc_19_nl = while_mul_110_cmp_bcwt_2 + 4'b1111;
  assign while_acc_19_nl = nl_while_acc_19_nl[3:0];
  assign nl_while_acc_20_nl = conv_u2u_1_2(~ while_mul_110_cmp_bdwt_4) + conv_u2u_1_2(while_mul_110_cmp_biwt_4);
  assign while_acc_20_nl = nl_while_acc_20_nl[1:0];
  assign nl_while_mul_110_cmp_bcwt_2  = while_acc_19_nl + conv_u2u_2_4(while_acc_20_nl);

  function automatic [209:0] MUX_v_210_11_2;
    input [209:0] input_0;
    input [209:0] input_1;
    input [209:0] input_2;
    input [209:0] input_3;
    input [209:0] input_4;
    input [209:0] input_5;
    input [209:0] input_6;
    input [209:0] input_7;
    input [209:0] input_8;
    input [209:0] input_9;
    input [209:0] input_10;
    input [3:0] sel;
    reg [209:0] result;
  begin
    case (sel)
      4'b0000 : begin
        result = input_0;
      end
      4'b0001 : begin
        result = input_1;
      end
      4'b0010 : begin
        result = input_2;
      end
      4'b0011 : begin
        result = input_3;
      end
      4'b0100 : begin
        result = input_4;
      end
      4'b0101 : begin
        result = input_5;
      end
      4'b0110 : begin
        result = input_6;
      end
      4'b0111 : begin
        result = input_7;
      end
      4'b1000 : begin
        result = input_8;
      end
      4'b1001 : begin
        result = input_9;
      end
      default : begin
        result = input_10;
      end
    endcase
    MUX_v_210_11_2 = result;
  end
  endfunction


  function automatic [255:0] MUX_v_256_11_2;
    input [255:0] input_0;
    input [255:0] input_1;
    input [255:0] input_2;
    input [255:0] input_3;
    input [255:0] input_4;
    input [255:0] input_5;
    input [255:0] input_6;
    input [255:0] input_7;
    input [255:0] input_8;
    input [255:0] input_9;
    input [255:0] input_10;
    input [3:0] sel;
    reg [255:0] result;
  begin
    case (sel)
      4'b0000 : begin
        result = input_0;
      end
      4'b0001 : begin
        result = input_1;
      end
      4'b0010 : begin
        result = input_2;
      end
      4'b0011 : begin
        result = input_3;
      end
      4'b0100 : begin
        result = input_4;
      end
      4'b0101 : begin
        result = input_5;
      end
      4'b0110 : begin
        result = input_6;
      end
      4'b0111 : begin
        result = input_7;
      end
      4'b1000 : begin
        result = input_8;
      end
      4'b1001 : begin
        result = input_9;
      end
      default : begin
        result = input_10;
      end
    endcase
    MUX_v_256_11_2 = result;
  end
  endfunction


  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [3:0] conv_u2u_2_4 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_4 = {{2{1'b0}}, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_110_cmp_mgc_mul_pipe_64_1_242_1_258_1_1_0_0_10_1_wait_ctrl
// ------------------------------------------------------------------


module Rotate_run_while_mul_110_cmp_mgc_mul_pipe_64_1_242_1_258_1_1_0_0_10_1_wait_ctrl
    (
  clk, rst, run_wen, run_wten, while_mul_110_cmp_oswt_unreg, while_mul_110_cmp_iswt9,
      while_mul_110_cmp_iden_1, while_mul_110_cmp_oswt_unreg_1, while_mul_110_cmp_iswt9_1,
      while_mul_110_cmp_iden_3, while_mul_110_cmp_oswt_unreg_2, while_mul_110_cmp_iswt9_2,
      while_mul_110_cmp_iden_5, run_cgwt_1, while_mul_110_cmp_bdwt, while_mul_110_cmp_bdwt_2,
      while_mul_110_cmp_bdwt_4, while_mul_110_cmp_iswt9_2_pff, while_mul_110_cmp_iswt9_1_pff,
      while_mul_110_cmp_iswt9_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_110_cmp_oswt_unreg;
  input while_mul_110_cmp_iswt9;
  output while_mul_110_cmp_iden_1;
  input while_mul_110_cmp_oswt_unreg_1;
  input while_mul_110_cmp_iswt9_1;
  output while_mul_110_cmp_iden_3;
  input while_mul_110_cmp_oswt_unreg_2;
  input while_mul_110_cmp_iswt9_2;
  output while_mul_110_cmp_iden_5;
  output run_cgwt_1;
  output while_mul_110_cmp_bdwt;
  output while_mul_110_cmp_bdwt_2;
  output while_mul_110_cmp_bdwt_4;
  input while_mul_110_cmp_iswt9_2_pff;
  input while_mul_110_cmp_iswt9_1_pff;
  input while_mul_110_cmp_iswt9_pff;


  // Interconnect Declarations
  wire while_mul_110_cmp_ogwt;
  wire while_mul_110_cmp_tiswt9;
  reg while_mul_110_cmp_hile_mul_110_cmp_pdswt8;
  reg while_mul_110_cmp_hile_mul_110_cmp_pdswt7;
  reg while_mul_110_cmp_hile_mul_110_cmp_pdswt6;
  reg while_mul_110_cmp_hile_mul_110_cmp_pdswt5;
  reg while_mul_110_cmp_hile_mul_110_cmp_pdswt4;
  reg while_mul_110_cmp_hile_mul_110_cmp_pdswt3;
  reg while_mul_110_cmp_hile_mul_110_cmp_pdswt2;
  reg while_mul_110_cmp_hile_mul_110_cmp_pdswt1;
  reg while_mul_110_cmp_hile_mul_110_cmp_pdswt0;
  reg [3:0] while_mul_110_cmp_icwt;
  wire [4:0] nl_while_mul_110_cmp_icwt;
  wire while_mul_110_cmp_ogwt_1;
  wire while_mul_110_cmp_tiswt9_1;
  reg while_mul_110_cmp_hile_mul_110_cmp_pdswt8_1;
  reg while_mul_110_cmp_hile_mul_110_cmp_pdswt7_1;
  reg while_mul_110_cmp_hile_mul_110_cmp_pdswt6_1;
  reg while_mul_110_cmp_hile_mul_110_cmp_pdswt5_1;
  reg while_mul_110_cmp_hile_mul_110_cmp_pdswt4_1;
  reg while_mul_110_cmp_hile_mul_110_cmp_pdswt3_1;
  reg while_mul_110_cmp_hile_mul_110_cmp_pdswt2_1;
  reg while_mul_110_cmp_hile_mul_110_cmp_pdswt1_1;
  reg while_mul_110_cmp_hile_mul_110_cmp_pdswt0_1;
  reg [3:0] while_mul_110_cmp_icwt_1;
  wire [4:0] nl_while_mul_110_cmp_icwt_1;
  wire while_mul_110_cmp_ogwt_2;
  wire while_mul_110_cmp_tiswt9_2;
  reg while_mul_110_cmp_hile_mul_110_cmp_pdswt8_2;
  reg while_mul_110_cmp_hile_mul_110_cmp_pdswt7_2;
  reg while_mul_110_cmp_hile_mul_110_cmp_pdswt6_2;
  reg while_mul_110_cmp_hile_mul_110_cmp_pdswt5_2;
  reg while_mul_110_cmp_hile_mul_110_cmp_pdswt4_2;
  reg while_mul_110_cmp_hile_mul_110_cmp_pdswt3_2;
  reg while_mul_110_cmp_hile_mul_110_cmp_pdswt2_2;
  reg while_mul_110_cmp_hile_mul_110_cmp_pdswt1_2;
  reg while_mul_110_cmp_hile_mul_110_cmp_pdswt0_2;
  reg [3:0] while_mul_110_cmp_icwt_2;
  wire [4:0] nl_while_mul_110_cmp_icwt_2;

  wire[3:0] while_acc_14_nl;
  wire[4:0] nl_while_acc_14_nl;
  wire[1:0] while_acc_15_nl;
  wire[2:0] nl_while_acc_15_nl;
  wire[3:0] while_acc_17_nl;
  wire[4:0] nl_while_acc_17_nl;
  wire[1:0] while_acc_18_nl;
  wire[2:0] nl_while_acc_18_nl;
  wire[3:0] while_acc_20_nl;
  wire[4:0] nl_while_acc_20_nl;
  wire[1:0] while_acc_21_nl;
  wire[2:0] nl_while_acc_21_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_110_cmp_bdwt = while_mul_110_cmp_oswt_unreg & run_wen;
  assign while_mul_110_cmp_tiswt9 = (~ run_wten) & while_mul_110_cmp_iswt9;
  assign while_mul_110_cmp_iden_1 = while_mul_110_cmp_ogwt;
  assign while_mul_110_cmp_ogwt = while_mul_110_cmp_hile_mul_110_cmp_pdswt0 | (while_mul_110_cmp_icwt!=4'b0000);
  assign while_mul_110_cmp_bdwt_2 = while_mul_110_cmp_oswt_unreg_1 & run_wen;
  assign while_mul_110_cmp_tiswt9_1 = (~ run_wten) & while_mul_110_cmp_iswt9_1;
  assign while_mul_110_cmp_iden_3 = while_mul_110_cmp_ogwt_1;
  assign while_mul_110_cmp_ogwt_1 = while_mul_110_cmp_hile_mul_110_cmp_pdswt0_1 |
      (while_mul_110_cmp_icwt_1!=4'b0000);
  assign while_mul_110_cmp_bdwt_4 = while_mul_110_cmp_oswt_unreg_2 & run_wen;
  assign while_mul_110_cmp_tiswt9_2 = (~ run_wten) & while_mul_110_cmp_iswt9_2;
  assign while_mul_110_cmp_iden_5 = while_mul_110_cmp_ogwt_2;
  assign while_mul_110_cmp_ogwt_2 = while_mul_110_cmp_hile_mul_110_cmp_pdswt0_2 |
      (while_mul_110_cmp_icwt_2!=4'b0000);
  assign run_cgwt_1 = while_mul_110_cmp_ogwt_2 | while_mul_110_cmp_tiswt9_2 | while_mul_110_cmp_hile_mul_110_cmp_pdswt8_2
      | while_mul_110_cmp_hile_mul_110_cmp_pdswt7_2 | while_mul_110_cmp_hile_mul_110_cmp_pdswt6_2
      | while_mul_110_cmp_hile_mul_110_cmp_pdswt5_2 | while_mul_110_cmp_hile_mul_110_cmp_pdswt4_2
      | while_mul_110_cmp_hile_mul_110_cmp_pdswt3_2 | while_mul_110_cmp_hile_mul_110_cmp_pdswt2_2
      | while_mul_110_cmp_hile_mul_110_cmp_pdswt1_2 | while_mul_110_cmp_ogwt_1 |
      while_mul_110_cmp_tiswt9_1 | while_mul_110_cmp_hile_mul_110_cmp_pdswt8_1 |
      while_mul_110_cmp_hile_mul_110_cmp_pdswt7_1 | while_mul_110_cmp_hile_mul_110_cmp_pdswt6_1
      | while_mul_110_cmp_hile_mul_110_cmp_pdswt5_1 | while_mul_110_cmp_hile_mul_110_cmp_pdswt4_1
      | while_mul_110_cmp_hile_mul_110_cmp_pdswt3_1 | while_mul_110_cmp_hile_mul_110_cmp_pdswt2_1
      | while_mul_110_cmp_hile_mul_110_cmp_pdswt1_1 | while_mul_110_cmp_ogwt | while_mul_110_cmp_tiswt9
      | while_mul_110_cmp_hile_mul_110_cmp_pdswt8 | while_mul_110_cmp_hile_mul_110_cmp_pdswt7
      | while_mul_110_cmp_hile_mul_110_cmp_pdswt6 | while_mul_110_cmp_hile_mul_110_cmp_pdswt5
      | while_mul_110_cmp_hile_mul_110_cmp_pdswt4 | while_mul_110_cmp_hile_mul_110_cmp_pdswt3
      | while_mul_110_cmp_hile_mul_110_cmp_pdswt2 | while_mul_110_cmp_hile_mul_110_cmp_pdswt1
      | (run_wen & while_mul_110_cmp_iswt9_2_pff) | (run_wen & while_mul_110_cmp_iswt9_1_pff)
      | (run_wen & while_mul_110_cmp_iswt9_pff);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_110_cmp_hile_mul_110_cmp_pdswt8 <= 1'b0;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt7 <= 1'b0;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt6 <= 1'b0;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt5 <= 1'b0;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt4 <= 1'b0;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt3 <= 1'b0;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt2 <= 1'b0;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt1 <= 1'b0;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt0 <= 1'b0;
      while_mul_110_cmp_icwt <= 4'b0000;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt8_1 <= 1'b0;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt7_1 <= 1'b0;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt6_1 <= 1'b0;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt5_1 <= 1'b0;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt4_1 <= 1'b0;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt3_1 <= 1'b0;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt2_1 <= 1'b0;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt1_1 <= 1'b0;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt0_1 <= 1'b0;
      while_mul_110_cmp_icwt_1 <= 4'b0000;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt8_2 <= 1'b0;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt7_2 <= 1'b0;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt6_2 <= 1'b0;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt5_2 <= 1'b0;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt4_2 <= 1'b0;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt3_2 <= 1'b0;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt2_2 <= 1'b0;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt1_2 <= 1'b0;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt0_2 <= 1'b0;
      while_mul_110_cmp_icwt_2 <= 4'b0000;
    end
    else begin
      while_mul_110_cmp_hile_mul_110_cmp_pdswt8 <= while_mul_110_cmp_tiswt9;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt7 <= while_mul_110_cmp_hile_mul_110_cmp_pdswt8;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt6 <= while_mul_110_cmp_hile_mul_110_cmp_pdswt7;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt5 <= while_mul_110_cmp_hile_mul_110_cmp_pdswt6;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt4 <= while_mul_110_cmp_hile_mul_110_cmp_pdswt5;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt3 <= while_mul_110_cmp_hile_mul_110_cmp_pdswt4;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt2 <= while_mul_110_cmp_hile_mul_110_cmp_pdswt3;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt1 <= while_mul_110_cmp_hile_mul_110_cmp_pdswt2;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt0 <= while_mul_110_cmp_hile_mul_110_cmp_pdswt1;
      while_mul_110_cmp_icwt <= nl_while_mul_110_cmp_icwt[3:0];
      while_mul_110_cmp_hile_mul_110_cmp_pdswt8_1 <= while_mul_110_cmp_tiswt9_1;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt7_1 <= while_mul_110_cmp_hile_mul_110_cmp_pdswt8_1;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt6_1 <= while_mul_110_cmp_hile_mul_110_cmp_pdswt7_1;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt5_1 <= while_mul_110_cmp_hile_mul_110_cmp_pdswt6_1;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt4_1 <= while_mul_110_cmp_hile_mul_110_cmp_pdswt5_1;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt3_1 <= while_mul_110_cmp_hile_mul_110_cmp_pdswt4_1;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt2_1 <= while_mul_110_cmp_hile_mul_110_cmp_pdswt3_1;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt1_1 <= while_mul_110_cmp_hile_mul_110_cmp_pdswt2_1;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt0_1 <= while_mul_110_cmp_hile_mul_110_cmp_pdswt1_1;
      while_mul_110_cmp_icwt_1 <= nl_while_mul_110_cmp_icwt_1[3:0];
      while_mul_110_cmp_hile_mul_110_cmp_pdswt8_2 <= while_mul_110_cmp_tiswt9_2;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt7_2 <= while_mul_110_cmp_hile_mul_110_cmp_pdswt8_2;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt6_2 <= while_mul_110_cmp_hile_mul_110_cmp_pdswt7_2;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt5_2 <= while_mul_110_cmp_hile_mul_110_cmp_pdswt6_2;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt4_2 <= while_mul_110_cmp_hile_mul_110_cmp_pdswt5_2;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt3_2 <= while_mul_110_cmp_hile_mul_110_cmp_pdswt4_2;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt2_2 <= while_mul_110_cmp_hile_mul_110_cmp_pdswt3_2;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt1_2 <= while_mul_110_cmp_hile_mul_110_cmp_pdswt2_2;
      while_mul_110_cmp_hile_mul_110_cmp_pdswt0_2 <= while_mul_110_cmp_hile_mul_110_cmp_pdswt1_2;
      while_mul_110_cmp_icwt_2 <= nl_while_mul_110_cmp_icwt_2[3:0];
    end
  end
  assign nl_while_acc_14_nl = while_mul_110_cmp_icwt + 4'b1111;
  assign while_acc_14_nl = nl_while_acc_14_nl[3:0];
  assign nl_while_acc_15_nl = conv_u2u_1_2(while_mul_110_cmp_hile_mul_110_cmp_pdswt0)
      + conv_u2u_1_2(~ while_mul_110_cmp_ogwt);
  assign while_acc_15_nl = nl_while_acc_15_nl[1:0];
  assign nl_while_mul_110_cmp_icwt  = while_acc_14_nl + conv_u2u_2_4(while_acc_15_nl);
  assign nl_while_acc_17_nl = while_mul_110_cmp_icwt_1 + 4'b1111;
  assign while_acc_17_nl = nl_while_acc_17_nl[3:0];
  assign nl_while_acc_18_nl = conv_u2u_1_2(while_mul_110_cmp_hile_mul_110_cmp_pdswt0_1)
      + conv_u2u_1_2(~ while_mul_110_cmp_ogwt_1);
  assign while_acc_18_nl = nl_while_acc_18_nl[1:0];
  assign nl_while_mul_110_cmp_icwt_1  = while_acc_17_nl + conv_u2u_2_4(while_acc_18_nl);
  assign nl_while_acc_20_nl = while_mul_110_cmp_icwt_2 + 4'b1111;
  assign while_acc_20_nl = nl_while_acc_20_nl[3:0];
  assign nl_while_acc_21_nl = conv_u2u_1_2(while_mul_110_cmp_hile_mul_110_cmp_pdswt0_2)
      + conv_u2u_1_2(~ while_mul_110_cmp_ogwt_2);
  assign while_acc_21_nl = nl_while_acc_21_nl[1:0];
  assign nl_while_mul_110_cmp_icwt_2  = while_acc_20_nl + conv_u2u_2_4(while_acc_21_nl);

  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [3:0] conv_u2u_2_4 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_4 = {{2{1'b0}}, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_115_cmp_mgc_mul_pipe_67_1_113_1_163_1_1_0_0_6_1_wait_dp
// ------------------------------------------------------------------


module Rotate_run_while_mul_115_cmp_mgc_mul_pipe_67_1_113_1_163_1_1_0_0_6_1_wait_dp
    (
  clk, rst, while_mul_115_cmp_bawt, while_mul_115_cmp_iden, while_mul_115_cmp_iden_2,
      while_mul_115_cmp_iden_4, while_mul_115_cmp_iden_6, while_mul_115_cmp_z_mxwt,
      while_mul_115_cmp_z_mxwt_1, while_mul_115_cmp_z_mxwt_2, while_mul_115_cmp_z_mxwt_3,
      while_mul_115_cmp_biwt, while_mul_115_cmp_bdwt, while_mul_115_cmp_biwt_2, while_mul_115_cmp_bdwt_2,
      while_mul_115_cmp_biwt_4, while_mul_115_cmp_bdwt_4, while_mul_115_cmp_biwt_6,
      while_mul_115_cmp_bdwt_6, while_mul_115_cmp_z
);
  input clk;
  input rst;
  output while_mul_115_cmp_bawt;
  output while_mul_115_cmp_iden;
  output while_mul_115_cmp_iden_2;
  output while_mul_115_cmp_iden_4;
  output while_mul_115_cmp_iden_6;
  output [162:0] while_mul_115_cmp_z_mxwt;
  output [161:0] while_mul_115_cmp_z_mxwt_1;
  output [162:0] while_mul_115_cmp_z_mxwt_2;
  output [115:0] while_mul_115_cmp_z_mxwt_3;
  input while_mul_115_cmp_biwt;
  input while_mul_115_cmp_bdwt;
  input while_mul_115_cmp_biwt_2;
  input while_mul_115_cmp_bdwt_2;
  input while_mul_115_cmp_biwt_4;
  input while_mul_115_cmp_bdwt_4;
  input while_mul_115_cmp_biwt_6;
  input while_mul_115_cmp_bdwt_6;
  input [162:0] while_mul_115_cmp_z;


  // Interconnect Declarations
  reg [2:0] while_mul_115_cmp_bcwt;
  wire [3:0] nl_while_mul_115_cmp_bcwt;
  reg [2:0] while_mul_115_cmp_bcwt_1;
  wire [3:0] nl_while_mul_115_cmp_bcwt_1;
  reg [2:0] while_mul_115_cmp_bcwt_2;
  wire [3:0] nl_while_mul_115_cmp_bcwt_2;
  reg [2:0] while_mul_115_cmp_bcwt_3;
  wire [3:0] nl_while_mul_115_cmp_bcwt_3;
  reg [162:0] while_mul_115_cmp_z_bfwt;
  reg [162:0] while_mul_115_cmp_z_bfwt_1;
  reg [162:0] while_mul_115_cmp_z_bfwt_2;
  reg [162:0] while_mul_115_cmp_z_bfwt_3;
  reg [162:0] while_mul_115_cmp_z_bfwt_4;
  reg [162:0] while_mul_115_cmp_z_bfwt_5;
  reg [162:0] while_mul_115_cmp_z_bfwt_12;
  reg [162:0] while_mul_115_cmp_z_bfwt_13;
  reg [162:0] while_mul_115_cmp_z_bfwt_14;
  reg [162:0] while_mul_115_cmp_z_bfwt_15;
  reg [162:0] while_mul_115_cmp_z_bfwt_16;
  reg [162:0] while_mul_115_cmp_z_bfwt_17;
  reg [161:0] while_mul_115_cmp_z_bfwt_11_161_0;
  reg [115:0] while_mul_115_cmp_z_bfwt_23_115_0;
  reg [161:0] while_mul_115_cmp_z_bfwt_10_161_0;
  reg [115:0] while_mul_115_cmp_z_bfwt_22_115_0;
  reg [161:0] while_mul_115_cmp_z_bfwt_9_161_0;
  reg [115:0] while_mul_115_cmp_z_bfwt_21_115_0;
  reg [161:0] while_mul_115_cmp_z_bfwt_8_161_0;
  reg [115:0] while_mul_115_cmp_z_bfwt_20_115_0;
  reg [161:0] while_mul_115_cmp_z_bfwt_7_161_0;
  reg [115:0] while_mul_115_cmp_z_bfwt_19_115_0;
  reg [161:0] while_mul_115_cmp_z_bfwt_6_161_0;
  reg [115:0] while_mul_115_cmp_z_bfwt_18_115_0;

  wire[2:0] while_acc_7_nl;
  wire[3:0] nl_while_acc_7_nl;
  wire[1:0] while_acc_8_nl;
  wire[2:0] nl_while_acc_8_nl;
  wire[2:0] while_acc_10_nl;
  wire[3:0] nl_while_acc_10_nl;
  wire[1:0] while_acc_11_nl;
  wire[2:0] nl_while_acc_11_nl;
  wire[2:0] while_acc_13_nl;
  wire[3:0] nl_while_acc_13_nl;
  wire[1:0] while_acc_14_nl;
  wire[2:0] nl_while_acc_14_nl;
  wire[2:0] while_acc_16_nl;
  wire[3:0] nl_while_acc_16_nl;
  wire[1:0] while_acc_17_nl;
  wire[2:0] nl_while_acc_17_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_115_cmp_iden = while_mul_115_cmp_biwt | while_mul_115_cmp_bdwt;
  assign while_mul_115_cmp_bawt = while_mul_115_cmp_biwt | (while_mul_115_cmp_bcwt!=3'b000);
  assign while_mul_115_cmp_iden_2 = while_mul_115_cmp_biwt_2 | while_mul_115_cmp_bdwt_2;
  assign while_mul_115_cmp_iden_4 = while_mul_115_cmp_biwt_4 | while_mul_115_cmp_bdwt_4;
  assign while_mul_115_cmp_iden_6 = while_mul_115_cmp_biwt_6 | while_mul_115_cmp_bdwt_6;
  assign while_mul_115_cmp_z_mxwt = MUX_v_163_7_2(while_mul_115_cmp_z, while_mul_115_cmp_z_bfwt,
      while_mul_115_cmp_z_bfwt_1, while_mul_115_cmp_z_bfwt_2, while_mul_115_cmp_z_bfwt_3,
      while_mul_115_cmp_z_bfwt_4, while_mul_115_cmp_z_bfwt_5, while_mul_115_cmp_bcwt_3);
  assign while_mul_115_cmp_z_mxwt_2 = MUX_v_163_7_2(while_mul_115_cmp_z, while_mul_115_cmp_z_bfwt_12,
      while_mul_115_cmp_z_bfwt_13, while_mul_115_cmp_z_bfwt_14, while_mul_115_cmp_z_bfwt_15,
      while_mul_115_cmp_z_bfwt_16, while_mul_115_cmp_z_bfwt_17, while_mul_115_cmp_bcwt_1);
  assign while_mul_115_cmp_z_mxwt_1 = MUX_v_162_7_2((while_mul_115_cmp_z[161:0]),
      while_mul_115_cmp_z_bfwt_6_161_0, while_mul_115_cmp_z_bfwt_7_161_0, while_mul_115_cmp_z_bfwt_8_161_0,
      while_mul_115_cmp_z_bfwt_9_161_0, while_mul_115_cmp_z_bfwt_10_161_0, while_mul_115_cmp_z_bfwt_11_161_0,
      while_mul_115_cmp_bcwt_2);
  assign while_mul_115_cmp_z_mxwt_3 = MUX_v_116_7_2((while_mul_115_cmp_z[115:0]),
      while_mul_115_cmp_z_bfwt_18_115_0, while_mul_115_cmp_z_bfwt_19_115_0, while_mul_115_cmp_z_bfwt_20_115_0,
      while_mul_115_cmp_z_bfwt_21_115_0, while_mul_115_cmp_z_bfwt_22_115_0, while_mul_115_cmp_z_bfwt_23_115_0,
      while_mul_115_cmp_bcwt);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_115_cmp_bcwt <= 3'b000;
      while_mul_115_cmp_bcwt_1 <= 3'b000;
      while_mul_115_cmp_bcwt_2 <= 3'b000;
      while_mul_115_cmp_bcwt_3 <= 3'b000;
    end
    else begin
      while_mul_115_cmp_bcwt <= nl_while_mul_115_cmp_bcwt[2:0];
      while_mul_115_cmp_bcwt_1 <= nl_while_mul_115_cmp_bcwt_1[2:0];
      while_mul_115_cmp_bcwt_2 <= nl_while_mul_115_cmp_bcwt_2[2:0];
      while_mul_115_cmp_bcwt_3 <= nl_while_mul_115_cmp_bcwt_3[2:0];
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_115_cmp_z_bfwt <= 163'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_115_cmp_z_bfwt_1 <= 163'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_115_cmp_z_bfwt_2 <= 163'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_115_cmp_z_bfwt_3 <= 163'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_115_cmp_z_bfwt_4 <= 163'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_115_cmp_z_bfwt_5 <= 163'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_115_cmp_biwt_6 ) begin
      while_mul_115_cmp_z_bfwt <= while_mul_115_cmp_z;
      while_mul_115_cmp_z_bfwt_1 <= while_mul_115_cmp_z_bfwt;
      while_mul_115_cmp_z_bfwt_2 <= while_mul_115_cmp_z_bfwt_1;
      while_mul_115_cmp_z_bfwt_3 <= while_mul_115_cmp_z_bfwt_2;
      while_mul_115_cmp_z_bfwt_4 <= while_mul_115_cmp_z_bfwt_3;
      while_mul_115_cmp_z_bfwt_5 <= while_mul_115_cmp_z_bfwt_4;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_115_cmp_z_bfwt_6_161_0 <= 162'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_115_cmp_z_bfwt_7_161_0 <= 162'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_115_cmp_z_bfwt_8_161_0 <= 162'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_115_cmp_z_bfwt_9_161_0 <= 162'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_115_cmp_z_bfwt_10_161_0 <= 162'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_115_cmp_z_bfwt_11_161_0 <= 162'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_115_cmp_biwt_4 ) begin
      while_mul_115_cmp_z_bfwt_6_161_0 <= while_mul_115_cmp_z[161:0];
      while_mul_115_cmp_z_bfwt_7_161_0 <= while_mul_115_cmp_z_bfwt_6_161_0;
      while_mul_115_cmp_z_bfwt_8_161_0 <= while_mul_115_cmp_z_bfwt_7_161_0;
      while_mul_115_cmp_z_bfwt_9_161_0 <= while_mul_115_cmp_z_bfwt_8_161_0;
      while_mul_115_cmp_z_bfwt_10_161_0 <= while_mul_115_cmp_z_bfwt_9_161_0;
      while_mul_115_cmp_z_bfwt_11_161_0 <= while_mul_115_cmp_z_bfwt_10_161_0;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_115_cmp_z_bfwt_12 <= 163'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_115_cmp_z_bfwt_13 <= 163'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_115_cmp_z_bfwt_14 <= 163'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_115_cmp_z_bfwt_15 <= 163'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_115_cmp_z_bfwt_16 <= 163'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_115_cmp_z_bfwt_17 <= 163'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_115_cmp_biwt_2 ) begin
      while_mul_115_cmp_z_bfwt_12 <= while_mul_115_cmp_z;
      while_mul_115_cmp_z_bfwt_13 <= while_mul_115_cmp_z_bfwt_12;
      while_mul_115_cmp_z_bfwt_14 <= while_mul_115_cmp_z_bfwt_13;
      while_mul_115_cmp_z_bfwt_15 <= while_mul_115_cmp_z_bfwt_14;
      while_mul_115_cmp_z_bfwt_16 <= while_mul_115_cmp_z_bfwt_15;
      while_mul_115_cmp_z_bfwt_17 <= while_mul_115_cmp_z_bfwt_16;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_115_cmp_z_bfwt_18_115_0 <= 116'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_115_cmp_z_bfwt_19_115_0 <= 116'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_115_cmp_z_bfwt_20_115_0 <= 116'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_115_cmp_z_bfwt_21_115_0 <= 116'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_115_cmp_z_bfwt_22_115_0 <= 116'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_115_cmp_z_bfwt_23_115_0 <= 116'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_mul_115_cmp_biwt ) begin
      while_mul_115_cmp_z_bfwt_18_115_0 <= while_mul_115_cmp_z[115:0];
      while_mul_115_cmp_z_bfwt_19_115_0 <= while_mul_115_cmp_z_bfwt_18_115_0;
      while_mul_115_cmp_z_bfwt_20_115_0 <= while_mul_115_cmp_z_bfwt_19_115_0;
      while_mul_115_cmp_z_bfwt_21_115_0 <= while_mul_115_cmp_z_bfwt_20_115_0;
      while_mul_115_cmp_z_bfwt_22_115_0 <= while_mul_115_cmp_z_bfwt_21_115_0;
      while_mul_115_cmp_z_bfwt_23_115_0 <= while_mul_115_cmp_z_bfwt_22_115_0;
    end
  end
  assign nl_while_acc_7_nl = while_mul_115_cmp_bcwt + 3'b111;
  assign while_acc_7_nl = nl_while_acc_7_nl[2:0];
  assign nl_while_acc_8_nl = conv_u2u_1_2(~ while_mul_115_cmp_bdwt) + conv_u2u_1_2(while_mul_115_cmp_biwt);
  assign while_acc_8_nl = nl_while_acc_8_nl[1:0];
  assign nl_while_mul_115_cmp_bcwt  = while_acc_7_nl + conv_u2u_2_3(while_acc_8_nl);
  assign nl_while_acc_10_nl = while_mul_115_cmp_bcwt_1 + 3'b111;
  assign while_acc_10_nl = nl_while_acc_10_nl[2:0];
  assign nl_while_acc_11_nl = conv_u2u_1_2(~ while_mul_115_cmp_bdwt_2) + conv_u2u_1_2(while_mul_115_cmp_biwt_2);
  assign while_acc_11_nl = nl_while_acc_11_nl[1:0];
  assign nl_while_mul_115_cmp_bcwt_1  = while_acc_10_nl + conv_u2u_2_3(while_acc_11_nl);
  assign nl_while_acc_13_nl = while_mul_115_cmp_bcwt_2 + 3'b111;
  assign while_acc_13_nl = nl_while_acc_13_nl[2:0];
  assign nl_while_acc_14_nl = conv_u2u_1_2(~ while_mul_115_cmp_bdwt_4) + conv_u2u_1_2(while_mul_115_cmp_biwt_4);
  assign while_acc_14_nl = nl_while_acc_14_nl[1:0];
  assign nl_while_mul_115_cmp_bcwt_2  = while_acc_13_nl + conv_u2u_2_3(while_acc_14_nl);
  assign nl_while_acc_16_nl = while_mul_115_cmp_bcwt_3 + 3'b111;
  assign while_acc_16_nl = nl_while_acc_16_nl[2:0];
  assign nl_while_acc_17_nl = conv_u2u_1_2(~ while_mul_115_cmp_bdwt_6) + conv_u2u_1_2(while_mul_115_cmp_biwt_6);
  assign while_acc_17_nl = nl_while_acc_17_nl[1:0];
  assign nl_while_mul_115_cmp_bcwt_3  = while_acc_16_nl + conv_u2u_2_3(while_acc_17_nl);

  function automatic [115:0] MUX_v_116_7_2;
    input [115:0] input_0;
    input [115:0] input_1;
    input [115:0] input_2;
    input [115:0] input_3;
    input [115:0] input_4;
    input [115:0] input_5;
    input [115:0] input_6;
    input [2:0] sel;
    reg [115:0] result;
  begin
    case (sel)
      3'b000 : begin
        result = input_0;
      end
      3'b001 : begin
        result = input_1;
      end
      3'b010 : begin
        result = input_2;
      end
      3'b011 : begin
        result = input_3;
      end
      3'b100 : begin
        result = input_4;
      end
      3'b101 : begin
        result = input_5;
      end
      default : begin
        result = input_6;
      end
    endcase
    MUX_v_116_7_2 = result;
  end
  endfunction


  function automatic [161:0] MUX_v_162_7_2;
    input [161:0] input_0;
    input [161:0] input_1;
    input [161:0] input_2;
    input [161:0] input_3;
    input [161:0] input_4;
    input [161:0] input_5;
    input [161:0] input_6;
    input [2:0] sel;
    reg [161:0] result;
  begin
    case (sel)
      3'b000 : begin
        result = input_0;
      end
      3'b001 : begin
        result = input_1;
      end
      3'b010 : begin
        result = input_2;
      end
      3'b011 : begin
        result = input_3;
      end
      3'b100 : begin
        result = input_4;
      end
      3'b101 : begin
        result = input_5;
      end
      default : begin
        result = input_6;
      end
    endcase
    MUX_v_162_7_2 = result;
  end
  endfunction


  function automatic [162:0] MUX_v_163_7_2;
    input [162:0] input_0;
    input [162:0] input_1;
    input [162:0] input_2;
    input [162:0] input_3;
    input [162:0] input_4;
    input [162:0] input_5;
    input [162:0] input_6;
    input [2:0] sel;
    reg [162:0] result;
  begin
    case (sel)
      3'b000 : begin
        result = input_0;
      end
      3'b001 : begin
        result = input_1;
      end
      3'b010 : begin
        result = input_2;
      end
      3'b011 : begin
        result = input_3;
      end
      3'b100 : begin
        result = input_4;
      end
      3'b101 : begin
        result = input_5;
      end
      default : begin
        result = input_6;
      end
    endcase
    MUX_v_163_7_2 = result;
  end
  endfunction


  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_115_cmp_mgc_mul_pipe_67_1_113_1_163_1_1_0_0_6_1_wait_ctrl
// ------------------------------------------------------------------


module Rotate_run_while_mul_115_cmp_mgc_mul_pipe_67_1_113_1_163_1_1_0_0_6_1_wait_ctrl
    (
  clk, rst, run_wen, run_wten, while_mul_115_cmp_oswt_unreg, while_mul_115_cmp_iswt5,
      while_mul_115_cmp_iden_1, while_mul_115_cmp_oswt_unreg_1, while_mul_115_cmp_iswt5_1,
      while_mul_115_cmp_iden_3, while_mul_115_cmp_oswt_unreg_2, while_mul_115_cmp_iswt5_2,
      while_mul_115_cmp_iden_5, while_mul_115_cmp_oswt_unreg_3, while_mul_115_cmp_iswt5_3,
      while_mul_115_cmp_iden_7, run_cgwt, while_mul_115_cmp_bdwt, while_mul_115_cmp_bdwt_2,
      while_mul_115_cmp_bdwt_4, while_mul_115_cmp_bdwt_6, while_mul_115_cmp_iswt5_3_pff,
      while_mul_115_cmp_iswt5_2_pff, while_mul_115_cmp_iswt5_1_pff, while_mul_115_cmp_iswt5_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_115_cmp_oswt_unreg;
  input while_mul_115_cmp_iswt5;
  output while_mul_115_cmp_iden_1;
  input while_mul_115_cmp_oswt_unreg_1;
  input while_mul_115_cmp_iswt5_1;
  output while_mul_115_cmp_iden_3;
  input while_mul_115_cmp_oswt_unreg_2;
  input while_mul_115_cmp_iswt5_2;
  output while_mul_115_cmp_iden_5;
  input while_mul_115_cmp_oswt_unreg_3;
  input while_mul_115_cmp_iswt5_3;
  output while_mul_115_cmp_iden_7;
  output run_cgwt;
  output while_mul_115_cmp_bdwt;
  output while_mul_115_cmp_bdwt_2;
  output while_mul_115_cmp_bdwt_4;
  output while_mul_115_cmp_bdwt_6;
  input while_mul_115_cmp_iswt5_3_pff;
  input while_mul_115_cmp_iswt5_2_pff;
  input while_mul_115_cmp_iswt5_1_pff;
  input while_mul_115_cmp_iswt5_pff;


  // Interconnect Declarations
  wire while_mul_115_cmp_ogwt;
  wire while_mul_115_cmp_tiswt5;
  reg while_mul_115_cmp_hile_mul_115_cmp_pdswt4;
  reg while_mul_115_cmp_hile_mul_115_cmp_pdswt3;
  reg while_mul_115_cmp_hile_mul_115_cmp_pdswt2;
  reg while_mul_115_cmp_hile_mul_115_cmp_pdswt1;
  reg while_mul_115_cmp_hile_mul_115_cmp_pdswt0;
  reg [2:0] while_mul_115_cmp_icwt;
  wire [3:0] nl_while_mul_115_cmp_icwt;
  wire while_mul_115_cmp_ogwt_1;
  wire while_mul_115_cmp_tiswt5_1;
  reg while_mul_115_cmp_hile_mul_115_cmp_pdswt4_1;
  reg while_mul_115_cmp_hile_mul_115_cmp_pdswt3_1;
  reg while_mul_115_cmp_hile_mul_115_cmp_pdswt2_1;
  reg while_mul_115_cmp_hile_mul_115_cmp_pdswt1_1;
  reg while_mul_115_cmp_hile_mul_115_cmp_pdswt0_1;
  reg [2:0] while_mul_115_cmp_icwt_1;
  wire [3:0] nl_while_mul_115_cmp_icwt_1;
  wire while_mul_115_cmp_ogwt_2;
  wire while_mul_115_cmp_tiswt5_2;
  reg while_mul_115_cmp_hile_mul_115_cmp_pdswt4_2;
  reg while_mul_115_cmp_hile_mul_115_cmp_pdswt3_2;
  reg while_mul_115_cmp_hile_mul_115_cmp_pdswt2_2;
  reg while_mul_115_cmp_hile_mul_115_cmp_pdswt1_2;
  reg while_mul_115_cmp_hile_mul_115_cmp_pdswt0_2;
  reg [2:0] while_mul_115_cmp_icwt_2;
  wire [3:0] nl_while_mul_115_cmp_icwt_2;
  wire while_mul_115_cmp_ogwt_3;
  wire while_mul_115_cmp_tiswt5_3;
  reg while_mul_115_cmp_hile_mul_115_cmp_pdswt4_3;
  reg while_mul_115_cmp_hile_mul_115_cmp_pdswt3_3;
  reg while_mul_115_cmp_hile_mul_115_cmp_pdswt2_3;
  reg while_mul_115_cmp_hile_mul_115_cmp_pdswt1_3;
  reg while_mul_115_cmp_hile_mul_115_cmp_pdswt0_3;
  reg [2:0] while_mul_115_cmp_icwt_3;
  wire [3:0] nl_while_mul_115_cmp_icwt_3;

  wire[2:0] while_acc_8_nl;
  wire[3:0] nl_while_acc_8_nl;
  wire[1:0] while_acc_9_nl;
  wire[2:0] nl_while_acc_9_nl;
  wire[2:0] while_acc_11_nl;
  wire[3:0] nl_while_acc_11_nl;
  wire[1:0] while_acc_12_nl;
  wire[2:0] nl_while_acc_12_nl;
  wire[2:0] while_acc_14_nl;
  wire[3:0] nl_while_acc_14_nl;
  wire[1:0] while_acc_15_nl;
  wire[2:0] nl_while_acc_15_nl;
  wire[2:0] while_acc_17_nl;
  wire[3:0] nl_while_acc_17_nl;
  wire[1:0] while_acc_18_nl;
  wire[2:0] nl_while_acc_18_nl;

  // Interconnect Declarations for Component Instantiations 
  assign while_mul_115_cmp_bdwt = while_mul_115_cmp_oswt_unreg & run_wen;
  assign while_mul_115_cmp_tiswt5 = (~ run_wten) & while_mul_115_cmp_iswt5;
  assign while_mul_115_cmp_iden_1 = while_mul_115_cmp_ogwt;
  assign while_mul_115_cmp_ogwt = while_mul_115_cmp_hile_mul_115_cmp_pdswt0 | (while_mul_115_cmp_icwt!=3'b000);
  assign while_mul_115_cmp_bdwt_2 = while_mul_115_cmp_oswt_unreg_1 & run_wen;
  assign while_mul_115_cmp_tiswt5_1 = (~ run_wten) & while_mul_115_cmp_iswt5_1;
  assign while_mul_115_cmp_iden_3 = while_mul_115_cmp_ogwt_1;
  assign while_mul_115_cmp_ogwt_1 = while_mul_115_cmp_hile_mul_115_cmp_pdswt0_1 |
      (while_mul_115_cmp_icwt_1!=3'b000);
  assign while_mul_115_cmp_bdwt_4 = while_mul_115_cmp_oswt_unreg_2 & run_wen;
  assign while_mul_115_cmp_tiswt5_2 = (~ run_wten) & while_mul_115_cmp_iswt5_2;
  assign while_mul_115_cmp_iden_5 = while_mul_115_cmp_ogwt_2;
  assign while_mul_115_cmp_ogwt_2 = while_mul_115_cmp_hile_mul_115_cmp_pdswt0_2 |
      (while_mul_115_cmp_icwt_2!=3'b000);
  assign while_mul_115_cmp_bdwt_6 = while_mul_115_cmp_oswt_unreg_3 & run_wen;
  assign while_mul_115_cmp_tiswt5_3 = (~ run_wten) & while_mul_115_cmp_iswt5_3;
  assign while_mul_115_cmp_iden_7 = while_mul_115_cmp_ogwt_3;
  assign while_mul_115_cmp_ogwt_3 = while_mul_115_cmp_hile_mul_115_cmp_pdswt0_3 |
      (while_mul_115_cmp_icwt_3!=3'b000);
  assign run_cgwt = while_mul_115_cmp_ogwt_3 | while_mul_115_cmp_tiswt5_3 | while_mul_115_cmp_hile_mul_115_cmp_pdswt4_3
      | while_mul_115_cmp_hile_mul_115_cmp_pdswt3_3 | while_mul_115_cmp_hile_mul_115_cmp_pdswt2_3
      | while_mul_115_cmp_hile_mul_115_cmp_pdswt1_3 | while_mul_115_cmp_ogwt_2 |
      while_mul_115_cmp_tiswt5_2 | while_mul_115_cmp_hile_mul_115_cmp_pdswt4_2 |
      while_mul_115_cmp_hile_mul_115_cmp_pdswt3_2 | while_mul_115_cmp_hile_mul_115_cmp_pdswt2_2
      | while_mul_115_cmp_hile_mul_115_cmp_pdswt1_2 | while_mul_115_cmp_ogwt_1 |
      while_mul_115_cmp_tiswt5_1 | while_mul_115_cmp_hile_mul_115_cmp_pdswt4_1 |
      while_mul_115_cmp_hile_mul_115_cmp_pdswt3_1 | while_mul_115_cmp_hile_mul_115_cmp_pdswt2_1
      | while_mul_115_cmp_hile_mul_115_cmp_pdswt1_1 | while_mul_115_cmp_ogwt | while_mul_115_cmp_tiswt5
      | while_mul_115_cmp_hile_mul_115_cmp_pdswt4 | while_mul_115_cmp_hile_mul_115_cmp_pdswt3
      | while_mul_115_cmp_hile_mul_115_cmp_pdswt2 | while_mul_115_cmp_hile_mul_115_cmp_pdswt1
      | (run_wen & while_mul_115_cmp_iswt5_3_pff) | (run_wen & while_mul_115_cmp_iswt5_2_pff)
      | (run_wen & while_mul_115_cmp_iswt5_1_pff) | (run_wen & while_mul_115_cmp_iswt5_pff);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_115_cmp_hile_mul_115_cmp_pdswt4 <= 1'b0;
      while_mul_115_cmp_hile_mul_115_cmp_pdswt3 <= 1'b0;
      while_mul_115_cmp_hile_mul_115_cmp_pdswt2 <= 1'b0;
      while_mul_115_cmp_hile_mul_115_cmp_pdswt1 <= 1'b0;
      while_mul_115_cmp_hile_mul_115_cmp_pdswt0 <= 1'b0;
      while_mul_115_cmp_icwt <= 3'b000;
      while_mul_115_cmp_hile_mul_115_cmp_pdswt4_1 <= 1'b0;
      while_mul_115_cmp_hile_mul_115_cmp_pdswt3_1 <= 1'b0;
      while_mul_115_cmp_hile_mul_115_cmp_pdswt2_1 <= 1'b0;
      while_mul_115_cmp_hile_mul_115_cmp_pdswt1_1 <= 1'b0;
      while_mul_115_cmp_hile_mul_115_cmp_pdswt0_1 <= 1'b0;
      while_mul_115_cmp_icwt_1 <= 3'b000;
      while_mul_115_cmp_hile_mul_115_cmp_pdswt4_2 <= 1'b0;
      while_mul_115_cmp_hile_mul_115_cmp_pdswt3_2 <= 1'b0;
      while_mul_115_cmp_hile_mul_115_cmp_pdswt2_2 <= 1'b0;
      while_mul_115_cmp_hile_mul_115_cmp_pdswt1_2 <= 1'b0;
      while_mul_115_cmp_hile_mul_115_cmp_pdswt0_2 <= 1'b0;
      while_mul_115_cmp_icwt_2 <= 3'b000;
      while_mul_115_cmp_hile_mul_115_cmp_pdswt4_3 <= 1'b0;
      while_mul_115_cmp_hile_mul_115_cmp_pdswt3_3 <= 1'b0;
      while_mul_115_cmp_hile_mul_115_cmp_pdswt2_3 <= 1'b0;
      while_mul_115_cmp_hile_mul_115_cmp_pdswt1_3 <= 1'b0;
      while_mul_115_cmp_hile_mul_115_cmp_pdswt0_3 <= 1'b0;
      while_mul_115_cmp_icwt_3 <= 3'b000;
    end
    else begin
      while_mul_115_cmp_hile_mul_115_cmp_pdswt4 <= while_mul_115_cmp_tiswt5;
      while_mul_115_cmp_hile_mul_115_cmp_pdswt3 <= while_mul_115_cmp_hile_mul_115_cmp_pdswt4;
      while_mul_115_cmp_hile_mul_115_cmp_pdswt2 <= while_mul_115_cmp_hile_mul_115_cmp_pdswt3;
      while_mul_115_cmp_hile_mul_115_cmp_pdswt1 <= while_mul_115_cmp_hile_mul_115_cmp_pdswt2;
      while_mul_115_cmp_hile_mul_115_cmp_pdswt0 <= while_mul_115_cmp_hile_mul_115_cmp_pdswt1;
      while_mul_115_cmp_icwt <= nl_while_mul_115_cmp_icwt[2:0];
      while_mul_115_cmp_hile_mul_115_cmp_pdswt4_1 <= while_mul_115_cmp_tiswt5_1;
      while_mul_115_cmp_hile_mul_115_cmp_pdswt3_1 <= while_mul_115_cmp_hile_mul_115_cmp_pdswt4_1;
      while_mul_115_cmp_hile_mul_115_cmp_pdswt2_1 <= while_mul_115_cmp_hile_mul_115_cmp_pdswt3_1;
      while_mul_115_cmp_hile_mul_115_cmp_pdswt1_1 <= while_mul_115_cmp_hile_mul_115_cmp_pdswt2_1;
      while_mul_115_cmp_hile_mul_115_cmp_pdswt0_1 <= while_mul_115_cmp_hile_mul_115_cmp_pdswt1_1;
      while_mul_115_cmp_icwt_1 <= nl_while_mul_115_cmp_icwt_1[2:0];
      while_mul_115_cmp_hile_mul_115_cmp_pdswt4_2 <= while_mul_115_cmp_tiswt5_2;
      while_mul_115_cmp_hile_mul_115_cmp_pdswt3_2 <= while_mul_115_cmp_hile_mul_115_cmp_pdswt4_2;
      while_mul_115_cmp_hile_mul_115_cmp_pdswt2_2 <= while_mul_115_cmp_hile_mul_115_cmp_pdswt3_2;
      while_mul_115_cmp_hile_mul_115_cmp_pdswt1_2 <= while_mul_115_cmp_hile_mul_115_cmp_pdswt2_2;
      while_mul_115_cmp_hile_mul_115_cmp_pdswt0_2 <= while_mul_115_cmp_hile_mul_115_cmp_pdswt1_2;
      while_mul_115_cmp_icwt_2 <= nl_while_mul_115_cmp_icwt_2[2:0];
      while_mul_115_cmp_hile_mul_115_cmp_pdswt4_3 <= while_mul_115_cmp_tiswt5_3;
      while_mul_115_cmp_hile_mul_115_cmp_pdswt3_3 <= while_mul_115_cmp_hile_mul_115_cmp_pdswt4_3;
      while_mul_115_cmp_hile_mul_115_cmp_pdswt2_3 <= while_mul_115_cmp_hile_mul_115_cmp_pdswt3_3;
      while_mul_115_cmp_hile_mul_115_cmp_pdswt1_3 <= while_mul_115_cmp_hile_mul_115_cmp_pdswt2_3;
      while_mul_115_cmp_hile_mul_115_cmp_pdswt0_3 <= while_mul_115_cmp_hile_mul_115_cmp_pdswt1_3;
      while_mul_115_cmp_icwt_3 <= nl_while_mul_115_cmp_icwt_3[2:0];
    end
  end
  assign nl_while_acc_8_nl = while_mul_115_cmp_icwt + 3'b111;
  assign while_acc_8_nl = nl_while_acc_8_nl[2:0];
  assign nl_while_acc_9_nl = conv_u2u_1_2(while_mul_115_cmp_hile_mul_115_cmp_pdswt0)
      + conv_u2u_1_2(~ while_mul_115_cmp_ogwt);
  assign while_acc_9_nl = nl_while_acc_9_nl[1:0];
  assign nl_while_mul_115_cmp_icwt  = while_acc_8_nl + conv_u2u_2_3(while_acc_9_nl);
  assign nl_while_acc_11_nl = while_mul_115_cmp_icwt_1 + 3'b111;
  assign while_acc_11_nl = nl_while_acc_11_nl[2:0];
  assign nl_while_acc_12_nl = conv_u2u_1_2(while_mul_115_cmp_hile_mul_115_cmp_pdswt0_1)
      + conv_u2u_1_2(~ while_mul_115_cmp_ogwt_1);
  assign while_acc_12_nl = nl_while_acc_12_nl[1:0];
  assign nl_while_mul_115_cmp_icwt_1  = while_acc_11_nl + conv_u2u_2_3(while_acc_12_nl);
  assign nl_while_acc_14_nl = while_mul_115_cmp_icwt_2 + 3'b111;
  assign while_acc_14_nl = nl_while_acc_14_nl[2:0];
  assign nl_while_acc_15_nl = conv_u2u_1_2(while_mul_115_cmp_hile_mul_115_cmp_pdswt0_2)
      + conv_u2u_1_2(~ while_mul_115_cmp_ogwt_2);
  assign while_acc_15_nl = nl_while_acc_15_nl[1:0];
  assign nl_while_mul_115_cmp_icwt_2  = while_acc_14_nl + conv_u2u_2_3(while_acc_15_nl);
  assign nl_while_acc_17_nl = while_mul_115_cmp_icwt_3 + 3'b111;
  assign while_acc_17_nl = nl_while_acc_17_nl[2:0];
  assign nl_while_acc_18_nl = conv_u2u_1_2(while_mul_115_cmp_hile_mul_115_cmp_pdswt0_3)
      + conv_u2u_1_2(~ while_mul_115_cmp_ogwt_3);
  assign while_acc_18_nl = nl_while_acc_18_nl[1:0];
  assign nl_while_mul_115_cmp_icwt_3  = while_acc_17_nl + conv_u2u_2_3(while_acc_18_nl);

  function automatic [1:0] conv_u2u_1_2 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_2 = {1'b0, vector};
  end
  endfunction


  function automatic [2:0] conv_u2u_2_3 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_3 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_rotate_out_Push_mioi_rotate_out_Push_mio_wait_dp
// ------------------------------------------------------------------


module Rotate_run_rotate_out_Push_mioi_rotate_out_Push_mio_wait_dp (
  clk, rst, rotate_out_Push_mioi_oswt_unreg, rotate_out_Push_mioi_bawt, rotate_out_Push_mioi_iden,
      rotate_out_Push_mioi_wen_comp, rotate_out_Push_mioi_biwt, rotate_out_Push_mioi_bdwt,
      rotate_out_Push_mioi_bcwt
);
  input clk;
  input rst;
  input rotate_out_Push_mioi_oswt_unreg;
  output rotate_out_Push_mioi_bawt;
  output rotate_out_Push_mioi_iden;
  output rotate_out_Push_mioi_wen_comp;
  input rotate_out_Push_mioi_biwt;
  input rotate_out_Push_mioi_bdwt;
  output rotate_out_Push_mioi_bcwt;
  reg rotate_out_Push_mioi_bcwt;



  // Interconnect Declarations for Component Instantiations 
  assign rotate_out_Push_mioi_iden = rotate_out_Push_mioi_biwt | rotate_out_Push_mioi_bdwt;
  assign rotate_out_Push_mioi_bawt = rotate_out_Push_mioi_biwt | rotate_out_Push_mioi_bcwt;
  assign rotate_out_Push_mioi_wen_comp = (~ rotate_out_Push_mioi_oswt_unreg) | rotate_out_Push_mioi_bawt;
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      rotate_out_Push_mioi_bcwt <= 1'b0;
    end
    else begin
      rotate_out_Push_mioi_bcwt <= ~((~(rotate_out_Push_mioi_bcwt | rotate_out_Push_mioi_biwt))
          | rotate_out_Push_mioi_bdwt);
    end
  end
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_rotate_out_Push_mioi_rotate_out_Push_mio_wait_ctrl
// ------------------------------------------------------------------


module Rotate_run_rotate_out_Push_mioi_rotate_out_Push_mio_wait_ctrl (
  run_wen, rotate_out_Push_mioi_oswt_unreg, rotate_out_Push_mioi_iswt0, rotate_out_Push_mioi_irdy_oreg,
      rotate_out_Push_mioi_biwt, rotate_out_Push_mioi_bdwt, rotate_out_Push_mioi_bcwt,
      rotate_out_Push_mioi_ivld_run_sct
);
  input run_wen;
  input rotate_out_Push_mioi_oswt_unreg;
  input rotate_out_Push_mioi_iswt0;
  input rotate_out_Push_mioi_irdy_oreg;
  output rotate_out_Push_mioi_biwt;
  output rotate_out_Push_mioi_bdwt;
  input rotate_out_Push_mioi_bcwt;
  output rotate_out_Push_mioi_ivld_run_sct;


  // Interconnect Declarations
  wire rotate_out_Push_mioi_ogwt;


  // Interconnect Declarations for Component Instantiations 
  assign rotate_out_Push_mioi_bdwt = rotate_out_Push_mioi_oswt_unreg & run_wen;
  assign rotate_out_Push_mioi_biwt = rotate_out_Push_mioi_ogwt & rotate_out_Push_mioi_irdy_oreg;
  assign rotate_out_Push_mioi_ogwt = rotate_out_Push_mioi_iswt0 & (~ rotate_out_Push_mioi_bcwt);
  assign rotate_out_Push_mioi_ivld_run_sct = rotate_out_Push_mioi_ogwt;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_wait_dp
// ------------------------------------------------------------------


module Rotate_run_wait_dp (
  clk, rst, rotate_in_Pop_mioi_ivld, rotate_in_Pop_mioi_ivld_oreg, rotate_out_Push_mioi_irdy,
      rotate_out_Push_mioi_irdy_oreg
);
  input clk;
  input rst;
  input rotate_in_Pop_mioi_ivld;
  output rotate_in_Pop_mioi_ivld_oreg;
  input rotate_out_Push_mioi_irdy;
  output rotate_out_Push_mioi_irdy_oreg;


  // Interconnect Declarations
  reg rotate_in_Pop_mioi_ivld_oreg_rneg;
  reg rotate_out_Push_mioi_irdy_oreg_rneg;


  // Interconnect Declarations for Component Instantiations 
  assign rotate_in_Pop_mioi_ivld_oreg = ~ rotate_in_Pop_mioi_ivld_oreg_rneg;
  assign rotate_out_Push_mioi_irdy_oreg = ~ rotate_out_Push_mioi_irdy_oreg_rneg;
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      rotate_in_Pop_mioi_ivld_oreg_rneg <= 1'b0;
      rotate_out_Push_mioi_irdy_oreg_rneg <= 1'b0;
    end
    else begin
      rotate_in_Pop_mioi_ivld_oreg_rneg <= ~ rotate_in_Pop_mioi_ivld;
      rotate_out_Push_mioi_irdy_oreg_rneg <= ~ rotate_out_Push_mioi_irdy;
    end
  end
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_rotate_in_Pop_mioi_rotate_in_Pop_mio_wait_dp
// ------------------------------------------------------------------


module Rotate_run_rotate_in_Pop_mioi_rotate_in_Pop_mio_wait_dp (
  clk, rst, rotate_in_Pop_mioi_oswt_unreg, rotate_in_Pop_mioi_bawt, rotate_in_Pop_mioi_iden,
      rotate_in_Pop_mioi_wen_comp, rotate_in_Pop_mioi_idat_mxwt, rotate_in_Pop_mioi_biwt,
      rotate_in_Pop_mioi_bdwt, rotate_in_Pop_mioi_idat
);
  input clk;
  input rst;
  input rotate_in_Pop_mioi_oswt_unreg;
  output rotate_in_Pop_mioi_bawt;
  output rotate_in_Pop_mioi_iden;
  output rotate_in_Pop_mioi_wen_comp;
  output [959:0] rotate_in_Pop_mioi_idat_mxwt;
  input rotate_in_Pop_mioi_biwt;
  input rotate_in_Pop_mioi_bdwt;
  input [1023:0] rotate_in_Pop_mioi_idat;


  // Interconnect Declarations
  reg rotate_in_Pop_mioi_bcwt;
  reg [959:0] rotate_in_Pop_mioi_idat_bfwt_1023_64;


  // Interconnect Declarations for Component Instantiations 
  assign rotate_in_Pop_mioi_iden = rotate_in_Pop_mioi_biwt | rotate_in_Pop_mioi_bdwt;
  assign rotate_in_Pop_mioi_bawt = rotate_in_Pop_mioi_biwt | rotate_in_Pop_mioi_bcwt;
  assign rotate_in_Pop_mioi_wen_comp = (~ rotate_in_Pop_mioi_oswt_unreg) | rotate_in_Pop_mioi_bawt;
  assign rotate_in_Pop_mioi_idat_mxwt = MUX_v_960_2_2((rotate_in_Pop_mioi_idat[1023:64]),
      rotate_in_Pop_mioi_idat_bfwt_1023_64, rotate_in_Pop_mioi_bcwt);
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      rotate_in_Pop_mioi_bcwt <= 1'b0;
    end
    else begin
      rotate_in_Pop_mioi_bcwt <= ~((~(rotate_in_Pop_mioi_bcwt | rotate_in_Pop_mioi_biwt))
          | rotate_in_Pop_mioi_bdwt);
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      rotate_in_Pop_mioi_idat_bfwt_1023_64 <= {480'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
          , 480'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000};
    end
    else if ( rotate_in_Pop_mioi_biwt ) begin
      rotate_in_Pop_mioi_idat_bfwt_1023_64 <= rotate_in_Pop_mioi_idat[1023:64];
    end
  end

  function automatic [959:0] MUX_v_960_2_2;
    input [959:0] input_0;
    input [959:0] input_1;
    input  sel;
    reg [959:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_960_2_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_rotate_in_Pop_mioi_rotate_in_Pop_mio_wait_ctrl
// ------------------------------------------------------------------


module Rotate_run_rotate_in_Pop_mioi_rotate_in_Pop_mio_wait_ctrl (
  clk, rst, run_wen, run_wten, rotate_in_Pop_mioi_oswt_unreg, rotate_in_Pop_mioi_iswt0,
      rotate_in_Pop_mioi_iden_1, rotate_in_Pop_mioi_ivld_oreg, rotate_in_Pop_mioi_biwt,
      rotate_in_Pop_mioi_bdwt
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input rotate_in_Pop_mioi_oswt_unreg;
  input rotate_in_Pop_mioi_iswt0;
  output rotate_in_Pop_mioi_iden_1;
  input rotate_in_Pop_mioi_ivld_oreg;
  output rotate_in_Pop_mioi_biwt;
  output rotate_in_Pop_mioi_bdwt;


  // Interconnect Declarations
  wire rotate_in_Pop_mioi_ogwt;
  reg rotate_in_Pop_mioi_icwt;


  // Interconnect Declarations for Component Instantiations 
  assign rotate_in_Pop_mioi_bdwt = rotate_in_Pop_mioi_oswt_unreg & run_wen;
  assign rotate_in_Pop_mioi_biwt = rotate_in_Pop_mioi_ogwt & rotate_in_Pop_mioi_ivld_oreg;
  assign rotate_in_Pop_mioi_ogwt = ((~ run_wten) & rotate_in_Pop_mioi_iswt0) | rotate_in_Pop_mioi_icwt;
  assign rotate_in_Pop_mioi_iden_1 = rotate_in_Pop_mioi_ogwt;
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      rotate_in_Pop_mioi_icwt <= 1'b0;
    end
    else begin
      rotate_in_Pop_mioi_icwt <= rotate_in_Pop_mioi_ogwt & (~ rotate_in_Pop_mioi_biwt);
    end
  end
endmodule

// ------------------------------------------------------------------
//  Design Unit:    OutputBuffer_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_34_14_64_16384_16384_64_1_gen
// ------------------------------------------------------------------


module OutputBuffer_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_34_14_64_16384_16384_64_1_gen
    (
  clken, q, radr, we, d, wadr, clken_d, d_d, q_d, radr_d, wadr_d, we_d, writeA_w_ram_ir_internal_WMASK_B_d,
      readA_r_ram_ir_internal_RMASK_B_d
);
  output clken;
  input [63:0] q;
  output [13:0] radr;
  output we;
  output [63:0] d;
  output [13:0] wadr;
  input clken_d;
  input [63:0] d_d;
  output [63:0] q_d;
  input [13:0] radr_d;
  input [13:0] wadr_d;
  input we_d;
  input writeA_w_ram_ir_internal_WMASK_B_d;
  input readA_r_ram_ir_internal_RMASK_B_d;



  // Interconnect Declarations for Component Instantiations 
  assign clken = (clken_d);
  assign q_d = q;
  assign radr = (radr_d);
  assign we = (writeA_w_ram_ir_internal_WMASK_B_d);
  assign d = (d_d);
  assign wadr = (wadr_d);
endmodule

// ------------------------------------------------------------------
//  Design Unit:    OutputBuffer_run_run_fsm
//  FSM Module
// ------------------------------------------------------------------


module OutputBuffer_run_run_fsm (
  clk, rst, run_wen, fsm_output, while_C_1_tr0, while_for_for_C_1_tr0, while_for_C_1_tr0,
      while_C_2_tr0, while_for_1_C_2_tr0
);
  input clk;
  input rst;
  input run_wen;
  output [10:0] fsm_output;
  reg [10:0] fsm_output;
  input while_C_1_tr0;
  input while_for_for_C_1_tr0;
  input while_for_C_1_tr0;
  input while_C_2_tr0;
  input while_for_1_C_2_tr0;


  // FSM State Type Declaration for OutputBuffer_run_run_fsm_1
  parameter
    while_C_0 = 4'd0,
    while_C_1 = 4'd1,
    while_for_C_0 = 4'd2,
    while_for_for_C_0 = 4'd3,
    while_for_for_C_1 = 4'd4,
    while_for_C_1 = 4'd5,
    while_C_2 = 4'd6,
    while_for_1_C_0 = 4'd7,
    while_for_1_C_1 = 4'd8,
    while_for_1_C_2 = 4'd9,
    while_C_3 = 4'd10;

  reg [3:0] state_var;
  reg [3:0] state_var_NS;


  // Interconnect Declarations for Component Instantiations 
  always @(*)
  begin : OutputBuffer_run_run_fsm_1
    case (state_var)
      while_C_1 : begin
        fsm_output = 11'b00000000010;
        if ( while_C_1_tr0 ) begin
          state_var_NS = while_C_2;
        end
        else begin
          state_var_NS = while_for_C_0;
        end
      end
      while_for_C_0 : begin
        fsm_output = 11'b00000000100;
        state_var_NS = while_for_for_C_0;
      end
      while_for_for_C_0 : begin
        fsm_output = 11'b00000001000;
        state_var_NS = while_for_for_C_1;
      end
      while_for_for_C_1 : begin
        fsm_output = 11'b00000010000;
        if ( while_for_for_C_1_tr0 ) begin
          state_var_NS = while_for_C_1;
        end
        else begin
          state_var_NS = while_for_for_C_0;
        end
      end
      while_for_C_1 : begin
        fsm_output = 11'b00000100000;
        if ( while_for_C_1_tr0 ) begin
          state_var_NS = while_C_2;
        end
        else begin
          state_var_NS = while_for_C_0;
        end
      end
      while_C_2 : begin
        fsm_output = 11'b00001000000;
        if ( while_C_2_tr0 ) begin
          state_var_NS = while_C_3;
        end
        else begin
          state_var_NS = while_for_1_C_0;
        end
      end
      while_for_1_C_0 : begin
        fsm_output = 11'b00010000000;
        state_var_NS = while_for_1_C_1;
      end
      while_for_1_C_1 : begin
        fsm_output = 11'b00100000000;
        state_var_NS = while_for_1_C_2;
      end
      while_for_1_C_2 : begin
        fsm_output = 11'b01000000000;
        if ( while_for_1_C_2_tr0 ) begin
          state_var_NS = while_C_3;
        end
        else begin
          state_var_NS = while_for_1_C_0;
        end
      end
      while_C_3 : begin
        fsm_output = 11'b10000000000;
        state_var_NS = while_C_0;
      end
      // while_C_0
      default : begin
        fsm_output = 11'b00000000001;
        state_var_NS = while_C_1;
      end
    endcase
  end

  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      state_var <= while_C_0;
    end
    else if ( run_wen ) begin
      state_var <= state_var_NS;
    end
  end

endmodule

// ------------------------------------------------------------------
//  Design Unit:    OutputBuffer_run_staller
// ------------------------------------------------------------------


module OutputBuffer_run_staller (
  run_wen, sync2_Pop_mioi_wen_comp, rotate_out_Pop_mioi_wen_comp, dma_write_ctrl_Push_mioi_wen_comp,
      dma_write_chnl_Push_mioi_wen_comp, sync3_Push_mioi_wen_comp
);
  output run_wen;
  input sync2_Pop_mioi_wen_comp;
  input rotate_out_Pop_mioi_wen_comp;
  input dma_write_ctrl_Push_mioi_wen_comp;
  input dma_write_chnl_Push_mioi_wen_comp;
  input sync3_Push_mioi_wen_comp;



  // Interconnect Declarations for Component Instantiations 
  assign run_wen = sync2_Pop_mioi_wen_comp & rotate_out_Pop_mioi_wen_comp & dma_write_ctrl_Push_mioi_wen_comp
      & dma_write_chnl_Push_mioi_wen_comp & sync3_Push_mioi_wen_comp;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    OutputBuffer_run_sync3_Push_mioi_sync3_Push_mio_wait_ctrl
// ------------------------------------------------------------------


module OutputBuffer_run_sync3_Push_mioi_sync3_Push_mio_wait_ctrl (
  sync3_Push_mioi_iswt0, sync3_Push_mioi_irdy_oreg, sync3_Push_mioi_biwt
);
  input sync3_Push_mioi_iswt0;
  input sync3_Push_mioi_irdy_oreg;
  output sync3_Push_mioi_biwt;



  // Interconnect Declarations for Component Instantiations 
  assign sync3_Push_mioi_biwt = sync3_Push_mioi_iswt0 & sync3_Push_mioi_irdy_oreg;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    OutputBuffer_run_dma_write_chnl_Push_mioi_dma_write_chnl_Push_mio_wait_ctrl
// ------------------------------------------------------------------


module OutputBuffer_run_dma_write_chnl_Push_mioi_dma_write_chnl_Push_mio_wait_ctrl
    (
  dma_write_chnl_Push_mioi_iswt0, dma_write_chnl_Push_mioi_irdy_oreg, dma_write_chnl_Push_mioi_biwt
);
  input dma_write_chnl_Push_mioi_iswt0;
  input dma_write_chnl_Push_mioi_irdy_oreg;
  output dma_write_chnl_Push_mioi_biwt;



  // Interconnect Declarations for Component Instantiations 
  assign dma_write_chnl_Push_mioi_biwt = dma_write_chnl_Push_mioi_iswt0 & dma_write_chnl_Push_mioi_irdy_oreg;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    OutputBuffer_run_dma_write_ctrl_Push_mioi_dma_write_ctrl_Push_mio_wait_ctrl
// ------------------------------------------------------------------


module OutputBuffer_run_dma_write_ctrl_Push_mioi_dma_write_ctrl_Push_mio_wait_ctrl
    (
  dma_write_ctrl_Push_mioi_iswt0, dma_write_ctrl_Push_mioi_irdy_oreg, dma_write_ctrl_Push_mioi_biwt
);
  input dma_write_ctrl_Push_mioi_iswt0;
  input dma_write_ctrl_Push_mioi_irdy_oreg;
  output dma_write_ctrl_Push_mioi_biwt;



  // Interconnect Declarations for Component Instantiations 
  assign dma_write_ctrl_Push_mioi_biwt = dma_write_ctrl_Push_mioi_iswt0 & dma_write_ctrl_Push_mioi_irdy_oreg;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    OutputBuffer_run_rotate_out_Pop_mioi_rotate_out_Pop_mio_wait_ctrl
// ------------------------------------------------------------------


module OutputBuffer_run_rotate_out_Pop_mioi_rotate_out_Pop_mio_wait_ctrl (
  rotate_out_Pop_mioi_iswt0, rotate_out_Pop_mioi_ivld_oreg, rotate_out_Pop_mioi_biwt
);
  input rotate_out_Pop_mioi_iswt0;
  input rotate_out_Pop_mioi_ivld_oreg;
  output rotate_out_Pop_mioi_biwt;



  // Interconnect Declarations for Component Instantiations 
  assign rotate_out_Pop_mioi_biwt = rotate_out_Pop_mioi_iswt0 & rotate_out_Pop_mioi_ivld_oreg;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    OutputBuffer_run_sync2_Pop_mioi_sync2_Pop_mio_wait_ctrl
// ------------------------------------------------------------------


module OutputBuffer_run_sync2_Pop_mioi_sync2_Pop_mio_wait_ctrl (
  sync2_Pop_mioi_iswt0, sync2_Pop_mioi_ivld_oreg, sync2_Pop_mioi_biwt
);
  input sync2_Pop_mioi_iswt0;
  input sync2_Pop_mioi_ivld_oreg;
  output sync2_Pop_mioi_biwt;



  // Interconnect Declarations for Component Instantiations 
  assign sync2_Pop_mioi_biwt = sync2_Pop_mioi_iswt0 & sync2_Pop_mioi_ivld_oreg;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Control_run_sync3_Pop_mioi
// ------------------------------------------------------------------


module Control_run_sync3_Pop_mioi (
  clk, rst, sync3_val, sync3_rdy, sync3_msg, run_wen, run_wten, sync3_Pop_mioi_oswt_unreg,
      sync3_Pop_mioi_bawt, sync3_Pop_mioi_iswt0, sync3_Pop_mioi_wen_comp, sync3_Pop_mioi_ivld,
      sync3_Pop_mioi_ivld_oreg, sync3_Pop_mioi_bawt_pff, run_wten_pff, sync3_Pop_mioi_iswt0_pff,
      sync3_Pop_mioi_ivld_oreg_pff, sync3_Pop_mioi_wen_comp_pff, sync3_Pop_mioi_oswt_unreg_pff
);
  input clk;
  input rst;
  input sync3_val;
  output sync3_rdy;
  input sync3_msg;
  input run_wen;
  input run_wten;
  input sync3_Pop_mioi_oswt_unreg;
  output sync3_Pop_mioi_bawt;
  input sync3_Pop_mioi_iswt0;
  output sync3_Pop_mioi_wen_comp;
  output sync3_Pop_mioi_ivld;
  input sync3_Pop_mioi_ivld_oreg;
  output sync3_Pop_mioi_bawt_pff;
  input run_wten_pff;
  input sync3_Pop_mioi_iswt0_pff;
  input sync3_Pop_mioi_ivld_oreg_pff;
  output sync3_Pop_mioi_wen_comp_pff;
  input sync3_Pop_mioi_oswt_unreg_pff;


  // Interconnect Declarations
  wire sync3_Pop_mioi_biwt;
  wire sync3_Pop_mioi_bdwt;
  wire sync3_Pop_mioi_idat;
  wire sync3_Pop_mioi_irdy_run_sct;
  wire sync3_Pop_mioi_bawt_reg;
  wire sync3_Pop_mioi_bawt_iff;
  wire sync3_Pop_mioi_biwt_iff;
  wire sync3_Pop_mioi_wen_comp_reg;
  wire sync3_Pop_mioi_wen_comp_iff;


  // Interconnect Declarations for Component Instantiations 
  ccs_ctrl_in_buf_wait_v4 #(.rscid(32'sd5),
  .width(32'sd1),
  .ph_clk(32'sd1),
  .ph_en(32'sd0),
  .ph_arst(32'sd0),
  .ph_srst(32'sd0)) sync3_Pop_mioi (
      .vld(sync3_val),
      .rdy(sync3_rdy),
      .dat(sync3_msg),
      .idat(sync3_Pop_mioi_idat),
      .irdy(sync3_Pop_mioi_irdy_run_sct),
      .ivld(sync3_Pop_mioi_ivld),
      .clk(clk),
      .en(1'b0),
      .arst(rst),
      .srst(1'b1)
    );
  Control_run_sync3_Pop_mioi_sync3_Pop_mio_wait_ctrl Control_run_sync3_Pop_mioi_sync3_Pop_mio_wait_ctrl_inst
      (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .sync3_Pop_mioi_oswt_unreg(sync3_Pop_mioi_oswt_unreg),
      .sync3_Pop_mioi_iswt0(sync3_Pop_mioi_iswt0),
      .sync3_Pop_mioi_ivld_oreg(sync3_Pop_mioi_ivld_oreg),
      .sync3_Pop_mioi_biwt(sync3_Pop_mioi_biwt),
      .sync3_Pop_mioi_bdwt(sync3_Pop_mioi_bdwt),
      .sync3_Pop_mioi_irdy_run_sct(sync3_Pop_mioi_irdy_run_sct),
      .sync3_Pop_mioi_biwt_pff(sync3_Pop_mioi_biwt_iff),
      .run_wten_pff(run_wten_pff),
      .sync3_Pop_mioi_iswt0_pff(sync3_Pop_mioi_iswt0_pff),
      .sync3_Pop_mioi_ivld_oreg_pff(sync3_Pop_mioi_ivld_oreg_pff)
    );
  Control_run_sync3_Pop_mioi_sync3_Pop_mio_wait_dp Control_run_sync3_Pop_mioi_sync3_Pop_mio_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .sync3_Pop_mioi_oswt_unreg(sync3_Pop_mioi_oswt_unreg),
      .sync3_Pop_mioi_bawt(sync3_Pop_mioi_bawt_reg),
      .sync3_Pop_mioi_wen_comp(sync3_Pop_mioi_wen_comp_reg),
      .sync3_Pop_mioi_biwt(sync3_Pop_mioi_biwt),
      .sync3_Pop_mioi_bdwt(sync3_Pop_mioi_bdwt),
      .sync3_Pop_mioi_bawt_pff(sync3_Pop_mioi_bawt_iff),
      .sync3_Pop_mioi_biwt_pff(sync3_Pop_mioi_biwt_iff),
      .sync3_Pop_mioi_wen_comp_pff(sync3_Pop_mioi_wen_comp_iff),
      .sync3_Pop_mioi_oswt_unreg_pff(sync3_Pop_mioi_oswt_unreg_pff)
    );
  assign sync3_Pop_mioi_bawt = sync3_Pop_mioi_bawt_reg;
  assign sync3_Pop_mioi_bawt_pff = sync3_Pop_mioi_bawt_iff;
  assign sync3_Pop_mioi_wen_comp = sync3_Pop_mioi_wen_comp_reg;
  assign sync3_Pop_mioi_wen_comp_pff = sync3_Pop_mioi_wen_comp_iff;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Control_run_sync2_Push_mioi
// ------------------------------------------------------------------


module Control_run_sync2_Push_mioi (
  clk, rst, sync2_val, sync2_rdy, sync2_msg, run_wen, sync2_Push_mioi_oswt_unreg,
      sync2_Push_mioi_bawt, sync2_Push_mioi_iswt0, sync2_Push_mioi_wen_comp, sync2_Push_mioi_irdy,
      sync2_Push_mioi_irdy_oreg, sync2_Push_mioi_bawt_pff, sync2_Push_mioi_iswt0_pff,
      sync2_Push_mioi_irdy_oreg_pff, sync2_Push_mioi_wen_comp_pff, sync2_Push_mioi_oswt_unreg_pff
);
  input clk;
  input rst;
  output sync2_val;
  input sync2_rdy;
  output sync2_msg;
  input run_wen;
  input sync2_Push_mioi_oswt_unreg;
  output sync2_Push_mioi_bawt;
  input sync2_Push_mioi_iswt0;
  output sync2_Push_mioi_wen_comp;
  output sync2_Push_mioi_irdy;
  input sync2_Push_mioi_irdy_oreg;
  output sync2_Push_mioi_bawt_pff;
  input sync2_Push_mioi_iswt0_pff;
  input sync2_Push_mioi_irdy_oreg_pff;
  output sync2_Push_mioi_wen_comp_pff;
  input sync2_Push_mioi_oswt_unreg_pff;


  // Interconnect Declarations
  wire sync2_Push_mioi_biwt;
  wire sync2_Push_mioi_bdwt;
  wire sync2_Push_mioi_bcwt;
  wire sync2_Push_mioi_ivld_run_sct;
  wire sync2_Push_mioi_bawt_reg;
  wire sync2_Push_mioi_bawt_iff;
  wire sync2_Push_mioi_biwt_iff;
  wire sync2_Push_mioi_bcwt_iff;
  wire sync2_Push_mioi_wen_comp_reg;
  wire sync2_Push_mioi_wen_comp_iff;


  // Interconnect Declarations for Component Instantiations 
  ccs_out_buf_wait_v5 #(.rscid(32'sd4),
  .width(32'sd1),
  .ph_clk(32'sd1),
  .ph_en(32'sd0),
  .ph_arst(32'sd0),
  .ph_srst(32'sd0)) sync2_Push_mioi (
      .vld(sync2_val),
      .rdy(sync2_rdy),
      .dat(sync2_msg),
      .idat(1'b1),
      .irdy(sync2_Push_mioi_irdy),
      .ivld(sync2_Push_mioi_ivld_run_sct),
      .clk(clk),
      .en(1'b0),
      .arst(rst),
      .srst(1'b1)
    );
  Control_run_sync2_Push_mioi_sync2_Push_mio_wait_ctrl Control_run_sync2_Push_mioi_sync2_Push_mio_wait_ctrl_inst
      (
      .run_wen(run_wen),
      .sync2_Push_mioi_oswt_unreg(sync2_Push_mioi_oswt_unreg),
      .sync2_Push_mioi_iswt0(sync2_Push_mioi_iswt0),
      .sync2_Push_mioi_irdy_oreg(sync2_Push_mioi_irdy_oreg),
      .sync2_Push_mioi_biwt(sync2_Push_mioi_biwt),
      .sync2_Push_mioi_bdwt(sync2_Push_mioi_bdwt),
      .sync2_Push_mioi_bcwt(sync2_Push_mioi_bcwt),
      .sync2_Push_mioi_ivld_run_sct(sync2_Push_mioi_ivld_run_sct),
      .sync2_Push_mioi_biwt_pff(sync2_Push_mioi_biwt_iff),
      .sync2_Push_mioi_iswt0_pff(sync2_Push_mioi_iswt0_pff),
      .sync2_Push_mioi_bcwt_pff(sync2_Push_mioi_bcwt_iff),
      .sync2_Push_mioi_irdy_oreg_pff(sync2_Push_mioi_irdy_oreg_pff)
    );
  Control_run_sync2_Push_mioi_sync2_Push_mio_wait_dp Control_run_sync2_Push_mioi_sync2_Push_mio_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .sync2_Push_mioi_oswt_unreg(sync2_Push_mioi_oswt_unreg),
      .sync2_Push_mioi_bawt(sync2_Push_mioi_bawt_reg),
      .sync2_Push_mioi_wen_comp(sync2_Push_mioi_wen_comp_reg),
      .sync2_Push_mioi_biwt(sync2_Push_mioi_biwt),
      .sync2_Push_mioi_bdwt(sync2_Push_mioi_bdwt),
      .sync2_Push_mioi_bcwt(sync2_Push_mioi_bcwt),
      .sync2_Push_mioi_bawt_pff(sync2_Push_mioi_bawt_iff),
      .sync2_Push_mioi_biwt_pff(sync2_Push_mioi_biwt_iff),
      .sync2_Push_mioi_bcwt_pff(sync2_Push_mioi_bcwt_iff),
      .sync2_Push_mioi_wen_comp_pff(sync2_Push_mioi_wen_comp_iff),
      .sync2_Push_mioi_oswt_unreg_pff(sync2_Push_mioi_oswt_unreg_pff)
    );
  assign sync2_Push_mioi_bawt = sync2_Push_mioi_bawt_reg;
  assign sync2_Push_mioi_bawt_pff = sync2_Push_mioi_bawt_iff;
  assign sync2_Push_mioi_wen_comp = sync2_Push_mioi_wen_comp_reg;
  assign sync2_Push_mioi_wen_comp_pff = sync2_Push_mioi_wen_comp_iff;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Control_run_sync1_Push_mioi
// ------------------------------------------------------------------


module Control_run_sync1_Push_mioi (
  clk, rst, sync1_val, sync1_rdy, sync1_msg, run_wen, sync1_Push_mioi_oswt_unreg,
      sync1_Push_mioi_bawt, sync1_Push_mioi_iswt0, sync1_Push_mioi_wen_comp, sync1_Push_mioi_irdy,
      sync1_Push_mioi_irdy_oreg, sync1_Push_mioi_wen_comp_pff, sync1_Push_mioi_oswt_unreg_pff,
      sync1_Push_mioi_bawt_pff, sync1_Push_mioi_iswt0_pff, sync1_Push_mioi_irdy_oreg_pff
);
  input clk;
  input rst;
  output sync1_val;
  input sync1_rdy;
  output sync1_msg;
  input run_wen;
  input sync1_Push_mioi_oswt_unreg;
  output sync1_Push_mioi_bawt;
  input sync1_Push_mioi_iswt0;
  output sync1_Push_mioi_wen_comp;
  output sync1_Push_mioi_irdy;
  input sync1_Push_mioi_irdy_oreg;
  output sync1_Push_mioi_wen_comp_pff;
  input sync1_Push_mioi_oswt_unreg_pff;
  output sync1_Push_mioi_bawt_pff;
  input sync1_Push_mioi_iswt0_pff;
  input sync1_Push_mioi_irdy_oreg_pff;


  // Interconnect Declarations
  wire sync1_Push_mioi_biwt;
  wire sync1_Push_mioi_bdwt;
  wire sync1_Push_mioi_bcwt;
  wire sync1_Push_mioi_ivld_run_sct;
  wire sync1_Push_mioi_wen_comp_reg;
  wire sync1_Push_mioi_wen_comp_iff;
  wire sync1_Push_mioi_bawt_reg;
  wire sync1_Push_mioi_bawt_iff;
  wire sync1_Push_mioi_biwt_iff;
  wire sync1_Push_mioi_bcwt_iff;


  // Interconnect Declarations for Component Instantiations 
  ccs_out_buf_wait_v5 #(.rscid(32'sd3),
  .width(32'sd1),
  .ph_clk(32'sd1),
  .ph_en(32'sd0),
  .ph_arst(32'sd0),
  .ph_srst(32'sd0)) sync1_Push_mioi (
      .vld(sync1_val),
      .rdy(sync1_rdy),
      .dat(sync1_msg),
      .idat(1'b1),
      .irdy(sync1_Push_mioi_irdy),
      .ivld(sync1_Push_mioi_ivld_run_sct),
      .clk(clk),
      .en(1'b0),
      .arst(rst),
      .srst(1'b1)
    );
  Control_run_sync1_Push_mioi_sync1_Push_mio_wait_ctrl Control_run_sync1_Push_mioi_sync1_Push_mio_wait_ctrl_inst
      (
      .run_wen(run_wen),
      .sync1_Push_mioi_oswt_unreg(sync1_Push_mioi_oswt_unreg),
      .sync1_Push_mioi_iswt0(sync1_Push_mioi_iswt0),
      .sync1_Push_mioi_irdy_oreg(sync1_Push_mioi_irdy_oreg),
      .sync1_Push_mioi_biwt(sync1_Push_mioi_biwt),
      .sync1_Push_mioi_bdwt(sync1_Push_mioi_bdwt),
      .sync1_Push_mioi_bcwt(sync1_Push_mioi_bcwt),
      .sync1_Push_mioi_ivld_run_sct(sync1_Push_mioi_ivld_run_sct),
      .sync1_Push_mioi_biwt_pff(sync1_Push_mioi_biwt_iff),
      .sync1_Push_mioi_iswt0_pff(sync1_Push_mioi_iswt0_pff),
      .sync1_Push_mioi_bcwt_pff(sync1_Push_mioi_bcwt_iff),
      .sync1_Push_mioi_irdy_oreg_pff(sync1_Push_mioi_irdy_oreg_pff)
    );
  Control_run_sync1_Push_mioi_sync1_Push_mio_wait_dp Control_run_sync1_Push_mioi_sync1_Push_mio_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .sync1_Push_mioi_oswt_unreg(sync1_Push_mioi_oswt_unreg),
      .sync1_Push_mioi_bawt(sync1_Push_mioi_bawt_reg),
      .sync1_Push_mioi_wen_comp(sync1_Push_mioi_wen_comp_reg),
      .sync1_Push_mioi_biwt(sync1_Push_mioi_biwt),
      .sync1_Push_mioi_bdwt(sync1_Push_mioi_bdwt),
      .sync1_Push_mioi_bcwt(sync1_Push_mioi_bcwt),
      .sync1_Push_mioi_wen_comp_pff(sync1_Push_mioi_wen_comp_iff),
      .sync1_Push_mioi_oswt_unreg_pff(sync1_Push_mioi_oswt_unreg_pff),
      .sync1_Push_mioi_bawt_pff(sync1_Push_mioi_bawt_iff),
      .sync1_Push_mioi_biwt_pff(sync1_Push_mioi_biwt_iff),
      .sync1_Push_mioi_bcwt_pff(sync1_Push_mioi_bcwt_iff)
    );
  assign sync1_Push_mioi_wen_comp = sync1_Push_mioi_wen_comp_reg;
  assign sync1_Push_mioi_wen_comp_pff = sync1_Push_mioi_wen_comp_iff;
  assign sync1_Push_mioi_bawt = sync1_Push_mioi_bawt_reg;
  assign sync1_Push_mioi_bawt_pff = sync1_Push_mioi_bawt_iff;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    InputBuffer_run_rotate_in_Push_mioi
// ------------------------------------------------------------------


module InputBuffer_run_rotate_in_Push_mioi (
  clk, rst, rotate_in_val, rotate_in_rdy, rotate_in_msg, rotate_in_Push_mioi_oswt,
      rotate_in_Push_mioi_wen_comp, rotate_in_Push_mioi_idat, rotate_in_Push_mioi_oswt_pff
);
  input clk;
  input rst;
  output rotate_in_val;
  input rotate_in_rdy;
  output [1023:0] rotate_in_msg;
  input rotate_in_Push_mioi_oswt;
  output rotate_in_Push_mioi_wen_comp;
  input [1023:0] rotate_in_Push_mioi_idat;
  input rotate_in_Push_mioi_oswt_pff;


  // Interconnect Declarations
  wire rotate_in_Push_mioi_biwt;
  wire rotate_in_Push_mioi_irdy;


  // Interconnect Declarations for Component Instantiations 
  ccs_out_buf_wait_v5 #(.rscid(32'sd15),
  .width(32'sd1024),
  .ph_clk(32'sd1),
  .ph_en(32'sd0),
  .ph_arst(32'sd0),
  .ph_srst(32'sd0)) rotate_in_Push_mioi (
      .vld(rotate_in_val),
      .rdy(rotate_in_rdy),
      .dat(rotate_in_msg),
      .idat(rotate_in_Push_mioi_idat),
      .irdy(rotate_in_Push_mioi_irdy),
      .ivld(rotate_in_Push_mioi_oswt),
      .clk(clk),
      .en(1'b0),
      .arst(rst),
      .srst(1'b1)
    );
  InputBuffer_run_rotate_in_Push_mioi_rotate_in_Push_mio_wait_ctrl InputBuffer_run_rotate_in_Push_mioi_rotate_in_Push_mio_wait_ctrl_inst
      (
      .rotate_in_Push_mioi_iswt0(rotate_in_Push_mioi_oswt_pff),
      .rotate_in_Push_mioi_irdy_oreg(rotate_in_Push_mioi_irdy),
      .rotate_in_Push_mioi_biwt(rotate_in_Push_mioi_biwt)
    );
  assign rotate_in_Push_mioi_wen_comp = (~ rotate_in_Push_mioi_oswt_pff) | rotate_in_Push_mioi_biwt;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    InputBuffer_run_dma_read_chnl_Pop_mioi
// ------------------------------------------------------------------


module InputBuffer_run_dma_read_chnl_Pop_mioi (
  clk, rst, dma_read_chnl_val, dma_read_chnl_rdy, dma_read_chnl_msg, dma_read_chnl_Pop_mioi_oswt,
      dma_read_chnl_Pop_mioi_wen_comp, dma_read_chnl_Pop_mioi_idat_mxwt, dma_read_chnl_Pop_mioi_oswt_pff
);
  input clk;
  input rst;
  input dma_read_chnl_val;
  output dma_read_chnl_rdy;
  input [63:0] dma_read_chnl_msg;
  input dma_read_chnl_Pop_mioi_oswt;
  output dma_read_chnl_Pop_mioi_wen_comp;
  output [63:0] dma_read_chnl_Pop_mioi_idat_mxwt;
  input dma_read_chnl_Pop_mioi_oswt_pff;


  // Interconnect Declarations
  wire dma_read_chnl_Pop_mioi_biwt;
  wire [63:0] dma_read_chnl_Pop_mioi_idat;
  wire dma_read_chnl_Pop_mioi_ivld;


  // Interconnect Declarations for Component Instantiations 
  ccs_ctrl_in_buf_wait_v4 #(.rscid(32'sd14),
  .width(32'sd64),
  .ph_clk(32'sd1),
  .ph_en(32'sd0),
  .ph_arst(32'sd0),
  .ph_srst(32'sd0)) dma_read_chnl_Pop_mioi (
      .vld(dma_read_chnl_val),
      .rdy(dma_read_chnl_rdy),
      .dat(dma_read_chnl_msg),
      .idat(dma_read_chnl_Pop_mioi_idat),
      .irdy(dma_read_chnl_Pop_mioi_oswt),
      .ivld(dma_read_chnl_Pop_mioi_ivld),
      .clk(clk),
      .en(1'b0),
      .arst(rst),
      .srst(1'b1)
    );
  InputBuffer_run_dma_read_chnl_Pop_mioi_dma_read_chnl_Pop_mio_wait_ctrl InputBuffer_run_dma_read_chnl_Pop_mioi_dma_read_chnl_Pop_mio_wait_ctrl_inst
      (
      .dma_read_chnl_Pop_mioi_iswt0(dma_read_chnl_Pop_mioi_oswt_pff),
      .dma_read_chnl_Pop_mioi_ivld_oreg(dma_read_chnl_Pop_mioi_ivld),
      .dma_read_chnl_Pop_mioi_biwt(dma_read_chnl_Pop_mioi_biwt)
    );
  assign dma_read_chnl_Pop_mioi_idat_mxwt = dma_read_chnl_Pop_mioi_idat;
  assign dma_read_chnl_Pop_mioi_wen_comp = (~ dma_read_chnl_Pop_mioi_oswt_pff) |
      dma_read_chnl_Pop_mioi_biwt;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    InputBuffer_run_dma_read_ctrl_Push_mioi
// ------------------------------------------------------------------


module InputBuffer_run_dma_read_ctrl_Push_mioi (
  clk, rst, dma_read_ctrl_val, dma_read_ctrl_rdy, dma_read_ctrl_msg, dma_read_ctrl_Push_mioi_oswt,
      dma_read_ctrl_Push_mioi_wen_comp, dma_read_ctrl_Push_mioi_idat, dma_read_ctrl_Push_mioi_oswt_pff
);
  input clk;
  input rst;
  output dma_read_ctrl_val;
  input dma_read_ctrl_rdy;
  output [66:0] dma_read_ctrl_msg;
  input dma_read_ctrl_Push_mioi_oswt;
  output dma_read_ctrl_Push_mioi_wen_comp;
  input [66:0] dma_read_ctrl_Push_mioi_idat;
  input dma_read_ctrl_Push_mioi_oswt_pff;


  // Interconnect Declarations
  wire dma_read_ctrl_Push_mioi_biwt;
  wire dma_read_ctrl_Push_mioi_irdy;


  // Interconnect Declarations for Component Instantiations 
  wire [66:0] nl_dma_read_ctrl_Push_mioi_idat;
  assign nl_dma_read_ctrl_Push_mioi_idat = {3'b100 , (dma_read_ctrl_Push_mioi_idat[63:36])
      , 4'b0000 , (dma_read_ctrl_Push_mioi_idat[31:0])};
  ccs_out_buf_wait_v5 #(.rscid(32'sd13),
  .width(32'sd67),
  .ph_clk(32'sd1),
  .ph_en(32'sd0),
  .ph_arst(32'sd0),
  .ph_srst(32'sd0)) dma_read_ctrl_Push_mioi (
      .vld(dma_read_ctrl_val),
      .rdy(dma_read_ctrl_rdy),
      .dat(dma_read_ctrl_msg),
      .idat(nl_dma_read_ctrl_Push_mioi_idat[66:0]),
      .irdy(dma_read_ctrl_Push_mioi_irdy),
      .ivld(dma_read_ctrl_Push_mioi_oswt),
      .clk(clk),
      .en(1'b0),
      .arst(rst),
      .srst(1'b1)
    );
  InputBuffer_run_dma_read_ctrl_Push_mioi_dma_read_ctrl_Push_mio_wait_ctrl InputBuffer_run_dma_read_ctrl_Push_mioi_dma_read_ctrl_Push_mio_wait_ctrl_inst
      (
      .dma_read_ctrl_Push_mioi_iswt0(dma_read_ctrl_Push_mioi_oswt_pff),
      .dma_read_ctrl_Push_mioi_irdy_oreg(dma_read_ctrl_Push_mioi_irdy),
      .dma_read_ctrl_Push_mioi_biwt(dma_read_ctrl_Push_mioi_biwt)
    );
  assign dma_read_ctrl_Push_mioi_wen_comp = (~ dma_read_ctrl_Push_mioi_oswt_pff)
      | dma_read_ctrl_Push_mioi_biwt;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    InputBuffer_run_sync1_Pop_mioi
// ------------------------------------------------------------------


module InputBuffer_run_sync1_Pop_mioi (
  clk, rst, sync1_val, sync1_rdy, sync1_msg, sync1_Pop_mioi_oswt, sync1_Pop_mioi_wen_comp,
      sync1_Pop_mioi_oswt_pff
);
  input clk;
  input rst;
  input sync1_val;
  output sync1_rdy;
  input sync1_msg;
  input sync1_Pop_mioi_oswt;
  output sync1_Pop_mioi_wen_comp;
  input sync1_Pop_mioi_oswt_pff;


  // Interconnect Declarations
  wire sync1_Pop_mioi_biwt;
  wire sync1_Pop_mioi_idat;
  wire sync1_Pop_mioi_ivld;


  // Interconnect Declarations for Component Instantiations 
  ccs_ctrl_in_buf_wait_v4 #(.rscid(32'sd12),
  .width(32'sd1),
  .ph_clk(32'sd1),
  .ph_en(32'sd0),
  .ph_arst(32'sd0),
  .ph_srst(32'sd0)) sync1_Pop_mioi (
      .vld(sync1_val),
      .rdy(sync1_rdy),
      .dat(sync1_msg),
      .idat(sync1_Pop_mioi_idat),
      .irdy(sync1_Pop_mioi_oswt),
      .ivld(sync1_Pop_mioi_ivld),
      .clk(clk),
      .en(1'b0),
      .arst(rst),
      .srst(1'b1)
    );
  InputBuffer_run_sync1_Pop_mioi_sync1_Pop_mio_wait_ctrl InputBuffer_run_sync1_Pop_mioi_sync1_Pop_mio_wait_ctrl_inst
      (
      .sync1_Pop_mioi_iswt0(sync1_Pop_mioi_oswt_pff),
      .sync1_Pop_mioi_ivld_oreg(sync1_Pop_mioi_ivld),
      .sync1_Pop_mioi_biwt(sync1_Pop_mioi_biwt)
    );
  assign sync1_Pop_mioi_wen_comp = (~ sync1_Pop_mioi_oswt_pff) | sync1_Pop_mioi_biwt;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_cmp_14
// ------------------------------------------------------------------


module Rotate_run_while_mul_cmp_14 (
  clk, rst, run_wen, run_wten, while_mul_cmp_14_oswt_unreg, while_mul_cmp_14_bawt,
      while_mul_cmp_14_iden, while_mul_cmp_14_iswt3, while_mul_cmp_14_iden_1, while_mul_cmp_14_oswt_unreg_1,
      while_mul_cmp_14_iden_2, while_mul_cmp_14_iswt3_1, while_mul_cmp_14_iden_3,
      while_mul_cmp_14_oswt_unreg_2, while_mul_cmp_14_iden_4, while_mul_cmp_14_iswt3_2,
      while_mul_cmp_14_iden_5, while_mul_cmp_14_a_run, while_mul_cmp_14_b_run, while_mul_cmp_14_z_mxwt,
      while_mul_cmp_14_z_mxwt_1, while_mul_cmp_14_z_mxwt_2, while_mul_cmp_14_iswt3_2_pff,
      while_mul_cmp_14_iswt3_1_pff, while_mul_cmp_14_iswt3_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_cmp_14_oswt_unreg;
  output while_mul_cmp_14_bawt;
  output while_mul_cmp_14_iden;
  input while_mul_cmp_14_iswt3;
  output while_mul_cmp_14_iden_1;
  input while_mul_cmp_14_oswt_unreg_1;
  output while_mul_cmp_14_iden_2;
  input while_mul_cmp_14_iswt3_1;
  output while_mul_cmp_14_iden_3;
  input while_mul_cmp_14_oswt_unreg_2;
  output while_mul_cmp_14_iden_4;
  input while_mul_cmp_14_iswt3_2;
  output while_mul_cmp_14_iden_5;
  input [63:0] while_mul_cmp_14_a_run;
  input [63:0] while_mul_cmp_14_b_run;
  output [111:0] while_mul_cmp_14_z_mxwt;
  output [111:0] while_mul_cmp_14_z_mxwt_1;
  output [111:0] while_mul_cmp_14_z_mxwt_2;
  input while_mul_cmp_14_iswt3_2_pff;
  input while_mul_cmp_14_iswt3_1_pff;
  input while_mul_cmp_14_iswt3_pff;


  // Interconnect Declarations
  wire while_mul_cmp_14_bdwt;
  wire while_mul_cmp_14_bdwt_2;
  wire while_mul_cmp_14_bdwt_4;
  wire [127:0] while_mul_cmp_14_z;
  wire [111:0] while_mul_cmp_14_z_mxwt_pconst;
  wire [111:0] while_mul_cmp_14_z_mxwt_1_pconst;
  wire [111:0] while_mul_cmp_14_z_mxwt_2_pconst;
  wire run_cgwt_32;


  // Interconnect Declarations for Component Instantiations 
  mgc_mul_pipe #(.width_a(32'sd64),
  .signd_a(32'sd1),
  .width_b(32'sd64),
  .signd_b(32'sd1),
  .width_z(32'sd128),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd0),
  .stages(32'sd4),
  .n_inreg(32'sd1)) while_mul_cmp_14 (
      .a(while_mul_cmp_14_a_run),
      .b(while_mul_cmp_14_b_run),
      .clk(clk),
      .en(run_cgwt_32),
      .a_rst(rst),
      .s_rst(1'b1),
      .z(while_mul_cmp_14_z)
    );
  Rotate_run_while_mul_cmp_14_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_14
      Rotate_run_while_mul_cmp_14_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_14_inst
      (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_cmp_14_oswt_unreg(while_mul_cmp_14_oswt_unreg),
      .while_mul_cmp_14_iswt3(while_mul_cmp_14_iswt3),
      .while_mul_cmp_14_iden_1(while_mul_cmp_14_iden_1),
      .while_mul_cmp_14_oswt_unreg_1(while_mul_cmp_14_oswt_unreg_1),
      .while_mul_cmp_14_iswt3_1(while_mul_cmp_14_iswt3_1),
      .while_mul_cmp_14_iden_3(while_mul_cmp_14_iden_3),
      .while_mul_cmp_14_oswt_unreg_2(while_mul_cmp_14_oswt_unreg_2),
      .while_mul_cmp_14_iswt3_2(while_mul_cmp_14_iswt3_2),
      .while_mul_cmp_14_iden_5(while_mul_cmp_14_iden_5),
      .run_cgwt_32(run_cgwt_32),
      .while_mul_cmp_14_bdwt(while_mul_cmp_14_bdwt),
      .while_mul_cmp_14_bdwt_2(while_mul_cmp_14_bdwt_2),
      .while_mul_cmp_14_bdwt_4(while_mul_cmp_14_bdwt_4),
      .while_mul_cmp_14_iswt3_2_pff(while_mul_cmp_14_iswt3_2_pff),
      .while_mul_cmp_14_iswt3_1_pff(while_mul_cmp_14_iswt3_1_pff),
      .while_mul_cmp_14_iswt3_pff(while_mul_cmp_14_iswt3_pff)
    );
  Rotate_run_while_mul_cmp_14_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_14 Rotate_run_while_mul_cmp_14_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_14_inst
      (
      .clk(clk),
      .rst(rst),
      .while_mul_cmp_14_bawt(while_mul_cmp_14_bawt),
      .while_mul_cmp_14_iden(while_mul_cmp_14_iden),
      .while_mul_cmp_14_iden_2(while_mul_cmp_14_iden_2),
      .while_mul_cmp_14_iden_4(while_mul_cmp_14_iden_4),
      .while_mul_cmp_14_z_mxwt(while_mul_cmp_14_z_mxwt_pconst),
      .while_mul_cmp_14_z_mxwt_1(while_mul_cmp_14_z_mxwt_1_pconst),
      .while_mul_cmp_14_z_mxwt_2(while_mul_cmp_14_z_mxwt_2_pconst),
      .while_mul_cmp_14_biwt(while_mul_cmp_14_iden_1),
      .while_mul_cmp_14_bdwt(while_mul_cmp_14_bdwt),
      .while_mul_cmp_14_biwt_2(while_mul_cmp_14_iden_3),
      .while_mul_cmp_14_bdwt_2(while_mul_cmp_14_bdwt_2),
      .while_mul_cmp_14_biwt_4(while_mul_cmp_14_iden_5),
      .while_mul_cmp_14_bdwt_4(while_mul_cmp_14_bdwt_4),
      .while_mul_cmp_14_z(while_mul_cmp_14_z)
    );
  assign while_mul_cmp_14_z_mxwt = while_mul_cmp_14_z_mxwt_pconst;
  assign while_mul_cmp_14_z_mxwt_1 = while_mul_cmp_14_z_mxwt_1_pconst;
  assign while_mul_cmp_14_z_mxwt_2 = while_mul_cmp_14_z_mxwt_2_pconst;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_cmp_13
// ------------------------------------------------------------------


module Rotate_run_while_mul_cmp_13 (
  clk, rst, run_wen, run_wten, while_mul_cmp_13_oswt_unreg, while_mul_cmp_13_bawt,
      while_mul_cmp_13_iden, while_mul_cmp_13_iswt3, while_mul_cmp_13_iden_1, while_mul_cmp_13_oswt_unreg_1,
      while_mul_cmp_13_iden_2, while_mul_cmp_13_iswt3_1, while_mul_cmp_13_iden_3,
      while_mul_cmp_13_oswt_unreg_2, while_mul_cmp_13_iden_4, while_mul_cmp_13_iswt3_2,
      while_mul_cmp_13_iden_5, while_mul_cmp_13_a_run, while_mul_cmp_13_b_run, while_mul_cmp_13_z_mxwt,
      while_mul_cmp_13_z_mxwt_1, while_mul_cmp_13_z_mxwt_2, while_mul_cmp_13_iswt3_2_pff,
      while_mul_cmp_13_iswt3_1_pff, while_mul_cmp_13_iswt3_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_cmp_13_oswt_unreg;
  output while_mul_cmp_13_bawt;
  output while_mul_cmp_13_iden;
  input while_mul_cmp_13_iswt3;
  output while_mul_cmp_13_iden_1;
  input while_mul_cmp_13_oswt_unreg_1;
  output while_mul_cmp_13_iden_2;
  input while_mul_cmp_13_iswt3_1;
  output while_mul_cmp_13_iden_3;
  input while_mul_cmp_13_oswt_unreg_2;
  output while_mul_cmp_13_iden_4;
  input while_mul_cmp_13_iswt3_2;
  output while_mul_cmp_13_iden_5;
  input [63:0] while_mul_cmp_13_a_run;
  input [63:0] while_mul_cmp_13_b_run;
  output [111:0] while_mul_cmp_13_z_mxwt;
  output [111:0] while_mul_cmp_13_z_mxwt_1;
  output [111:0] while_mul_cmp_13_z_mxwt_2;
  input while_mul_cmp_13_iswt3_2_pff;
  input while_mul_cmp_13_iswt3_1_pff;
  input while_mul_cmp_13_iswt3_pff;


  // Interconnect Declarations
  wire while_mul_cmp_13_bdwt;
  wire while_mul_cmp_13_bdwt_2;
  wire while_mul_cmp_13_bdwt_4;
  wire [127:0] while_mul_cmp_13_z;
  wire [111:0] while_mul_cmp_13_z_mxwt_pconst;
  wire [111:0] while_mul_cmp_13_z_mxwt_1_pconst;
  wire [111:0] while_mul_cmp_13_z_mxwt_2_pconst;
  wire run_cgwt_31;


  // Interconnect Declarations for Component Instantiations 
  mgc_mul_pipe #(.width_a(32'sd64),
  .signd_a(32'sd1),
  .width_b(32'sd64),
  .signd_b(32'sd1),
  .width_z(32'sd128),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd0),
  .stages(32'sd4),
  .n_inreg(32'sd1)) while_mul_cmp_13 (
      .a(while_mul_cmp_13_a_run),
      .b(while_mul_cmp_13_b_run),
      .clk(clk),
      .en(run_cgwt_31),
      .a_rst(rst),
      .s_rst(1'b1),
      .z(while_mul_cmp_13_z)
    );
  Rotate_run_while_mul_cmp_13_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_13
      Rotate_run_while_mul_cmp_13_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_13_inst
      (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_cmp_13_oswt_unreg(while_mul_cmp_13_oswt_unreg),
      .while_mul_cmp_13_iswt3(while_mul_cmp_13_iswt3),
      .while_mul_cmp_13_iden_1(while_mul_cmp_13_iden_1),
      .while_mul_cmp_13_oswt_unreg_1(while_mul_cmp_13_oswt_unreg_1),
      .while_mul_cmp_13_iswt3_1(while_mul_cmp_13_iswt3_1),
      .while_mul_cmp_13_iden_3(while_mul_cmp_13_iden_3),
      .while_mul_cmp_13_oswt_unreg_2(while_mul_cmp_13_oswt_unreg_2),
      .while_mul_cmp_13_iswt3_2(while_mul_cmp_13_iswt3_2),
      .while_mul_cmp_13_iden_5(while_mul_cmp_13_iden_5),
      .run_cgwt_31(run_cgwt_31),
      .while_mul_cmp_13_bdwt(while_mul_cmp_13_bdwt),
      .while_mul_cmp_13_bdwt_2(while_mul_cmp_13_bdwt_2),
      .while_mul_cmp_13_bdwt_4(while_mul_cmp_13_bdwt_4),
      .while_mul_cmp_13_iswt3_2_pff(while_mul_cmp_13_iswt3_2_pff),
      .while_mul_cmp_13_iswt3_1_pff(while_mul_cmp_13_iswt3_1_pff),
      .while_mul_cmp_13_iswt3_pff(while_mul_cmp_13_iswt3_pff)
    );
  Rotate_run_while_mul_cmp_13_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_13 Rotate_run_while_mul_cmp_13_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_13_inst
      (
      .clk(clk),
      .rst(rst),
      .while_mul_cmp_13_bawt(while_mul_cmp_13_bawt),
      .while_mul_cmp_13_iden(while_mul_cmp_13_iden),
      .while_mul_cmp_13_iden_2(while_mul_cmp_13_iden_2),
      .while_mul_cmp_13_iden_4(while_mul_cmp_13_iden_4),
      .while_mul_cmp_13_z_mxwt(while_mul_cmp_13_z_mxwt_pconst),
      .while_mul_cmp_13_z_mxwt_1(while_mul_cmp_13_z_mxwt_1_pconst),
      .while_mul_cmp_13_z_mxwt_2(while_mul_cmp_13_z_mxwt_2_pconst),
      .while_mul_cmp_13_biwt(while_mul_cmp_13_iden_1),
      .while_mul_cmp_13_bdwt(while_mul_cmp_13_bdwt),
      .while_mul_cmp_13_biwt_2(while_mul_cmp_13_iden_3),
      .while_mul_cmp_13_bdwt_2(while_mul_cmp_13_bdwt_2),
      .while_mul_cmp_13_biwt_4(while_mul_cmp_13_iden_5),
      .while_mul_cmp_13_bdwt_4(while_mul_cmp_13_bdwt_4),
      .while_mul_cmp_13_z(while_mul_cmp_13_z)
    );
  assign while_mul_cmp_13_z_mxwt = while_mul_cmp_13_z_mxwt_pconst;
  assign while_mul_cmp_13_z_mxwt_1 = while_mul_cmp_13_z_mxwt_1_pconst;
  assign while_mul_cmp_13_z_mxwt_2 = while_mul_cmp_13_z_mxwt_2_pconst;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_cmp_12
// ------------------------------------------------------------------


module Rotate_run_while_mul_cmp_12 (
  clk, rst, run_wen, run_wten, while_mul_cmp_12_oswt_unreg, while_mul_cmp_12_bawt,
      while_mul_cmp_12_iden, while_mul_cmp_12_iswt3, while_mul_cmp_12_iden_1, while_mul_cmp_12_oswt_unreg_1,
      while_mul_cmp_12_iden_2, while_mul_cmp_12_iswt3_1, while_mul_cmp_12_iden_3,
      while_mul_cmp_12_oswt_unreg_2, while_mul_cmp_12_iden_4, while_mul_cmp_12_iswt3_2,
      while_mul_cmp_12_iden_5, while_mul_cmp_12_a_run, while_mul_cmp_12_b_run, while_mul_cmp_12_z_mxwt,
      while_mul_cmp_12_z_mxwt_1, while_mul_cmp_12_z_mxwt_2, while_mul_cmp_12_iswt3_2_pff,
      while_mul_cmp_12_iswt3_1_pff, while_mul_cmp_12_iswt3_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_cmp_12_oswt_unreg;
  output while_mul_cmp_12_bawt;
  output while_mul_cmp_12_iden;
  input while_mul_cmp_12_iswt3;
  output while_mul_cmp_12_iden_1;
  input while_mul_cmp_12_oswt_unreg_1;
  output while_mul_cmp_12_iden_2;
  input while_mul_cmp_12_iswt3_1;
  output while_mul_cmp_12_iden_3;
  input while_mul_cmp_12_oswt_unreg_2;
  output while_mul_cmp_12_iden_4;
  input while_mul_cmp_12_iswt3_2;
  output while_mul_cmp_12_iden_5;
  input [63:0] while_mul_cmp_12_a_run;
  input [63:0] while_mul_cmp_12_b_run;
  output [111:0] while_mul_cmp_12_z_mxwt;
  output [111:0] while_mul_cmp_12_z_mxwt_1;
  output [111:0] while_mul_cmp_12_z_mxwt_2;
  input while_mul_cmp_12_iswt3_2_pff;
  input while_mul_cmp_12_iswt3_1_pff;
  input while_mul_cmp_12_iswt3_pff;


  // Interconnect Declarations
  wire while_mul_cmp_12_bdwt;
  wire while_mul_cmp_12_bdwt_2;
  wire while_mul_cmp_12_bdwt_4;
  wire [127:0] while_mul_cmp_12_z;
  wire [111:0] while_mul_cmp_12_z_mxwt_pconst;
  wire [111:0] while_mul_cmp_12_z_mxwt_1_pconst;
  wire [111:0] while_mul_cmp_12_z_mxwt_2_pconst;
  wire run_cgwt_30;


  // Interconnect Declarations for Component Instantiations 
  mgc_mul_pipe #(.width_a(32'sd64),
  .signd_a(32'sd1),
  .width_b(32'sd64),
  .signd_b(32'sd1),
  .width_z(32'sd128),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd0),
  .stages(32'sd4),
  .n_inreg(32'sd1)) while_mul_cmp_12 (
      .a(while_mul_cmp_12_a_run),
      .b(while_mul_cmp_12_b_run),
      .clk(clk),
      .en(run_cgwt_30),
      .a_rst(rst),
      .s_rst(1'b1),
      .z(while_mul_cmp_12_z)
    );
  Rotate_run_while_mul_cmp_12_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_12
      Rotate_run_while_mul_cmp_12_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_12_inst
      (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_cmp_12_oswt_unreg(while_mul_cmp_12_oswt_unreg),
      .while_mul_cmp_12_iswt3(while_mul_cmp_12_iswt3),
      .while_mul_cmp_12_iden_1(while_mul_cmp_12_iden_1),
      .while_mul_cmp_12_oswt_unreg_1(while_mul_cmp_12_oswt_unreg_1),
      .while_mul_cmp_12_iswt3_1(while_mul_cmp_12_iswt3_1),
      .while_mul_cmp_12_iden_3(while_mul_cmp_12_iden_3),
      .while_mul_cmp_12_oswt_unreg_2(while_mul_cmp_12_oswt_unreg_2),
      .while_mul_cmp_12_iswt3_2(while_mul_cmp_12_iswt3_2),
      .while_mul_cmp_12_iden_5(while_mul_cmp_12_iden_5),
      .run_cgwt_30(run_cgwt_30),
      .while_mul_cmp_12_bdwt(while_mul_cmp_12_bdwt),
      .while_mul_cmp_12_bdwt_2(while_mul_cmp_12_bdwt_2),
      .while_mul_cmp_12_bdwt_4(while_mul_cmp_12_bdwt_4),
      .while_mul_cmp_12_iswt3_2_pff(while_mul_cmp_12_iswt3_2_pff),
      .while_mul_cmp_12_iswt3_1_pff(while_mul_cmp_12_iswt3_1_pff),
      .while_mul_cmp_12_iswt3_pff(while_mul_cmp_12_iswt3_pff)
    );
  Rotate_run_while_mul_cmp_12_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_12 Rotate_run_while_mul_cmp_12_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_12_inst
      (
      .clk(clk),
      .rst(rst),
      .while_mul_cmp_12_bawt(while_mul_cmp_12_bawt),
      .while_mul_cmp_12_iden(while_mul_cmp_12_iden),
      .while_mul_cmp_12_iden_2(while_mul_cmp_12_iden_2),
      .while_mul_cmp_12_iden_4(while_mul_cmp_12_iden_4),
      .while_mul_cmp_12_z_mxwt(while_mul_cmp_12_z_mxwt_pconst),
      .while_mul_cmp_12_z_mxwt_1(while_mul_cmp_12_z_mxwt_1_pconst),
      .while_mul_cmp_12_z_mxwt_2(while_mul_cmp_12_z_mxwt_2_pconst),
      .while_mul_cmp_12_biwt(while_mul_cmp_12_iden_1),
      .while_mul_cmp_12_bdwt(while_mul_cmp_12_bdwt),
      .while_mul_cmp_12_biwt_2(while_mul_cmp_12_iden_3),
      .while_mul_cmp_12_bdwt_2(while_mul_cmp_12_bdwt_2),
      .while_mul_cmp_12_biwt_4(while_mul_cmp_12_iden_5),
      .while_mul_cmp_12_bdwt_4(while_mul_cmp_12_bdwt_4),
      .while_mul_cmp_12_z(while_mul_cmp_12_z)
    );
  assign while_mul_cmp_12_z_mxwt = while_mul_cmp_12_z_mxwt_pconst;
  assign while_mul_cmp_12_z_mxwt_1 = while_mul_cmp_12_z_mxwt_1_pconst;
  assign while_mul_cmp_12_z_mxwt_2 = while_mul_cmp_12_z_mxwt_2_pconst;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_cmp_11
// ------------------------------------------------------------------


module Rotate_run_while_mul_cmp_11 (
  clk, rst, run_wen, run_wten, while_mul_cmp_11_oswt_unreg, while_mul_cmp_11_bawt,
      while_mul_cmp_11_iden, while_mul_cmp_11_iswt3, while_mul_cmp_11_iden_1, while_mul_cmp_11_oswt_unreg_1,
      while_mul_cmp_11_iden_2, while_mul_cmp_11_iswt3_1, while_mul_cmp_11_iden_3,
      while_mul_cmp_11_oswt_unreg_2, while_mul_cmp_11_iden_4, while_mul_cmp_11_iswt3_2,
      while_mul_cmp_11_iden_5, while_mul_cmp_11_a_run, while_mul_cmp_11_b_run, while_mul_cmp_11_z_mxwt,
      while_mul_cmp_11_z_mxwt_1, while_mul_cmp_11_z_mxwt_2, while_mul_cmp_11_iswt3_2_pff,
      while_mul_cmp_11_iswt3_1_pff, while_mul_cmp_11_iswt3_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_cmp_11_oswt_unreg;
  output while_mul_cmp_11_bawt;
  output while_mul_cmp_11_iden;
  input while_mul_cmp_11_iswt3;
  output while_mul_cmp_11_iden_1;
  input while_mul_cmp_11_oswt_unreg_1;
  output while_mul_cmp_11_iden_2;
  input while_mul_cmp_11_iswt3_1;
  output while_mul_cmp_11_iden_3;
  input while_mul_cmp_11_oswt_unreg_2;
  output while_mul_cmp_11_iden_4;
  input while_mul_cmp_11_iswt3_2;
  output while_mul_cmp_11_iden_5;
  input [63:0] while_mul_cmp_11_a_run;
  input [63:0] while_mul_cmp_11_b_run;
  output [111:0] while_mul_cmp_11_z_mxwt;
  output [111:0] while_mul_cmp_11_z_mxwt_1;
  output [111:0] while_mul_cmp_11_z_mxwt_2;
  input while_mul_cmp_11_iswt3_2_pff;
  input while_mul_cmp_11_iswt3_1_pff;
  input while_mul_cmp_11_iswt3_pff;


  // Interconnect Declarations
  wire while_mul_cmp_11_bdwt;
  wire while_mul_cmp_11_bdwt_2;
  wire while_mul_cmp_11_bdwt_4;
  wire [127:0] while_mul_cmp_11_z;
  wire [111:0] while_mul_cmp_11_z_mxwt_pconst;
  wire [111:0] while_mul_cmp_11_z_mxwt_1_pconst;
  wire [111:0] while_mul_cmp_11_z_mxwt_2_pconst;
  wire run_cgwt_29;


  // Interconnect Declarations for Component Instantiations 
  mgc_mul_pipe #(.width_a(32'sd64),
  .signd_a(32'sd1),
  .width_b(32'sd64),
  .signd_b(32'sd1),
  .width_z(32'sd128),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd0),
  .stages(32'sd4),
  .n_inreg(32'sd1)) while_mul_cmp_11 (
      .a(while_mul_cmp_11_a_run),
      .b(while_mul_cmp_11_b_run),
      .clk(clk),
      .en(run_cgwt_29),
      .a_rst(rst),
      .s_rst(1'b1),
      .z(while_mul_cmp_11_z)
    );
  Rotate_run_while_mul_cmp_11_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_11
      Rotate_run_while_mul_cmp_11_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_11_inst
      (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_cmp_11_oswt_unreg(while_mul_cmp_11_oswt_unreg),
      .while_mul_cmp_11_iswt3(while_mul_cmp_11_iswt3),
      .while_mul_cmp_11_iden_1(while_mul_cmp_11_iden_1),
      .while_mul_cmp_11_oswt_unreg_1(while_mul_cmp_11_oswt_unreg_1),
      .while_mul_cmp_11_iswt3_1(while_mul_cmp_11_iswt3_1),
      .while_mul_cmp_11_iden_3(while_mul_cmp_11_iden_3),
      .while_mul_cmp_11_oswt_unreg_2(while_mul_cmp_11_oswt_unreg_2),
      .while_mul_cmp_11_iswt3_2(while_mul_cmp_11_iswt3_2),
      .while_mul_cmp_11_iden_5(while_mul_cmp_11_iden_5),
      .run_cgwt_29(run_cgwt_29),
      .while_mul_cmp_11_bdwt(while_mul_cmp_11_bdwt),
      .while_mul_cmp_11_bdwt_2(while_mul_cmp_11_bdwt_2),
      .while_mul_cmp_11_bdwt_4(while_mul_cmp_11_bdwt_4),
      .while_mul_cmp_11_iswt3_2_pff(while_mul_cmp_11_iswt3_2_pff),
      .while_mul_cmp_11_iswt3_1_pff(while_mul_cmp_11_iswt3_1_pff),
      .while_mul_cmp_11_iswt3_pff(while_mul_cmp_11_iswt3_pff)
    );
  Rotate_run_while_mul_cmp_11_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_11 Rotate_run_while_mul_cmp_11_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_11_inst
      (
      .clk(clk),
      .rst(rst),
      .while_mul_cmp_11_bawt(while_mul_cmp_11_bawt),
      .while_mul_cmp_11_iden(while_mul_cmp_11_iden),
      .while_mul_cmp_11_iden_2(while_mul_cmp_11_iden_2),
      .while_mul_cmp_11_iden_4(while_mul_cmp_11_iden_4),
      .while_mul_cmp_11_z_mxwt(while_mul_cmp_11_z_mxwt_pconst),
      .while_mul_cmp_11_z_mxwt_1(while_mul_cmp_11_z_mxwt_1_pconst),
      .while_mul_cmp_11_z_mxwt_2(while_mul_cmp_11_z_mxwt_2_pconst),
      .while_mul_cmp_11_biwt(while_mul_cmp_11_iden_1),
      .while_mul_cmp_11_bdwt(while_mul_cmp_11_bdwt),
      .while_mul_cmp_11_biwt_2(while_mul_cmp_11_iden_3),
      .while_mul_cmp_11_bdwt_2(while_mul_cmp_11_bdwt_2),
      .while_mul_cmp_11_biwt_4(while_mul_cmp_11_iden_5),
      .while_mul_cmp_11_bdwt_4(while_mul_cmp_11_bdwt_4),
      .while_mul_cmp_11_z(while_mul_cmp_11_z)
    );
  assign while_mul_cmp_11_z_mxwt = while_mul_cmp_11_z_mxwt_pconst;
  assign while_mul_cmp_11_z_mxwt_1 = while_mul_cmp_11_z_mxwt_1_pconst;
  assign while_mul_cmp_11_z_mxwt_2 = while_mul_cmp_11_z_mxwt_2_pconst;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_cmp_10
// ------------------------------------------------------------------


module Rotate_run_while_mul_cmp_10 (
  clk, rst, run_wen, run_wten, while_mul_cmp_10_oswt_unreg, while_mul_cmp_10_bawt,
      while_mul_cmp_10_iden, while_mul_cmp_10_iswt3, while_mul_cmp_10_iden_1, while_mul_cmp_10_oswt_unreg_1,
      while_mul_cmp_10_iden_2, while_mul_cmp_10_iswt3_1, while_mul_cmp_10_iden_3,
      while_mul_cmp_10_oswt_unreg_2, while_mul_cmp_10_iden_4, while_mul_cmp_10_iswt3_2,
      while_mul_cmp_10_iden_5, while_mul_cmp_10_a_run, while_mul_cmp_10_b_run, while_mul_cmp_10_z_mxwt,
      while_mul_cmp_10_z_mxwt_1, while_mul_cmp_10_z_mxwt_2, while_mul_cmp_10_iswt3_2_pff,
      while_mul_cmp_10_iswt3_1_pff, while_mul_cmp_10_iswt3_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_cmp_10_oswt_unreg;
  output while_mul_cmp_10_bawt;
  output while_mul_cmp_10_iden;
  input while_mul_cmp_10_iswt3;
  output while_mul_cmp_10_iden_1;
  input while_mul_cmp_10_oswt_unreg_1;
  output while_mul_cmp_10_iden_2;
  input while_mul_cmp_10_iswt3_1;
  output while_mul_cmp_10_iden_3;
  input while_mul_cmp_10_oswt_unreg_2;
  output while_mul_cmp_10_iden_4;
  input while_mul_cmp_10_iswt3_2;
  output while_mul_cmp_10_iden_5;
  input [63:0] while_mul_cmp_10_a_run;
  input [63:0] while_mul_cmp_10_b_run;
  output [111:0] while_mul_cmp_10_z_mxwt;
  output [111:0] while_mul_cmp_10_z_mxwt_1;
  output [111:0] while_mul_cmp_10_z_mxwt_2;
  input while_mul_cmp_10_iswt3_2_pff;
  input while_mul_cmp_10_iswt3_1_pff;
  input while_mul_cmp_10_iswt3_pff;


  // Interconnect Declarations
  wire while_mul_cmp_10_bdwt;
  wire while_mul_cmp_10_bdwt_2;
  wire while_mul_cmp_10_bdwt_4;
  wire [127:0] while_mul_cmp_10_z;
  wire [111:0] while_mul_cmp_10_z_mxwt_pconst;
  wire [111:0] while_mul_cmp_10_z_mxwt_1_pconst;
  wire [111:0] while_mul_cmp_10_z_mxwt_2_pconst;
  wire run_cgwt_28;


  // Interconnect Declarations for Component Instantiations 
  mgc_mul_pipe #(.width_a(32'sd64),
  .signd_a(32'sd1),
  .width_b(32'sd64),
  .signd_b(32'sd1),
  .width_z(32'sd128),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd0),
  .stages(32'sd4),
  .n_inreg(32'sd1)) while_mul_cmp_10 (
      .a(while_mul_cmp_10_a_run),
      .b(while_mul_cmp_10_b_run),
      .clk(clk),
      .en(run_cgwt_28),
      .a_rst(rst),
      .s_rst(1'b1),
      .z(while_mul_cmp_10_z)
    );
  Rotate_run_while_mul_cmp_10_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_10
      Rotate_run_while_mul_cmp_10_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_10_inst
      (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_cmp_10_oswt_unreg(while_mul_cmp_10_oswt_unreg),
      .while_mul_cmp_10_iswt3(while_mul_cmp_10_iswt3),
      .while_mul_cmp_10_iden_1(while_mul_cmp_10_iden_1),
      .while_mul_cmp_10_oswt_unreg_1(while_mul_cmp_10_oswt_unreg_1),
      .while_mul_cmp_10_iswt3_1(while_mul_cmp_10_iswt3_1),
      .while_mul_cmp_10_iden_3(while_mul_cmp_10_iden_3),
      .while_mul_cmp_10_oswt_unreg_2(while_mul_cmp_10_oswt_unreg_2),
      .while_mul_cmp_10_iswt3_2(while_mul_cmp_10_iswt3_2),
      .while_mul_cmp_10_iden_5(while_mul_cmp_10_iden_5),
      .run_cgwt_28(run_cgwt_28),
      .while_mul_cmp_10_bdwt(while_mul_cmp_10_bdwt),
      .while_mul_cmp_10_bdwt_2(while_mul_cmp_10_bdwt_2),
      .while_mul_cmp_10_bdwt_4(while_mul_cmp_10_bdwt_4),
      .while_mul_cmp_10_iswt3_2_pff(while_mul_cmp_10_iswt3_2_pff),
      .while_mul_cmp_10_iswt3_1_pff(while_mul_cmp_10_iswt3_1_pff),
      .while_mul_cmp_10_iswt3_pff(while_mul_cmp_10_iswt3_pff)
    );
  Rotate_run_while_mul_cmp_10_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_10 Rotate_run_while_mul_cmp_10_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_10_inst
      (
      .clk(clk),
      .rst(rst),
      .while_mul_cmp_10_bawt(while_mul_cmp_10_bawt),
      .while_mul_cmp_10_iden(while_mul_cmp_10_iden),
      .while_mul_cmp_10_iden_2(while_mul_cmp_10_iden_2),
      .while_mul_cmp_10_iden_4(while_mul_cmp_10_iden_4),
      .while_mul_cmp_10_z_mxwt(while_mul_cmp_10_z_mxwt_pconst),
      .while_mul_cmp_10_z_mxwt_1(while_mul_cmp_10_z_mxwt_1_pconst),
      .while_mul_cmp_10_z_mxwt_2(while_mul_cmp_10_z_mxwt_2_pconst),
      .while_mul_cmp_10_biwt(while_mul_cmp_10_iden_1),
      .while_mul_cmp_10_bdwt(while_mul_cmp_10_bdwt),
      .while_mul_cmp_10_biwt_2(while_mul_cmp_10_iden_3),
      .while_mul_cmp_10_bdwt_2(while_mul_cmp_10_bdwt_2),
      .while_mul_cmp_10_biwt_4(while_mul_cmp_10_iden_5),
      .while_mul_cmp_10_bdwt_4(while_mul_cmp_10_bdwt_4),
      .while_mul_cmp_10_z(while_mul_cmp_10_z)
    );
  assign while_mul_cmp_10_z_mxwt = while_mul_cmp_10_z_mxwt_pconst;
  assign while_mul_cmp_10_z_mxwt_1 = while_mul_cmp_10_z_mxwt_1_pconst;
  assign while_mul_cmp_10_z_mxwt_2 = while_mul_cmp_10_z_mxwt_2_pconst;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_cmp_9
// ------------------------------------------------------------------


module Rotate_run_while_mul_cmp_9 (
  clk, rst, run_wen, run_wten, while_mul_cmp_9_oswt_unreg, while_mul_cmp_9_bawt,
      while_mul_cmp_9_iden, while_mul_cmp_9_iswt3, while_mul_cmp_9_iden_1, while_mul_cmp_9_oswt_unreg_1,
      while_mul_cmp_9_iden_2, while_mul_cmp_9_iswt3_1, while_mul_cmp_9_iden_3, while_mul_cmp_9_oswt_unreg_2,
      while_mul_cmp_9_iden_4, while_mul_cmp_9_iswt3_2, while_mul_cmp_9_iden_5, while_mul_cmp_9_a_run,
      while_mul_cmp_9_b_run, while_mul_cmp_9_z_mxwt, while_mul_cmp_9_z_mxwt_1, while_mul_cmp_9_z_mxwt_2,
      while_mul_cmp_9_iswt3_2_pff, while_mul_cmp_9_iswt3_1_pff, while_mul_cmp_9_iswt3_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_cmp_9_oswt_unreg;
  output while_mul_cmp_9_bawt;
  output while_mul_cmp_9_iden;
  input while_mul_cmp_9_iswt3;
  output while_mul_cmp_9_iden_1;
  input while_mul_cmp_9_oswt_unreg_1;
  output while_mul_cmp_9_iden_2;
  input while_mul_cmp_9_iswt3_1;
  output while_mul_cmp_9_iden_3;
  input while_mul_cmp_9_oswt_unreg_2;
  output while_mul_cmp_9_iden_4;
  input while_mul_cmp_9_iswt3_2;
  output while_mul_cmp_9_iden_5;
  input [63:0] while_mul_cmp_9_a_run;
  input [63:0] while_mul_cmp_9_b_run;
  output [111:0] while_mul_cmp_9_z_mxwt;
  output [111:0] while_mul_cmp_9_z_mxwt_1;
  output [111:0] while_mul_cmp_9_z_mxwt_2;
  input while_mul_cmp_9_iswt3_2_pff;
  input while_mul_cmp_9_iswt3_1_pff;
  input while_mul_cmp_9_iswt3_pff;


  // Interconnect Declarations
  wire while_mul_cmp_9_bdwt;
  wire while_mul_cmp_9_bdwt_2;
  wire while_mul_cmp_9_bdwt_4;
  wire [127:0] while_mul_cmp_9_z;
  wire [111:0] while_mul_cmp_9_z_mxwt_pconst;
  wire [111:0] while_mul_cmp_9_z_mxwt_1_pconst;
  wire [111:0] while_mul_cmp_9_z_mxwt_2_pconst;
  wire run_cgwt_27;


  // Interconnect Declarations for Component Instantiations 
  mgc_mul_pipe #(.width_a(32'sd64),
  .signd_a(32'sd1),
  .width_b(32'sd64),
  .signd_b(32'sd1),
  .width_z(32'sd128),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd0),
  .stages(32'sd4),
  .n_inreg(32'sd1)) while_mul_cmp_9 (
      .a(while_mul_cmp_9_a_run),
      .b(while_mul_cmp_9_b_run),
      .clk(clk),
      .en(run_cgwt_27),
      .a_rst(rst),
      .s_rst(1'b1),
      .z(while_mul_cmp_9_z)
    );
  Rotate_run_while_mul_cmp_9_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_9 Rotate_run_while_mul_cmp_9_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_9_inst
      (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_cmp_9_oswt_unreg(while_mul_cmp_9_oswt_unreg),
      .while_mul_cmp_9_iswt3(while_mul_cmp_9_iswt3),
      .while_mul_cmp_9_iden_1(while_mul_cmp_9_iden_1),
      .while_mul_cmp_9_oswt_unreg_1(while_mul_cmp_9_oswt_unreg_1),
      .while_mul_cmp_9_iswt3_1(while_mul_cmp_9_iswt3_1),
      .while_mul_cmp_9_iden_3(while_mul_cmp_9_iden_3),
      .while_mul_cmp_9_oswt_unreg_2(while_mul_cmp_9_oswt_unreg_2),
      .while_mul_cmp_9_iswt3_2(while_mul_cmp_9_iswt3_2),
      .while_mul_cmp_9_iden_5(while_mul_cmp_9_iden_5),
      .run_cgwt_27(run_cgwt_27),
      .while_mul_cmp_9_bdwt(while_mul_cmp_9_bdwt),
      .while_mul_cmp_9_bdwt_2(while_mul_cmp_9_bdwt_2),
      .while_mul_cmp_9_bdwt_4(while_mul_cmp_9_bdwt_4),
      .while_mul_cmp_9_iswt3_2_pff(while_mul_cmp_9_iswt3_2_pff),
      .while_mul_cmp_9_iswt3_1_pff(while_mul_cmp_9_iswt3_1_pff),
      .while_mul_cmp_9_iswt3_pff(while_mul_cmp_9_iswt3_pff)
    );
  Rotate_run_while_mul_cmp_9_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_9 Rotate_run_while_mul_cmp_9_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_9_inst
      (
      .clk(clk),
      .rst(rst),
      .while_mul_cmp_9_bawt(while_mul_cmp_9_bawt),
      .while_mul_cmp_9_iden(while_mul_cmp_9_iden),
      .while_mul_cmp_9_iden_2(while_mul_cmp_9_iden_2),
      .while_mul_cmp_9_iden_4(while_mul_cmp_9_iden_4),
      .while_mul_cmp_9_z_mxwt(while_mul_cmp_9_z_mxwt_pconst),
      .while_mul_cmp_9_z_mxwt_1(while_mul_cmp_9_z_mxwt_1_pconst),
      .while_mul_cmp_9_z_mxwt_2(while_mul_cmp_9_z_mxwt_2_pconst),
      .while_mul_cmp_9_biwt(while_mul_cmp_9_iden_1),
      .while_mul_cmp_9_bdwt(while_mul_cmp_9_bdwt),
      .while_mul_cmp_9_biwt_2(while_mul_cmp_9_iden_3),
      .while_mul_cmp_9_bdwt_2(while_mul_cmp_9_bdwt_2),
      .while_mul_cmp_9_biwt_4(while_mul_cmp_9_iden_5),
      .while_mul_cmp_9_bdwt_4(while_mul_cmp_9_bdwt_4),
      .while_mul_cmp_9_z(while_mul_cmp_9_z)
    );
  assign while_mul_cmp_9_z_mxwt = while_mul_cmp_9_z_mxwt_pconst;
  assign while_mul_cmp_9_z_mxwt_1 = while_mul_cmp_9_z_mxwt_1_pconst;
  assign while_mul_cmp_9_z_mxwt_2 = while_mul_cmp_9_z_mxwt_2_pconst;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_cmp_8
// ------------------------------------------------------------------


module Rotate_run_while_mul_cmp_8 (
  clk, rst, run_wen, run_wten, while_mul_cmp_8_oswt_unreg, while_mul_cmp_8_bawt,
      while_mul_cmp_8_iden, while_mul_cmp_8_iswt3, while_mul_cmp_8_iden_1, while_mul_cmp_8_oswt_unreg_1,
      while_mul_cmp_8_iden_2, while_mul_cmp_8_iswt3_1, while_mul_cmp_8_iden_3, while_mul_cmp_8_oswt_unreg_2,
      while_mul_cmp_8_iden_4, while_mul_cmp_8_iswt3_2, while_mul_cmp_8_iden_5, while_mul_cmp_8_a_run,
      while_mul_cmp_8_b_run, while_mul_cmp_8_z_mxwt, while_mul_cmp_8_z_mxwt_1, while_mul_cmp_8_z_mxwt_2,
      while_mul_cmp_8_iswt3_2_pff, while_mul_cmp_8_iswt3_1_pff, while_mul_cmp_8_iswt3_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_cmp_8_oswt_unreg;
  output while_mul_cmp_8_bawt;
  output while_mul_cmp_8_iden;
  input while_mul_cmp_8_iswt3;
  output while_mul_cmp_8_iden_1;
  input while_mul_cmp_8_oswt_unreg_1;
  output while_mul_cmp_8_iden_2;
  input while_mul_cmp_8_iswt3_1;
  output while_mul_cmp_8_iden_3;
  input while_mul_cmp_8_oswt_unreg_2;
  output while_mul_cmp_8_iden_4;
  input while_mul_cmp_8_iswt3_2;
  output while_mul_cmp_8_iden_5;
  input [63:0] while_mul_cmp_8_a_run;
  input [63:0] while_mul_cmp_8_b_run;
  output [111:0] while_mul_cmp_8_z_mxwt;
  output [111:0] while_mul_cmp_8_z_mxwt_1;
  output [111:0] while_mul_cmp_8_z_mxwt_2;
  input while_mul_cmp_8_iswt3_2_pff;
  input while_mul_cmp_8_iswt3_1_pff;
  input while_mul_cmp_8_iswt3_pff;


  // Interconnect Declarations
  wire while_mul_cmp_8_bdwt;
  wire while_mul_cmp_8_bdwt_2;
  wire while_mul_cmp_8_bdwt_4;
  wire [127:0] while_mul_cmp_8_z;
  wire [111:0] while_mul_cmp_8_z_mxwt_pconst;
  wire [111:0] while_mul_cmp_8_z_mxwt_1_pconst;
  wire [111:0] while_mul_cmp_8_z_mxwt_2_pconst;
  wire run_cgwt_26;


  // Interconnect Declarations for Component Instantiations 
  mgc_mul_pipe #(.width_a(32'sd64),
  .signd_a(32'sd1),
  .width_b(32'sd64),
  .signd_b(32'sd1),
  .width_z(32'sd128),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd0),
  .stages(32'sd4),
  .n_inreg(32'sd1)) while_mul_cmp_8 (
      .a(while_mul_cmp_8_a_run),
      .b(while_mul_cmp_8_b_run),
      .clk(clk),
      .en(run_cgwt_26),
      .a_rst(rst),
      .s_rst(1'b1),
      .z(while_mul_cmp_8_z)
    );
  Rotate_run_while_mul_cmp_8_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_8 Rotate_run_while_mul_cmp_8_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_8_inst
      (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_cmp_8_oswt_unreg(while_mul_cmp_8_oswt_unreg),
      .while_mul_cmp_8_iswt3(while_mul_cmp_8_iswt3),
      .while_mul_cmp_8_iden_1(while_mul_cmp_8_iden_1),
      .while_mul_cmp_8_oswt_unreg_1(while_mul_cmp_8_oswt_unreg_1),
      .while_mul_cmp_8_iswt3_1(while_mul_cmp_8_iswt3_1),
      .while_mul_cmp_8_iden_3(while_mul_cmp_8_iden_3),
      .while_mul_cmp_8_oswt_unreg_2(while_mul_cmp_8_oswt_unreg_2),
      .while_mul_cmp_8_iswt3_2(while_mul_cmp_8_iswt3_2),
      .while_mul_cmp_8_iden_5(while_mul_cmp_8_iden_5),
      .run_cgwt_26(run_cgwt_26),
      .while_mul_cmp_8_bdwt(while_mul_cmp_8_bdwt),
      .while_mul_cmp_8_bdwt_2(while_mul_cmp_8_bdwt_2),
      .while_mul_cmp_8_bdwt_4(while_mul_cmp_8_bdwt_4),
      .while_mul_cmp_8_iswt3_2_pff(while_mul_cmp_8_iswt3_2_pff),
      .while_mul_cmp_8_iswt3_1_pff(while_mul_cmp_8_iswt3_1_pff),
      .while_mul_cmp_8_iswt3_pff(while_mul_cmp_8_iswt3_pff)
    );
  Rotate_run_while_mul_cmp_8_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_8 Rotate_run_while_mul_cmp_8_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_8_inst
      (
      .clk(clk),
      .rst(rst),
      .while_mul_cmp_8_bawt(while_mul_cmp_8_bawt),
      .while_mul_cmp_8_iden(while_mul_cmp_8_iden),
      .while_mul_cmp_8_iden_2(while_mul_cmp_8_iden_2),
      .while_mul_cmp_8_iden_4(while_mul_cmp_8_iden_4),
      .while_mul_cmp_8_z_mxwt(while_mul_cmp_8_z_mxwt_pconst),
      .while_mul_cmp_8_z_mxwt_1(while_mul_cmp_8_z_mxwt_1_pconst),
      .while_mul_cmp_8_z_mxwt_2(while_mul_cmp_8_z_mxwt_2_pconst),
      .while_mul_cmp_8_biwt(while_mul_cmp_8_iden_1),
      .while_mul_cmp_8_bdwt(while_mul_cmp_8_bdwt),
      .while_mul_cmp_8_biwt_2(while_mul_cmp_8_iden_3),
      .while_mul_cmp_8_bdwt_2(while_mul_cmp_8_bdwt_2),
      .while_mul_cmp_8_biwt_4(while_mul_cmp_8_iden_5),
      .while_mul_cmp_8_bdwt_4(while_mul_cmp_8_bdwt_4),
      .while_mul_cmp_8_z(while_mul_cmp_8_z)
    );
  assign while_mul_cmp_8_z_mxwt = while_mul_cmp_8_z_mxwt_pconst;
  assign while_mul_cmp_8_z_mxwt_1 = while_mul_cmp_8_z_mxwt_1_pconst;
  assign while_mul_cmp_8_z_mxwt_2 = while_mul_cmp_8_z_mxwt_2_pconst;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_cmp_7
// ------------------------------------------------------------------


module Rotate_run_while_mul_cmp_7 (
  clk, rst, run_wen, run_wten, while_mul_cmp_7_oswt_unreg, while_mul_cmp_7_bawt,
      while_mul_cmp_7_iden, while_mul_cmp_7_iswt3, while_mul_cmp_7_iden_1, while_mul_cmp_7_oswt_unreg_1,
      while_mul_cmp_7_iden_2, while_mul_cmp_7_iswt3_1, while_mul_cmp_7_iden_3, while_mul_cmp_7_oswt_unreg_2,
      while_mul_cmp_7_iden_4, while_mul_cmp_7_iswt3_2, while_mul_cmp_7_iden_5, while_mul_cmp_7_a_run,
      while_mul_cmp_7_b_run, while_mul_cmp_7_z_mxwt, while_mul_cmp_7_z_mxwt_1, while_mul_cmp_7_z_mxwt_2,
      while_mul_cmp_7_iswt3_2_pff, while_mul_cmp_7_iswt3_1_pff, while_mul_cmp_7_iswt3_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_cmp_7_oswt_unreg;
  output while_mul_cmp_7_bawt;
  output while_mul_cmp_7_iden;
  input while_mul_cmp_7_iswt3;
  output while_mul_cmp_7_iden_1;
  input while_mul_cmp_7_oswt_unreg_1;
  output while_mul_cmp_7_iden_2;
  input while_mul_cmp_7_iswt3_1;
  output while_mul_cmp_7_iden_3;
  input while_mul_cmp_7_oswt_unreg_2;
  output while_mul_cmp_7_iden_4;
  input while_mul_cmp_7_iswt3_2;
  output while_mul_cmp_7_iden_5;
  input [63:0] while_mul_cmp_7_a_run;
  input [63:0] while_mul_cmp_7_b_run;
  output [111:0] while_mul_cmp_7_z_mxwt;
  output [111:0] while_mul_cmp_7_z_mxwt_1;
  output [111:0] while_mul_cmp_7_z_mxwt_2;
  input while_mul_cmp_7_iswt3_2_pff;
  input while_mul_cmp_7_iswt3_1_pff;
  input while_mul_cmp_7_iswt3_pff;


  // Interconnect Declarations
  wire while_mul_cmp_7_bdwt;
  wire while_mul_cmp_7_bdwt_2;
  wire while_mul_cmp_7_bdwt_4;
  wire [127:0] while_mul_cmp_7_z;
  wire [111:0] while_mul_cmp_7_z_mxwt_pconst;
  wire [111:0] while_mul_cmp_7_z_mxwt_1_pconst;
  wire [111:0] while_mul_cmp_7_z_mxwt_2_pconst;
  wire run_cgwt_25;


  // Interconnect Declarations for Component Instantiations 
  mgc_mul_pipe #(.width_a(32'sd64),
  .signd_a(32'sd1),
  .width_b(32'sd64),
  .signd_b(32'sd1),
  .width_z(32'sd128),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd0),
  .stages(32'sd4),
  .n_inreg(32'sd1)) while_mul_cmp_7 (
      .a(while_mul_cmp_7_a_run),
      .b(while_mul_cmp_7_b_run),
      .clk(clk),
      .en(run_cgwt_25),
      .a_rst(rst),
      .s_rst(1'b1),
      .z(while_mul_cmp_7_z)
    );
  Rotate_run_while_mul_cmp_7_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_7 Rotate_run_while_mul_cmp_7_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_7_inst
      (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_cmp_7_oswt_unreg(while_mul_cmp_7_oswt_unreg),
      .while_mul_cmp_7_iswt3(while_mul_cmp_7_iswt3),
      .while_mul_cmp_7_iden_1(while_mul_cmp_7_iden_1),
      .while_mul_cmp_7_oswt_unreg_1(while_mul_cmp_7_oswt_unreg_1),
      .while_mul_cmp_7_iswt3_1(while_mul_cmp_7_iswt3_1),
      .while_mul_cmp_7_iden_3(while_mul_cmp_7_iden_3),
      .while_mul_cmp_7_oswt_unreg_2(while_mul_cmp_7_oswt_unreg_2),
      .while_mul_cmp_7_iswt3_2(while_mul_cmp_7_iswt3_2),
      .while_mul_cmp_7_iden_5(while_mul_cmp_7_iden_5),
      .run_cgwt_25(run_cgwt_25),
      .while_mul_cmp_7_bdwt(while_mul_cmp_7_bdwt),
      .while_mul_cmp_7_bdwt_2(while_mul_cmp_7_bdwt_2),
      .while_mul_cmp_7_bdwt_4(while_mul_cmp_7_bdwt_4),
      .while_mul_cmp_7_iswt3_2_pff(while_mul_cmp_7_iswt3_2_pff),
      .while_mul_cmp_7_iswt3_1_pff(while_mul_cmp_7_iswt3_1_pff),
      .while_mul_cmp_7_iswt3_pff(while_mul_cmp_7_iswt3_pff)
    );
  Rotate_run_while_mul_cmp_7_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_7 Rotate_run_while_mul_cmp_7_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_7_inst
      (
      .clk(clk),
      .rst(rst),
      .while_mul_cmp_7_bawt(while_mul_cmp_7_bawt),
      .while_mul_cmp_7_iden(while_mul_cmp_7_iden),
      .while_mul_cmp_7_iden_2(while_mul_cmp_7_iden_2),
      .while_mul_cmp_7_iden_4(while_mul_cmp_7_iden_4),
      .while_mul_cmp_7_z_mxwt(while_mul_cmp_7_z_mxwt_pconst),
      .while_mul_cmp_7_z_mxwt_1(while_mul_cmp_7_z_mxwt_1_pconst),
      .while_mul_cmp_7_z_mxwt_2(while_mul_cmp_7_z_mxwt_2_pconst),
      .while_mul_cmp_7_biwt(while_mul_cmp_7_iden_1),
      .while_mul_cmp_7_bdwt(while_mul_cmp_7_bdwt),
      .while_mul_cmp_7_biwt_2(while_mul_cmp_7_iden_3),
      .while_mul_cmp_7_bdwt_2(while_mul_cmp_7_bdwt_2),
      .while_mul_cmp_7_biwt_4(while_mul_cmp_7_iden_5),
      .while_mul_cmp_7_bdwt_4(while_mul_cmp_7_bdwt_4),
      .while_mul_cmp_7_z(while_mul_cmp_7_z)
    );
  assign while_mul_cmp_7_z_mxwt = while_mul_cmp_7_z_mxwt_pconst;
  assign while_mul_cmp_7_z_mxwt_1 = while_mul_cmp_7_z_mxwt_1_pconst;
  assign while_mul_cmp_7_z_mxwt_2 = while_mul_cmp_7_z_mxwt_2_pconst;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_cmp_6
// ------------------------------------------------------------------


module Rotate_run_while_mul_cmp_6 (
  clk, rst, run_wen, run_wten, while_mul_cmp_6_oswt_unreg, while_mul_cmp_6_bawt,
      while_mul_cmp_6_iden, while_mul_cmp_6_iswt3, while_mul_cmp_6_iden_1, while_mul_cmp_6_oswt_unreg_1,
      while_mul_cmp_6_iden_2, while_mul_cmp_6_iswt3_1, while_mul_cmp_6_iden_3, while_mul_cmp_6_oswt_unreg_2,
      while_mul_cmp_6_iden_4, while_mul_cmp_6_iswt3_2, while_mul_cmp_6_iden_5, while_mul_cmp_6_a_run,
      while_mul_cmp_6_b_run, while_mul_cmp_6_z_mxwt, while_mul_cmp_6_z_mxwt_1, while_mul_cmp_6_z_mxwt_2,
      while_mul_cmp_6_iswt3_2_pff, while_mul_cmp_6_iswt3_1_pff, while_mul_cmp_6_iswt3_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_cmp_6_oswt_unreg;
  output while_mul_cmp_6_bawt;
  output while_mul_cmp_6_iden;
  input while_mul_cmp_6_iswt3;
  output while_mul_cmp_6_iden_1;
  input while_mul_cmp_6_oswt_unreg_1;
  output while_mul_cmp_6_iden_2;
  input while_mul_cmp_6_iswt3_1;
  output while_mul_cmp_6_iden_3;
  input while_mul_cmp_6_oswt_unreg_2;
  output while_mul_cmp_6_iden_4;
  input while_mul_cmp_6_iswt3_2;
  output while_mul_cmp_6_iden_5;
  input [63:0] while_mul_cmp_6_a_run;
  input [63:0] while_mul_cmp_6_b_run;
  output [111:0] while_mul_cmp_6_z_mxwt;
  output [111:0] while_mul_cmp_6_z_mxwt_1;
  output [111:0] while_mul_cmp_6_z_mxwt_2;
  input while_mul_cmp_6_iswt3_2_pff;
  input while_mul_cmp_6_iswt3_1_pff;
  input while_mul_cmp_6_iswt3_pff;


  // Interconnect Declarations
  wire while_mul_cmp_6_bdwt;
  wire while_mul_cmp_6_bdwt_2;
  wire while_mul_cmp_6_bdwt_4;
  wire [127:0] while_mul_cmp_6_z;
  wire [111:0] while_mul_cmp_6_z_mxwt_pconst;
  wire [111:0] while_mul_cmp_6_z_mxwt_1_pconst;
  wire [111:0] while_mul_cmp_6_z_mxwt_2_pconst;
  wire run_cgwt_24;


  // Interconnect Declarations for Component Instantiations 
  mgc_mul_pipe #(.width_a(32'sd64),
  .signd_a(32'sd1),
  .width_b(32'sd64),
  .signd_b(32'sd1),
  .width_z(32'sd128),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd0),
  .stages(32'sd4),
  .n_inreg(32'sd1)) while_mul_cmp_6 (
      .a(while_mul_cmp_6_a_run),
      .b(while_mul_cmp_6_b_run),
      .clk(clk),
      .en(run_cgwt_24),
      .a_rst(rst),
      .s_rst(1'b1),
      .z(while_mul_cmp_6_z)
    );
  Rotate_run_while_mul_cmp_6_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_6 Rotate_run_while_mul_cmp_6_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_6_inst
      (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_cmp_6_oswt_unreg(while_mul_cmp_6_oswt_unreg),
      .while_mul_cmp_6_iswt3(while_mul_cmp_6_iswt3),
      .while_mul_cmp_6_iden_1(while_mul_cmp_6_iden_1),
      .while_mul_cmp_6_oswt_unreg_1(while_mul_cmp_6_oswt_unreg_1),
      .while_mul_cmp_6_iswt3_1(while_mul_cmp_6_iswt3_1),
      .while_mul_cmp_6_iden_3(while_mul_cmp_6_iden_3),
      .while_mul_cmp_6_oswt_unreg_2(while_mul_cmp_6_oswt_unreg_2),
      .while_mul_cmp_6_iswt3_2(while_mul_cmp_6_iswt3_2),
      .while_mul_cmp_6_iden_5(while_mul_cmp_6_iden_5),
      .run_cgwt_24(run_cgwt_24),
      .while_mul_cmp_6_bdwt(while_mul_cmp_6_bdwt),
      .while_mul_cmp_6_bdwt_2(while_mul_cmp_6_bdwt_2),
      .while_mul_cmp_6_bdwt_4(while_mul_cmp_6_bdwt_4),
      .while_mul_cmp_6_iswt3_2_pff(while_mul_cmp_6_iswt3_2_pff),
      .while_mul_cmp_6_iswt3_1_pff(while_mul_cmp_6_iswt3_1_pff),
      .while_mul_cmp_6_iswt3_pff(while_mul_cmp_6_iswt3_pff)
    );
  Rotate_run_while_mul_cmp_6_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_6 Rotate_run_while_mul_cmp_6_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_6_inst
      (
      .clk(clk),
      .rst(rst),
      .while_mul_cmp_6_bawt(while_mul_cmp_6_bawt),
      .while_mul_cmp_6_iden(while_mul_cmp_6_iden),
      .while_mul_cmp_6_iden_2(while_mul_cmp_6_iden_2),
      .while_mul_cmp_6_iden_4(while_mul_cmp_6_iden_4),
      .while_mul_cmp_6_z_mxwt(while_mul_cmp_6_z_mxwt_pconst),
      .while_mul_cmp_6_z_mxwt_1(while_mul_cmp_6_z_mxwt_1_pconst),
      .while_mul_cmp_6_z_mxwt_2(while_mul_cmp_6_z_mxwt_2_pconst),
      .while_mul_cmp_6_biwt(while_mul_cmp_6_iden_1),
      .while_mul_cmp_6_bdwt(while_mul_cmp_6_bdwt),
      .while_mul_cmp_6_biwt_2(while_mul_cmp_6_iden_3),
      .while_mul_cmp_6_bdwt_2(while_mul_cmp_6_bdwt_2),
      .while_mul_cmp_6_biwt_4(while_mul_cmp_6_iden_5),
      .while_mul_cmp_6_bdwt_4(while_mul_cmp_6_bdwt_4),
      .while_mul_cmp_6_z(while_mul_cmp_6_z)
    );
  assign while_mul_cmp_6_z_mxwt = while_mul_cmp_6_z_mxwt_pconst;
  assign while_mul_cmp_6_z_mxwt_1 = while_mul_cmp_6_z_mxwt_1_pconst;
  assign while_mul_cmp_6_z_mxwt_2 = while_mul_cmp_6_z_mxwt_2_pconst;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_cmp_5
// ------------------------------------------------------------------


module Rotate_run_while_mul_cmp_5 (
  clk, rst, run_wen, run_wten, while_mul_cmp_5_oswt_unreg, while_mul_cmp_5_bawt,
      while_mul_cmp_5_iden, while_mul_cmp_5_iswt3, while_mul_cmp_5_iden_1, while_mul_cmp_5_oswt_unreg_1,
      while_mul_cmp_5_iden_2, while_mul_cmp_5_iswt3_1, while_mul_cmp_5_iden_3, while_mul_cmp_5_oswt_unreg_2,
      while_mul_cmp_5_iden_4, while_mul_cmp_5_iswt3_2, while_mul_cmp_5_iden_5, while_mul_cmp_5_a_run,
      while_mul_cmp_5_b_run, while_mul_cmp_5_z_mxwt, while_mul_cmp_5_z_mxwt_1, while_mul_cmp_5_z_mxwt_2,
      while_mul_cmp_5_iswt3_2_pff, while_mul_cmp_5_iswt3_1_pff, while_mul_cmp_5_iswt3_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_cmp_5_oswt_unreg;
  output while_mul_cmp_5_bawt;
  output while_mul_cmp_5_iden;
  input while_mul_cmp_5_iswt3;
  output while_mul_cmp_5_iden_1;
  input while_mul_cmp_5_oswt_unreg_1;
  output while_mul_cmp_5_iden_2;
  input while_mul_cmp_5_iswt3_1;
  output while_mul_cmp_5_iden_3;
  input while_mul_cmp_5_oswt_unreg_2;
  output while_mul_cmp_5_iden_4;
  input while_mul_cmp_5_iswt3_2;
  output while_mul_cmp_5_iden_5;
  input [63:0] while_mul_cmp_5_a_run;
  input [63:0] while_mul_cmp_5_b_run;
  output [111:0] while_mul_cmp_5_z_mxwt;
  output [111:0] while_mul_cmp_5_z_mxwt_1;
  output [111:0] while_mul_cmp_5_z_mxwt_2;
  input while_mul_cmp_5_iswt3_2_pff;
  input while_mul_cmp_5_iswt3_1_pff;
  input while_mul_cmp_5_iswt3_pff;


  // Interconnect Declarations
  wire while_mul_cmp_5_bdwt;
  wire while_mul_cmp_5_bdwt_2;
  wire while_mul_cmp_5_bdwt_4;
  wire [127:0] while_mul_cmp_5_z;
  wire [111:0] while_mul_cmp_5_z_mxwt_pconst;
  wire [111:0] while_mul_cmp_5_z_mxwt_1_pconst;
  wire [111:0] while_mul_cmp_5_z_mxwt_2_pconst;
  wire run_cgwt_23;


  // Interconnect Declarations for Component Instantiations 
  mgc_mul_pipe #(.width_a(32'sd64),
  .signd_a(32'sd1),
  .width_b(32'sd64),
  .signd_b(32'sd1),
  .width_z(32'sd128),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd0),
  .stages(32'sd4),
  .n_inreg(32'sd1)) while_mul_cmp_5 (
      .a(while_mul_cmp_5_a_run),
      .b(while_mul_cmp_5_b_run),
      .clk(clk),
      .en(run_cgwt_23),
      .a_rst(rst),
      .s_rst(1'b1),
      .z(while_mul_cmp_5_z)
    );
  Rotate_run_while_mul_cmp_5_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_5 Rotate_run_while_mul_cmp_5_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_5_inst
      (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_cmp_5_oswt_unreg(while_mul_cmp_5_oswt_unreg),
      .while_mul_cmp_5_iswt3(while_mul_cmp_5_iswt3),
      .while_mul_cmp_5_iden_1(while_mul_cmp_5_iden_1),
      .while_mul_cmp_5_oswt_unreg_1(while_mul_cmp_5_oswt_unreg_1),
      .while_mul_cmp_5_iswt3_1(while_mul_cmp_5_iswt3_1),
      .while_mul_cmp_5_iden_3(while_mul_cmp_5_iden_3),
      .while_mul_cmp_5_oswt_unreg_2(while_mul_cmp_5_oswt_unreg_2),
      .while_mul_cmp_5_iswt3_2(while_mul_cmp_5_iswt3_2),
      .while_mul_cmp_5_iden_5(while_mul_cmp_5_iden_5),
      .run_cgwt_23(run_cgwt_23),
      .while_mul_cmp_5_bdwt(while_mul_cmp_5_bdwt),
      .while_mul_cmp_5_bdwt_2(while_mul_cmp_5_bdwt_2),
      .while_mul_cmp_5_bdwt_4(while_mul_cmp_5_bdwt_4),
      .while_mul_cmp_5_iswt3_2_pff(while_mul_cmp_5_iswt3_2_pff),
      .while_mul_cmp_5_iswt3_1_pff(while_mul_cmp_5_iswt3_1_pff),
      .while_mul_cmp_5_iswt3_pff(while_mul_cmp_5_iswt3_pff)
    );
  Rotate_run_while_mul_cmp_5_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_5 Rotate_run_while_mul_cmp_5_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_5_inst
      (
      .clk(clk),
      .rst(rst),
      .while_mul_cmp_5_bawt(while_mul_cmp_5_bawt),
      .while_mul_cmp_5_iden(while_mul_cmp_5_iden),
      .while_mul_cmp_5_iden_2(while_mul_cmp_5_iden_2),
      .while_mul_cmp_5_iden_4(while_mul_cmp_5_iden_4),
      .while_mul_cmp_5_z_mxwt(while_mul_cmp_5_z_mxwt_pconst),
      .while_mul_cmp_5_z_mxwt_1(while_mul_cmp_5_z_mxwt_1_pconst),
      .while_mul_cmp_5_z_mxwt_2(while_mul_cmp_5_z_mxwt_2_pconst),
      .while_mul_cmp_5_biwt(while_mul_cmp_5_iden_1),
      .while_mul_cmp_5_bdwt(while_mul_cmp_5_bdwt),
      .while_mul_cmp_5_biwt_2(while_mul_cmp_5_iden_3),
      .while_mul_cmp_5_bdwt_2(while_mul_cmp_5_bdwt_2),
      .while_mul_cmp_5_biwt_4(while_mul_cmp_5_iden_5),
      .while_mul_cmp_5_bdwt_4(while_mul_cmp_5_bdwt_4),
      .while_mul_cmp_5_z(while_mul_cmp_5_z)
    );
  assign while_mul_cmp_5_z_mxwt = while_mul_cmp_5_z_mxwt_pconst;
  assign while_mul_cmp_5_z_mxwt_1 = while_mul_cmp_5_z_mxwt_1_pconst;
  assign while_mul_cmp_5_z_mxwt_2 = while_mul_cmp_5_z_mxwt_2_pconst;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_cmp_4
// ------------------------------------------------------------------


module Rotate_run_while_mul_cmp_4 (
  clk, rst, run_wen, run_wten, while_mul_cmp_4_oswt_unreg, while_mul_cmp_4_bawt,
      while_mul_cmp_4_iden, while_mul_cmp_4_iswt3, while_mul_cmp_4_iden_1, while_mul_cmp_4_oswt_unreg_1,
      while_mul_cmp_4_iden_2, while_mul_cmp_4_iswt3_1, while_mul_cmp_4_iden_3, while_mul_cmp_4_oswt_unreg_2,
      while_mul_cmp_4_iden_4, while_mul_cmp_4_iswt3_2, while_mul_cmp_4_iden_5, while_mul_cmp_4_a_run,
      while_mul_cmp_4_b_run, while_mul_cmp_4_z_mxwt, while_mul_cmp_4_z_mxwt_1, while_mul_cmp_4_z_mxwt_2,
      while_mul_cmp_4_iswt3_2_pff, while_mul_cmp_4_iswt3_1_pff, while_mul_cmp_4_iswt3_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_cmp_4_oswt_unreg;
  output while_mul_cmp_4_bawt;
  output while_mul_cmp_4_iden;
  input while_mul_cmp_4_iswt3;
  output while_mul_cmp_4_iden_1;
  input while_mul_cmp_4_oswt_unreg_1;
  output while_mul_cmp_4_iden_2;
  input while_mul_cmp_4_iswt3_1;
  output while_mul_cmp_4_iden_3;
  input while_mul_cmp_4_oswt_unreg_2;
  output while_mul_cmp_4_iden_4;
  input while_mul_cmp_4_iswt3_2;
  output while_mul_cmp_4_iden_5;
  input [63:0] while_mul_cmp_4_a_run;
  input [63:0] while_mul_cmp_4_b_run;
  output [111:0] while_mul_cmp_4_z_mxwt;
  output [111:0] while_mul_cmp_4_z_mxwt_1;
  output [111:0] while_mul_cmp_4_z_mxwt_2;
  input while_mul_cmp_4_iswt3_2_pff;
  input while_mul_cmp_4_iswt3_1_pff;
  input while_mul_cmp_4_iswt3_pff;


  // Interconnect Declarations
  wire while_mul_cmp_4_bdwt;
  wire while_mul_cmp_4_bdwt_2;
  wire while_mul_cmp_4_bdwt_4;
  wire [127:0] while_mul_cmp_4_z;
  wire [111:0] while_mul_cmp_4_z_mxwt_pconst;
  wire [111:0] while_mul_cmp_4_z_mxwt_1_pconst;
  wire [111:0] while_mul_cmp_4_z_mxwt_2_pconst;
  wire run_cgwt_22;


  // Interconnect Declarations for Component Instantiations 
  mgc_mul_pipe #(.width_a(32'sd64),
  .signd_a(32'sd1),
  .width_b(32'sd64),
  .signd_b(32'sd1),
  .width_z(32'sd128),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd0),
  .stages(32'sd4),
  .n_inreg(32'sd1)) while_mul_cmp_4 (
      .a(while_mul_cmp_4_a_run),
      .b(while_mul_cmp_4_b_run),
      .clk(clk),
      .en(run_cgwt_22),
      .a_rst(rst),
      .s_rst(1'b1),
      .z(while_mul_cmp_4_z)
    );
  Rotate_run_while_mul_cmp_4_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_4 Rotate_run_while_mul_cmp_4_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_4_inst
      (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_cmp_4_oswt_unreg(while_mul_cmp_4_oswt_unreg),
      .while_mul_cmp_4_iswt3(while_mul_cmp_4_iswt3),
      .while_mul_cmp_4_iden_1(while_mul_cmp_4_iden_1),
      .while_mul_cmp_4_oswt_unreg_1(while_mul_cmp_4_oswt_unreg_1),
      .while_mul_cmp_4_iswt3_1(while_mul_cmp_4_iswt3_1),
      .while_mul_cmp_4_iden_3(while_mul_cmp_4_iden_3),
      .while_mul_cmp_4_oswt_unreg_2(while_mul_cmp_4_oswt_unreg_2),
      .while_mul_cmp_4_iswt3_2(while_mul_cmp_4_iswt3_2),
      .while_mul_cmp_4_iden_5(while_mul_cmp_4_iden_5),
      .run_cgwt_22(run_cgwt_22),
      .while_mul_cmp_4_bdwt(while_mul_cmp_4_bdwt),
      .while_mul_cmp_4_bdwt_2(while_mul_cmp_4_bdwt_2),
      .while_mul_cmp_4_bdwt_4(while_mul_cmp_4_bdwt_4),
      .while_mul_cmp_4_iswt3_2_pff(while_mul_cmp_4_iswt3_2_pff),
      .while_mul_cmp_4_iswt3_1_pff(while_mul_cmp_4_iswt3_1_pff),
      .while_mul_cmp_4_iswt3_pff(while_mul_cmp_4_iswt3_pff)
    );
  Rotate_run_while_mul_cmp_4_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_4 Rotate_run_while_mul_cmp_4_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_4_inst
      (
      .clk(clk),
      .rst(rst),
      .while_mul_cmp_4_bawt(while_mul_cmp_4_bawt),
      .while_mul_cmp_4_iden(while_mul_cmp_4_iden),
      .while_mul_cmp_4_iden_2(while_mul_cmp_4_iden_2),
      .while_mul_cmp_4_iden_4(while_mul_cmp_4_iden_4),
      .while_mul_cmp_4_z_mxwt(while_mul_cmp_4_z_mxwt_pconst),
      .while_mul_cmp_4_z_mxwt_1(while_mul_cmp_4_z_mxwt_1_pconst),
      .while_mul_cmp_4_z_mxwt_2(while_mul_cmp_4_z_mxwt_2_pconst),
      .while_mul_cmp_4_biwt(while_mul_cmp_4_iden_1),
      .while_mul_cmp_4_bdwt(while_mul_cmp_4_bdwt),
      .while_mul_cmp_4_biwt_2(while_mul_cmp_4_iden_3),
      .while_mul_cmp_4_bdwt_2(while_mul_cmp_4_bdwt_2),
      .while_mul_cmp_4_biwt_4(while_mul_cmp_4_iden_5),
      .while_mul_cmp_4_bdwt_4(while_mul_cmp_4_bdwt_4),
      .while_mul_cmp_4_z(while_mul_cmp_4_z)
    );
  assign while_mul_cmp_4_z_mxwt = while_mul_cmp_4_z_mxwt_pconst;
  assign while_mul_cmp_4_z_mxwt_1 = while_mul_cmp_4_z_mxwt_1_pconst;
  assign while_mul_cmp_4_z_mxwt_2 = while_mul_cmp_4_z_mxwt_2_pconst;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_cmp_3
// ------------------------------------------------------------------


module Rotate_run_while_mul_cmp_3 (
  clk, rst, run_wen, run_wten, while_mul_cmp_3_oswt_unreg, while_mul_cmp_3_bawt,
      while_mul_cmp_3_iden, while_mul_cmp_3_iswt3, while_mul_cmp_3_iden_1, while_mul_cmp_3_oswt_unreg_1,
      while_mul_cmp_3_iden_2, while_mul_cmp_3_iswt3_1, while_mul_cmp_3_iden_3, while_mul_cmp_3_oswt_unreg_2,
      while_mul_cmp_3_iden_4, while_mul_cmp_3_iswt3_2, while_mul_cmp_3_iden_5, while_mul_cmp_3_a_run,
      while_mul_cmp_3_b_run, while_mul_cmp_3_z_mxwt, while_mul_cmp_3_z_mxwt_1, while_mul_cmp_3_z_mxwt_2,
      while_mul_cmp_3_iswt3_2_pff, while_mul_cmp_3_iswt3_1_pff, while_mul_cmp_3_iswt3_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_cmp_3_oswt_unreg;
  output while_mul_cmp_3_bawt;
  output while_mul_cmp_3_iden;
  input while_mul_cmp_3_iswt3;
  output while_mul_cmp_3_iden_1;
  input while_mul_cmp_3_oswt_unreg_1;
  output while_mul_cmp_3_iden_2;
  input while_mul_cmp_3_iswt3_1;
  output while_mul_cmp_3_iden_3;
  input while_mul_cmp_3_oswt_unreg_2;
  output while_mul_cmp_3_iden_4;
  input while_mul_cmp_3_iswt3_2;
  output while_mul_cmp_3_iden_5;
  input [63:0] while_mul_cmp_3_a_run;
  input [63:0] while_mul_cmp_3_b_run;
  output [111:0] while_mul_cmp_3_z_mxwt;
  output [111:0] while_mul_cmp_3_z_mxwt_1;
  output [111:0] while_mul_cmp_3_z_mxwt_2;
  input while_mul_cmp_3_iswt3_2_pff;
  input while_mul_cmp_3_iswt3_1_pff;
  input while_mul_cmp_3_iswt3_pff;


  // Interconnect Declarations
  wire while_mul_cmp_3_bdwt;
  wire while_mul_cmp_3_bdwt_2;
  wire while_mul_cmp_3_bdwt_4;
  wire [127:0] while_mul_cmp_3_z;
  wire [111:0] while_mul_cmp_3_z_mxwt_pconst;
  wire [111:0] while_mul_cmp_3_z_mxwt_1_pconst;
  wire [111:0] while_mul_cmp_3_z_mxwt_2_pconst;
  wire run_cgwt_21;


  // Interconnect Declarations for Component Instantiations 
  mgc_mul_pipe #(.width_a(32'sd64),
  .signd_a(32'sd1),
  .width_b(32'sd64),
  .signd_b(32'sd1),
  .width_z(32'sd128),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd0),
  .stages(32'sd4),
  .n_inreg(32'sd1)) while_mul_cmp_3 (
      .a(while_mul_cmp_3_a_run),
      .b(while_mul_cmp_3_b_run),
      .clk(clk),
      .en(run_cgwt_21),
      .a_rst(rst),
      .s_rst(1'b1),
      .z(while_mul_cmp_3_z)
    );
  Rotate_run_while_mul_cmp_3_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_3 Rotate_run_while_mul_cmp_3_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_3_inst
      (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_cmp_3_oswt_unreg(while_mul_cmp_3_oswt_unreg),
      .while_mul_cmp_3_iswt3(while_mul_cmp_3_iswt3),
      .while_mul_cmp_3_iden_1(while_mul_cmp_3_iden_1),
      .while_mul_cmp_3_oswt_unreg_1(while_mul_cmp_3_oswt_unreg_1),
      .while_mul_cmp_3_iswt3_1(while_mul_cmp_3_iswt3_1),
      .while_mul_cmp_3_iden_3(while_mul_cmp_3_iden_3),
      .while_mul_cmp_3_oswt_unreg_2(while_mul_cmp_3_oswt_unreg_2),
      .while_mul_cmp_3_iswt3_2(while_mul_cmp_3_iswt3_2),
      .while_mul_cmp_3_iden_5(while_mul_cmp_3_iden_5),
      .run_cgwt_21(run_cgwt_21),
      .while_mul_cmp_3_bdwt(while_mul_cmp_3_bdwt),
      .while_mul_cmp_3_bdwt_2(while_mul_cmp_3_bdwt_2),
      .while_mul_cmp_3_bdwt_4(while_mul_cmp_3_bdwt_4),
      .while_mul_cmp_3_iswt3_2_pff(while_mul_cmp_3_iswt3_2_pff),
      .while_mul_cmp_3_iswt3_1_pff(while_mul_cmp_3_iswt3_1_pff),
      .while_mul_cmp_3_iswt3_pff(while_mul_cmp_3_iswt3_pff)
    );
  Rotate_run_while_mul_cmp_3_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_3 Rotate_run_while_mul_cmp_3_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_3_inst
      (
      .clk(clk),
      .rst(rst),
      .while_mul_cmp_3_bawt(while_mul_cmp_3_bawt),
      .while_mul_cmp_3_iden(while_mul_cmp_3_iden),
      .while_mul_cmp_3_iden_2(while_mul_cmp_3_iden_2),
      .while_mul_cmp_3_iden_4(while_mul_cmp_3_iden_4),
      .while_mul_cmp_3_z_mxwt(while_mul_cmp_3_z_mxwt_pconst),
      .while_mul_cmp_3_z_mxwt_1(while_mul_cmp_3_z_mxwt_1_pconst),
      .while_mul_cmp_3_z_mxwt_2(while_mul_cmp_3_z_mxwt_2_pconst),
      .while_mul_cmp_3_biwt(while_mul_cmp_3_iden_1),
      .while_mul_cmp_3_bdwt(while_mul_cmp_3_bdwt),
      .while_mul_cmp_3_biwt_2(while_mul_cmp_3_iden_3),
      .while_mul_cmp_3_bdwt_2(while_mul_cmp_3_bdwt_2),
      .while_mul_cmp_3_biwt_4(while_mul_cmp_3_iden_5),
      .while_mul_cmp_3_bdwt_4(while_mul_cmp_3_bdwt_4),
      .while_mul_cmp_3_z(while_mul_cmp_3_z)
    );
  assign while_mul_cmp_3_z_mxwt = while_mul_cmp_3_z_mxwt_pconst;
  assign while_mul_cmp_3_z_mxwt_1 = while_mul_cmp_3_z_mxwt_1_pconst;
  assign while_mul_cmp_3_z_mxwt_2 = while_mul_cmp_3_z_mxwt_2_pconst;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_cmp_2
// ------------------------------------------------------------------


module Rotate_run_while_mul_cmp_2 (
  clk, rst, run_wen, run_wten, while_mul_cmp_2_oswt_unreg, while_mul_cmp_2_bawt,
      while_mul_cmp_2_iden, while_mul_cmp_2_iswt3, while_mul_cmp_2_iden_1, while_mul_cmp_2_oswt_unreg_1,
      while_mul_cmp_2_iden_2, while_mul_cmp_2_iswt3_1, while_mul_cmp_2_iden_3, while_mul_cmp_2_oswt_unreg_2,
      while_mul_cmp_2_iden_4, while_mul_cmp_2_iswt3_2, while_mul_cmp_2_iden_5, while_mul_cmp_2_a_run,
      while_mul_cmp_2_b_run, while_mul_cmp_2_z_mxwt, while_mul_cmp_2_z_mxwt_1, while_mul_cmp_2_z_mxwt_2,
      while_mul_cmp_2_iswt3_2_pff, while_mul_cmp_2_iswt3_1_pff, while_mul_cmp_2_iswt3_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_cmp_2_oswt_unreg;
  output while_mul_cmp_2_bawt;
  output while_mul_cmp_2_iden;
  input while_mul_cmp_2_iswt3;
  output while_mul_cmp_2_iden_1;
  input while_mul_cmp_2_oswt_unreg_1;
  output while_mul_cmp_2_iden_2;
  input while_mul_cmp_2_iswt3_1;
  output while_mul_cmp_2_iden_3;
  input while_mul_cmp_2_oswt_unreg_2;
  output while_mul_cmp_2_iden_4;
  input while_mul_cmp_2_iswt3_2;
  output while_mul_cmp_2_iden_5;
  input [63:0] while_mul_cmp_2_a_run;
  input [63:0] while_mul_cmp_2_b_run;
  output [111:0] while_mul_cmp_2_z_mxwt;
  output [111:0] while_mul_cmp_2_z_mxwt_1;
  output [127:0] while_mul_cmp_2_z_mxwt_2;
  input while_mul_cmp_2_iswt3_2_pff;
  input while_mul_cmp_2_iswt3_1_pff;
  input while_mul_cmp_2_iswt3_pff;


  // Interconnect Declarations
  wire while_mul_cmp_2_bdwt;
  wire while_mul_cmp_2_bdwt_2;
  wire while_mul_cmp_2_bdwt_4;
  wire [127:0] while_mul_cmp_2_z;
  wire [111:0] while_mul_cmp_2_z_mxwt_pconst;
  wire [111:0] while_mul_cmp_2_z_mxwt_1_pconst;
  wire run_cgwt_20;


  // Interconnect Declarations for Component Instantiations 
  mgc_mul_pipe #(.width_a(32'sd64),
  .signd_a(32'sd1),
  .width_b(32'sd64),
  .signd_b(32'sd1),
  .width_z(32'sd128),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd0),
  .stages(32'sd4),
  .n_inreg(32'sd1)) while_mul_cmp_2 (
      .a(while_mul_cmp_2_a_run),
      .b(while_mul_cmp_2_b_run),
      .clk(clk),
      .en(run_cgwt_20),
      .a_rst(rst),
      .s_rst(1'b1),
      .z(while_mul_cmp_2_z)
    );
  Rotate_run_while_mul_cmp_2_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_2 Rotate_run_while_mul_cmp_2_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_2_inst
      (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_cmp_2_oswt_unreg(while_mul_cmp_2_oswt_unreg),
      .while_mul_cmp_2_iswt3(while_mul_cmp_2_iswt3),
      .while_mul_cmp_2_iden_1(while_mul_cmp_2_iden_1),
      .while_mul_cmp_2_oswt_unreg_1(while_mul_cmp_2_oswt_unreg_1),
      .while_mul_cmp_2_iswt3_1(while_mul_cmp_2_iswt3_1),
      .while_mul_cmp_2_iden_3(while_mul_cmp_2_iden_3),
      .while_mul_cmp_2_oswt_unreg_2(while_mul_cmp_2_oswt_unreg_2),
      .while_mul_cmp_2_iswt3_2(while_mul_cmp_2_iswt3_2),
      .while_mul_cmp_2_iden_5(while_mul_cmp_2_iden_5),
      .run_cgwt_20(run_cgwt_20),
      .while_mul_cmp_2_bdwt(while_mul_cmp_2_bdwt),
      .while_mul_cmp_2_bdwt_2(while_mul_cmp_2_bdwt_2),
      .while_mul_cmp_2_bdwt_4(while_mul_cmp_2_bdwt_4),
      .while_mul_cmp_2_iswt3_2_pff(while_mul_cmp_2_iswt3_2_pff),
      .while_mul_cmp_2_iswt3_1_pff(while_mul_cmp_2_iswt3_1_pff),
      .while_mul_cmp_2_iswt3_pff(while_mul_cmp_2_iswt3_pff)
    );
  Rotate_run_while_mul_cmp_2_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_2 Rotate_run_while_mul_cmp_2_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_2_inst
      (
      .clk(clk),
      .rst(rst),
      .while_mul_cmp_2_bawt(while_mul_cmp_2_bawt),
      .while_mul_cmp_2_iden(while_mul_cmp_2_iden),
      .while_mul_cmp_2_iden_2(while_mul_cmp_2_iden_2),
      .while_mul_cmp_2_iden_4(while_mul_cmp_2_iden_4),
      .while_mul_cmp_2_z_mxwt(while_mul_cmp_2_z_mxwt_pconst),
      .while_mul_cmp_2_z_mxwt_1(while_mul_cmp_2_z_mxwt_1_pconst),
      .while_mul_cmp_2_z_mxwt_2(while_mul_cmp_2_z_mxwt_2),
      .while_mul_cmp_2_biwt(while_mul_cmp_2_iden_1),
      .while_mul_cmp_2_bdwt(while_mul_cmp_2_bdwt),
      .while_mul_cmp_2_biwt_2(while_mul_cmp_2_iden_3),
      .while_mul_cmp_2_bdwt_2(while_mul_cmp_2_bdwt_2),
      .while_mul_cmp_2_biwt_4(while_mul_cmp_2_iden_5),
      .while_mul_cmp_2_bdwt_4(while_mul_cmp_2_bdwt_4),
      .while_mul_cmp_2_z(while_mul_cmp_2_z)
    );
  assign while_mul_cmp_2_z_mxwt = while_mul_cmp_2_z_mxwt_pconst;
  assign while_mul_cmp_2_z_mxwt_1 = while_mul_cmp_2_z_mxwt_1_pconst;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_cmp_1
// ------------------------------------------------------------------


module Rotate_run_while_mul_cmp_1 (
  clk, rst, run_wen, run_wten, while_mul_cmp_1_oswt_unreg, while_mul_cmp_1_bawt,
      while_mul_cmp_1_iden, while_mul_cmp_1_iswt3, while_mul_cmp_1_iden_1, while_mul_cmp_1_oswt_unreg_1,
      while_mul_cmp_1_iden_2, while_mul_cmp_1_iswt3_1, while_mul_cmp_1_iden_3, while_mul_cmp_1_oswt_unreg_2,
      while_mul_cmp_1_iden_4, while_mul_cmp_1_iswt3_2, while_mul_cmp_1_iden_5, while_mul_cmp_1_a_run,
      while_mul_cmp_1_b_run, while_mul_cmp_1_z_mxwt, while_mul_cmp_1_z_mxwt_1, while_mul_cmp_1_z_mxwt_2,
      while_mul_cmp_1_iswt3_2_pff, while_mul_cmp_1_iswt3_1_pff, while_mul_cmp_1_iswt3_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_cmp_1_oswt_unreg;
  output while_mul_cmp_1_bawt;
  output while_mul_cmp_1_iden;
  input while_mul_cmp_1_iswt3;
  output while_mul_cmp_1_iden_1;
  input while_mul_cmp_1_oswt_unreg_1;
  output while_mul_cmp_1_iden_2;
  input while_mul_cmp_1_iswt3_1;
  output while_mul_cmp_1_iden_3;
  input while_mul_cmp_1_oswt_unreg_2;
  output while_mul_cmp_1_iden_4;
  input while_mul_cmp_1_iswt3_2;
  output while_mul_cmp_1_iden_5;
  input [63:0] while_mul_cmp_1_a_run;
  input [63:0] while_mul_cmp_1_b_run;
  output [111:0] while_mul_cmp_1_z_mxwt;
  output [111:0] while_mul_cmp_1_z_mxwt_1;
  output [111:0] while_mul_cmp_1_z_mxwt_2;
  input while_mul_cmp_1_iswt3_2_pff;
  input while_mul_cmp_1_iswt3_1_pff;
  input while_mul_cmp_1_iswt3_pff;


  // Interconnect Declarations
  wire while_mul_cmp_1_bdwt;
  wire while_mul_cmp_1_bdwt_2;
  wire while_mul_cmp_1_bdwt_4;
  wire [127:0] while_mul_cmp_1_z;
  wire [111:0] while_mul_cmp_1_z_mxwt_pconst;
  wire [111:0] while_mul_cmp_1_z_mxwt_1_pconst;
  wire [111:0] while_mul_cmp_1_z_mxwt_2_pconst;
  wire run_cgwt_19;


  // Interconnect Declarations for Component Instantiations 
  mgc_mul_pipe #(.width_a(32'sd64),
  .signd_a(32'sd1),
  .width_b(32'sd64),
  .signd_b(32'sd1),
  .width_z(32'sd128),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd0),
  .stages(32'sd4),
  .n_inreg(32'sd1)) while_mul_cmp_1 (
      .a(while_mul_cmp_1_a_run),
      .b(while_mul_cmp_1_b_run),
      .clk(clk),
      .en(run_cgwt_19),
      .a_rst(rst),
      .s_rst(1'b1),
      .z(while_mul_cmp_1_z)
    );
  Rotate_run_while_mul_cmp_1_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_1 Rotate_run_while_mul_cmp_1_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_1_inst
      (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_cmp_1_oswt_unreg(while_mul_cmp_1_oswt_unreg),
      .while_mul_cmp_1_iswt3(while_mul_cmp_1_iswt3),
      .while_mul_cmp_1_iden_1(while_mul_cmp_1_iden_1),
      .while_mul_cmp_1_oswt_unreg_1(while_mul_cmp_1_oswt_unreg_1),
      .while_mul_cmp_1_iswt3_1(while_mul_cmp_1_iswt3_1),
      .while_mul_cmp_1_iden_3(while_mul_cmp_1_iden_3),
      .while_mul_cmp_1_oswt_unreg_2(while_mul_cmp_1_oswt_unreg_2),
      .while_mul_cmp_1_iswt3_2(while_mul_cmp_1_iswt3_2),
      .while_mul_cmp_1_iden_5(while_mul_cmp_1_iden_5),
      .run_cgwt_19(run_cgwt_19),
      .while_mul_cmp_1_bdwt(while_mul_cmp_1_bdwt),
      .while_mul_cmp_1_bdwt_2(while_mul_cmp_1_bdwt_2),
      .while_mul_cmp_1_bdwt_4(while_mul_cmp_1_bdwt_4),
      .while_mul_cmp_1_iswt3_2_pff(while_mul_cmp_1_iswt3_2_pff),
      .while_mul_cmp_1_iswt3_1_pff(while_mul_cmp_1_iswt3_1_pff),
      .while_mul_cmp_1_iswt3_pff(while_mul_cmp_1_iswt3_pff)
    );
  Rotate_run_while_mul_cmp_1_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_1 Rotate_run_while_mul_cmp_1_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_1_inst
      (
      .clk(clk),
      .rst(rst),
      .while_mul_cmp_1_bawt(while_mul_cmp_1_bawt),
      .while_mul_cmp_1_iden(while_mul_cmp_1_iden),
      .while_mul_cmp_1_iden_2(while_mul_cmp_1_iden_2),
      .while_mul_cmp_1_iden_4(while_mul_cmp_1_iden_4),
      .while_mul_cmp_1_z_mxwt(while_mul_cmp_1_z_mxwt_pconst),
      .while_mul_cmp_1_z_mxwt_1(while_mul_cmp_1_z_mxwt_1_pconst),
      .while_mul_cmp_1_z_mxwt_2(while_mul_cmp_1_z_mxwt_2_pconst),
      .while_mul_cmp_1_biwt(while_mul_cmp_1_iden_1),
      .while_mul_cmp_1_bdwt(while_mul_cmp_1_bdwt),
      .while_mul_cmp_1_biwt_2(while_mul_cmp_1_iden_3),
      .while_mul_cmp_1_bdwt_2(while_mul_cmp_1_bdwt_2),
      .while_mul_cmp_1_biwt_4(while_mul_cmp_1_iden_5),
      .while_mul_cmp_1_bdwt_4(while_mul_cmp_1_bdwt_4),
      .while_mul_cmp_1_z(while_mul_cmp_1_z)
    );
  assign while_mul_cmp_1_z_mxwt = while_mul_cmp_1_z_mxwt_pconst;
  assign while_mul_cmp_1_z_mxwt_1 = while_mul_cmp_1_z_mxwt_1_pconst;
  assign while_mul_cmp_1_z_mxwt_2 = while_mul_cmp_1_z_mxwt_2_pconst;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_cmp
// ------------------------------------------------------------------


module Rotate_run_while_mul_cmp (
  clk, rst, run_wen, run_wten, while_mul_cmp_oswt_unreg, while_mul_cmp_bawt, while_mul_cmp_iden,
      while_mul_cmp_iswt3, while_mul_cmp_iden_1, while_mul_cmp_oswt_unreg_1, while_mul_cmp_iden_2,
      while_mul_cmp_iswt3_1, while_mul_cmp_iden_3, while_mul_cmp_oswt_unreg_2, while_mul_cmp_iden_4,
      while_mul_cmp_iswt3_2, while_mul_cmp_iden_5, while_mul_cmp_a_run, while_mul_cmp_b_run,
      while_mul_cmp_z_mxwt, while_mul_cmp_z_mxwt_1, while_mul_cmp_z_mxwt_2, while_mul_cmp_iswt3_2_pff,
      while_mul_cmp_iswt3_1_pff, while_mul_cmp_iswt3_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_cmp_oswt_unreg;
  output while_mul_cmp_bawt;
  output while_mul_cmp_iden;
  input while_mul_cmp_iswt3;
  output while_mul_cmp_iden_1;
  input while_mul_cmp_oswt_unreg_1;
  output while_mul_cmp_iden_2;
  input while_mul_cmp_iswt3_1;
  output while_mul_cmp_iden_3;
  input while_mul_cmp_oswt_unreg_2;
  output while_mul_cmp_iden_4;
  input while_mul_cmp_iswt3_2;
  output while_mul_cmp_iden_5;
  input [63:0] while_mul_cmp_a_run;
  input [63:0] while_mul_cmp_b_run;
  output [111:0] while_mul_cmp_z_mxwt;
  output [111:0] while_mul_cmp_z_mxwt_1;
  output [111:0] while_mul_cmp_z_mxwt_2;
  input while_mul_cmp_iswt3_2_pff;
  input while_mul_cmp_iswt3_1_pff;
  input while_mul_cmp_iswt3_pff;


  // Interconnect Declarations
  wire while_mul_cmp_bdwt;
  wire while_mul_cmp_bdwt_2;
  wire while_mul_cmp_bdwt_4;
  wire [127:0] while_mul_cmp_z;
  wire [111:0] while_mul_cmp_z_mxwt_pconst;
  wire [111:0] while_mul_cmp_z_mxwt_1_pconst;
  wire [111:0] while_mul_cmp_z_mxwt_2_pconst;
  wire run_cgwt_18;


  // Interconnect Declarations for Component Instantiations 
  mgc_mul_pipe #(.width_a(32'sd64),
  .signd_a(32'sd1),
  .width_b(32'sd64),
  .signd_b(32'sd1),
  .width_z(32'sd128),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd0),
  .stages(32'sd4),
  .n_inreg(32'sd1)) while_mul_cmp (
      .a(while_mul_cmp_a_run),
      .b(while_mul_cmp_b_run),
      .clk(clk),
      .en(run_cgwt_18),
      .a_rst(rst),
      .s_rst(1'b1),
      .z(while_mul_cmp_z)
    );
  Rotate_run_while_mul_cmp_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl Rotate_run_while_mul_cmp_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_ctrl_inst
      (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_cmp_oswt_unreg(while_mul_cmp_oswt_unreg),
      .while_mul_cmp_iswt3(while_mul_cmp_iswt3),
      .while_mul_cmp_iden_1(while_mul_cmp_iden_1),
      .while_mul_cmp_oswt_unreg_1(while_mul_cmp_oswt_unreg_1),
      .while_mul_cmp_iswt3_1(while_mul_cmp_iswt3_1),
      .while_mul_cmp_iden_3(while_mul_cmp_iden_3),
      .while_mul_cmp_oswt_unreg_2(while_mul_cmp_oswt_unreg_2),
      .while_mul_cmp_iswt3_2(while_mul_cmp_iswt3_2),
      .while_mul_cmp_iden_5(while_mul_cmp_iden_5),
      .run_cgwt_18(run_cgwt_18),
      .while_mul_cmp_bdwt(while_mul_cmp_bdwt),
      .while_mul_cmp_bdwt_2(while_mul_cmp_bdwt_2),
      .while_mul_cmp_bdwt_4(while_mul_cmp_bdwt_4),
      .while_mul_cmp_iswt3_2_pff(while_mul_cmp_iswt3_2_pff),
      .while_mul_cmp_iswt3_1_pff(while_mul_cmp_iswt3_1_pff),
      .while_mul_cmp_iswt3_pff(while_mul_cmp_iswt3_pff)
    );
  Rotate_run_while_mul_cmp_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp Rotate_run_while_mul_cmp_mgc_mul_pipe_64_1_64_1_128_1_1_0_0_4_1_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .while_mul_cmp_bawt(while_mul_cmp_bawt),
      .while_mul_cmp_iden(while_mul_cmp_iden),
      .while_mul_cmp_iden_2(while_mul_cmp_iden_2),
      .while_mul_cmp_iden_4(while_mul_cmp_iden_4),
      .while_mul_cmp_z_mxwt(while_mul_cmp_z_mxwt_pconst),
      .while_mul_cmp_z_mxwt_1(while_mul_cmp_z_mxwt_1_pconst),
      .while_mul_cmp_z_mxwt_2(while_mul_cmp_z_mxwt_2_pconst),
      .while_mul_cmp_biwt(while_mul_cmp_iden_1),
      .while_mul_cmp_bdwt(while_mul_cmp_bdwt),
      .while_mul_cmp_biwt_2(while_mul_cmp_iden_3),
      .while_mul_cmp_bdwt_2(while_mul_cmp_bdwt_2),
      .while_mul_cmp_biwt_4(while_mul_cmp_iden_5),
      .while_mul_cmp_bdwt_4(while_mul_cmp_bdwt_4),
      .while_mul_cmp_z(while_mul_cmp_z)
    );
  assign while_mul_cmp_z_mxwt = while_mul_cmp_z_mxwt_pconst;
  assign while_mul_cmp_z_mxwt_1 = while_mul_cmp_z_mxwt_1_pconst;
  assign while_mul_cmp_z_mxwt_2 = while_mul_cmp_z_mxwt_2_pconst;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_26_cmp_1
// ------------------------------------------------------------------


module Rotate_run_while_mul_26_cmp_1 (
  clk, rst, run_wen, run_wten, while_mul_26_cmp_1_oswt_unreg, while_mul_26_cmp_1_bawt,
      while_mul_26_cmp_1_iden, while_mul_26_cmp_1_iswt3, while_mul_26_cmp_1_iden_1,
      while_mul_26_cmp_1_oswt_unreg_1, while_mul_26_cmp_1_iden_2, while_mul_26_cmp_1_iswt3_1,
      while_mul_26_cmp_1_iden_3, while_mul_26_cmp_1_b_run, while_mul_26_cmp_1_z_mxwt,
      while_mul_26_cmp_1_z_mxwt_1, while_mul_26_cmp_1_iswt3_1_pff, while_mul_26_cmp_1_iswt3_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_26_cmp_1_oswt_unreg;
  output while_mul_26_cmp_1_bawt;
  output while_mul_26_cmp_1_iden;
  input while_mul_26_cmp_1_iswt3;
  output while_mul_26_cmp_1_iden_1;
  input while_mul_26_cmp_1_oswt_unreg_1;
  output while_mul_26_cmp_1_iden_2;
  input while_mul_26_cmp_1_iswt3_1;
  output while_mul_26_cmp_1_iden_3;
  input [63:0] while_mul_26_cmp_1_b_run;
  output [113:0] while_mul_26_cmp_1_z_mxwt;
  output [113:0] while_mul_26_cmp_1_z_mxwt_1;
  input while_mul_26_cmp_1_iswt3_1_pff;
  input while_mul_26_cmp_1_iswt3_pff;


  // Interconnect Declarations
  wire while_mul_26_cmp_1_bdwt;
  wire while_mul_26_cmp_1_bdwt_2;
  wire [113:0] while_mul_26_cmp_1_z;
  wire run_cgwt_17;


  // Interconnect Declarations for Component Instantiations 
  mgc_mul_pipe #(.width_a(32'sd50),
  .signd_a(32'sd0),
  .width_b(32'sd64),
  .signd_b(32'sd1),
  .width_z(32'sd114),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd0),
  .stages(32'sd4),
  .n_inreg(32'sd1)) while_mul_26_cmp_1 (
      .a(50'b11110111110111101111010101011000110111010001000011),
      .b(while_mul_26_cmp_1_b_run),
      .clk(clk),
      .en(run_cgwt_17),
      .a_rst(rst),
      .s_rst(1'b1),
      .z(while_mul_26_cmp_1_z)
    );
  Rotate_run_while_mul_26_cmp_1_mgc_mul_pipe_50_0_64_1_114_1_1_0_0_4_1_wait_ctrl_1
      Rotate_run_while_mul_26_cmp_1_mgc_mul_pipe_50_0_64_1_114_1_1_0_0_4_1_wait_ctrl_1_inst
      (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_26_cmp_1_oswt_unreg(while_mul_26_cmp_1_oswt_unreg),
      .while_mul_26_cmp_1_iswt3(while_mul_26_cmp_1_iswt3),
      .while_mul_26_cmp_1_iden_1(while_mul_26_cmp_1_iden_1),
      .while_mul_26_cmp_1_oswt_unreg_1(while_mul_26_cmp_1_oswt_unreg_1),
      .while_mul_26_cmp_1_iswt3_1(while_mul_26_cmp_1_iswt3_1),
      .while_mul_26_cmp_1_iden_3(while_mul_26_cmp_1_iden_3),
      .run_cgwt_17(run_cgwt_17),
      .while_mul_26_cmp_1_bdwt(while_mul_26_cmp_1_bdwt),
      .while_mul_26_cmp_1_bdwt_2(while_mul_26_cmp_1_bdwt_2),
      .while_mul_26_cmp_1_iswt3_1_pff(while_mul_26_cmp_1_iswt3_1_pff),
      .while_mul_26_cmp_1_iswt3_pff(while_mul_26_cmp_1_iswt3_pff)
    );
  Rotate_run_while_mul_26_cmp_1_mgc_mul_pipe_50_0_64_1_114_1_1_0_0_4_1_wait_dp_1
      Rotate_run_while_mul_26_cmp_1_mgc_mul_pipe_50_0_64_1_114_1_1_0_0_4_1_wait_dp_1_inst
      (
      .clk(clk),
      .rst(rst),
      .while_mul_26_cmp_1_bawt(while_mul_26_cmp_1_bawt),
      .while_mul_26_cmp_1_iden(while_mul_26_cmp_1_iden),
      .while_mul_26_cmp_1_iden_2(while_mul_26_cmp_1_iden_2),
      .while_mul_26_cmp_1_z_mxwt(while_mul_26_cmp_1_z_mxwt),
      .while_mul_26_cmp_1_z_mxwt_1(while_mul_26_cmp_1_z_mxwt_1),
      .while_mul_26_cmp_1_biwt(while_mul_26_cmp_1_iden_1),
      .while_mul_26_cmp_1_bdwt(while_mul_26_cmp_1_bdwt),
      .while_mul_26_cmp_1_biwt_2(while_mul_26_cmp_1_iden_3),
      .while_mul_26_cmp_1_bdwt_2(while_mul_26_cmp_1_bdwt_2),
      .while_mul_26_cmp_1_z(while_mul_26_cmp_1_z)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_26_cmp
// ------------------------------------------------------------------


module Rotate_run_while_mul_26_cmp (
  clk, rst, run_wen, run_wten, while_mul_26_cmp_oswt_unreg, while_mul_26_cmp_bawt,
      while_mul_26_cmp_iden, while_mul_26_cmp_iswt3, while_mul_26_cmp_iden_1, while_mul_26_cmp_oswt_unreg_1,
      while_mul_26_cmp_iden_2, while_mul_26_cmp_iswt3_1, while_mul_26_cmp_iden_3,
      while_mul_26_cmp_b_run, while_mul_26_cmp_z_mxwt, while_mul_26_cmp_z_mxwt_1,
      while_mul_26_cmp_iswt3_1_pff, while_mul_26_cmp_iswt3_pff, while_mul_26_cmp_a_run_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_26_cmp_oswt_unreg;
  output while_mul_26_cmp_bawt;
  output while_mul_26_cmp_iden;
  input while_mul_26_cmp_iswt3;
  output while_mul_26_cmp_iden_1;
  input while_mul_26_cmp_oswt_unreg_1;
  output while_mul_26_cmp_iden_2;
  input while_mul_26_cmp_iswt3_1;
  output while_mul_26_cmp_iden_3;
  input [63:0] while_mul_26_cmp_b_run;
  output [113:0] while_mul_26_cmp_z_mxwt;
  output [112:0] while_mul_26_cmp_z_mxwt_1;
  input while_mul_26_cmp_iswt3_1_pff;
  input while_mul_26_cmp_iswt3_pff;
  input [49:0] while_mul_26_cmp_a_run_pff;


  // Interconnect Declarations
  wire while_mul_26_cmp_bdwt;
  wire while_mul_26_cmp_bdwt_2;
  wire [113:0] while_mul_26_cmp_z;
  wire [112:0] while_mul_26_cmp_z_mxwt_1_pconst;
  wire run_cgwt_16;


  // Interconnect Declarations for Component Instantiations 
  wire [49:0] nl_while_mul_26_cmp_a;
  assign nl_while_mul_26_cmp_a = {(while_mul_26_cmp_a_run_pff[49]) , 1'b1 , (while_mul_26_cmp_a_run_pff[47:45])
      , 2'b11 , (while_mul_26_cmp_a_run_pff[42:41]) , 1'b1 , (while_mul_26_cmp_a_run_pff[39:32])
      , 1'b1 , (while_mul_26_cmp_a_run_pff[30:24]) , 1'b0 , (while_mul_26_cmp_a_run_pff[22:21])
      , 1'b0 , (while_mul_26_cmp_a_run_pff[19:17]) , 1'b1 , (while_mul_26_cmp_a_run_pff[15:12])
      , 1'b0 , (while_mul_26_cmp_a_run_pff[10:9]) , 1'b0 , (while_mul_26_cmp_a_run_pff[7:3])
      , 1'b0 , (while_mul_26_cmp_a_run_pff[1]) , 1'b1};
  mgc_mul_pipe #(.width_a(32'sd50),
  .signd_a(32'sd0),
  .width_b(32'sd64),
  .signd_b(32'sd1),
  .width_z(32'sd114),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd0),
  .stages(32'sd4),
  .n_inreg(32'sd1)) while_mul_26_cmp (
      .a(nl_while_mul_26_cmp_a[49:0]),
      .b(while_mul_26_cmp_b_run),
      .clk(clk),
      .en(run_cgwt_16),
      .a_rst(rst),
      .s_rst(1'b1),
      .z(while_mul_26_cmp_z)
    );
  Rotate_run_while_mul_26_cmp_mgc_mul_pipe_50_0_64_1_114_1_1_0_0_4_1_wait_ctrl Rotate_run_while_mul_26_cmp_mgc_mul_pipe_50_0_64_1_114_1_1_0_0_4_1_wait_ctrl_inst
      (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_26_cmp_oswt_unreg(while_mul_26_cmp_oswt_unreg),
      .while_mul_26_cmp_iswt3(while_mul_26_cmp_iswt3),
      .while_mul_26_cmp_iden_1(while_mul_26_cmp_iden_1),
      .while_mul_26_cmp_oswt_unreg_1(while_mul_26_cmp_oswt_unreg_1),
      .while_mul_26_cmp_iswt3_1(while_mul_26_cmp_iswt3_1),
      .while_mul_26_cmp_iden_3(while_mul_26_cmp_iden_3),
      .run_cgwt_16(run_cgwt_16),
      .while_mul_26_cmp_bdwt(while_mul_26_cmp_bdwt),
      .while_mul_26_cmp_bdwt_2(while_mul_26_cmp_bdwt_2),
      .while_mul_26_cmp_iswt3_1_pff(while_mul_26_cmp_iswt3_1_pff),
      .while_mul_26_cmp_iswt3_pff(while_mul_26_cmp_iswt3_pff)
    );
  Rotate_run_while_mul_26_cmp_mgc_mul_pipe_50_0_64_1_114_1_1_0_0_4_1_wait_dp Rotate_run_while_mul_26_cmp_mgc_mul_pipe_50_0_64_1_114_1_1_0_0_4_1_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .while_mul_26_cmp_bawt(while_mul_26_cmp_bawt),
      .while_mul_26_cmp_iden(while_mul_26_cmp_iden),
      .while_mul_26_cmp_iden_2(while_mul_26_cmp_iden_2),
      .while_mul_26_cmp_z_mxwt(while_mul_26_cmp_z_mxwt),
      .while_mul_26_cmp_z_mxwt_1(while_mul_26_cmp_z_mxwt_1_pconst),
      .while_mul_26_cmp_biwt(while_mul_26_cmp_iden_1),
      .while_mul_26_cmp_bdwt(while_mul_26_cmp_bdwt),
      .while_mul_26_cmp_biwt_2(while_mul_26_cmp_iden_3),
      .while_mul_26_cmp_bdwt_2(while_mul_26_cmp_bdwt_2),
      .while_mul_26_cmp_z(while_mul_26_cmp_z)
    );
  assign while_mul_26_cmp_z_mxwt_1 = while_mul_26_cmp_z_mxwt_1_pconst;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_25_cmp
// ------------------------------------------------------------------


module Rotate_run_while_mul_25_cmp (
  clk, rst, run_wen, run_wten, while_mul_25_cmp_oswt_unreg, while_mul_25_cmp_bawt,
      while_mul_25_cmp_iden, while_mul_25_cmp_iswt5, while_mul_25_cmp_iden_1, while_mul_25_cmp_oswt_unreg_1,
      while_mul_25_cmp_iden_2, while_mul_25_cmp_iswt5_1, while_mul_25_cmp_iden_3,
      while_mul_25_cmp_oswt_unreg_2, while_mul_25_cmp_iden_4, while_mul_25_cmp_iswt5_2,
      while_mul_25_cmp_iden_5, while_mul_25_cmp_oswt_unreg_3, while_mul_25_cmp_iden_6,
      while_mul_25_cmp_iswt5_3, while_mul_25_cmp_iden_7, while_mul_25_cmp_a_run,
      while_mul_25_cmp_b_run, while_mul_25_cmp_z_mxwt, while_mul_25_cmp_z_mxwt_1,
      while_mul_25_cmp_z_mxwt_2, while_mul_25_cmp_z_mxwt_3, while_mul_25_cmp_iswt5_3_pff,
      while_mul_25_cmp_iswt5_2_pff, while_mul_25_cmp_iswt5_1_pff, while_mul_25_cmp_iswt5_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_25_cmp_oswt_unreg;
  output while_mul_25_cmp_bawt;
  output while_mul_25_cmp_iden;
  input while_mul_25_cmp_iswt5;
  output while_mul_25_cmp_iden_1;
  input while_mul_25_cmp_oswt_unreg_1;
  output while_mul_25_cmp_iden_2;
  input while_mul_25_cmp_iswt5_1;
  output while_mul_25_cmp_iden_3;
  input while_mul_25_cmp_oswt_unreg_2;
  output while_mul_25_cmp_iden_4;
  input while_mul_25_cmp_iswt5_2;
  output while_mul_25_cmp_iden_5;
  input while_mul_25_cmp_oswt_unreg_3;
  output while_mul_25_cmp_iden_6;
  input while_mul_25_cmp_iswt5_3;
  output while_mul_25_cmp_iden_7;
  input [64:0] while_mul_25_cmp_a_run;
  input [112:0] while_mul_25_cmp_b_run;
  output [177:0] while_mul_25_cmp_z_mxwt;
  output [177:0] while_mul_25_cmp_z_mxwt_1;
  output [176:0] while_mul_25_cmp_z_mxwt_2;
  output [176:0] while_mul_25_cmp_z_mxwt_3;
  input while_mul_25_cmp_iswt5_3_pff;
  input while_mul_25_cmp_iswt5_2_pff;
  input while_mul_25_cmp_iswt5_1_pff;
  input while_mul_25_cmp_iswt5_pff;


  // Interconnect Declarations
  wire while_mul_25_cmp_bdwt;
  wire while_mul_25_cmp_bdwt_2;
  wire while_mul_25_cmp_bdwt_4;
  wire while_mul_25_cmp_bdwt_6;
  wire [177:0] while_mul_25_cmp_z;
  wire [176:0] while_mul_25_cmp_z_mxwt_2_pconst;
  wire [176:0] while_mul_25_cmp_z_mxwt_3_pconst;
  wire run_cgwt_15;


  // Interconnect Declarations for Component Instantiations 
  mgc_mul_pipe #(.width_a(32'sd65),
  .signd_a(32'sd1),
  .width_b(32'sd113),
  .signd_b(32'sd1),
  .width_z(32'sd178),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd0),
  .stages(32'sd6),
  .n_inreg(32'sd1)) while_mul_25_cmp (
      .a(while_mul_25_cmp_a_run),
      .b(while_mul_25_cmp_b_run),
      .clk(clk),
      .en(run_cgwt_15),
      .a_rst(rst),
      .s_rst(1'b1),
      .z(while_mul_25_cmp_z)
    );
  Rotate_run_while_mul_25_cmp_mgc_mul_pipe_65_1_113_1_178_1_1_0_0_6_1_wait_ctrl Rotate_run_while_mul_25_cmp_mgc_mul_pipe_65_1_113_1_178_1_1_0_0_6_1_wait_ctrl_inst
      (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_25_cmp_oswt_unreg(while_mul_25_cmp_oswt_unreg),
      .while_mul_25_cmp_iswt5(while_mul_25_cmp_iswt5),
      .while_mul_25_cmp_iden_1(while_mul_25_cmp_iden_1),
      .while_mul_25_cmp_oswt_unreg_1(while_mul_25_cmp_oswt_unreg_1),
      .while_mul_25_cmp_iswt5_1(while_mul_25_cmp_iswt5_1),
      .while_mul_25_cmp_iden_3(while_mul_25_cmp_iden_3),
      .while_mul_25_cmp_oswt_unreg_2(while_mul_25_cmp_oswt_unreg_2),
      .while_mul_25_cmp_iswt5_2(while_mul_25_cmp_iswt5_2),
      .while_mul_25_cmp_iden_5(while_mul_25_cmp_iden_5),
      .while_mul_25_cmp_oswt_unreg_3(while_mul_25_cmp_oswt_unreg_3),
      .while_mul_25_cmp_iswt5_3(while_mul_25_cmp_iswt5_3),
      .while_mul_25_cmp_iden_7(while_mul_25_cmp_iden_7),
      .run_cgwt_15(run_cgwt_15),
      .while_mul_25_cmp_bdwt(while_mul_25_cmp_bdwt),
      .while_mul_25_cmp_bdwt_2(while_mul_25_cmp_bdwt_2),
      .while_mul_25_cmp_bdwt_4(while_mul_25_cmp_bdwt_4),
      .while_mul_25_cmp_bdwt_6(while_mul_25_cmp_bdwt_6),
      .while_mul_25_cmp_iswt5_3_pff(while_mul_25_cmp_iswt5_3_pff),
      .while_mul_25_cmp_iswt5_2_pff(while_mul_25_cmp_iswt5_2_pff),
      .while_mul_25_cmp_iswt5_1_pff(while_mul_25_cmp_iswt5_1_pff),
      .while_mul_25_cmp_iswt5_pff(while_mul_25_cmp_iswt5_pff)
    );
  Rotate_run_while_mul_25_cmp_mgc_mul_pipe_65_1_113_1_178_1_1_0_0_6_1_wait_dp Rotate_run_while_mul_25_cmp_mgc_mul_pipe_65_1_113_1_178_1_1_0_0_6_1_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .while_mul_25_cmp_bawt(while_mul_25_cmp_bawt),
      .while_mul_25_cmp_iden(while_mul_25_cmp_iden),
      .while_mul_25_cmp_iden_2(while_mul_25_cmp_iden_2),
      .while_mul_25_cmp_iden_4(while_mul_25_cmp_iden_4),
      .while_mul_25_cmp_iden_6(while_mul_25_cmp_iden_6),
      .while_mul_25_cmp_z_mxwt(while_mul_25_cmp_z_mxwt),
      .while_mul_25_cmp_z_mxwt_1(while_mul_25_cmp_z_mxwt_1),
      .while_mul_25_cmp_z_mxwt_2(while_mul_25_cmp_z_mxwt_2_pconst),
      .while_mul_25_cmp_z_mxwt_3(while_mul_25_cmp_z_mxwt_3_pconst),
      .while_mul_25_cmp_biwt(while_mul_25_cmp_iden_1),
      .while_mul_25_cmp_bdwt(while_mul_25_cmp_bdwt),
      .while_mul_25_cmp_biwt_2(while_mul_25_cmp_iden_3),
      .while_mul_25_cmp_bdwt_2(while_mul_25_cmp_bdwt_2),
      .while_mul_25_cmp_biwt_4(while_mul_25_cmp_iden_5),
      .while_mul_25_cmp_bdwt_4(while_mul_25_cmp_bdwt_4),
      .while_mul_25_cmp_biwt_6(while_mul_25_cmp_iden_7),
      .while_mul_25_cmp_bdwt_6(while_mul_25_cmp_bdwt_6),
      .while_mul_25_cmp_z(while_mul_25_cmp_z)
    );
  assign while_mul_25_cmp_z_mxwt_2 = while_mul_25_cmp_z_mxwt_2_pconst;
  assign while_mul_25_cmp_z_mxwt_3 = while_mul_25_cmp_z_mxwt_3_pconst;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_36_cmp
// ------------------------------------------------------------------


module Rotate_run_while_mul_36_cmp (
  clk, rst, run_wen, run_wten, while_mul_36_cmp_oswt_unreg, while_mul_36_cmp_bawt,
      while_mul_36_cmp_iden, while_mul_36_cmp_iswt3, while_mul_36_cmp_iden_1, while_mul_36_cmp_oswt_unreg_1,
      while_mul_36_cmp_iden_2, while_mul_36_cmp_iswt3_1, while_mul_36_cmp_iden_3,
      while_mul_36_cmp_b_run, while_mul_36_cmp_z_mxwt, while_mul_36_cmp_z_mxwt_1,
      while_mul_36_cmp_iswt3_1_pff, while_mul_36_cmp_iswt3_pff, while_mul_36_cmp_a_run_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_36_cmp_oswt_unreg;
  output while_mul_36_cmp_bawt;
  output while_mul_36_cmp_iden;
  input while_mul_36_cmp_iswt3;
  output while_mul_36_cmp_iden_1;
  input while_mul_36_cmp_oswt_unreg_1;
  output while_mul_36_cmp_iden_2;
  input while_mul_36_cmp_iswt3_1;
  output while_mul_36_cmp_iden_3;
  input [63:0] while_mul_36_cmp_b_run;
  output [112:0] while_mul_36_cmp_z_mxwt;
  output [112:0] while_mul_36_cmp_z_mxwt_1;
  input while_mul_36_cmp_iswt3_1_pff;
  input while_mul_36_cmp_iswt3_pff;
  input [48:0] while_mul_36_cmp_a_run_pff;


  // Interconnect Declarations
  wire while_mul_36_cmp_bdwt;
  wire while_mul_36_cmp_bdwt_2;
  wire [112:0] while_mul_36_cmp_z;
  wire run_cgwt_14;


  // Interconnect Declarations for Component Instantiations 
  wire [48:0] nl_while_mul_36_cmp_a;
  assign nl_while_mul_36_cmp_a = {1'b1 , (while_mul_36_cmp_a_run_pff[47]) , 5'b01110
      , (while_mul_36_cmp_a_run_pff[41]) , 1'b1 , (while_mul_36_cmp_a_run_pff[39:37])
      , 1'b0 , (while_mul_36_cmp_a_run_pff[35:32]) , 1'b1 , (while_mul_36_cmp_a_run_pff[30])
      , 2'b10 , (while_mul_36_cmp_a_run_pff[27:25]) , 2'b00 , (while_mul_36_cmp_a_run_pff[22:21])
      , 1'b0 , (while_mul_36_cmp_a_run_pff[19]) , 3'b101 , (while_mul_36_cmp_a_run_pff[15:12])
      , 4'b0010 , (while_mul_36_cmp_a_run_pff[7]) , 3'b011 , (while_mul_36_cmp_a_run_pff[3])
      , 3'b001};
  mgc_mul_pipe #(.width_a(32'sd49),
  .signd_a(32'sd0),
  .width_b(32'sd64),
  .signd_b(32'sd1),
  .width_z(32'sd113),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd0),
  .stages(32'sd4),
  .n_inreg(32'sd1)) while_mul_36_cmp (
      .a(nl_while_mul_36_cmp_a[48:0]),
      .b(while_mul_36_cmp_b_run),
      .clk(clk),
      .en(run_cgwt_14),
      .a_rst(rst),
      .s_rst(1'b1),
      .z(while_mul_36_cmp_z)
    );
  Rotate_run_while_mul_36_cmp_mgc_mul_pipe_49_0_64_1_113_1_1_0_0_4_1_wait_ctrl Rotate_run_while_mul_36_cmp_mgc_mul_pipe_49_0_64_1_113_1_1_0_0_4_1_wait_ctrl_inst
      (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_36_cmp_oswt_unreg(while_mul_36_cmp_oswt_unreg),
      .while_mul_36_cmp_iswt3(while_mul_36_cmp_iswt3),
      .while_mul_36_cmp_iden_1(while_mul_36_cmp_iden_1),
      .while_mul_36_cmp_oswt_unreg_1(while_mul_36_cmp_oswt_unreg_1),
      .while_mul_36_cmp_iswt3_1(while_mul_36_cmp_iswt3_1),
      .while_mul_36_cmp_iden_3(while_mul_36_cmp_iden_3),
      .run_cgwt_14(run_cgwt_14),
      .while_mul_36_cmp_bdwt(while_mul_36_cmp_bdwt),
      .while_mul_36_cmp_bdwt_2(while_mul_36_cmp_bdwt_2),
      .while_mul_36_cmp_iswt3_1_pff(while_mul_36_cmp_iswt3_1_pff),
      .while_mul_36_cmp_iswt3_pff(while_mul_36_cmp_iswt3_pff)
    );
  Rotate_run_while_mul_36_cmp_mgc_mul_pipe_49_0_64_1_113_1_1_0_0_4_1_wait_dp Rotate_run_while_mul_36_cmp_mgc_mul_pipe_49_0_64_1_113_1_1_0_0_4_1_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .while_mul_36_cmp_bawt(while_mul_36_cmp_bawt),
      .while_mul_36_cmp_iden(while_mul_36_cmp_iden),
      .while_mul_36_cmp_iden_2(while_mul_36_cmp_iden_2),
      .while_mul_36_cmp_z_mxwt(while_mul_36_cmp_z_mxwt),
      .while_mul_36_cmp_z_mxwt_1(while_mul_36_cmp_z_mxwt_1),
      .while_mul_36_cmp_biwt(while_mul_36_cmp_iden_1),
      .while_mul_36_cmp_bdwt(while_mul_36_cmp_bdwt),
      .while_mul_36_cmp_biwt_2(while_mul_36_cmp_iden_3),
      .while_mul_36_cmp_bdwt_2(while_mul_36_cmp_bdwt_2),
      .while_mul_36_cmp_z(while_mul_36_cmp_z)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_34_cmp_1
// ------------------------------------------------------------------


module Rotate_run_while_mul_34_cmp_1 (
  clk, rst, run_wen, run_wten, while_mul_34_cmp_1_oswt_unreg, while_mul_34_cmp_1_bawt,
      while_mul_34_cmp_1_iden, while_mul_34_cmp_1_iswt7, while_mul_34_cmp_1_iden_1,
      while_mul_34_cmp_1_oswt_unreg_1, while_mul_34_cmp_1_iden_2, while_mul_34_cmp_1_iswt7_1,
      while_mul_34_cmp_1_iden_3, while_mul_34_cmp_1_oswt_unreg_2, while_mul_34_cmp_1_iden_4,
      while_mul_34_cmp_1_iswt7_2, while_mul_34_cmp_1_iden_5, while_mul_34_cmp_1_a_run,
      while_mul_34_cmp_1_b_run, while_mul_34_cmp_1_z_mxwt, while_mul_34_cmp_1_z_mxwt_1,
      while_mul_34_cmp_1_z_mxwt_2, while_mul_34_cmp_1_iswt7_2_pff, while_mul_34_cmp_1_iswt7_1_pff,
      while_mul_34_cmp_1_iswt7_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_34_cmp_1_oswt_unreg;
  output while_mul_34_cmp_1_bawt;
  output while_mul_34_cmp_1_iden;
  input while_mul_34_cmp_1_iswt7;
  output while_mul_34_cmp_1_iden_1;
  input while_mul_34_cmp_1_oswt_unreg_1;
  output while_mul_34_cmp_1_iden_2;
  input while_mul_34_cmp_1_iswt7_1;
  output while_mul_34_cmp_1_iden_3;
  input while_mul_34_cmp_1_oswt_unreg_2;
  output while_mul_34_cmp_1_iden_4;
  input while_mul_34_cmp_1_iswt7_2;
  output while_mul_34_cmp_1_iden_5;
  input [63:0] while_mul_34_cmp_1_a_run;
  input [177:0] while_mul_34_cmp_1_b_run;
  output [209:0] while_mul_34_cmp_1_z_mxwt;
  output [206:0] while_mul_34_cmp_1_z_mxwt_1;
  output [207:0] while_mul_34_cmp_1_z_mxwt_2;
  input while_mul_34_cmp_1_iswt7_2_pff;
  input while_mul_34_cmp_1_iswt7_1_pff;
  input while_mul_34_cmp_1_iswt7_pff;


  // Interconnect Declarations
  wire while_mul_34_cmp_1_bdwt;
  wire while_mul_34_cmp_1_bdwt_2;
  wire while_mul_34_cmp_1_bdwt_4;
  wire [209:0] while_mul_34_cmp_1_z;
  wire [206:0] while_mul_34_cmp_1_z_mxwt_1_pconst;
  wire [207:0] while_mul_34_cmp_1_z_mxwt_2_pconst;
  wire run_cgwt_13;


  // Interconnect Declarations for Component Instantiations 
  mgc_mul_pipe #(.width_a(32'sd64),
  .signd_a(32'sd1),
  .width_b(32'sd178),
  .signd_b(32'sd1),
  .width_z(32'sd210),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd0),
  .stages(32'sd8),
  .n_inreg(32'sd1)) while_mul_34_cmp_1 (
      .a(while_mul_34_cmp_1_a_run),
      .b(while_mul_34_cmp_1_b_run),
      .clk(clk),
      .en(run_cgwt_13),
      .a_rst(rst),
      .s_rst(1'b1),
      .z(while_mul_34_cmp_1_z)
    );
  Rotate_run_while_mul_34_cmp_1_mgc_mul_pipe_64_1_178_1_210_1_1_0_0_8_1_wait_ctrl_1
      Rotate_run_while_mul_34_cmp_1_mgc_mul_pipe_64_1_178_1_210_1_1_0_0_8_1_wait_ctrl_1_inst
      (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_34_cmp_1_oswt_unreg(while_mul_34_cmp_1_oswt_unreg),
      .while_mul_34_cmp_1_iswt7(while_mul_34_cmp_1_iswt7),
      .while_mul_34_cmp_1_iden_1(while_mul_34_cmp_1_iden_1),
      .while_mul_34_cmp_1_oswt_unreg_1(while_mul_34_cmp_1_oswt_unreg_1),
      .while_mul_34_cmp_1_iswt7_1(while_mul_34_cmp_1_iswt7_1),
      .while_mul_34_cmp_1_iden_3(while_mul_34_cmp_1_iden_3),
      .while_mul_34_cmp_1_oswt_unreg_2(while_mul_34_cmp_1_oswt_unreg_2),
      .while_mul_34_cmp_1_iswt7_2(while_mul_34_cmp_1_iswt7_2),
      .while_mul_34_cmp_1_iden_5(while_mul_34_cmp_1_iden_5),
      .run_cgwt_13(run_cgwt_13),
      .while_mul_34_cmp_1_bdwt(while_mul_34_cmp_1_bdwt),
      .while_mul_34_cmp_1_bdwt_2(while_mul_34_cmp_1_bdwt_2),
      .while_mul_34_cmp_1_bdwt_4(while_mul_34_cmp_1_bdwt_4),
      .while_mul_34_cmp_1_iswt7_2_pff(while_mul_34_cmp_1_iswt7_2_pff),
      .while_mul_34_cmp_1_iswt7_1_pff(while_mul_34_cmp_1_iswt7_1_pff),
      .while_mul_34_cmp_1_iswt7_pff(while_mul_34_cmp_1_iswt7_pff)
    );
  Rotate_run_while_mul_34_cmp_1_mgc_mul_pipe_64_1_178_1_210_1_1_0_0_8_1_wait_dp_1
      Rotate_run_while_mul_34_cmp_1_mgc_mul_pipe_64_1_178_1_210_1_1_0_0_8_1_wait_dp_1_inst
      (
      .clk(clk),
      .rst(rst),
      .while_mul_34_cmp_1_bawt(while_mul_34_cmp_1_bawt),
      .while_mul_34_cmp_1_iden(while_mul_34_cmp_1_iden),
      .while_mul_34_cmp_1_iden_2(while_mul_34_cmp_1_iden_2),
      .while_mul_34_cmp_1_iden_4(while_mul_34_cmp_1_iden_4),
      .while_mul_34_cmp_1_z_mxwt(while_mul_34_cmp_1_z_mxwt),
      .while_mul_34_cmp_1_z_mxwt_1(while_mul_34_cmp_1_z_mxwt_1_pconst),
      .while_mul_34_cmp_1_z_mxwt_2(while_mul_34_cmp_1_z_mxwt_2_pconst),
      .while_mul_34_cmp_1_biwt(while_mul_34_cmp_1_iden_1),
      .while_mul_34_cmp_1_bdwt(while_mul_34_cmp_1_bdwt),
      .while_mul_34_cmp_1_biwt_2(while_mul_34_cmp_1_iden_3),
      .while_mul_34_cmp_1_bdwt_2(while_mul_34_cmp_1_bdwt_2),
      .while_mul_34_cmp_1_biwt_4(while_mul_34_cmp_1_iden_5),
      .while_mul_34_cmp_1_bdwt_4(while_mul_34_cmp_1_bdwt_4),
      .while_mul_34_cmp_1_z(while_mul_34_cmp_1_z)
    );
  assign while_mul_34_cmp_1_z_mxwt_1 = while_mul_34_cmp_1_z_mxwt_1_pconst;
  assign while_mul_34_cmp_1_z_mxwt_2 = while_mul_34_cmp_1_z_mxwt_2_pconst;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_34_cmp
// ------------------------------------------------------------------


module Rotate_run_while_mul_34_cmp (
  clk, rst, run_wen, run_wten, while_mul_34_cmp_oswt_unreg, while_mul_34_cmp_bawt,
      while_mul_34_cmp_iden, while_mul_34_cmp_iswt7, while_mul_34_cmp_iden_1, while_mul_34_cmp_oswt_unreg_1,
      while_mul_34_cmp_iden_2, while_mul_34_cmp_iswt7_1, while_mul_34_cmp_iden_3,
      while_mul_34_cmp_a_run, while_mul_34_cmp_b_run, while_mul_34_cmp_z_mxwt, while_mul_34_cmp_z_mxwt_1,
      while_mul_34_cmp_iswt7_1_pff, while_mul_34_cmp_iswt7_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_34_cmp_oswt_unreg;
  output while_mul_34_cmp_bawt;
  output while_mul_34_cmp_iden;
  input while_mul_34_cmp_iswt7;
  output while_mul_34_cmp_iden_1;
  input while_mul_34_cmp_oswt_unreg_1;
  output while_mul_34_cmp_iden_2;
  input while_mul_34_cmp_iswt7_1;
  output while_mul_34_cmp_iden_3;
  input [63:0] while_mul_34_cmp_a_run;
  input [177:0] while_mul_34_cmp_b_run;
  output [209:0] while_mul_34_cmp_z_mxwt;
  output [207:0] while_mul_34_cmp_z_mxwt_1;
  input while_mul_34_cmp_iswt7_1_pff;
  input while_mul_34_cmp_iswt7_pff;


  // Interconnect Declarations
  wire while_mul_34_cmp_bdwt;
  wire while_mul_34_cmp_bdwt_2;
  wire [209:0] while_mul_34_cmp_z;
  wire [207:0] while_mul_34_cmp_z_mxwt_1_pconst;
  wire run_cgwt_12;


  // Interconnect Declarations for Component Instantiations 
  mgc_mul_pipe #(.width_a(32'sd64),
  .signd_a(32'sd1),
  .width_b(32'sd178),
  .signd_b(32'sd1),
  .width_z(32'sd210),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd0),
  .stages(32'sd8),
  .n_inreg(32'sd1)) while_mul_34_cmp (
      .a(while_mul_34_cmp_a_run),
      .b(while_mul_34_cmp_b_run),
      .clk(clk),
      .en(run_cgwt_12),
      .a_rst(rst),
      .s_rst(1'b1),
      .z(while_mul_34_cmp_z)
    );
  Rotate_run_while_mul_34_cmp_mgc_mul_pipe_64_1_178_1_210_1_1_0_0_8_1_wait_ctrl Rotate_run_while_mul_34_cmp_mgc_mul_pipe_64_1_178_1_210_1_1_0_0_8_1_wait_ctrl_inst
      (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_34_cmp_oswt_unreg(while_mul_34_cmp_oswt_unreg),
      .while_mul_34_cmp_iswt7(while_mul_34_cmp_iswt7),
      .while_mul_34_cmp_iden_1(while_mul_34_cmp_iden_1),
      .while_mul_34_cmp_oswt_unreg_1(while_mul_34_cmp_oswt_unreg_1),
      .while_mul_34_cmp_iswt7_1(while_mul_34_cmp_iswt7_1),
      .while_mul_34_cmp_iden_3(while_mul_34_cmp_iden_3),
      .run_cgwt_12(run_cgwt_12),
      .while_mul_34_cmp_bdwt(while_mul_34_cmp_bdwt),
      .while_mul_34_cmp_bdwt_2(while_mul_34_cmp_bdwt_2),
      .while_mul_34_cmp_iswt7_1_pff(while_mul_34_cmp_iswt7_1_pff),
      .while_mul_34_cmp_iswt7_pff(while_mul_34_cmp_iswt7_pff)
    );
  Rotate_run_while_mul_34_cmp_mgc_mul_pipe_64_1_178_1_210_1_1_0_0_8_1_wait_dp Rotate_run_while_mul_34_cmp_mgc_mul_pipe_64_1_178_1_210_1_1_0_0_8_1_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .while_mul_34_cmp_bawt(while_mul_34_cmp_bawt),
      .while_mul_34_cmp_iden(while_mul_34_cmp_iden),
      .while_mul_34_cmp_iden_2(while_mul_34_cmp_iden_2),
      .while_mul_34_cmp_z_mxwt(while_mul_34_cmp_z_mxwt),
      .while_mul_34_cmp_z_mxwt_1(while_mul_34_cmp_z_mxwt_1_pconst),
      .while_mul_34_cmp_biwt(while_mul_34_cmp_iden_1),
      .while_mul_34_cmp_bdwt(while_mul_34_cmp_bdwt),
      .while_mul_34_cmp_biwt_2(while_mul_34_cmp_iden_3),
      .while_mul_34_cmp_bdwt_2(while_mul_34_cmp_bdwt_2),
      .while_mul_34_cmp_z(while_mul_34_cmp_z)
    );
  assign while_mul_34_cmp_z_mxwt_1 = while_mul_34_cmp_z_mxwt_1_pconst;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_37_cmp
// ------------------------------------------------------------------


module Rotate_run_while_mul_37_cmp (
  clk, rst, run_wen, run_wten, while_mul_37_cmp_oswt_unreg, while_mul_37_cmp_bawt,
      while_mul_37_cmp_iden, while_mul_37_cmp_iswt5, while_mul_37_cmp_iden_1, while_mul_37_cmp_oswt_unreg_1,
      while_mul_37_cmp_iden_2, while_mul_37_cmp_iswt5_1, while_mul_37_cmp_iden_3,
      while_mul_37_cmp_a_run, while_mul_37_cmp_b_run, while_mul_37_cmp_z_mxwt, while_mul_37_cmp_z_mxwt_1,
      while_mul_37_cmp_iswt5_1_pff, while_mul_37_cmp_iswt5_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_37_cmp_oswt_unreg;
  output while_mul_37_cmp_bawt;
  output while_mul_37_cmp_iden;
  input while_mul_37_cmp_iswt5;
  output while_mul_37_cmp_iden_1;
  input while_mul_37_cmp_oswt_unreg_1;
  output while_mul_37_cmp_iden_2;
  input while_mul_37_cmp_iswt5_1;
  output while_mul_37_cmp_iden_3;
  input [67:0] while_mul_37_cmp_a_run;
  input [127:0] while_mul_37_cmp_b_run;
  output [161:0] while_mul_37_cmp_z_mxwt;
  output [159:0] while_mul_37_cmp_z_mxwt_1;
  input while_mul_37_cmp_iswt5_1_pff;
  input while_mul_37_cmp_iswt5_pff;


  // Interconnect Declarations
  wire while_mul_37_cmp_bdwt;
  wire while_mul_37_cmp_bdwt_2;
  wire [161:0] while_mul_37_cmp_z;
  wire [159:0] while_mul_37_cmp_z_mxwt_1_pconst;
  wire run_cgwt_11;


  // Interconnect Declarations for Component Instantiations 
  mgc_mul_pipe #(.width_a(32'sd68),
  .signd_a(32'sd1),
  .width_b(32'sd128),
  .signd_b(32'sd1),
  .width_z(32'sd162),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd0),
  .stages(32'sd6),
  .n_inreg(32'sd1)) while_mul_37_cmp (
      .a(while_mul_37_cmp_a_run),
      .b(while_mul_37_cmp_b_run),
      .clk(clk),
      .en(run_cgwt_11),
      .a_rst(rst),
      .s_rst(1'b1),
      .z(while_mul_37_cmp_z)
    );
  Rotate_run_while_mul_37_cmp_mgc_mul_pipe_68_1_128_1_162_1_1_0_0_6_1_wait_ctrl Rotate_run_while_mul_37_cmp_mgc_mul_pipe_68_1_128_1_162_1_1_0_0_6_1_wait_ctrl_inst
      (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_37_cmp_oswt_unreg(while_mul_37_cmp_oswt_unreg),
      .while_mul_37_cmp_iswt5(while_mul_37_cmp_iswt5),
      .while_mul_37_cmp_iden_1(while_mul_37_cmp_iden_1),
      .while_mul_37_cmp_oswt_unreg_1(while_mul_37_cmp_oswt_unreg_1),
      .while_mul_37_cmp_iswt5_1(while_mul_37_cmp_iswt5_1),
      .while_mul_37_cmp_iden_3(while_mul_37_cmp_iden_3),
      .run_cgwt_11(run_cgwt_11),
      .while_mul_37_cmp_bdwt(while_mul_37_cmp_bdwt),
      .while_mul_37_cmp_bdwt_2(while_mul_37_cmp_bdwt_2),
      .while_mul_37_cmp_iswt5_1_pff(while_mul_37_cmp_iswt5_1_pff),
      .while_mul_37_cmp_iswt5_pff(while_mul_37_cmp_iswt5_pff)
    );
  Rotate_run_while_mul_37_cmp_mgc_mul_pipe_68_1_128_1_162_1_1_0_0_6_1_wait_dp Rotate_run_while_mul_37_cmp_mgc_mul_pipe_68_1_128_1_162_1_1_0_0_6_1_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .while_mul_37_cmp_bawt(while_mul_37_cmp_bawt),
      .while_mul_37_cmp_iden(while_mul_37_cmp_iden),
      .while_mul_37_cmp_iden_2(while_mul_37_cmp_iden_2),
      .while_mul_37_cmp_z_mxwt(while_mul_37_cmp_z_mxwt),
      .while_mul_37_cmp_z_mxwt_1(while_mul_37_cmp_z_mxwt_1_pconst),
      .while_mul_37_cmp_biwt(while_mul_37_cmp_iden_1),
      .while_mul_37_cmp_bdwt(while_mul_37_cmp_bdwt),
      .while_mul_37_cmp_biwt_2(while_mul_37_cmp_iden_3),
      .while_mul_37_cmp_bdwt_2(while_mul_37_cmp_bdwt_2),
      .while_mul_37_cmp_z(while_mul_37_cmp_z)
    );
  assign while_mul_37_cmp_z_mxwt_1 = while_mul_37_cmp_z_mxwt_1_pconst;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_44_cmp
// ------------------------------------------------------------------


module Rotate_run_while_mul_44_cmp (
  clk, rst, run_wen, run_wten, while_mul_44_cmp_oswt_unreg, while_mul_44_cmp_bawt,
      while_mul_44_cmp_iden, while_mul_44_cmp_iswt5, while_mul_44_cmp_iden_1, while_mul_44_cmp_oswt_unreg_1,
      while_mul_44_cmp_iden_2, while_mul_44_cmp_iswt5_1, while_mul_44_cmp_iden_3,
      while_mul_44_cmp_a_run, while_mul_44_cmp_b_run, while_mul_44_cmp_z_mxwt, while_mul_44_cmp_z_mxwt_1,
      while_mul_44_cmp_iswt5_1_pff, while_mul_44_cmp_iswt5_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_44_cmp_oswt_unreg;
  output while_mul_44_cmp_bawt;
  output while_mul_44_cmp_iden;
  input while_mul_44_cmp_iswt5;
  output while_mul_44_cmp_iden_1;
  input while_mul_44_cmp_oswt_unreg_1;
  output while_mul_44_cmp_iden_2;
  input while_mul_44_cmp_iswt5_1;
  output while_mul_44_cmp_iden_3;
  input [63:0] while_mul_44_cmp_a_run;
  input [112:0] while_mul_44_cmp_b_run;
  output [176:0] while_mul_44_cmp_z_mxwt;
  output [176:0] while_mul_44_cmp_z_mxwt_1;
  input while_mul_44_cmp_iswt5_1_pff;
  input while_mul_44_cmp_iswt5_pff;


  // Interconnect Declarations
  wire while_mul_44_cmp_bdwt;
  wire while_mul_44_cmp_bdwt_2;
  wire [176:0] while_mul_44_cmp_z;
  wire run_cgwt_10;


  // Interconnect Declarations for Component Instantiations 
  mgc_mul_pipe #(.width_a(32'sd64),
  .signd_a(32'sd1),
  .width_b(32'sd113),
  .signd_b(32'sd1),
  .width_z(32'sd177),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd0),
  .stages(32'sd6),
  .n_inreg(32'sd1)) while_mul_44_cmp (
      .a(while_mul_44_cmp_a_run),
      .b(while_mul_44_cmp_b_run),
      .clk(clk),
      .en(run_cgwt_10),
      .a_rst(rst),
      .s_rst(1'b1),
      .z(while_mul_44_cmp_z)
    );
  Rotate_run_while_mul_44_cmp_mgc_mul_pipe_64_1_113_1_177_1_1_0_0_6_1_wait_ctrl Rotate_run_while_mul_44_cmp_mgc_mul_pipe_64_1_113_1_177_1_1_0_0_6_1_wait_ctrl_inst
      (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_44_cmp_oswt_unreg(while_mul_44_cmp_oswt_unreg),
      .while_mul_44_cmp_iswt5(while_mul_44_cmp_iswt5),
      .while_mul_44_cmp_iden_1(while_mul_44_cmp_iden_1),
      .while_mul_44_cmp_oswt_unreg_1(while_mul_44_cmp_oswt_unreg_1),
      .while_mul_44_cmp_iswt5_1(while_mul_44_cmp_iswt5_1),
      .while_mul_44_cmp_iden_3(while_mul_44_cmp_iden_3),
      .run_cgwt_10(run_cgwt_10),
      .while_mul_44_cmp_bdwt(while_mul_44_cmp_bdwt),
      .while_mul_44_cmp_bdwt_2(while_mul_44_cmp_bdwt_2),
      .while_mul_44_cmp_iswt5_1_pff(while_mul_44_cmp_iswt5_1_pff),
      .while_mul_44_cmp_iswt5_pff(while_mul_44_cmp_iswt5_pff)
    );
  Rotate_run_while_mul_44_cmp_mgc_mul_pipe_64_1_113_1_177_1_1_0_0_6_1_wait_dp Rotate_run_while_mul_44_cmp_mgc_mul_pipe_64_1_113_1_177_1_1_0_0_6_1_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .while_mul_44_cmp_bawt(while_mul_44_cmp_bawt),
      .while_mul_44_cmp_iden(while_mul_44_cmp_iden),
      .while_mul_44_cmp_iden_2(while_mul_44_cmp_iden_2),
      .while_mul_44_cmp_z_mxwt(while_mul_44_cmp_z_mxwt),
      .while_mul_44_cmp_z_mxwt_1(while_mul_44_cmp_z_mxwt_1),
      .while_mul_44_cmp_biwt(while_mul_44_cmp_iden_1),
      .while_mul_44_cmp_bdwt(while_mul_44_cmp_bdwt),
      .while_mul_44_cmp_biwt_2(while_mul_44_cmp_iden_3),
      .while_mul_44_cmp_bdwt_2(while_mul_44_cmp_bdwt_2),
      .while_mul_44_cmp_z(while_mul_44_cmp_z)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_73_cmp
// ------------------------------------------------------------------


module Rotate_run_while_mul_73_cmp (
  clk, rst, run_wen, run_wten, while_mul_73_cmp_oswt_unreg, while_mul_73_cmp_bawt,
      while_mul_73_cmp_iden, while_mul_73_cmp_iswt5, while_mul_73_cmp_iden_1, while_mul_73_cmp_oswt_unreg_1,
      while_mul_73_cmp_iden_2, while_mul_73_cmp_iswt5_1, while_mul_73_cmp_iden_3,
      while_mul_73_cmp_a_run, while_mul_73_cmp_b_run, while_mul_73_cmp_z_mxwt, while_mul_73_cmp_z_mxwt_1,
      while_mul_73_cmp_iswt5_1_pff, while_mul_73_cmp_iswt5_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_73_cmp_oswt_unreg;
  output while_mul_73_cmp_bawt;
  output while_mul_73_cmp_iden;
  input while_mul_73_cmp_iswt5;
  output while_mul_73_cmp_iden_1;
  input while_mul_73_cmp_oswt_unreg_1;
  output while_mul_73_cmp_iden_2;
  input while_mul_73_cmp_iswt5_1;
  output while_mul_73_cmp_iden_3;
  input [63:0] while_mul_73_cmp_a_run;
  input [113:0] while_mul_73_cmp_b_run;
  output [177:0] while_mul_73_cmp_z_mxwt;
  output [177:0] while_mul_73_cmp_z_mxwt_1;
  input while_mul_73_cmp_iswt5_1_pff;
  input while_mul_73_cmp_iswt5_pff;


  // Interconnect Declarations
  wire while_mul_73_cmp_bdwt;
  wire while_mul_73_cmp_bdwt_2;
  wire [177:0] while_mul_73_cmp_z;
  wire run_cgwt_9;


  // Interconnect Declarations for Component Instantiations 
  mgc_mul_pipe #(.width_a(32'sd64),
  .signd_a(32'sd1),
  .width_b(32'sd114),
  .signd_b(32'sd1),
  .width_z(32'sd178),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd0),
  .stages(32'sd6),
  .n_inreg(32'sd1)) while_mul_73_cmp (
      .a(while_mul_73_cmp_a_run),
      .b(while_mul_73_cmp_b_run),
      .clk(clk),
      .en(run_cgwt_9),
      .a_rst(rst),
      .s_rst(1'b1),
      .z(while_mul_73_cmp_z)
    );
  Rotate_run_while_mul_73_cmp_mgc_mul_pipe_64_1_114_1_178_1_1_0_0_6_1_wait_ctrl Rotate_run_while_mul_73_cmp_mgc_mul_pipe_64_1_114_1_178_1_1_0_0_6_1_wait_ctrl_inst
      (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_73_cmp_oswt_unreg(while_mul_73_cmp_oswt_unreg),
      .while_mul_73_cmp_iswt5(while_mul_73_cmp_iswt5),
      .while_mul_73_cmp_iden_1(while_mul_73_cmp_iden_1),
      .while_mul_73_cmp_oswt_unreg_1(while_mul_73_cmp_oswt_unreg_1),
      .while_mul_73_cmp_iswt5_1(while_mul_73_cmp_iswt5_1),
      .while_mul_73_cmp_iden_3(while_mul_73_cmp_iden_3),
      .run_cgwt_9(run_cgwt_9),
      .while_mul_73_cmp_bdwt(while_mul_73_cmp_bdwt),
      .while_mul_73_cmp_bdwt_2(while_mul_73_cmp_bdwt_2),
      .while_mul_73_cmp_iswt5_1_pff(while_mul_73_cmp_iswt5_1_pff),
      .while_mul_73_cmp_iswt5_pff(while_mul_73_cmp_iswt5_pff)
    );
  Rotate_run_while_mul_73_cmp_mgc_mul_pipe_64_1_114_1_178_1_1_0_0_6_1_wait_dp Rotate_run_while_mul_73_cmp_mgc_mul_pipe_64_1_114_1_178_1_1_0_0_6_1_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .while_mul_73_cmp_bawt(while_mul_73_cmp_bawt),
      .while_mul_73_cmp_iden(while_mul_73_cmp_iden),
      .while_mul_73_cmp_iden_2(while_mul_73_cmp_iden_2),
      .while_mul_73_cmp_z_mxwt(while_mul_73_cmp_z_mxwt),
      .while_mul_73_cmp_z_mxwt_1(while_mul_73_cmp_z_mxwt_1),
      .while_mul_73_cmp_biwt(while_mul_73_cmp_iden_1),
      .while_mul_73_cmp_bdwt(while_mul_73_cmp_bdwt),
      .while_mul_73_cmp_biwt_2(while_mul_73_cmp_iden_3),
      .while_mul_73_cmp_bdwt_2(while_mul_73_cmp_bdwt_2),
      .while_mul_73_cmp_z(while_mul_73_cmp_z)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_67_cmp
// ------------------------------------------------------------------


module Rotate_run_while_mul_67_cmp (
  clk, rst, run_wen, run_wten, while_mul_67_cmp_oswt_unreg, while_mul_67_cmp_bawt,
      while_mul_67_cmp_iden, while_mul_67_cmp_iswt7, while_mul_67_cmp_iden_1, while_mul_67_cmp_oswt_unreg_1,
      while_mul_67_cmp_iden_2, while_mul_67_cmp_iswt7_1, while_mul_67_cmp_iden_3,
      while_mul_67_cmp_a_run, while_mul_67_cmp_b_run, while_mul_67_cmp_z_mxwt, while_mul_67_cmp_z_mxwt_1,
      while_mul_67_cmp_iswt7_1_pff, while_mul_67_cmp_iswt7_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_67_cmp_oswt_unreg;
  output while_mul_67_cmp_bawt;
  output while_mul_67_cmp_iden;
  input while_mul_67_cmp_iswt7;
  output while_mul_67_cmp_iden_1;
  input while_mul_67_cmp_oswt_unreg_1;
  output while_mul_67_cmp_iden_2;
  input while_mul_67_cmp_iswt7_1;
  output while_mul_67_cmp_iden_3;
  input [63:0] while_mul_67_cmp_a_run;
  input [176:0] while_mul_67_cmp_b_run;
  output [207:0] while_mul_67_cmp_z_mxwt;
  output [177:0] while_mul_67_cmp_z_mxwt_1;
  input while_mul_67_cmp_iswt7_1_pff;
  input while_mul_67_cmp_iswt7_pff;


  // Interconnect Declarations
  wire while_mul_67_cmp_bdwt;
  wire while_mul_67_cmp_bdwt_2;
  wire [207:0] while_mul_67_cmp_z;
  wire [177:0] while_mul_67_cmp_z_mxwt_1_pconst;
  wire run_cgwt_8;


  // Interconnect Declarations for Component Instantiations 
  mgc_mul_pipe #(.width_a(32'sd64),
  .signd_a(32'sd1),
  .width_b(32'sd177),
  .signd_b(32'sd1),
  .width_z(32'sd208),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd0),
  .stages(32'sd8),
  .n_inreg(32'sd1)) while_mul_67_cmp (
      .a(while_mul_67_cmp_a_run),
      .b(while_mul_67_cmp_b_run),
      .clk(clk),
      .en(run_cgwt_8),
      .a_rst(rst),
      .s_rst(1'b1),
      .z(while_mul_67_cmp_z)
    );
  Rotate_run_while_mul_67_cmp_mgc_mul_pipe_64_1_177_1_208_1_1_0_0_8_1_wait_ctrl Rotate_run_while_mul_67_cmp_mgc_mul_pipe_64_1_177_1_208_1_1_0_0_8_1_wait_ctrl_inst
      (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_67_cmp_oswt_unreg(while_mul_67_cmp_oswt_unreg),
      .while_mul_67_cmp_iswt7(while_mul_67_cmp_iswt7),
      .while_mul_67_cmp_iden_1(while_mul_67_cmp_iden_1),
      .while_mul_67_cmp_oswt_unreg_1(while_mul_67_cmp_oswt_unreg_1),
      .while_mul_67_cmp_iswt7_1(while_mul_67_cmp_iswt7_1),
      .while_mul_67_cmp_iden_3(while_mul_67_cmp_iden_3),
      .run_cgwt_8(run_cgwt_8),
      .while_mul_67_cmp_bdwt(while_mul_67_cmp_bdwt),
      .while_mul_67_cmp_bdwt_2(while_mul_67_cmp_bdwt_2),
      .while_mul_67_cmp_iswt7_1_pff(while_mul_67_cmp_iswt7_1_pff),
      .while_mul_67_cmp_iswt7_pff(while_mul_67_cmp_iswt7_pff)
    );
  Rotate_run_while_mul_67_cmp_mgc_mul_pipe_64_1_177_1_208_1_1_0_0_8_1_wait_dp Rotate_run_while_mul_67_cmp_mgc_mul_pipe_64_1_177_1_208_1_1_0_0_8_1_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .while_mul_67_cmp_bawt(while_mul_67_cmp_bawt),
      .while_mul_67_cmp_iden(while_mul_67_cmp_iden),
      .while_mul_67_cmp_iden_2(while_mul_67_cmp_iden_2),
      .while_mul_67_cmp_z_mxwt(while_mul_67_cmp_z_mxwt),
      .while_mul_67_cmp_z_mxwt_1(while_mul_67_cmp_z_mxwt_1_pconst),
      .while_mul_67_cmp_biwt(while_mul_67_cmp_iden_1),
      .while_mul_67_cmp_bdwt(while_mul_67_cmp_bdwt),
      .while_mul_67_cmp_biwt_2(while_mul_67_cmp_iden_3),
      .while_mul_67_cmp_bdwt_2(while_mul_67_cmp_bdwt_2),
      .while_mul_67_cmp_z(while_mul_67_cmp_z)
    );
  assign while_mul_67_cmp_z_mxwt_1 = while_mul_67_cmp_z_mxwt_1_pconst;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_while_mul_cmp
// ------------------------------------------------------------------


module Rotate_run_while_while_mul_cmp (
  clk, rst, run_wen, run_wten, while_while_mul_cmp_oswt_unreg, while_while_mul_cmp_bawt,
      while_while_mul_cmp_iden, while_while_mul_cmp_iswt9, while_while_mul_cmp_iden_1,
      while_while_mul_cmp_oswt_unreg_1, while_while_mul_cmp_iden_2, while_while_mul_cmp_iswt9_1,
      while_while_mul_cmp_iden_3, while_while_mul_cmp_a_run, while_while_mul_cmp_b_run,
      while_while_mul_cmp_z_mxwt, while_while_mul_cmp_z_mxwt_1, while_while_mul_cmp_iswt9_1_pff,
      while_while_mul_cmp_iswt9_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_while_mul_cmp_oswt_unreg;
  output while_while_mul_cmp_bawt;
  output while_while_mul_cmp_iden;
  input while_while_mul_cmp_iswt9;
  output while_while_mul_cmp_iden_1;
  input while_while_mul_cmp_oswt_unreg_1;
  output while_while_mul_cmp_iden_2;
  input while_while_mul_cmp_iswt9_1;
  output while_while_mul_cmp_iden_3;
  input [63:0] while_while_mul_cmp_a_run;
  input [239:0] while_while_mul_cmp_b_run;
  output [255:0] while_while_mul_cmp_z_mxwt;
  output [255:0] while_while_mul_cmp_z_mxwt_1;
  input while_while_mul_cmp_iswt9_1_pff;
  input while_while_mul_cmp_iswt9_pff;


  // Interconnect Declarations
  wire while_while_mul_cmp_bdwt;
  wire while_while_mul_cmp_bdwt_2;
  wire [255:0] while_while_mul_cmp_z;
  wire run_cgwt_7;


  // Interconnect Declarations for Component Instantiations 
  mgc_mul_pipe #(.width_a(32'sd64),
  .signd_a(32'sd1),
  .width_b(32'sd240),
  .signd_b(32'sd1),
  .width_z(32'sd256),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd0),
  .stages(32'sd10),
  .n_inreg(32'sd1)) while_while_mul_cmp (
      .a(while_while_mul_cmp_a_run),
      .b(while_while_mul_cmp_b_run),
      .clk(clk),
      .en(run_cgwt_7),
      .a_rst(rst),
      .s_rst(1'b1),
      .z(while_while_mul_cmp_z)
    );
  Rotate_run_while_while_mul_cmp_mgc_mul_pipe_64_1_240_1_256_1_1_0_0_10_1_wait_ctrl
      Rotate_run_while_while_mul_cmp_mgc_mul_pipe_64_1_240_1_256_1_1_0_0_10_1_wait_ctrl_inst
      (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_while_mul_cmp_oswt_unreg(while_while_mul_cmp_oswt_unreg),
      .while_while_mul_cmp_iswt9(while_while_mul_cmp_iswt9),
      .while_while_mul_cmp_iden_1(while_while_mul_cmp_iden_1),
      .while_while_mul_cmp_oswt_unreg_1(while_while_mul_cmp_oswt_unreg_1),
      .while_while_mul_cmp_iswt9_1(while_while_mul_cmp_iswt9_1),
      .while_while_mul_cmp_iden_3(while_while_mul_cmp_iden_3),
      .run_cgwt_7(run_cgwt_7),
      .while_while_mul_cmp_bdwt(while_while_mul_cmp_bdwt),
      .while_while_mul_cmp_bdwt_2(while_while_mul_cmp_bdwt_2),
      .while_while_mul_cmp_iswt9_1_pff(while_while_mul_cmp_iswt9_1_pff),
      .while_while_mul_cmp_iswt9_pff(while_while_mul_cmp_iswt9_pff)
    );
  Rotate_run_while_while_mul_cmp_mgc_mul_pipe_64_1_240_1_256_1_1_0_0_10_1_wait_dp
      Rotate_run_while_while_mul_cmp_mgc_mul_pipe_64_1_240_1_256_1_1_0_0_10_1_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .while_while_mul_cmp_bawt(while_while_mul_cmp_bawt),
      .while_while_mul_cmp_iden(while_while_mul_cmp_iden),
      .while_while_mul_cmp_iden_2(while_while_mul_cmp_iden_2),
      .while_while_mul_cmp_z_mxwt(while_while_mul_cmp_z_mxwt),
      .while_while_mul_cmp_z_mxwt_1(while_while_mul_cmp_z_mxwt_1),
      .while_while_mul_cmp_biwt(while_while_mul_cmp_iden_1),
      .while_while_mul_cmp_bdwt(while_while_mul_cmp_bdwt),
      .while_while_mul_cmp_biwt_2(while_while_mul_cmp_iden_3),
      .while_while_mul_cmp_bdwt_2(while_while_mul_cmp_bdwt_2),
      .while_while_mul_cmp_z(while_while_mul_cmp_z)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_70_cmp
// ------------------------------------------------------------------


module Rotate_run_while_mul_70_cmp (
  clk, rst, run_wen, run_wten, while_mul_70_cmp_oswt_unreg, while_mul_70_cmp_bawt,
      while_mul_70_cmp_iden, while_mul_70_cmp_iswt3, while_mul_70_cmp_iden_1, while_mul_70_cmp_oswt_unreg_1,
      while_mul_70_cmp_iden_2, while_mul_70_cmp_iswt3_1, while_mul_70_cmp_iden_3,
      while_mul_70_cmp_a_run, while_mul_70_cmp_b_run, while_mul_70_cmp_z_mxwt, while_mul_70_cmp_z_mxwt_1,
      while_mul_70_cmp_iswt3_1_pff, while_mul_70_cmp_iswt3_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_70_cmp_oswt_unreg;
  output while_mul_70_cmp_bawt;
  output while_mul_70_cmp_iden;
  input while_mul_70_cmp_iswt3;
  output while_mul_70_cmp_iden_1;
  input while_mul_70_cmp_oswt_unreg_1;
  output while_mul_70_cmp_iden_2;
  input while_mul_70_cmp_iswt3_1;
  output while_mul_70_cmp_iden_3;
  input [63:0] while_mul_70_cmp_a_run;
  input [66:0] while_mul_70_cmp_b_run;
  output [113:0] while_mul_70_cmp_z_mxwt;
  output [114:0] while_mul_70_cmp_z_mxwt_1;
  input while_mul_70_cmp_iswt3_1_pff;
  input while_mul_70_cmp_iswt3_pff;


  // Interconnect Declarations
  wire while_mul_70_cmp_bdwt;
  wire while_mul_70_cmp_bdwt_2;
  wire [114:0] while_mul_70_cmp_z;
  wire [113:0] while_mul_70_cmp_z_mxwt_pconst;
  wire run_cgwt_6;


  // Interconnect Declarations for Component Instantiations 
  mgc_mul_pipe #(.width_a(32'sd64),
  .signd_a(32'sd1),
  .width_b(32'sd67),
  .signd_b(32'sd1),
  .width_z(32'sd115),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd0),
  .stages(32'sd4),
  .n_inreg(32'sd1)) while_mul_70_cmp (
      .a(while_mul_70_cmp_a_run),
      .b(while_mul_70_cmp_b_run),
      .clk(clk),
      .en(run_cgwt_6),
      .a_rst(rst),
      .s_rst(1'b1),
      .z(while_mul_70_cmp_z)
    );
  Rotate_run_while_mul_70_cmp_mgc_mul_pipe_64_1_67_1_115_1_1_0_0_4_1_wait_ctrl Rotate_run_while_mul_70_cmp_mgc_mul_pipe_64_1_67_1_115_1_1_0_0_4_1_wait_ctrl_inst
      (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_70_cmp_oswt_unreg(while_mul_70_cmp_oswt_unreg),
      .while_mul_70_cmp_iswt3(while_mul_70_cmp_iswt3),
      .while_mul_70_cmp_iden_1(while_mul_70_cmp_iden_1),
      .while_mul_70_cmp_oswt_unreg_1(while_mul_70_cmp_oswt_unreg_1),
      .while_mul_70_cmp_iswt3_1(while_mul_70_cmp_iswt3_1),
      .while_mul_70_cmp_iden_3(while_mul_70_cmp_iden_3),
      .run_cgwt_6(run_cgwt_6),
      .while_mul_70_cmp_bdwt(while_mul_70_cmp_bdwt),
      .while_mul_70_cmp_bdwt_2(while_mul_70_cmp_bdwt_2),
      .while_mul_70_cmp_iswt3_1_pff(while_mul_70_cmp_iswt3_1_pff),
      .while_mul_70_cmp_iswt3_pff(while_mul_70_cmp_iswt3_pff)
    );
  Rotate_run_while_mul_70_cmp_mgc_mul_pipe_64_1_67_1_115_1_1_0_0_4_1_wait_dp Rotate_run_while_mul_70_cmp_mgc_mul_pipe_64_1_67_1_115_1_1_0_0_4_1_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .while_mul_70_cmp_bawt(while_mul_70_cmp_bawt),
      .while_mul_70_cmp_iden(while_mul_70_cmp_iden),
      .while_mul_70_cmp_iden_2(while_mul_70_cmp_iden_2),
      .while_mul_70_cmp_z_mxwt(while_mul_70_cmp_z_mxwt_pconst),
      .while_mul_70_cmp_z_mxwt_1(while_mul_70_cmp_z_mxwt_1),
      .while_mul_70_cmp_biwt(while_mul_70_cmp_iden_1),
      .while_mul_70_cmp_bdwt(while_mul_70_cmp_bdwt),
      .while_mul_70_cmp_biwt_2(while_mul_70_cmp_iden_3),
      .while_mul_70_cmp_bdwt_2(while_mul_70_cmp_bdwt_2),
      .while_mul_70_cmp_z(while_mul_70_cmp_z)
    );
  assign while_mul_70_cmp_z_mxwt = while_mul_70_cmp_z_mxwt_pconst;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_77_cmp
// ------------------------------------------------------------------


module Rotate_run_while_mul_77_cmp (
  clk, rst, run_wen, run_wten, while_mul_77_cmp_oswt_unreg, while_mul_77_cmp_bawt,
      while_mul_77_cmp_iden, while_mul_77_cmp_iswt5, while_mul_77_cmp_iden_1, while_mul_77_cmp_oswt_unreg_1,
      while_mul_77_cmp_iden_2, while_mul_77_cmp_iswt5_1, while_mul_77_cmp_iden_3,
      while_mul_77_cmp_oswt_unreg_2, while_mul_77_cmp_iden_4, while_mul_77_cmp_iswt5_2,
      while_mul_77_cmp_iden_5, while_mul_77_cmp_a_run, while_mul_77_cmp_b_run, while_mul_77_cmp_z_mxwt,
      while_mul_77_cmp_z_mxwt_1, while_mul_77_cmp_z_mxwt_2, while_mul_77_cmp_iswt5_2_pff,
      while_mul_77_cmp_iswt5_1_pff, while_mul_77_cmp_iswt5_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_77_cmp_oswt_unreg;
  output while_mul_77_cmp_bawt;
  output while_mul_77_cmp_iden;
  input while_mul_77_cmp_iswt5;
  output while_mul_77_cmp_iden_1;
  input while_mul_77_cmp_oswt_unreg_1;
  output while_mul_77_cmp_iden_2;
  input while_mul_77_cmp_iswt5_1;
  output while_mul_77_cmp_iden_3;
  input while_mul_77_cmp_oswt_unreg_2;
  output while_mul_77_cmp_iden_4;
  input while_mul_77_cmp_iswt5_2;
  output while_mul_77_cmp_iden_5;
  input [65:0] while_mul_77_cmp_a_run;
  input [111:0] while_mul_77_cmp_b_run;
  output [177:0] while_mul_77_cmp_z_mxwt;
  output [175:0] while_mul_77_cmp_z_mxwt_1;
  output [175:0] while_mul_77_cmp_z_mxwt_2;
  input while_mul_77_cmp_iswt5_2_pff;
  input while_mul_77_cmp_iswt5_1_pff;
  input while_mul_77_cmp_iswt5_pff;


  // Interconnect Declarations
  wire while_mul_77_cmp_bdwt;
  wire while_mul_77_cmp_bdwt_2;
  wire while_mul_77_cmp_bdwt_4;
  wire [177:0] while_mul_77_cmp_z;
  wire [175:0] while_mul_77_cmp_z_mxwt_1_pconst;
  wire [175:0] while_mul_77_cmp_z_mxwt_2_pconst;
  wire run_cgwt_5;


  // Interconnect Declarations for Component Instantiations 
  mgc_mul_pipe #(.width_a(32'sd66),
  .signd_a(32'sd1),
  .width_b(32'sd112),
  .signd_b(32'sd1),
  .width_z(32'sd178),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd0),
  .stages(32'sd6),
  .n_inreg(32'sd1)) while_mul_77_cmp (
      .a(while_mul_77_cmp_a_run),
      .b(while_mul_77_cmp_b_run),
      .clk(clk),
      .en(run_cgwt_5),
      .a_rst(rst),
      .s_rst(1'b1),
      .z(while_mul_77_cmp_z)
    );
  Rotate_run_while_mul_77_cmp_mgc_mul_pipe_66_1_112_1_178_1_1_0_0_6_1_wait_ctrl Rotate_run_while_mul_77_cmp_mgc_mul_pipe_66_1_112_1_178_1_1_0_0_6_1_wait_ctrl_inst
      (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_77_cmp_oswt_unreg(while_mul_77_cmp_oswt_unreg),
      .while_mul_77_cmp_iswt5(while_mul_77_cmp_iswt5),
      .while_mul_77_cmp_iden_1(while_mul_77_cmp_iden_1),
      .while_mul_77_cmp_oswt_unreg_1(while_mul_77_cmp_oswt_unreg_1),
      .while_mul_77_cmp_iswt5_1(while_mul_77_cmp_iswt5_1),
      .while_mul_77_cmp_iden_3(while_mul_77_cmp_iden_3),
      .while_mul_77_cmp_oswt_unreg_2(while_mul_77_cmp_oswt_unreg_2),
      .while_mul_77_cmp_iswt5_2(while_mul_77_cmp_iswt5_2),
      .while_mul_77_cmp_iden_5(while_mul_77_cmp_iden_5),
      .run_cgwt_5(run_cgwt_5),
      .while_mul_77_cmp_bdwt(while_mul_77_cmp_bdwt),
      .while_mul_77_cmp_bdwt_2(while_mul_77_cmp_bdwt_2),
      .while_mul_77_cmp_bdwt_4(while_mul_77_cmp_bdwt_4),
      .while_mul_77_cmp_iswt5_2_pff(while_mul_77_cmp_iswt5_2_pff),
      .while_mul_77_cmp_iswt5_1_pff(while_mul_77_cmp_iswt5_1_pff),
      .while_mul_77_cmp_iswt5_pff(while_mul_77_cmp_iswt5_pff)
    );
  Rotate_run_while_mul_77_cmp_mgc_mul_pipe_66_1_112_1_178_1_1_0_0_6_1_wait_dp Rotate_run_while_mul_77_cmp_mgc_mul_pipe_66_1_112_1_178_1_1_0_0_6_1_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .while_mul_77_cmp_bawt(while_mul_77_cmp_bawt),
      .while_mul_77_cmp_iden(while_mul_77_cmp_iden),
      .while_mul_77_cmp_iden_2(while_mul_77_cmp_iden_2),
      .while_mul_77_cmp_iden_4(while_mul_77_cmp_iden_4),
      .while_mul_77_cmp_z_mxwt(while_mul_77_cmp_z_mxwt),
      .while_mul_77_cmp_z_mxwt_1(while_mul_77_cmp_z_mxwt_1_pconst),
      .while_mul_77_cmp_z_mxwt_2(while_mul_77_cmp_z_mxwt_2_pconst),
      .while_mul_77_cmp_biwt(while_mul_77_cmp_iden_1),
      .while_mul_77_cmp_bdwt(while_mul_77_cmp_bdwt),
      .while_mul_77_cmp_biwt_2(while_mul_77_cmp_iden_3),
      .while_mul_77_cmp_bdwt_2(while_mul_77_cmp_bdwt_2),
      .while_mul_77_cmp_biwt_4(while_mul_77_cmp_iden_5),
      .while_mul_77_cmp_bdwt_4(while_mul_77_cmp_bdwt_4),
      .while_mul_77_cmp_z(while_mul_77_cmp_z)
    );
  assign while_mul_77_cmp_z_mxwt_1 = while_mul_77_cmp_z_mxwt_1_pconst;
  assign while_mul_77_cmp_z_mxwt_2 = while_mul_77_cmp_z_mxwt_2_pconst;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_76_cmp
// ------------------------------------------------------------------


module Rotate_run_while_mul_76_cmp (
  clk, rst, run_wen, run_wten, while_mul_76_cmp_oswt_unreg, while_mul_76_cmp_bawt,
      while_mul_76_cmp_iden, while_mul_76_cmp_iswt7, while_mul_76_cmp_iden_1, while_mul_76_cmp_oswt_unreg_1,
      while_mul_76_cmp_iden_2, while_mul_76_cmp_iswt7_1, while_mul_76_cmp_iden_3,
      while_mul_76_cmp_a_run, while_mul_76_cmp_b_run, while_mul_76_cmp_z_mxwt, while_mul_76_cmp_z_mxwt_1,
      while_mul_76_cmp_iswt7_1_pff, while_mul_76_cmp_iswt7_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_76_cmp_oswt_unreg;
  output while_mul_76_cmp_bawt;
  output while_mul_76_cmp_iden;
  input while_mul_76_cmp_iswt7;
  output while_mul_76_cmp_iden_1;
  input while_mul_76_cmp_oswt_unreg_1;
  output while_mul_76_cmp_iden_2;
  input while_mul_76_cmp_iswt7_1;
  output while_mul_76_cmp_iden_3;
  input [63:0] while_mul_76_cmp_a_run;
  input [175:0] while_mul_76_cmp_b_run;
  output [239:0] while_mul_76_cmp_z_mxwt;
  output [239:0] while_mul_76_cmp_z_mxwt_1;
  input while_mul_76_cmp_iswt7_1_pff;
  input while_mul_76_cmp_iswt7_pff;


  // Interconnect Declarations
  wire while_mul_76_cmp_bdwt;
  wire while_mul_76_cmp_bdwt_2;
  wire [239:0] while_mul_76_cmp_z;
  wire run_cgwt_4;


  // Interconnect Declarations for Component Instantiations 
  mgc_mul_pipe #(.width_a(32'sd64),
  .signd_a(32'sd1),
  .width_b(32'sd176),
  .signd_b(32'sd1),
  .width_z(32'sd240),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd0),
  .stages(32'sd8),
  .n_inreg(32'sd1)) while_mul_76_cmp (
      .a(while_mul_76_cmp_a_run),
      .b(while_mul_76_cmp_b_run),
      .clk(clk),
      .en(run_cgwt_4),
      .a_rst(rst),
      .s_rst(1'b1),
      .z(while_mul_76_cmp_z)
    );
  Rotate_run_while_mul_76_cmp_mgc_mul_pipe_64_1_176_1_240_1_1_0_0_8_1_wait_ctrl Rotate_run_while_mul_76_cmp_mgc_mul_pipe_64_1_176_1_240_1_1_0_0_8_1_wait_ctrl_inst
      (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_76_cmp_oswt_unreg(while_mul_76_cmp_oswt_unreg),
      .while_mul_76_cmp_iswt7(while_mul_76_cmp_iswt7),
      .while_mul_76_cmp_iden_1(while_mul_76_cmp_iden_1),
      .while_mul_76_cmp_oswt_unreg_1(while_mul_76_cmp_oswt_unreg_1),
      .while_mul_76_cmp_iswt7_1(while_mul_76_cmp_iswt7_1),
      .while_mul_76_cmp_iden_3(while_mul_76_cmp_iden_3),
      .run_cgwt_4(run_cgwt_4),
      .while_mul_76_cmp_bdwt(while_mul_76_cmp_bdwt),
      .while_mul_76_cmp_bdwt_2(while_mul_76_cmp_bdwt_2),
      .while_mul_76_cmp_iswt7_1_pff(while_mul_76_cmp_iswt7_1_pff),
      .while_mul_76_cmp_iswt7_pff(while_mul_76_cmp_iswt7_pff)
    );
  Rotate_run_while_mul_76_cmp_mgc_mul_pipe_64_1_176_1_240_1_1_0_0_8_1_wait_dp Rotate_run_while_mul_76_cmp_mgc_mul_pipe_64_1_176_1_240_1_1_0_0_8_1_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .while_mul_76_cmp_bawt(while_mul_76_cmp_bawt),
      .while_mul_76_cmp_iden(while_mul_76_cmp_iden),
      .while_mul_76_cmp_iden_2(while_mul_76_cmp_iden_2),
      .while_mul_76_cmp_z_mxwt(while_mul_76_cmp_z_mxwt),
      .while_mul_76_cmp_z_mxwt_1(while_mul_76_cmp_z_mxwt_1),
      .while_mul_76_cmp_biwt(while_mul_76_cmp_iden_1),
      .while_mul_76_cmp_bdwt(while_mul_76_cmp_bdwt),
      .while_mul_76_cmp_biwt_2(while_mul_76_cmp_iden_3),
      .while_mul_76_cmp_bdwt_2(while_mul_76_cmp_bdwt_2),
      .while_mul_76_cmp_z(while_mul_76_cmp_z)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_108_cmp
// ------------------------------------------------------------------


module Rotate_run_while_mul_108_cmp (
  clk, rst, run_wen, run_wten, while_mul_108_cmp_oswt_unreg, while_mul_108_cmp_bawt,
      while_mul_108_cmp_iden, while_mul_108_cmp_iswt3, while_mul_108_cmp_iden_1,
      while_mul_108_cmp_oswt_unreg_1, while_mul_108_cmp_iden_2, while_mul_108_cmp_iswt3_1,
      while_mul_108_cmp_iden_3, while_mul_108_cmp_b_run, while_mul_108_cmp_z_mxwt,
      while_mul_108_cmp_z_mxwt_1, while_mul_108_cmp_iswt3_1_pff, while_mul_108_cmp_iswt3_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_108_cmp_oswt_unreg;
  output while_mul_108_cmp_bawt;
  output while_mul_108_cmp_iden;
  input while_mul_108_cmp_iswt3;
  output while_mul_108_cmp_iden_1;
  input while_mul_108_cmp_oswt_unreg_1;
  output while_mul_108_cmp_iden_2;
  input while_mul_108_cmp_iswt3_1;
  output while_mul_108_cmp_iden_3;
  input [63:0] while_mul_108_cmp_b_run;
  output [111:0] while_mul_108_cmp_z_mxwt;
  output [111:0] while_mul_108_cmp_z_mxwt_1;
  input while_mul_108_cmp_iswt3_1_pff;
  input while_mul_108_cmp_iswt3_pff;


  // Interconnect Declarations
  wire while_mul_108_cmp_bdwt;
  wire while_mul_108_cmp_bdwt_2;
  wire [111:0] while_mul_108_cmp_z;
  wire run_cgwt_3;


  // Interconnect Declarations for Component Instantiations 
  mgc_mul_pipe #(.width_a(32'sd48),
  .signd_a(32'sd0),
  .width_b(32'sd64),
  .signd_b(32'sd1),
  .width_z(32'sd112),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd0),
  .stages(32'sd4),
  .n_inreg(32'sd1)) while_mul_108_cmp (
      .a(48'b110010100110001011000001100101100011011111100101),
      .b(while_mul_108_cmp_b_run),
      .clk(clk),
      .en(run_cgwt_3),
      .a_rst(rst),
      .s_rst(1'b1),
      .z(while_mul_108_cmp_z)
    );
  Rotate_run_while_mul_108_cmp_mgc_mul_pipe_48_0_64_1_112_1_1_0_0_4_1_wait_ctrl Rotate_run_while_mul_108_cmp_mgc_mul_pipe_48_0_64_1_112_1_1_0_0_4_1_wait_ctrl_inst
      (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_108_cmp_oswt_unreg(while_mul_108_cmp_oswt_unreg),
      .while_mul_108_cmp_iswt3(while_mul_108_cmp_iswt3),
      .while_mul_108_cmp_iden_1(while_mul_108_cmp_iden_1),
      .while_mul_108_cmp_oswt_unreg_1(while_mul_108_cmp_oswt_unreg_1),
      .while_mul_108_cmp_iswt3_1(while_mul_108_cmp_iswt3_1),
      .while_mul_108_cmp_iden_3(while_mul_108_cmp_iden_3),
      .run_cgwt_3(run_cgwt_3),
      .while_mul_108_cmp_bdwt(while_mul_108_cmp_bdwt),
      .while_mul_108_cmp_bdwt_2(while_mul_108_cmp_bdwt_2),
      .while_mul_108_cmp_iswt3_1_pff(while_mul_108_cmp_iswt3_1_pff),
      .while_mul_108_cmp_iswt3_pff(while_mul_108_cmp_iswt3_pff)
    );
  Rotate_run_while_mul_108_cmp_mgc_mul_pipe_48_0_64_1_112_1_1_0_0_4_1_wait_dp Rotate_run_while_mul_108_cmp_mgc_mul_pipe_48_0_64_1_112_1_1_0_0_4_1_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .while_mul_108_cmp_bawt(while_mul_108_cmp_bawt),
      .while_mul_108_cmp_iden(while_mul_108_cmp_iden),
      .while_mul_108_cmp_iden_2(while_mul_108_cmp_iden_2),
      .while_mul_108_cmp_z_mxwt(while_mul_108_cmp_z_mxwt),
      .while_mul_108_cmp_z_mxwt_1(while_mul_108_cmp_z_mxwt_1),
      .while_mul_108_cmp_biwt(while_mul_108_cmp_iden_1),
      .while_mul_108_cmp_bdwt(while_mul_108_cmp_bdwt),
      .while_mul_108_cmp_biwt_2(while_mul_108_cmp_iden_3),
      .while_mul_108_cmp_bdwt_2(while_mul_108_cmp_bdwt_2),
      .while_mul_108_cmp_z(while_mul_108_cmp_z)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_111_cmp
// ------------------------------------------------------------------


module Rotate_run_while_mul_111_cmp (
  clk, rst, run_wen, run_wten, while_mul_111_cmp_oswt_unreg, while_mul_111_cmp_bawt,
      while_mul_111_cmp_iden, while_mul_111_cmp_iswt7, while_mul_111_cmp_iden_1,
      while_mul_111_cmp_oswt_unreg_1, while_mul_111_cmp_iden_2, while_mul_111_cmp_iswt7_1,
      while_mul_111_cmp_iden_3, while_mul_111_cmp_oswt_unreg_2, while_mul_111_cmp_iden_4,
      while_mul_111_cmp_iswt7_2, while_mul_111_cmp_iden_5, while_mul_111_cmp_a_run,
      while_mul_111_cmp_b_run, while_mul_111_cmp_z_mxwt, while_mul_111_cmp_z_mxwt_1,
      while_mul_111_cmp_z_mxwt_2, while_mul_111_cmp_iswt7_2_pff, while_mul_111_cmp_iswt7_1_pff,
      while_mul_111_cmp_iswt7_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_111_cmp_oswt_unreg;
  output while_mul_111_cmp_bawt;
  output while_mul_111_cmp_iden;
  input while_mul_111_cmp_iswt7;
  output while_mul_111_cmp_iden_1;
  input while_mul_111_cmp_oswt_unreg_1;
  output while_mul_111_cmp_iden_2;
  input while_mul_111_cmp_iswt7_1;
  output while_mul_111_cmp_iden_3;
  input while_mul_111_cmp_oswt_unreg_2;
  output while_mul_111_cmp_iden_4;
  input while_mul_111_cmp_iswt7_2;
  output while_mul_111_cmp_iden_5;
  input [63:0] while_mul_111_cmp_a_run;
  input [177:0] while_mul_111_cmp_b_run;
  output [241:0] while_mul_111_cmp_z_mxwt;
  output [241:0] while_mul_111_cmp_z_mxwt_1;
  output [241:0] while_mul_111_cmp_z_mxwt_2;
  input while_mul_111_cmp_iswt7_2_pff;
  input while_mul_111_cmp_iswt7_1_pff;
  input while_mul_111_cmp_iswt7_pff;


  // Interconnect Declarations
  wire while_mul_111_cmp_bdwt;
  wire while_mul_111_cmp_bdwt_2;
  wire while_mul_111_cmp_bdwt_4;
  wire [241:0] while_mul_111_cmp_z;
  wire run_cgwt_2;


  // Interconnect Declarations for Component Instantiations 
  mgc_mul_pipe #(.width_a(32'sd64),
  .signd_a(32'sd1),
  .width_b(32'sd178),
  .signd_b(32'sd1),
  .width_z(32'sd242),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd0),
  .stages(32'sd8),
  .n_inreg(32'sd1)) while_mul_111_cmp (
      .a(while_mul_111_cmp_a_run),
      .b(while_mul_111_cmp_b_run),
      .clk(clk),
      .en(run_cgwt_2),
      .a_rst(rst),
      .s_rst(1'b1),
      .z(while_mul_111_cmp_z)
    );
  Rotate_run_while_mul_111_cmp_mgc_mul_pipe_64_1_178_1_242_1_1_0_0_8_1_wait_ctrl
      Rotate_run_while_mul_111_cmp_mgc_mul_pipe_64_1_178_1_242_1_1_0_0_8_1_wait_ctrl_inst
      (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_111_cmp_oswt_unreg(while_mul_111_cmp_oswt_unreg),
      .while_mul_111_cmp_iswt7(while_mul_111_cmp_iswt7),
      .while_mul_111_cmp_iden_1(while_mul_111_cmp_iden_1),
      .while_mul_111_cmp_oswt_unreg_1(while_mul_111_cmp_oswt_unreg_1),
      .while_mul_111_cmp_iswt7_1(while_mul_111_cmp_iswt7_1),
      .while_mul_111_cmp_iden_3(while_mul_111_cmp_iden_3),
      .while_mul_111_cmp_oswt_unreg_2(while_mul_111_cmp_oswt_unreg_2),
      .while_mul_111_cmp_iswt7_2(while_mul_111_cmp_iswt7_2),
      .while_mul_111_cmp_iden_5(while_mul_111_cmp_iden_5),
      .run_cgwt_2(run_cgwt_2),
      .while_mul_111_cmp_bdwt(while_mul_111_cmp_bdwt),
      .while_mul_111_cmp_bdwt_2(while_mul_111_cmp_bdwt_2),
      .while_mul_111_cmp_bdwt_4(while_mul_111_cmp_bdwt_4),
      .while_mul_111_cmp_iswt7_2_pff(while_mul_111_cmp_iswt7_2_pff),
      .while_mul_111_cmp_iswt7_1_pff(while_mul_111_cmp_iswt7_1_pff),
      .while_mul_111_cmp_iswt7_pff(while_mul_111_cmp_iswt7_pff)
    );
  Rotate_run_while_mul_111_cmp_mgc_mul_pipe_64_1_178_1_242_1_1_0_0_8_1_wait_dp Rotate_run_while_mul_111_cmp_mgc_mul_pipe_64_1_178_1_242_1_1_0_0_8_1_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .while_mul_111_cmp_bawt(while_mul_111_cmp_bawt),
      .while_mul_111_cmp_iden(while_mul_111_cmp_iden),
      .while_mul_111_cmp_iden_2(while_mul_111_cmp_iden_2),
      .while_mul_111_cmp_iden_4(while_mul_111_cmp_iden_4),
      .while_mul_111_cmp_z_mxwt(while_mul_111_cmp_z_mxwt),
      .while_mul_111_cmp_z_mxwt_1(while_mul_111_cmp_z_mxwt_1),
      .while_mul_111_cmp_z_mxwt_2(while_mul_111_cmp_z_mxwt_2),
      .while_mul_111_cmp_biwt(while_mul_111_cmp_iden_1),
      .while_mul_111_cmp_bdwt(while_mul_111_cmp_bdwt),
      .while_mul_111_cmp_biwt_2(while_mul_111_cmp_iden_3),
      .while_mul_111_cmp_bdwt_2(while_mul_111_cmp_bdwt_2),
      .while_mul_111_cmp_biwt_4(while_mul_111_cmp_iden_5),
      .while_mul_111_cmp_bdwt_4(while_mul_111_cmp_bdwt_4),
      .while_mul_111_cmp_z(while_mul_111_cmp_z)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_110_cmp
// ------------------------------------------------------------------


module Rotate_run_while_mul_110_cmp (
  clk, rst, run_wen, run_wten, while_mul_110_cmp_oswt_unreg, while_mul_110_cmp_bawt,
      while_mul_110_cmp_iden, while_mul_110_cmp_iswt9, while_mul_110_cmp_iden_1,
      while_mul_110_cmp_oswt_unreg_1, while_mul_110_cmp_iden_2, while_mul_110_cmp_iswt9_1,
      while_mul_110_cmp_iden_3, while_mul_110_cmp_oswt_unreg_2, while_mul_110_cmp_iden_4,
      while_mul_110_cmp_iswt9_2, while_mul_110_cmp_iden_5, while_mul_110_cmp_a_run,
      while_mul_110_cmp_b_run, while_mul_110_cmp_z_mxwt, while_mul_110_cmp_z_mxwt_1,
      while_mul_110_cmp_z_mxwt_2, while_mul_110_cmp_iswt9_2_pff, while_mul_110_cmp_iswt9_1_pff,
      while_mul_110_cmp_iswt9_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_110_cmp_oswt_unreg;
  output while_mul_110_cmp_bawt;
  output while_mul_110_cmp_iden;
  input while_mul_110_cmp_iswt9;
  output while_mul_110_cmp_iden_1;
  input while_mul_110_cmp_oswt_unreg_1;
  output while_mul_110_cmp_iden_2;
  input while_mul_110_cmp_iswt9_1;
  output while_mul_110_cmp_iden_3;
  input while_mul_110_cmp_oswt_unreg_2;
  output while_mul_110_cmp_iden_4;
  input while_mul_110_cmp_iswt9_2;
  output while_mul_110_cmp_iden_5;
  input [63:0] while_mul_110_cmp_a_run;
  input [241:0] while_mul_110_cmp_b_run;
  output [255:0] while_mul_110_cmp_z_mxwt;
  output [255:0] while_mul_110_cmp_z_mxwt_1;
  output [209:0] while_mul_110_cmp_z_mxwt_2;
  input while_mul_110_cmp_iswt9_2_pff;
  input while_mul_110_cmp_iswt9_1_pff;
  input while_mul_110_cmp_iswt9_pff;


  // Interconnect Declarations
  wire while_mul_110_cmp_bdwt;
  wire while_mul_110_cmp_bdwt_2;
  wire while_mul_110_cmp_bdwt_4;
  wire [257:0] while_mul_110_cmp_z;
  wire [255:0] while_mul_110_cmp_z_mxwt_pconst;
  wire [255:0] while_mul_110_cmp_z_mxwt_1_pconst;
  wire [209:0] while_mul_110_cmp_z_mxwt_2_pconst;
  wire run_cgwt_1;


  // Interconnect Declarations for Component Instantiations 
  mgc_mul_pipe #(.width_a(32'sd64),
  .signd_a(32'sd1),
  .width_b(32'sd242),
  .signd_b(32'sd1),
  .width_z(32'sd258),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd0),
  .stages(32'sd10),
  .n_inreg(32'sd1)) while_mul_110_cmp (
      .a(while_mul_110_cmp_a_run),
      .b(while_mul_110_cmp_b_run),
      .clk(clk),
      .en(run_cgwt_1),
      .a_rst(rst),
      .s_rst(1'b1),
      .z(while_mul_110_cmp_z)
    );
  Rotate_run_while_mul_110_cmp_mgc_mul_pipe_64_1_242_1_258_1_1_0_0_10_1_wait_ctrl
      Rotate_run_while_mul_110_cmp_mgc_mul_pipe_64_1_242_1_258_1_1_0_0_10_1_wait_ctrl_inst
      (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_110_cmp_oswt_unreg(while_mul_110_cmp_oswt_unreg),
      .while_mul_110_cmp_iswt9(while_mul_110_cmp_iswt9),
      .while_mul_110_cmp_iden_1(while_mul_110_cmp_iden_1),
      .while_mul_110_cmp_oswt_unreg_1(while_mul_110_cmp_oswt_unreg_1),
      .while_mul_110_cmp_iswt9_1(while_mul_110_cmp_iswt9_1),
      .while_mul_110_cmp_iden_3(while_mul_110_cmp_iden_3),
      .while_mul_110_cmp_oswt_unreg_2(while_mul_110_cmp_oswt_unreg_2),
      .while_mul_110_cmp_iswt9_2(while_mul_110_cmp_iswt9_2),
      .while_mul_110_cmp_iden_5(while_mul_110_cmp_iden_5),
      .run_cgwt_1(run_cgwt_1),
      .while_mul_110_cmp_bdwt(while_mul_110_cmp_bdwt),
      .while_mul_110_cmp_bdwt_2(while_mul_110_cmp_bdwt_2),
      .while_mul_110_cmp_bdwt_4(while_mul_110_cmp_bdwt_4),
      .while_mul_110_cmp_iswt9_2_pff(while_mul_110_cmp_iswt9_2_pff),
      .while_mul_110_cmp_iswt9_1_pff(while_mul_110_cmp_iswt9_1_pff),
      .while_mul_110_cmp_iswt9_pff(while_mul_110_cmp_iswt9_pff)
    );
  Rotate_run_while_mul_110_cmp_mgc_mul_pipe_64_1_242_1_258_1_1_0_0_10_1_wait_dp Rotate_run_while_mul_110_cmp_mgc_mul_pipe_64_1_242_1_258_1_1_0_0_10_1_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .while_mul_110_cmp_bawt(while_mul_110_cmp_bawt),
      .while_mul_110_cmp_iden(while_mul_110_cmp_iden),
      .while_mul_110_cmp_iden_2(while_mul_110_cmp_iden_2),
      .while_mul_110_cmp_iden_4(while_mul_110_cmp_iden_4),
      .while_mul_110_cmp_z_mxwt(while_mul_110_cmp_z_mxwt_pconst),
      .while_mul_110_cmp_z_mxwt_1(while_mul_110_cmp_z_mxwt_1_pconst),
      .while_mul_110_cmp_z_mxwt_2(while_mul_110_cmp_z_mxwt_2_pconst),
      .while_mul_110_cmp_biwt(while_mul_110_cmp_iden_1),
      .while_mul_110_cmp_bdwt(while_mul_110_cmp_bdwt),
      .while_mul_110_cmp_biwt_2(while_mul_110_cmp_iden_3),
      .while_mul_110_cmp_bdwt_2(while_mul_110_cmp_bdwt_2),
      .while_mul_110_cmp_biwt_4(while_mul_110_cmp_iden_5),
      .while_mul_110_cmp_bdwt_4(while_mul_110_cmp_bdwt_4),
      .while_mul_110_cmp_z(while_mul_110_cmp_z)
    );
  assign while_mul_110_cmp_z_mxwt = while_mul_110_cmp_z_mxwt_pconst;
  assign while_mul_110_cmp_z_mxwt_1 = while_mul_110_cmp_z_mxwt_1_pconst;
  assign while_mul_110_cmp_z_mxwt_2 = while_mul_110_cmp_z_mxwt_2_pconst;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_while_mul_115_cmp
// ------------------------------------------------------------------


module Rotate_run_while_mul_115_cmp (
  clk, rst, run_wen, run_wten, while_mul_115_cmp_oswt_unreg, while_mul_115_cmp_bawt,
      while_mul_115_cmp_iden, while_mul_115_cmp_iswt5, while_mul_115_cmp_iden_1,
      while_mul_115_cmp_oswt_unreg_1, while_mul_115_cmp_iden_2, while_mul_115_cmp_iswt5_1,
      while_mul_115_cmp_iden_3, while_mul_115_cmp_oswt_unreg_2, while_mul_115_cmp_iden_4,
      while_mul_115_cmp_iswt5_2, while_mul_115_cmp_iden_5, while_mul_115_cmp_oswt_unreg_3,
      while_mul_115_cmp_iden_6, while_mul_115_cmp_iswt5_3, while_mul_115_cmp_iden_7,
      while_mul_115_cmp_a_run, while_mul_115_cmp_b_run, while_mul_115_cmp_z_mxwt,
      while_mul_115_cmp_z_mxwt_1, while_mul_115_cmp_z_mxwt_2, while_mul_115_cmp_z_mxwt_3,
      while_mul_115_cmp_iswt5_3_pff, while_mul_115_cmp_iswt5_2_pff, while_mul_115_cmp_iswt5_1_pff,
      while_mul_115_cmp_iswt5_pff
);
  input clk;
  input rst;
  input run_wen;
  input run_wten;
  input while_mul_115_cmp_oswt_unreg;
  output while_mul_115_cmp_bawt;
  output while_mul_115_cmp_iden;
  input while_mul_115_cmp_iswt5;
  output while_mul_115_cmp_iden_1;
  input while_mul_115_cmp_oswt_unreg_1;
  output while_mul_115_cmp_iden_2;
  input while_mul_115_cmp_iswt5_1;
  output while_mul_115_cmp_iden_3;
  input while_mul_115_cmp_oswt_unreg_2;
  output while_mul_115_cmp_iden_4;
  input while_mul_115_cmp_iswt5_2;
  output while_mul_115_cmp_iden_5;
  input while_mul_115_cmp_oswt_unreg_3;
  output while_mul_115_cmp_iden_6;
  input while_mul_115_cmp_iswt5_3;
  output while_mul_115_cmp_iden_7;
  input [66:0] while_mul_115_cmp_a_run;
  input [112:0] while_mul_115_cmp_b_run;
  output [162:0] while_mul_115_cmp_z_mxwt;
  output [161:0] while_mul_115_cmp_z_mxwt_1;
  output [162:0] while_mul_115_cmp_z_mxwt_2;
  output [115:0] while_mul_115_cmp_z_mxwt_3;
  input while_mul_115_cmp_iswt5_3_pff;
  input while_mul_115_cmp_iswt5_2_pff;
  input while_mul_115_cmp_iswt5_1_pff;
  input while_mul_115_cmp_iswt5_pff;


  // Interconnect Declarations
  wire while_mul_115_cmp_bdwt;
  wire while_mul_115_cmp_bdwt_2;
  wire while_mul_115_cmp_bdwt_4;
  wire while_mul_115_cmp_bdwt_6;
  wire [162:0] while_mul_115_cmp_z;
  wire [161:0] while_mul_115_cmp_z_mxwt_1_pconst;
  wire [115:0] while_mul_115_cmp_z_mxwt_3_pconst;
  wire run_cgwt;


  // Interconnect Declarations for Component Instantiations 
  mgc_mul_pipe #(.width_a(32'sd67),
  .signd_a(32'sd1),
  .width_b(32'sd113),
  .signd_b(32'sd1),
  .width_z(32'sd163),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd0),
  .stages(32'sd6),
  .n_inreg(32'sd1)) while_mul_115_cmp (
      .a(while_mul_115_cmp_a_run),
      .b(while_mul_115_cmp_b_run),
      .clk(clk),
      .en(run_cgwt),
      .a_rst(rst),
      .s_rst(1'b1),
      .z(while_mul_115_cmp_z)
    );
  Rotate_run_while_mul_115_cmp_mgc_mul_pipe_67_1_113_1_163_1_1_0_0_6_1_wait_ctrl
      Rotate_run_while_mul_115_cmp_mgc_mul_pipe_67_1_113_1_163_1_1_0_0_6_1_wait_ctrl_inst
      (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_115_cmp_oswt_unreg(while_mul_115_cmp_oswt_unreg),
      .while_mul_115_cmp_iswt5(while_mul_115_cmp_iswt5),
      .while_mul_115_cmp_iden_1(while_mul_115_cmp_iden_1),
      .while_mul_115_cmp_oswt_unreg_1(while_mul_115_cmp_oswt_unreg_1),
      .while_mul_115_cmp_iswt5_1(while_mul_115_cmp_iswt5_1),
      .while_mul_115_cmp_iden_3(while_mul_115_cmp_iden_3),
      .while_mul_115_cmp_oswt_unreg_2(while_mul_115_cmp_oswt_unreg_2),
      .while_mul_115_cmp_iswt5_2(while_mul_115_cmp_iswt5_2),
      .while_mul_115_cmp_iden_5(while_mul_115_cmp_iden_5),
      .while_mul_115_cmp_oswt_unreg_3(while_mul_115_cmp_oswt_unreg_3),
      .while_mul_115_cmp_iswt5_3(while_mul_115_cmp_iswt5_3),
      .while_mul_115_cmp_iden_7(while_mul_115_cmp_iden_7),
      .run_cgwt(run_cgwt),
      .while_mul_115_cmp_bdwt(while_mul_115_cmp_bdwt),
      .while_mul_115_cmp_bdwt_2(while_mul_115_cmp_bdwt_2),
      .while_mul_115_cmp_bdwt_4(while_mul_115_cmp_bdwt_4),
      .while_mul_115_cmp_bdwt_6(while_mul_115_cmp_bdwt_6),
      .while_mul_115_cmp_iswt5_3_pff(while_mul_115_cmp_iswt5_3_pff),
      .while_mul_115_cmp_iswt5_2_pff(while_mul_115_cmp_iswt5_2_pff),
      .while_mul_115_cmp_iswt5_1_pff(while_mul_115_cmp_iswt5_1_pff),
      .while_mul_115_cmp_iswt5_pff(while_mul_115_cmp_iswt5_pff)
    );
  Rotate_run_while_mul_115_cmp_mgc_mul_pipe_67_1_113_1_163_1_1_0_0_6_1_wait_dp Rotate_run_while_mul_115_cmp_mgc_mul_pipe_67_1_113_1_163_1_1_0_0_6_1_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .while_mul_115_cmp_bawt(while_mul_115_cmp_bawt),
      .while_mul_115_cmp_iden(while_mul_115_cmp_iden),
      .while_mul_115_cmp_iden_2(while_mul_115_cmp_iden_2),
      .while_mul_115_cmp_iden_4(while_mul_115_cmp_iden_4),
      .while_mul_115_cmp_iden_6(while_mul_115_cmp_iden_6),
      .while_mul_115_cmp_z_mxwt(while_mul_115_cmp_z_mxwt),
      .while_mul_115_cmp_z_mxwt_1(while_mul_115_cmp_z_mxwt_1_pconst),
      .while_mul_115_cmp_z_mxwt_2(while_mul_115_cmp_z_mxwt_2),
      .while_mul_115_cmp_z_mxwt_3(while_mul_115_cmp_z_mxwt_3_pconst),
      .while_mul_115_cmp_biwt(while_mul_115_cmp_iden_1),
      .while_mul_115_cmp_bdwt(while_mul_115_cmp_bdwt),
      .while_mul_115_cmp_biwt_2(while_mul_115_cmp_iden_3),
      .while_mul_115_cmp_bdwt_2(while_mul_115_cmp_bdwt_2),
      .while_mul_115_cmp_biwt_4(while_mul_115_cmp_iden_5),
      .while_mul_115_cmp_bdwt_4(while_mul_115_cmp_bdwt_4),
      .while_mul_115_cmp_biwt_6(while_mul_115_cmp_iden_7),
      .while_mul_115_cmp_bdwt_6(while_mul_115_cmp_bdwt_6),
      .while_mul_115_cmp_z(while_mul_115_cmp_z)
    );
  assign while_mul_115_cmp_z_mxwt_1 = while_mul_115_cmp_z_mxwt_1_pconst;
  assign while_mul_115_cmp_z_mxwt_3 = while_mul_115_cmp_z_mxwt_3_pconst;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_rotate_out_Push_mioi
// ------------------------------------------------------------------


module Rotate_run_rotate_out_Push_mioi (
  clk, rst, rotate_out_val, rotate_out_rdy, rotate_out_msg, run_wen, rotate_out_Push_mioi_oswt_unreg,
      rotate_out_Push_mioi_bawt, rotate_out_Push_mioi_iden, rotate_out_Push_mioi_iswt0,
      rotate_out_Push_mioi_wen_comp, rotate_out_Push_mioi_idat, rotate_out_Push_mioi_irdy,
      rotate_out_Push_mioi_irdy_oreg
);
  input clk;
  input rst;
  output rotate_out_val;
  input rotate_out_rdy;
  output [1023:0] rotate_out_msg;
  input run_wen;
  input rotate_out_Push_mioi_oswt_unreg;
  output rotate_out_Push_mioi_bawt;
  output rotate_out_Push_mioi_iden;
  input rotate_out_Push_mioi_iswt0;
  output rotate_out_Push_mioi_wen_comp;
  input [1023:0] rotate_out_Push_mioi_idat;
  output rotate_out_Push_mioi_irdy;
  input rotate_out_Push_mioi_irdy_oreg;


  // Interconnect Declarations
  wire rotate_out_Push_mioi_biwt;
  wire rotate_out_Push_mioi_bdwt;
  wire rotate_out_Push_mioi_bcwt;
  wire rotate_out_Push_mioi_ivld_run_sct;


  // Interconnect Declarations for Component Instantiations 
  wire [1023:0] nl_rotate_out_Push_mioi_idat;
  assign nl_rotate_out_Push_mioi_idat = {(rotate_out_Push_mioi_idat[1023:64]) , 64'b0000000000000000000000000000000000000000000000000000000000000000};
  ccs_out_buf_wait_v5 #(.rscid(32'sd22),
  .width(32'sd1024),
  .ph_clk(32'sd1),
  .ph_en(32'sd0),
  .ph_arst(32'sd0),
  .ph_srst(32'sd0)) rotate_out_Push_mioi (
      .vld(rotate_out_val),
      .rdy(rotate_out_rdy),
      .dat(rotate_out_msg),
      .idat(nl_rotate_out_Push_mioi_idat[1023:0]),
      .irdy(rotate_out_Push_mioi_irdy),
      .ivld(rotate_out_Push_mioi_ivld_run_sct),
      .clk(clk),
      .en(1'b0),
      .arst(rst),
      .srst(1'b1)
    );
  Rotate_run_rotate_out_Push_mioi_rotate_out_Push_mio_wait_ctrl Rotate_run_rotate_out_Push_mioi_rotate_out_Push_mio_wait_ctrl_inst
      (
      .run_wen(run_wen),
      .rotate_out_Push_mioi_oswt_unreg(rotate_out_Push_mioi_oswt_unreg),
      .rotate_out_Push_mioi_iswt0(rotate_out_Push_mioi_iswt0),
      .rotate_out_Push_mioi_irdy_oreg(rotate_out_Push_mioi_irdy_oreg),
      .rotate_out_Push_mioi_biwt(rotate_out_Push_mioi_biwt),
      .rotate_out_Push_mioi_bdwt(rotate_out_Push_mioi_bdwt),
      .rotate_out_Push_mioi_bcwt(rotate_out_Push_mioi_bcwt),
      .rotate_out_Push_mioi_ivld_run_sct(rotate_out_Push_mioi_ivld_run_sct)
    );
  Rotate_run_rotate_out_Push_mioi_rotate_out_Push_mio_wait_dp Rotate_run_rotate_out_Push_mioi_rotate_out_Push_mio_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .rotate_out_Push_mioi_oswt_unreg(rotate_out_Push_mioi_oswt_unreg),
      .rotate_out_Push_mioi_bawt(rotate_out_Push_mioi_bawt),
      .rotate_out_Push_mioi_iden(rotate_out_Push_mioi_iden),
      .rotate_out_Push_mioi_wen_comp(rotate_out_Push_mioi_wen_comp),
      .rotate_out_Push_mioi_biwt(rotate_out_Push_mioi_biwt),
      .rotate_out_Push_mioi_bdwt(rotate_out_Push_mioi_bdwt),
      .rotate_out_Push_mioi_bcwt(rotate_out_Push_mioi_bcwt)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run_rotate_in_Pop_mioi
// ------------------------------------------------------------------


module Rotate_run_rotate_in_Pop_mioi (
  clk, rst, rotate_in_val, rotate_in_rdy, rotate_in_msg, run_wen, run_wten, rotate_in_Pop_mioi_oswt_unreg,
      rotate_in_Pop_mioi_bawt, rotate_in_Pop_mioi_iden, rotate_in_Pop_mioi_iswt0,
      rotate_in_Pop_mioi_iden_1, rotate_in_Pop_mioi_wen_comp, rotate_in_Pop_mioi_idat_mxwt,
      rotate_in_Pop_mioi_ivld, rotate_in_Pop_mioi_ivld_oreg
);
  input clk;
  input rst;
  input rotate_in_val;
  output rotate_in_rdy;
  input [1023:0] rotate_in_msg;
  input run_wen;
  input run_wten;
  input rotate_in_Pop_mioi_oswt_unreg;
  output rotate_in_Pop_mioi_bawt;
  output rotate_in_Pop_mioi_iden;
  input rotate_in_Pop_mioi_iswt0;
  output rotate_in_Pop_mioi_iden_1;
  output rotate_in_Pop_mioi_wen_comp;
  output [959:0] rotate_in_Pop_mioi_idat_mxwt;
  output rotate_in_Pop_mioi_ivld;
  input rotate_in_Pop_mioi_ivld_oreg;


  // Interconnect Declarations
  wire rotate_in_Pop_mioi_biwt;
  wire rotate_in_Pop_mioi_bdwt;
  wire [1023:0] rotate_in_Pop_mioi_idat;
  wire [959:0] rotate_in_Pop_mioi_idat_mxwt_pconst;


  // Interconnect Declarations for Component Instantiations 
  ccs_ctrl_in_buf_wait_v4 #(.rscid(32'sd21),
  .width(32'sd1024),
  .ph_clk(32'sd1),
  .ph_en(32'sd0),
  .ph_arst(32'sd0),
  .ph_srst(32'sd0)) rotate_in_Pop_mioi (
      .vld(rotate_in_val),
      .rdy(rotate_in_rdy),
      .dat(rotate_in_msg),
      .idat(rotate_in_Pop_mioi_idat),
      .irdy(rotate_in_Pop_mioi_iden_1),
      .ivld(rotate_in_Pop_mioi_ivld),
      .clk(clk),
      .en(1'b0),
      .arst(rst),
      .srst(1'b1)
    );
  Rotate_run_rotate_in_Pop_mioi_rotate_in_Pop_mio_wait_ctrl Rotate_run_rotate_in_Pop_mioi_rotate_in_Pop_mio_wait_ctrl_inst
      (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .rotate_in_Pop_mioi_oswt_unreg(rotate_in_Pop_mioi_oswt_unreg),
      .rotate_in_Pop_mioi_iswt0(rotate_in_Pop_mioi_iswt0),
      .rotate_in_Pop_mioi_iden_1(rotate_in_Pop_mioi_iden_1),
      .rotate_in_Pop_mioi_ivld_oreg(rotate_in_Pop_mioi_ivld_oreg),
      .rotate_in_Pop_mioi_biwt(rotate_in_Pop_mioi_biwt),
      .rotate_in_Pop_mioi_bdwt(rotate_in_Pop_mioi_bdwt)
    );
  Rotate_run_rotate_in_Pop_mioi_rotate_in_Pop_mio_wait_dp Rotate_run_rotate_in_Pop_mioi_rotate_in_Pop_mio_wait_dp_inst
      (
      .clk(clk),
      .rst(rst),
      .rotate_in_Pop_mioi_oswt_unreg(rotate_in_Pop_mioi_oswt_unreg),
      .rotate_in_Pop_mioi_bawt(rotate_in_Pop_mioi_bawt),
      .rotate_in_Pop_mioi_iden(rotate_in_Pop_mioi_iden),
      .rotate_in_Pop_mioi_wen_comp(rotate_in_Pop_mioi_wen_comp),
      .rotate_in_Pop_mioi_idat_mxwt(rotate_in_Pop_mioi_idat_mxwt_pconst),
      .rotate_in_Pop_mioi_biwt(rotate_in_Pop_mioi_biwt),
      .rotate_in_Pop_mioi_bdwt(rotate_in_Pop_mioi_bdwt),
      .rotate_in_Pop_mioi_idat(rotate_in_Pop_mioi_idat)
    );
  assign rotate_in_Pop_mioi_idat_mxwt = rotate_in_Pop_mioi_idat_mxwt_pconst;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    OutputBuffer_run_sync3_Push_mioi
// ------------------------------------------------------------------


module OutputBuffer_run_sync3_Push_mioi (
  clk, rst, sync3_val, sync3_rdy, sync3_msg, sync3_Push_mioi_oswt, sync3_Push_mioi_wen_comp,
      sync3_Push_mioi_oswt_pff
);
  input clk;
  input rst;
  output sync3_val;
  input sync3_rdy;
  output sync3_msg;
  input sync3_Push_mioi_oswt;
  output sync3_Push_mioi_wen_comp;
  input sync3_Push_mioi_oswt_pff;


  // Interconnect Declarations
  wire sync3_Push_mioi_biwt;
  wire sync3_Push_mioi_irdy;


  // Interconnect Declarations for Component Instantiations 
  ccs_out_buf_wait_v5 #(.rscid(32'sd31),
  .width(32'sd1),
  .ph_clk(32'sd1),
  .ph_en(32'sd0),
  .ph_arst(32'sd0),
  .ph_srst(32'sd0)) sync3_Push_mioi (
      .vld(sync3_val),
      .rdy(sync3_rdy),
      .dat(sync3_msg),
      .idat(1'b1),
      .irdy(sync3_Push_mioi_irdy),
      .ivld(sync3_Push_mioi_oswt),
      .clk(clk),
      .en(1'b0),
      .arst(rst),
      .srst(1'b1)
    );
  OutputBuffer_run_sync3_Push_mioi_sync3_Push_mio_wait_ctrl OutputBuffer_run_sync3_Push_mioi_sync3_Push_mio_wait_ctrl_inst
      (
      .sync3_Push_mioi_iswt0(sync3_Push_mioi_oswt_pff),
      .sync3_Push_mioi_irdy_oreg(sync3_Push_mioi_irdy),
      .sync3_Push_mioi_biwt(sync3_Push_mioi_biwt)
    );
  assign sync3_Push_mioi_wen_comp = (~ sync3_Push_mioi_oswt_pff) | sync3_Push_mioi_biwt;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    OutputBuffer_run_dma_write_chnl_Push_mioi
// ------------------------------------------------------------------


module OutputBuffer_run_dma_write_chnl_Push_mioi (
  clk, rst, dma_write_chnl_val, dma_write_chnl_rdy, dma_write_chnl_msg, dma_write_chnl_Push_mioi_oswt,
      dma_write_chnl_Push_mioi_wen_comp, dma_write_chnl_Push_mioi_idat, dma_write_chnl_Push_mioi_oswt_pff
);
  input clk;
  input rst;
  output dma_write_chnl_val;
  input dma_write_chnl_rdy;
  output [63:0] dma_write_chnl_msg;
  input dma_write_chnl_Push_mioi_oswt;
  output dma_write_chnl_Push_mioi_wen_comp;
  input [63:0] dma_write_chnl_Push_mioi_idat;
  input dma_write_chnl_Push_mioi_oswt_pff;


  // Interconnect Declarations
  wire dma_write_chnl_Push_mioi_biwt;
  wire dma_write_chnl_Push_mioi_irdy;


  // Interconnect Declarations for Component Instantiations 
  ccs_out_buf_wait_v5 #(.rscid(32'sd30),
  .width(32'sd64),
  .ph_clk(32'sd1),
  .ph_en(32'sd0),
  .ph_arst(32'sd0),
  .ph_srst(32'sd0)) dma_write_chnl_Push_mioi (
      .vld(dma_write_chnl_val),
      .rdy(dma_write_chnl_rdy),
      .dat(dma_write_chnl_msg),
      .idat(dma_write_chnl_Push_mioi_idat),
      .irdy(dma_write_chnl_Push_mioi_irdy),
      .ivld(dma_write_chnl_Push_mioi_oswt),
      .clk(clk),
      .en(1'b0),
      .arst(rst),
      .srst(1'b1)
    );
  OutputBuffer_run_dma_write_chnl_Push_mioi_dma_write_chnl_Push_mio_wait_ctrl OutputBuffer_run_dma_write_chnl_Push_mioi_dma_write_chnl_Push_mio_wait_ctrl_inst
      (
      .dma_write_chnl_Push_mioi_iswt0(dma_write_chnl_Push_mioi_oswt_pff),
      .dma_write_chnl_Push_mioi_irdy_oreg(dma_write_chnl_Push_mioi_irdy),
      .dma_write_chnl_Push_mioi_biwt(dma_write_chnl_Push_mioi_biwt)
    );
  assign dma_write_chnl_Push_mioi_wen_comp = (~ dma_write_chnl_Push_mioi_oswt_pff)
      | dma_write_chnl_Push_mioi_biwt;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    OutputBuffer_run_dma_write_ctrl_Push_mioi
// ------------------------------------------------------------------


module OutputBuffer_run_dma_write_ctrl_Push_mioi (
  clk, rst, dma_write_ctrl_val, dma_write_ctrl_rdy, dma_write_ctrl_msg, dma_write_ctrl_Push_mioi_oswt,
      dma_write_ctrl_Push_mioi_wen_comp, dma_write_ctrl_Push_mioi_idat, dma_write_ctrl_Push_mioi_oswt_pff
);
  input clk;
  input rst;
  output dma_write_ctrl_val;
  input dma_write_ctrl_rdy;
  output [66:0] dma_write_ctrl_msg;
  input dma_write_ctrl_Push_mioi_oswt;
  output dma_write_ctrl_Push_mioi_wen_comp;
  input [66:0] dma_write_ctrl_Push_mioi_idat;
  input dma_write_ctrl_Push_mioi_oswt_pff;


  // Interconnect Declarations
  wire dma_write_ctrl_Push_mioi_biwt;
  wire dma_write_ctrl_Push_mioi_irdy;


  // Interconnect Declarations for Component Instantiations 
  wire [66:0] nl_dma_write_ctrl_Push_mioi_idat;
  assign nl_dma_write_ctrl_Push_mioi_idat = {3'b011 , (dma_write_ctrl_Push_mioi_idat[63:36])
      , 4'b0000 , (dma_write_ctrl_Push_mioi_idat[31:0])};
  ccs_out_buf_wait_v5 #(.rscid(32'sd29),
  .width(32'sd67),
  .ph_clk(32'sd1),
  .ph_en(32'sd0),
  .ph_arst(32'sd0),
  .ph_srst(32'sd0)) dma_write_ctrl_Push_mioi (
      .vld(dma_write_ctrl_val),
      .rdy(dma_write_ctrl_rdy),
      .dat(dma_write_ctrl_msg),
      .idat(nl_dma_write_ctrl_Push_mioi_idat[66:0]),
      .irdy(dma_write_ctrl_Push_mioi_irdy),
      .ivld(dma_write_ctrl_Push_mioi_oswt),
      .clk(clk),
      .en(1'b0),
      .arst(rst),
      .srst(1'b1)
    );
  OutputBuffer_run_dma_write_ctrl_Push_mioi_dma_write_ctrl_Push_mio_wait_ctrl OutputBuffer_run_dma_write_ctrl_Push_mioi_dma_write_ctrl_Push_mio_wait_ctrl_inst
      (
      .dma_write_ctrl_Push_mioi_iswt0(dma_write_ctrl_Push_mioi_oswt_pff),
      .dma_write_ctrl_Push_mioi_irdy_oreg(dma_write_ctrl_Push_mioi_irdy),
      .dma_write_ctrl_Push_mioi_biwt(dma_write_ctrl_Push_mioi_biwt)
    );
  assign dma_write_ctrl_Push_mioi_wen_comp = (~ dma_write_ctrl_Push_mioi_oswt_pff)
      | dma_write_ctrl_Push_mioi_biwt;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    OutputBuffer_run_rotate_out_Pop_mioi
// ------------------------------------------------------------------


module OutputBuffer_run_rotate_out_Pop_mioi (
  clk, rst, rotate_out_val, rotate_out_rdy, rotate_out_msg, rotate_out_Pop_mioi_oswt,
      rotate_out_Pop_mioi_wen_comp, rotate_out_Pop_mioi_idat_mxwt, rotate_out_Pop_mioi_oswt_pff
);
  input clk;
  input rst;
  input rotate_out_val;
  output rotate_out_rdy;
  input [1023:0] rotate_out_msg;
  input rotate_out_Pop_mioi_oswt;
  output rotate_out_Pop_mioi_wen_comp;
  output [1023:0] rotate_out_Pop_mioi_idat_mxwt;
  input rotate_out_Pop_mioi_oswt_pff;


  // Interconnect Declarations
  wire rotate_out_Pop_mioi_biwt;
  wire [1023:0] rotate_out_Pop_mioi_idat;
  wire rotate_out_Pop_mioi_ivld;


  // Interconnect Declarations for Component Instantiations 
  ccs_ctrl_in_buf_wait_v4 #(.rscid(32'sd28),
  .width(32'sd1024),
  .ph_clk(32'sd1),
  .ph_en(32'sd0),
  .ph_arst(32'sd0),
  .ph_srst(32'sd0)) rotate_out_Pop_mioi (
      .vld(rotate_out_val),
      .rdy(rotate_out_rdy),
      .dat(rotate_out_msg),
      .idat(rotate_out_Pop_mioi_idat),
      .irdy(rotate_out_Pop_mioi_oswt),
      .ivld(rotate_out_Pop_mioi_ivld),
      .clk(clk),
      .en(1'b0),
      .arst(rst),
      .srst(1'b1)
    );
  OutputBuffer_run_rotate_out_Pop_mioi_rotate_out_Pop_mio_wait_ctrl OutputBuffer_run_rotate_out_Pop_mioi_rotate_out_Pop_mio_wait_ctrl_inst
      (
      .rotate_out_Pop_mioi_iswt0(rotate_out_Pop_mioi_oswt_pff),
      .rotate_out_Pop_mioi_ivld_oreg(rotate_out_Pop_mioi_ivld),
      .rotate_out_Pop_mioi_biwt(rotate_out_Pop_mioi_biwt)
    );
  assign rotate_out_Pop_mioi_idat_mxwt = rotate_out_Pop_mioi_idat;
  assign rotate_out_Pop_mioi_wen_comp = (~ rotate_out_Pop_mioi_oswt_pff) | rotate_out_Pop_mioi_biwt;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    OutputBuffer_run_sync2_Pop_mioi
// ------------------------------------------------------------------


module OutputBuffer_run_sync2_Pop_mioi (
  clk, rst, sync2_val, sync2_rdy, sync2_msg, sync2_Pop_mioi_oswt, sync2_Pop_mioi_wen_comp,
      sync2_Pop_mioi_oswt_pff
);
  input clk;
  input rst;
  input sync2_val;
  output sync2_rdy;
  input sync2_msg;
  input sync2_Pop_mioi_oswt;
  output sync2_Pop_mioi_wen_comp;
  input sync2_Pop_mioi_oswt_pff;


  // Interconnect Declarations
  wire sync2_Pop_mioi_biwt;
  wire sync2_Pop_mioi_idat;
  wire sync2_Pop_mioi_ivld;


  // Interconnect Declarations for Component Instantiations 
  ccs_ctrl_in_buf_wait_v4 #(.rscid(32'sd27),
  .width(32'sd1),
  .ph_clk(32'sd1),
  .ph_en(32'sd0),
  .ph_arst(32'sd0),
  .ph_srst(32'sd0)) sync2_Pop_mioi (
      .vld(sync2_val),
      .rdy(sync2_rdy),
      .dat(sync2_msg),
      .idat(sync2_Pop_mioi_idat),
      .irdy(sync2_Pop_mioi_oswt),
      .ivld(sync2_Pop_mioi_ivld),
      .clk(clk),
      .en(1'b0),
      .arst(rst),
      .srst(1'b1)
    );
  OutputBuffer_run_sync2_Pop_mioi_sync2_Pop_mio_wait_ctrl OutputBuffer_run_sync2_Pop_mioi_sync2_Pop_mio_wait_ctrl_inst
      (
      .sync2_Pop_mioi_iswt0(sync2_Pop_mioi_oswt_pff),
      .sync2_Pop_mioi_ivld_oreg(sync2_Pop_mioi_ivld),
      .sync2_Pop_mioi_biwt(sync2_Pop_mioi_biwt)
    );
  assign sync2_Pop_mioi_wen_comp = (~ sync2_Pop_mioi_oswt_pff) | sync2_Pop_mioi_biwt;
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Control_run
// ------------------------------------------------------------------


module Control_run (
  clk, rst, acc_start, acc_done, sync1_val, sync1_rdy, sync1_msg, sync2_val, sync2_rdy,
      sync2_msg, sync3_val, sync3_rdy, sync3_msg
);
  input clk;
  input rst;
  input acc_start;
  output acc_done;
  reg acc_done;
  output sync1_val;
  input sync1_rdy;
  output sync1_msg;
  output sync2_val;
  input sync2_rdy;
  output sync2_msg;
  input sync3_val;
  output sync3_rdy;
  input sync3_msg;


  // Interconnect Declarations
  reg run_wen;
  wire run_wten;
  wire sync1_Push_mioi_bawt;
  wire sync1_Push_mioi_wen_comp;
  wire sync1_Push_mioi_irdy;
  wire sync1_Push_mioi_irdy_oreg;
  wire sync2_Push_mioi_bawt;
  wire sync2_Push_mioi_wen_comp;
  wire sync2_Push_mioi_irdy;
  wire sync2_Push_mioi_irdy_oreg;
  wire sync3_Pop_mioi_bawt;
  wire sync3_Pop_mioi_wen_comp;
  wire sync3_Pop_mioi_ivld;
  wire sync3_Pop_mioi_ivld_oreg;
  wire [1:0] while_for_2_mux_3_tmp;
  wire or_tmp_1;
  wire and_tmp;
  wire and_tmp_4;
  wire and_dcpl_2;
  wire and_dcpl_9;
  wire and_dcpl_11;
  wire and_dcpl_12;
  wire and_dcpl_17;
  wire nor_tmp;
  wire nor_tmp_1;
  wire and_tmp_12;
  wire mux_tmp_16;
  wire or_tmp_47;
  wire or_dcpl_12;
  wire and_dcpl_29;
  wire and_tmp_14;
  wire and_dcpl_30;
  wire or_tmp_60;
  wire or_tmp_66;
  wire mux_tmp_31;
  wire or_dcpl_13;
  wire and_tmp_22;
  wire or_dcpl_14;
  wire and_dcpl_37;
  wire while_while_or_3_cse_1;
  wire while_while_or_1_cse_1;
  wire while_while_or_cse_1;
  wire lfst_exit_while_for_2_lpi_1_dfm_5_2_mx0w0;
  wire [1:0] lfst_exit_while_for_2_lpi_1_dfm_5_1_0_mx0w0;
  reg exitL_exit_while_for_2_sva;
  reg while_for_2_equal_tmp_2_1;
  reg while_for_2_or_tmp_1;
  wire while_for_2_and_ssc_1;
  wire while_for_2_and_2_ssc_1;
  reg while_for_1_slc_while_for_1_acc_3_svs_1;
  reg lfst_exit_while_for_2_lpi_1_dfm_5_2;
  reg while_for_slc_while_for_acc_3_svs_1;
  reg while_for_2_equal_tmp_1;
  wire lfst_exit_while_for_2_lpi_1_dfm_2_mx1w2;
  reg [1:0] lfst_exit_while_for_2_lpi_1_dfm_5_1_0;
  reg while_for_1_slc_while_for_1_acc_3_svs_st_3;
  wire [3:0] while_for_1_i_3_0_sva_2;
  wire [4:0] nl_while_for_1_i_3_0_sva_2;
  wire [3:0] while_for_2_i_3_0_sva_2;
  wire [4:0] nl_while_for_2_i_3_0_sva_2;
  wire exitL_exit_while_for_2_sva_mx0;
  wire [1:0] lfst_exit_while_for_2_lpi_1_dfm_1_0_mx1w1;
  wire while_for_2_and_6_cse;
  wire while_and_16_cse;
  wire while_for_2_and_9_cse;
  wire while_for_i_and_cse;
  wire while_for_and_3_cse;
  wire or_7_cse;
  wire or_62_cse;
  wire while_for_2_or_tmp_mx0w0;
  wire while_for_2_equal_tmp_2_mx0w0;
  wire while_for_2_equal_tmp_mx0w0;
  wire while_for_2_or_5_tmp;
  wire or_72_cse;
  wire sync1_write_reset_check_reset_while_nor_1_rmff;
  wire run_wen_rtff;
  reg reg_while_stage_v_2_tmp;
  reg reg_while_for_slc_while_for_acc_3_svs_st_1_tmp;
  reg [1:0] reg_lfst_exit_while_for_2_lpi_1_dfm_st_1_1_0_tmp;
  reg reg_lfst_exit_while_for_2_lpi_1_dfm_st_1_2_tmp;
  reg reg_sync1_Push_mioi_iswt0_tmp;
  reg reg_while_stage_v_3_tmp;
  reg [1:0] reg_lfst_exit_while_for_2_lpi_1_dfm_st_2_1_0_tmp;
  reg reg_lfst_exit_while_for_2_lpi_1_dfm_st_2_2_tmp;
  reg reg_while_for_slc_while_for_acc_3_svs_st_2_tmp;
  reg reg_sync2_Push_mioi_iswt0_tmp;
  reg reg_while_stage_v_4_tmp;
  reg reg_sync3_Pop_mioi_iswt0_tmp;
  reg [1:0] reg_lfst_exit_while_for_2_lpi_1_dfm_st_3_1_0_tmp;
  reg reg_while_for_slc_while_for_acc_3_svs_st_3_tmp;
  reg reg_lfst_exit_while_for_2_lpi_1_dfm_st_3_2_tmp;
  reg reg_while_stage_v_1_tmp;
  wire sync1_Push_mioi_wen_comp_iff;
  wire while_mux_rmff;
  wire while_for_mux_rmff;
  wire [1:0] while_for_2_mux_16_rmff;
  wire while_for_2_mux_17_rmff;
  wire sync1_Push_mioi_bawt_iff;
  wire while_mux_1_rmff;
  wire and_tmp_pff;
  wire while_mux_2_rmff;
  wire [1:0] while_for_2_mux_18_rmff;
  wire while_for_2_mux_19_rmff;
  wire while_for_mux_4_rmff;
  wire sync2_Push_mioi_bawt_iff;
  wire while_mux_3_rmff;
  wire or_tmp_1_pff;
  wire while_mux_4_rmff;
  wire sync3_Pop_mioi_bawt_iff;
  wire run_wten_iff;
  wire while_mux_5_rmff;
  wire [1:0] while_for_2_mux_20_rmff;
  wire while_for_mux_5_rmff;
  wire while_for_2_mux_21_rmff;
  wire sync2_Push_mioi_wen_comp_iff;
  wire and_dcpl_11_pff;
  wire and_dcpl_9_pff;
  wire sync3_Pop_mioi_wen_comp_iff;
  wire while_mux_6_rmff;
  wire while_while_or_3_cse_1_pff;
  wire while_while_or_1_cse_1_pff;
  wire while_while_or_cse_1_pff;
  wire while_for_2_equal_tmp_1_mx1w1;
  reg [3:0] while_for_2_i_3_0_lpi_1;
  wire or_110_tmp;
  reg [3:0] while_for_i_3_0_lpi_1;
  reg [3:0] while_for_1_i_3_0_lpi_1;
  reg while_for_slc_while_for_acc_3_svs_st;
  reg [3:0] while_for_i_3_0_sva_1_1;
  reg while_for_1_slc_while_for_1_acc_3_svs_st_1;
  reg while_for_1_slc_while_for_1_acc_3_svs_st_2;
  wire acc_done_mx0c1;
  wire sync2_Push_mioi_iswt0_mx0c1;
  wire sync1_Push_mioi_iswt0_mx0c1;
  wire [3:0] while_for_i_3_0_lpi_1_mx0w0;
  wire [3:0] while_for_i_3_0_sva_2;
  wire [4:0] nl_while_for_i_3_0_sva_2;
  wire exitL_exit_while_for_2_sva_mx0w0;
  wire exitL_exit_while_for_2_sva_mx1c1;
  wire exitL_exit_while_for_2_sva_mx1c2;
  wire while_for_slc_while_for_acc_3_svs_st_1_mx0c1;
  wire while_stage_v_3_mx1c1;
  wire while_stage_v_4_mx1c1;
  wire while_for_1_slc_while_for_1_acc_3_svs_st_1_mx0c1;
  wire while_for_acc_itm_3_1;
  wire while_for_2_acc_itm_3_1;
  wire while_for_1_acc_itm_3_1;

  wire while_and_nl;
  wire while_and_15_nl;
  wire while_for_while_for_mux_nl;
  wire while_for_and_nl;
  wire while_and_18_nl;
  wire while_and_19_nl;
  wire[3:0] while_for_while_for_and_nl;
  wire while_for_2_i_and_2_nl;
  wire mux_45_nl;
  wire nor_29_nl;
  wire nor_30_nl;
  wire mux_44_nl;
  wire or_94_nl;
  wire nor_35_nl;
  wire and_83_nl;
  wire[3:0] while_for_acc_nl;
  wire[4:0] nl_while_for_acc_nl;
  wire[3:0] while_for_i_mux_nl;
  wire while_for_2_while_for_2_nor_3_nl;
  wire while_for_2_and_16_nl;
  wire[1:0] while_for_2_and_4_nl;
  wire[1:0] while_for_2_mux_nl;
  wire while_for_2_not_9_nl;
  wire[3:0] while_for_2_acc_nl;
  wire[4:0] nl_while_for_2_acc_nl;
  wire while_for_2_mux_6_nl;
  wire[3:0] while_for_1_acc_nl;
  wire[4:0] nl_while_for_1_acc_nl;
  wire or_56_nl;
  wire or_54_nl;
  wire mux_30_nl;
  wire mux_29_nl;
  wire mux_14_nl;
  wire nor_26_nl;
  wire or_44_nl;
  wire mux_19_nl;
  wire mux_18_nl;
  wire mux_17_nl;
  wire nor_6_nl;
  wire mux_28_nl;
  wire or_75_nl;
  wire mux_27_nl;
  wire mux_26_nl;
  wire mux_34_nl;
  wire and_52_nl;
  wire mux_33_nl;
  wire mux_32_nl;
  wire mux_37_nl;
  wire and_55_nl;
  wire mux_36_nl;
  wire mux_35_nl;
  wire mux_38_nl;
  wire nor_28_nl;
  wire mux_41_nl;
  wire or_91_nl;
  wire and_66_nl;
  wire and_65_nl;

  // Interconnect Declarations for Component Instantiations 
  wire  nl_Control_run_sync1_Push_mioi_inst_sync1_Push_mioi_oswt_unreg;
  assign nl_Control_run_sync1_Push_mioi_inst_sync1_Push_mioi_oswt_unreg = ~((~ reg_while_stage_v_2_tmp)
      | reg_while_for_slc_while_for_acc_3_svs_st_1_tmp | (~ (reg_lfst_exit_while_for_2_lpi_1_dfm_st_1_1_0_tmp[1]))
      | reg_lfst_exit_while_for_2_lpi_1_dfm_st_1_2_tmp | (reg_lfst_exit_while_for_2_lpi_1_dfm_st_1_1_0_tmp[0])
      | (~(sync1_Push_mioi_bawt & and_tmp)));
  wire  nl_Control_run_sync1_Push_mioi_inst_sync1_Push_mioi_oswt_unreg_pff;
  assign nl_Control_run_sync1_Push_mioi_inst_sync1_Push_mioi_oswt_unreg_pff = ~((~
      while_mux_rmff) | while_for_mux_rmff | (~ (while_for_2_mux_16_rmff[1])) | while_for_2_mux_17_rmff
      | (while_for_2_mux_16_rmff[0]) | (~(sync1_Push_mioi_bawt_iff & and_tmp_pff)));
  wire  nl_Control_run_sync2_Push_mioi_inst_sync2_Push_mioi_oswt_unreg_pff;
  assign nl_Control_run_sync2_Push_mioi_inst_sync2_Push_mioi_oswt_unreg_pff = ~((and_dcpl_11_pff
      & and_dcpl_9_pff & while_mux_4_rmff) | while_for_2_mux_19_rmff | while_for_mux_4_rmff
      | (~ sync2_Push_mioi_bawt_iff) | (while_for_2_mux_18_rmff!=2'b10) | (~ while_mux_2_rmff));
  wire  nl_Control_run_sync3_Pop_mioi_inst_sync3_Pop_mioi_oswt_unreg;
  assign nl_Control_run_sync3_Pop_mioi_inst_sync3_Pop_mioi_oswt_unreg = ~(reg_lfst_exit_while_for_2_lpi_1_dfm_st_3_2_tmp
      | (reg_lfst_exit_while_for_2_lpi_1_dfm_st_3_1_0_tmp!=2'b10) | reg_while_for_slc_while_for_acc_3_svs_st_3_tmp
      | (~ sync3_Pop_mioi_bawt) | (~ reg_while_stage_v_4_tmp));
  wire  nl_Control_run_sync3_Pop_mioi_inst_sync3_Pop_mioi_oswt_unreg_pff;
  assign nl_Control_run_sync3_Pop_mioi_inst_sync3_Pop_mioi_oswt_unreg_pff = ~(while_for_2_mux_21_rmff
      | (while_for_2_mux_20_rmff!=2'b10) | while_for_mux_5_rmff | (~ sync3_Pop_mioi_bawt_iff)
      | (~ while_mux_4_rmff));
  wire  nl_Control_run_staller_inst_run_flen_unreg;
  assign nl_Control_run_staller_inst_run_flen_unreg = ~(((~(reg_while_stage_v_1_tmp
      & or_dcpl_13)) & while_while_or_3_cse_1 & while_while_or_1_cse_1 & while_while_or_cse_1)
      | (reg_while_stage_v_1_tmp & (~(reg_while_stage_v_2_tmp & or_dcpl_12)) & while_while_or_3_cse_1
      & while_while_or_1_cse_1 & while_while_or_cse_1) | (reg_while_stage_v_2_tmp
      & (~(reg_while_stage_v_3_tmp & or_dcpl_14)) & while_while_or_3_cse_1 & while_while_or_1_cse_1
      & while_while_or_cse_1) | (reg_while_stage_v_3_tmp & (~(reg_while_stage_v_4_tmp
      & and_dcpl_37)) & while_while_or_1_cse_1 & while_while_or_cse_1) | (reg_while_stage_v_4_tmp
      & while_while_or_cse_1));
  wire  nl_Control_run_staller_inst_run_flen_unreg_pff;
  assign nl_Control_run_staller_inst_run_flen_unreg_pff = ~(((~(while_mux_6_rmff
      & (~(((~ while_mux_rmff) | while_for_mux_rmff | (~ (while_for_2_mux_16_rmff[1]))
      | while_for_2_mux_17_rmff | (while_for_2_mux_16_rmff[0]) | sync1_Push_mioi_bawt_iff)
      & and_tmp_pff)))) & while_while_or_3_cse_1_pff & while_while_or_1_cse_1_pff
      & while_while_or_cse_1_pff) | (while_mux_6_rmff & (~(while_mux_rmff & (~((while_for_mux_rmff
      | (~ (while_for_2_mux_16_rmff[1])) | while_for_2_mux_17_rmff | (while_for_2_mux_16_rmff[0])
      | sync1_Push_mioi_bawt_iff) & and_tmp_pff)))) & while_while_or_3_cse_1_pff
      & while_while_or_1_cse_1_pff & while_while_or_cse_1_pff) | (while_mux_rmff
      & (~(while_mux_2_rmff & (~(((while_for_2_mux_18_rmff!=2'b10) | sync2_Push_mioi_bawt_iff
      | while_for_mux_4_rmff | while_for_2_mux_19_rmff) & or_tmp_1_pff)))) & while_while_or_3_cse_1_pff
      & while_while_or_1_cse_1_pff & while_while_or_cse_1_pff) | (while_mux_2_rmff
      & (~(while_mux_4_rmff & and_dcpl_11_pff & and_dcpl_9_pff)) & while_while_or_1_cse_1_pff
      & while_while_or_cse_1_pff) | (while_mux_4_rmff & while_while_or_cse_1_pff));
  Control_run_sync1_Push_mioi Control_run_sync1_Push_mioi_inst (
      .clk(clk),
      .rst(rst),
      .sync1_val(sync1_val),
      .sync1_rdy(sync1_rdy),
      .sync1_msg(sync1_msg),
      .run_wen(run_wen),
      .sync1_Push_mioi_oswt_unreg(nl_Control_run_sync1_Push_mioi_inst_sync1_Push_mioi_oswt_unreg),
      .sync1_Push_mioi_bawt(sync1_Push_mioi_bawt),
      .sync1_Push_mioi_iswt0(reg_sync1_Push_mioi_iswt0_tmp),
      .sync1_Push_mioi_wen_comp(sync1_Push_mioi_wen_comp),
      .sync1_Push_mioi_irdy(sync1_Push_mioi_irdy),
      .sync1_Push_mioi_irdy_oreg(sync1_Push_mioi_irdy_oreg),
      .sync1_Push_mioi_wen_comp_pff(sync1_Push_mioi_wen_comp_iff),
      .sync1_Push_mioi_oswt_unreg_pff(nl_Control_run_sync1_Push_mioi_inst_sync1_Push_mioi_oswt_unreg_pff),
      .sync1_Push_mioi_bawt_pff(sync1_Push_mioi_bawt_iff),
      .sync1_Push_mioi_iswt0_pff(while_mux_1_rmff),
      .sync1_Push_mioi_irdy_oreg_pff(sync1_Push_mioi_irdy)
    );
  Control_run_wait_dp Control_run_wait_dp_inst (
      .clk(clk),
      .rst(rst),
      .sync1_Push_mioi_irdy(sync1_Push_mioi_irdy),
      .sync1_Push_mioi_irdy_oreg(sync1_Push_mioi_irdy_oreg),
      .sync2_Push_mioi_irdy(sync2_Push_mioi_irdy),
      .sync2_Push_mioi_irdy_oreg(sync2_Push_mioi_irdy_oreg),
      .sync3_Pop_mioi_ivld(sync3_Pop_mioi_ivld),
      .sync3_Pop_mioi_ivld_oreg(sync3_Pop_mioi_ivld_oreg)
    );
  Control_run_sync2_Push_mioi Control_run_sync2_Push_mioi_inst (
      .clk(clk),
      .rst(rst),
      .sync2_val(sync2_val),
      .sync2_rdy(sync2_rdy),
      .sync2_msg(sync2_msg),
      .run_wen(run_wen),
      .sync2_Push_mioi_oswt_unreg(sync1_write_reset_check_reset_while_nor_1_rmff),
      .sync2_Push_mioi_bawt(sync2_Push_mioi_bawt),
      .sync2_Push_mioi_iswt0(reg_sync2_Push_mioi_iswt0_tmp),
      .sync2_Push_mioi_wen_comp(sync2_Push_mioi_wen_comp),
      .sync2_Push_mioi_irdy(sync2_Push_mioi_irdy),
      .sync2_Push_mioi_irdy_oreg(sync2_Push_mioi_irdy_oreg),
      .sync2_Push_mioi_bawt_pff(sync2_Push_mioi_bawt_iff),
      .sync2_Push_mioi_iswt0_pff(while_mux_3_rmff),
      .sync2_Push_mioi_irdy_oreg_pff(sync2_Push_mioi_irdy),
      .sync2_Push_mioi_wen_comp_pff(sync2_Push_mioi_wen_comp_iff),
      .sync2_Push_mioi_oswt_unreg_pff(nl_Control_run_sync2_Push_mioi_inst_sync2_Push_mioi_oswt_unreg_pff)
    );
  Control_run_sync3_Pop_mioi Control_run_sync3_Pop_mioi_inst (
      .clk(clk),
      .rst(rst),
      .sync3_val(sync3_val),
      .sync3_rdy(sync3_rdy),
      .sync3_msg(sync3_msg),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .sync3_Pop_mioi_oswt_unreg(nl_Control_run_sync3_Pop_mioi_inst_sync3_Pop_mioi_oswt_unreg),
      .sync3_Pop_mioi_bawt(sync3_Pop_mioi_bawt),
      .sync3_Pop_mioi_iswt0(reg_sync3_Pop_mioi_iswt0_tmp),
      .sync3_Pop_mioi_wen_comp(sync3_Pop_mioi_wen_comp),
      .sync3_Pop_mioi_ivld(sync3_Pop_mioi_ivld),
      .sync3_Pop_mioi_ivld_oreg(sync3_Pop_mioi_ivld_oreg),
      .sync3_Pop_mioi_bawt_pff(sync3_Pop_mioi_bawt_iff),
      .run_wten_pff(run_wten_iff),
      .sync3_Pop_mioi_iswt0_pff(while_mux_5_rmff),
      .sync3_Pop_mioi_ivld_oreg_pff(sync3_Pop_mioi_ivld),
      .sync3_Pop_mioi_wen_comp_pff(sync3_Pop_mioi_wen_comp_iff),
      .sync3_Pop_mioi_oswt_unreg_pff(nl_Control_run_sync3_Pop_mioi_inst_sync3_Pop_mioi_oswt_unreg_pff)
    );
  Control_run_staller Control_run_staller_inst (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen_rtff),
      .run_wten(run_wten),
      .sync1_Push_mioi_wen_comp(sync1_Push_mioi_wen_comp),
      .sync2_Push_mioi_wen_comp(sync2_Push_mioi_wen_comp),
      .sync3_Pop_mioi_wen_comp(sync3_Pop_mioi_wen_comp),
      .run_flen_unreg(nl_Control_run_staller_inst_run_flen_unreg),
      .sync1_Push_mioi_wen_comp_pff(sync1_Push_mioi_wen_comp_iff),
      .run_wten_pff(run_wten_iff),
      .sync2_Push_mioi_wen_comp_pff(sync2_Push_mioi_wen_comp_iff),
      .sync3_Pop_mioi_wen_comp_pff(sync3_Pop_mioi_wen_comp_iff),
      .run_flen_unreg_pff(nl_Control_run_staller_inst_run_flen_unreg_pff)
    );
  assign sync1_write_reset_check_reset_while_nor_1_rmff = ~(and_dcpl_12 | reg_lfst_exit_while_for_2_lpi_1_dfm_st_2_2_tmp
      | reg_while_for_slc_while_for_acc_3_svs_st_2_tmp | (~ sync2_Push_mioi_bawt)
      | (reg_lfst_exit_while_for_2_lpi_1_dfm_st_2_1_0_tmp!=2'b10) | (~ reg_while_stage_v_3_tmp));
  assign while_mux_5_rmff = MUX_s_1_2_2(reg_sync3_Pop_mioi_iswt0_tmp, sync1_write_reset_check_reset_while_nor_1_rmff,
      run_wen);
  assign while_and_nl = run_wen & ((and_tmp & and_dcpl_17) | sync2_Push_mioi_iswt0_mx0c1);
  assign while_mux_3_rmff = MUX_s_1_2_2(reg_sync2_Push_mioi_iswt0_tmp, (~ sync2_Push_mioi_iswt0_mx0c1),
      while_and_nl);
  assign or_62_cse = nor_tmp_1 | (while_for_2_mux_3_tmp!=2'b10) | while_for_2_equal_tmp_2_1;
  assign while_and_15_nl = run_wen & (((~ mux_tmp_16) & reg_while_stage_v_1_tmp &
      (~ while_for_acc_itm_3_1)) | sync1_Push_mioi_iswt0_mx0c1);
  assign while_mux_1_rmff = MUX_s_1_2_2(reg_sync1_Push_mioi_iswt0_tmp, (~ sync1_Push_mioi_iswt0_mx0c1),
      while_and_15_nl);
  assign while_for_i_and_cse = run_wen & (~ or_dcpl_12);
  assign while_for_2_and_6_cse = run_wen & (and_dcpl_29 | and_dcpl_30);
  assign while_and_16_cse = run_wen & and_tmp_14;
  assign while_mux_6_rmff = reg_while_stage_v_1_tmp | while_and_16_cse;
  assign while_mux_rmff = MUX_s_1_2_2(reg_while_stage_v_2_tmp, (~ and_dcpl_29), while_for_2_and_6_cse);
  assign while_for_while_for_mux_nl = MUX_s_1_2_2(while_for_acc_itm_3_1, while_for_slc_while_for_acc_3_svs_st,
      while_for_slc_while_for_acc_3_svs_st_1_mx0c1);
  assign while_for_and_nl = run_wen & (((~ mux_tmp_16) & reg_while_stage_v_1_tmp)
      | while_for_slc_while_for_acc_3_svs_st_1_mx0c1);
  assign while_for_mux_rmff = MUX_s_1_2_2(reg_while_for_slc_while_for_acc_3_svs_st_1_tmp,
      while_for_while_for_mux_nl, while_for_and_nl);
  assign while_for_2_and_9_cse = run_wen & (~ or_dcpl_13);
  assign while_for_2_mux_17_rmff = MUX_s_1_2_2(reg_lfst_exit_while_for_2_lpi_1_dfm_st_1_2_tmp,
      lfst_exit_while_for_2_lpi_1_dfm_2_mx1w2, while_for_2_and_9_cse);
  assign while_for_2_mux_16_rmff = MUX_v_2_2_2(reg_lfst_exit_while_for_2_lpi_1_dfm_st_1_1_0_tmp,
      lfst_exit_while_for_2_lpi_1_dfm_1_0_mx1w1, while_for_2_and_9_cse);
  assign while_and_18_nl = run_wen & ((and_tmp_4 & reg_while_stage_v_2_tmp) | while_stage_v_3_mx1c1);
  assign while_mux_2_rmff = MUX_s_1_2_2(reg_while_stage_v_3_tmp, (~ while_stage_v_3_mx1c1),
      while_and_18_nl);
  assign while_for_mux_4_rmff = MUX_s_1_2_2(reg_while_for_slc_while_for_acc_3_svs_st_2_tmp,
      reg_while_for_slc_while_for_acc_3_svs_st_1_tmp, while_for_i_and_cse);
  assign while_for_2_mux_19_rmff = MUX_s_1_2_2(reg_lfst_exit_while_for_2_lpi_1_dfm_st_2_2_tmp,
      reg_lfst_exit_while_for_2_lpi_1_dfm_st_1_2_tmp, while_for_i_and_cse);
  assign while_for_2_mux_18_rmff = MUX_v_2_2_2(reg_lfst_exit_while_for_2_lpi_1_dfm_st_2_1_0_tmp,
      reg_lfst_exit_while_for_2_lpi_1_dfm_st_1_1_0_tmp, while_for_i_and_cse);
  assign while_and_19_nl = run_wen & ((reg_while_stage_v_3_tmp & and_tmp_22) | while_stage_v_4_mx1c1);
  assign while_mux_4_rmff = MUX_s_1_2_2(reg_while_stage_v_4_tmp, (~ while_stage_v_4_mx1c1),
      while_and_19_nl);
  assign while_for_and_3_cse = run_wen & (~ or_dcpl_14);
  assign while_for_mux_5_rmff = MUX_s_1_2_2(reg_while_for_slc_while_for_acc_3_svs_st_3_tmp,
      reg_while_for_slc_while_for_acc_3_svs_st_2_tmp, while_for_and_3_cse);
  assign while_for_2_mux_21_rmff = MUX_s_1_2_2(reg_lfst_exit_while_for_2_lpi_1_dfm_st_3_2_tmp,
      reg_lfst_exit_while_for_2_lpi_1_dfm_st_2_2_tmp, while_for_and_3_cse);
  assign while_for_2_mux_20_rmff = MUX_v_2_2_2(reg_lfst_exit_while_for_2_lpi_1_dfm_st_3_1_0_tmp,
      reg_lfst_exit_while_for_2_lpi_1_dfm_st_2_1_0_tmp, while_for_and_3_cse);
  assign or_7_cse = (~ while_for_2_equal_tmp_1) | while_for_slc_while_for_acc_3_svs_1;
  assign or_110_tmp = (while_for_2_or_tmp_1 & (~ acc_start)) | lfst_exit_while_for_2_lpi_1_dfm_5_2
      | while_for_2_equal_tmp_2_1;
  assign nor_35_nl = ~(while_for_2_equal_tmp_1 | or_110_tmp);
  assign and_83_nl = while_for_2_equal_tmp_1 & (~ or_110_tmp);
  assign while_for_i_3_0_lpi_1_mx0w0 = MUX1HOT_v_4_3_2((signext_4_1(~ acc_start)),
      while_for_i_3_0_sva_1_1, while_for_i_3_0_lpi_1, {nor_35_nl , and_83_nl , or_110_tmp});
  assign nl_while_for_acc_nl = 4'b1011 + conv_u2s_3_4(while_for_i_3_0_sva_2[3:1]);
  assign while_for_acc_nl = nl_while_for_acc_nl[3:0];
  assign while_for_acc_itm_3_1 = readslicef_4_1_3(while_for_acc_nl);
  assign while_for_i_mux_nl = MUX_v_4_2_2(while_for_i_3_0_lpi_1, while_for_i_3_0_lpi_1_mx0w0,
      reg_while_stage_v_2_tmp);
  assign nl_while_for_i_3_0_sva_2 = while_for_i_mux_nl + 4'b0001;
  assign while_for_i_3_0_sva_2 = nl_while_for_i_3_0_sva_2[3:0];
  assign while_for_2_or_5_tmp = (while_for_slc_while_for_acc_3_svs_1 & while_for_2_equal_tmp_1)
      | (while_for_1_slc_while_for_1_acc_3_svs_1 & lfst_exit_while_for_2_lpi_1_dfm_5_2);
  assign while_for_2_while_for_2_nor_3_nl = ~(acc_start | while_for_2_or_5_tmp);
  assign while_for_2_and_16_nl = acc_start & (~ while_for_2_or_5_tmp);
  assign while_for_2_mux_3_tmp = MUX1HOT_v_2_3_2(2'b01, 2'b10, lfst_exit_while_for_2_lpi_1_dfm_5_1_0,
      {while_for_2_while_for_2_nor_3_nl , while_for_2_and_16_nl , while_for_2_or_5_tmp});
  assign while_for_2_and_4_nl = while_for_2_mux_3_tmp & (signext_2_1(~ while_for_2_equal_tmp_2_1))
      & (signext_2_1(~ while_for_2_and_2_ssc_1));
  assign lfst_exit_while_for_2_lpi_1_dfm_5_1_0_mx0w0 = MUX_v_2_2_2(while_for_2_and_4_nl,
      2'b11, while_for_2_and_ssc_1);
  assign while_for_2_mux_nl = MUX_v_2_2_2(lfst_exit_while_for_2_lpi_1_dfm_5_1_0,
      lfst_exit_while_for_2_lpi_1_dfm_5_1_0_mx0w0, reg_while_stage_v_2_tmp);
  assign while_for_2_not_9_nl = ~ exitL_exit_while_for_2_sva_mx0;
  assign lfst_exit_while_for_2_lpi_1_dfm_1_0_mx1w1 = MUX_v_2_2_2(2'b00, while_for_2_mux_nl,
      while_for_2_not_9_nl);
  assign exitL_exit_while_for_2_sva_mx0w0 = ~(lfst_exit_while_for_2_lpi_1_dfm_5_2_mx0w0
      | (lfst_exit_while_for_2_lpi_1_dfm_5_1_0_mx0w0!=2'b00));
  assign exitL_exit_while_for_2_sva_mx0 = MUX_s_1_2_2(exitL_exit_while_for_2_sva,
      exitL_exit_while_for_2_sva_mx0w0, reg_while_stage_v_2_tmp);
  assign nl_while_for_2_acc_nl = 4'b1011 + conv_u2s_3_4(while_for_2_i_3_0_sva_2[3:1]);
  assign while_for_2_acc_nl = nl_while_for_2_acc_nl[3:0];
  assign while_for_2_acc_itm_3_1 = readslicef_4_1_3(while_for_2_acc_nl);
  assign while_for_2_mux_6_nl = MUX_s_1_2_2(lfst_exit_while_for_2_lpi_1_dfm_5_2,
      lfst_exit_while_for_2_lpi_1_dfm_5_2_mx0w0, reg_while_stage_v_2_tmp);
  assign lfst_exit_while_for_2_lpi_1_dfm_2_mx1w2 = while_for_2_mux_6_nl & (~ exitL_exit_while_for_2_sva_mx0);
  assign lfst_exit_while_for_2_lpi_1_dfm_5_2_mx0w0 = (exitL_exit_while_for_2_sva
      & (~(while_for_2_or_tmp_1 | while_for_2_and_ssc_1))) | while_for_2_and_2_ssc_1;
  assign while_for_2_equal_tmp_1_mx1w1 = (lfst_exit_while_for_2_lpi_1_dfm_1_0_mx1w1==2'b11)
      & (~ lfst_exit_while_for_2_lpi_1_dfm_2_mx1w2);
  assign while_for_2_or_tmp_mx0w0 = ((lfst_exit_while_for_2_lpi_1_dfm_1_0_mx1w1[0])
      & (~(lfst_exit_while_for_2_lpi_1_dfm_2_mx1w2 | (lfst_exit_while_for_2_lpi_1_dfm_1_0_mx1w1[1]))))
      | (~(lfst_exit_while_for_2_lpi_1_dfm_2_mx1w2 | (lfst_exit_while_for_2_lpi_1_dfm_1_0_mx1w1!=2'b00)));
  assign while_for_2_equal_tmp_mx0w0 = (lfst_exit_while_for_2_lpi_1_dfm_1_0_mx1w1[1])
      & (~(lfst_exit_while_for_2_lpi_1_dfm_2_mx1w2 | (lfst_exit_while_for_2_lpi_1_dfm_1_0_mx1w1[0])));
  assign while_for_2_equal_tmp_2_mx0w0 = lfst_exit_while_for_2_lpi_1_dfm_2_mx1w2
      & (lfst_exit_while_for_2_lpi_1_dfm_1_0_mx1w1==2'b00);
  assign while_for_2_and_ssc_1 = (~ while_for_slc_while_for_acc_3_svs_1) & while_for_2_equal_tmp_1;
  assign while_for_2_and_2_ssc_1 = (~ while_for_1_slc_while_for_1_acc_3_svs_1) &
      lfst_exit_while_for_2_lpi_1_dfm_5_2;
  assign nl_while_for_1_acc_nl = 4'b1011 + conv_u2s_3_4(while_for_1_i_3_0_sva_2[3:1]);
  assign while_for_1_acc_nl = nl_while_for_1_acc_nl[3:0];
  assign while_for_1_acc_itm_3_1 = readslicef_4_1_3(while_for_1_acc_nl);
  assign while_while_or_3_cse_1 = sync1_Push_mioi_bawt | (~((~ reg_while_for_slc_while_for_acc_3_svs_st_1_tmp)
      & (reg_lfst_exit_while_for_2_lpi_1_dfm_st_1_1_0_tmp[1]) & (~(reg_lfst_exit_while_for_2_lpi_1_dfm_st_1_2_tmp
      | (reg_lfst_exit_while_for_2_lpi_1_dfm_st_1_1_0_tmp[0]))) & reg_while_stage_v_2_tmp));
  assign while_while_or_1_cse_1 = sync2_Push_mioi_bawt | (~((~ reg_while_for_slc_while_for_acc_3_svs_st_2_tmp)
      & (reg_lfst_exit_while_for_2_lpi_1_dfm_st_2_1_0_tmp[1]) & (~(reg_lfst_exit_while_for_2_lpi_1_dfm_st_2_2_tmp
      | (reg_lfst_exit_while_for_2_lpi_1_dfm_st_2_1_0_tmp[0]))) & reg_while_stage_v_3_tmp));
  assign while_while_or_cse_1 = sync3_Pop_mioi_bawt | (~((~ reg_while_for_slc_while_for_acc_3_svs_st_3_tmp)
      & (reg_lfst_exit_while_for_2_lpi_1_dfm_st_3_1_0_tmp[1]) & (~(reg_lfst_exit_while_for_2_lpi_1_dfm_st_3_2_tmp
      | (reg_lfst_exit_while_for_2_lpi_1_dfm_st_3_1_0_tmp[0]))) & reg_while_stage_v_4_tmp));
  assign nl_while_for_1_i_3_0_sva_2 = while_for_1_i_3_0_lpi_1 + 4'b0001;
  assign while_for_1_i_3_0_sva_2 = nl_while_for_1_i_3_0_sva_2[3:0];
  assign nl_while_for_2_i_3_0_sva_2 = while_for_2_i_3_0_lpi_1 + 4'b0001;
  assign while_for_2_i_3_0_sva_2 = nl_while_for_2_i_3_0_sva_2[3:0];
  assign or_tmp_1 = (~ reg_while_stage_v_4_tmp) | sync3_Pop_mioi_bawt | (reg_lfst_exit_while_for_2_lpi_1_dfm_st_3_1_0_tmp[0])
      | reg_while_for_slc_while_for_acc_3_svs_st_3_tmp | (~ (reg_lfst_exit_while_for_2_lpi_1_dfm_st_3_1_0_tmp[1]))
      | reg_lfst_exit_while_for_2_lpi_1_dfm_st_3_2_tmp;
  assign and_tmp = ((~ reg_while_stage_v_3_tmp) | (reg_lfst_exit_while_for_2_lpi_1_dfm_st_2_1_0_tmp!=2'b10)
      | reg_lfst_exit_while_for_2_lpi_1_dfm_st_2_2_tmp | reg_while_for_slc_while_for_acc_3_svs_st_2_tmp
      | sync2_Push_mioi_bawt) & or_tmp_1;
  assign and_tmp_4 = (reg_while_for_slc_while_for_acc_3_svs_st_1_tmp | (~ (reg_lfst_exit_while_for_2_lpi_1_dfm_st_1_1_0_tmp[1]))
      | reg_lfst_exit_while_for_2_lpi_1_dfm_st_1_2_tmp | (reg_lfst_exit_while_for_2_lpi_1_dfm_st_1_1_0_tmp[0])
      | sync1_Push_mioi_bawt) & and_tmp;
  assign and_dcpl_2 = (~ reg_lfst_exit_while_for_2_lpi_1_dfm_st_3_2_tmp) & (reg_lfst_exit_while_for_2_lpi_1_dfm_st_3_1_0_tmp[1]);
  assign and_dcpl_9 = ~(reg_while_for_slc_while_for_acc_3_svs_st_3_tmp | sync3_Pop_mioi_bawt);
  assign and_dcpl_11 = and_dcpl_2 & (~ (reg_lfst_exit_while_for_2_lpi_1_dfm_st_3_1_0_tmp[0]));
  assign and_dcpl_12 = and_dcpl_11 & and_dcpl_9 & reg_while_stage_v_4_tmp;
  assign and_dcpl_17 = sync1_Push_mioi_bawt & (~ (reg_lfst_exit_while_for_2_lpi_1_dfm_st_1_1_0_tmp[0]))
      & (~ reg_lfst_exit_while_for_2_lpi_1_dfm_st_1_2_tmp) & (reg_lfst_exit_while_for_2_lpi_1_dfm_st_1_1_0_tmp[1])
      & (~ reg_while_for_slc_while_for_acc_3_svs_st_1_tmp) & reg_while_stage_v_2_tmp;
  assign nor_tmp = ~(while_for_1_slc_while_for_1_acc_3_svs_1 | (~ lfst_exit_while_for_2_lpi_1_dfm_5_2));
  assign nor_tmp_1 = ~(while_for_2_or_tmp_1 | (~ exitL_exit_while_for_2_sva));
  assign and_tmp_12 = or_7_cse & and_tmp_4;
  assign or_56_nl = lfst_exit_while_for_2_lpi_1_dfm_5_2 | (lfst_exit_while_for_2_lpi_1_dfm_5_1_0!=2'b10)
      | exitL_exit_while_for_2_sva | (~ and_tmp);
  assign or_54_nl = nor_tmp | nor_tmp_1 | (while_for_2_mux_3_tmp!=2'b10) | while_for_2_equal_tmp_2_1
      | (~ and_tmp_12);
  assign mux_tmp_16 = MUX_s_1_2_2(or_56_nl, or_54_nl, reg_while_stage_v_2_tmp);
  assign or_tmp_47 = or_7_cse | (~ and_tmp);
  assign or_dcpl_12 = ~(and_tmp_4 & reg_while_stage_v_2_tmp);
  assign and_dcpl_29 = and_tmp_4 & reg_while_stage_v_2_tmp & (~ reg_while_stage_v_1_tmp);
  assign and_tmp_14 = ((~ reg_while_stage_v_2_tmp) | reg_while_for_slc_while_for_acc_3_svs_st_1_tmp
      | (~ (reg_lfst_exit_while_for_2_lpi_1_dfm_st_1_1_0_tmp[1])) | reg_lfst_exit_while_for_2_lpi_1_dfm_st_1_2_tmp
      | (reg_lfst_exit_while_for_2_lpi_1_dfm_st_1_1_0_tmp[0]) | sync1_Push_mioi_bawt)
      & and_tmp;
  assign and_dcpl_30 = and_tmp_14 & reg_while_stage_v_1_tmp;
  assign or_72_cse = (~((while_for_2_mux_3_tmp!=2'b00))) | while_for_2_equal_tmp_2_1;
  assign or_tmp_60 = while_for_2_or_tmp_1 | (~(exitL_exit_while_for_2_sva & or_72_cse
      & and_tmp_12));
  assign or_tmp_66 = or_7_cse | (~ and_tmp_4);
  assign mux_29_nl = MUX_s_1_2_2(and_tmp_4, (~ or_tmp_66), or_72_cse);
  assign mux_30_nl = MUX_s_1_2_2(and_tmp_4, mux_29_nl, exitL_exit_while_for_2_sva);
  assign mux_tmp_31 = MUX_s_1_2_2(mux_30_nl, and_tmp_4, while_for_2_or_tmp_1);
  assign or_dcpl_13 = ~(and_tmp_14 & reg_while_stage_v_1_tmp);
  assign and_tmp_22 = ((reg_lfst_exit_while_for_2_lpi_1_dfm_st_2_1_0_tmp!=2'b10)
      | sync2_Push_mioi_bawt | reg_while_for_slc_while_for_acc_3_svs_st_2_tmp | reg_lfst_exit_while_for_2_lpi_1_dfm_st_2_2_tmp)
      & or_tmp_1;
  assign or_dcpl_14 = ~(and_tmp_22 & reg_while_stage_v_3_tmp);
  assign and_dcpl_37 = and_dcpl_11 & and_dcpl_9;
  assign acc_done_mx0c1 = reg_lfst_exit_while_for_2_lpi_1_dfm_st_3_2_tmp & (~ (reg_lfst_exit_while_for_2_lpi_1_dfm_st_3_1_0_tmp[1]))
      & (~ while_for_1_slc_while_for_1_acc_3_svs_st_3) & (~ (reg_lfst_exit_while_for_2_lpi_1_dfm_st_3_1_0_tmp[0]))
      & reg_while_stage_v_4_tmp;
  assign nor_26_nl = ~(sync1_Push_mioi_bawt | and_dcpl_12);
  assign or_44_nl = (~ reg_while_stage_v_2_tmp) | reg_while_for_slc_while_for_acc_3_svs_st_1_tmp
      | (~ (reg_lfst_exit_while_for_2_lpi_1_dfm_st_1_1_0_tmp[1])) | reg_lfst_exit_while_for_2_lpi_1_dfm_st_1_2_tmp
      | (reg_lfst_exit_while_for_2_lpi_1_dfm_st_1_1_0_tmp[0]);
  assign mux_14_nl = MUX_s_1_2_2(nor_26_nl, or_tmp_1, or_44_nl);
  assign sync2_Push_mioi_iswt0_mx0c1 = mux_14_nl & (~(reg_lfst_exit_while_for_2_lpi_1_dfm_st_2_2_tmp
      | reg_while_for_slc_while_for_acc_3_svs_st_2_tmp)) & sync2_Push_mioi_bawt &
      (reg_lfst_exit_while_for_2_lpi_1_dfm_st_2_1_0_tmp==2'b10) & reg_while_stage_v_3_tmp;
  assign mux_17_nl = MUX_s_1_2_2((~ or_tmp_47), and_tmp, or_62_cse);
  assign mux_18_nl = MUX_s_1_2_2(mux_17_nl, and_tmp, nor_tmp);
  assign nor_6_nl = ~(while_for_acc_itm_3_1 | (~ reg_while_stage_v_1_tmp));
  assign mux_19_nl = MUX_s_1_2_2(and_tmp, mux_18_nl, nor_6_nl);
  assign sync1_Push_mioi_iswt0_mx0c1 = mux_19_nl & and_dcpl_17;
  assign or_75_nl = (~ lfst_exit_while_for_2_lpi_1_dfm_5_2) | (lfst_exit_while_for_2_lpi_1_dfm_5_1_0!=2'b00)
      | exitL_exit_while_for_2_sva | (~ and_tmp);
  assign mux_26_nl = MUX_s_1_2_2(or_tmp_60, (~ and_tmp_12), lfst_exit_while_for_2_lpi_1_dfm_5_2);
  assign mux_27_nl = MUX_s_1_2_2(mux_26_nl, or_tmp_60, while_for_1_slc_while_for_1_acc_3_svs_1);
  assign mux_28_nl = MUX_s_1_2_2(or_75_nl, mux_27_nl, reg_while_stage_v_2_tmp);
  assign exitL_exit_while_for_2_sva_mx1c1 = (~ mux_28_nl) & reg_while_stage_v_1_tmp;
  assign and_52_nl = ((~ lfst_exit_while_for_2_lpi_1_dfm_5_2) | (lfst_exit_while_for_2_lpi_1_dfm_5_1_0!=2'b00)
      | exitL_exit_while_for_2_sva) & and_tmp;
  assign mux_32_nl = MUX_s_1_2_2(mux_tmp_31, (~ or_tmp_66), lfst_exit_while_for_2_lpi_1_dfm_5_2);
  assign mux_33_nl = MUX_s_1_2_2(mux_32_nl, mux_tmp_31, while_for_1_slc_while_for_1_acc_3_svs_1);
  assign mux_34_nl = MUX_s_1_2_2(and_52_nl, mux_33_nl, reg_while_stage_v_2_tmp);
  assign exitL_exit_while_for_2_sva_mx1c2 = mux_34_nl & reg_while_stage_v_1_tmp;
  assign and_55_nl = (lfst_exit_while_for_2_lpi_1_dfm_5_2 | (lfst_exit_while_for_2_lpi_1_dfm_5_1_0!=2'b10)
      | exitL_exit_while_for_2_sva) & and_tmp;
  assign mux_35_nl = MUX_s_1_2_2((~ or_tmp_66), and_tmp_4, or_62_cse);
  assign mux_36_nl = MUX_s_1_2_2(mux_35_nl, and_tmp_4, nor_tmp);
  assign mux_37_nl = MUX_s_1_2_2(and_55_nl, mux_36_nl, reg_while_stage_v_2_tmp);
  assign while_for_slc_while_for_acc_3_svs_st_1_mx0c1 = mux_37_nl & reg_while_stage_v_1_tmp;
  assign nor_28_nl = ~(reg_while_for_slc_while_for_acc_3_svs_st_1_tmp | (~ (reg_lfst_exit_while_for_2_lpi_1_dfm_st_1_1_0_tmp[1]))
      | reg_lfst_exit_while_for_2_lpi_1_dfm_st_1_2_tmp | (reg_lfst_exit_while_for_2_lpi_1_dfm_st_1_1_0_tmp[0])
      | sync1_Push_mioi_bawt | (~ and_tmp_22));
  assign mux_38_nl = MUX_s_1_2_2(and_tmp_22, nor_28_nl, reg_while_stage_v_2_tmp);
  assign while_stage_v_3_mx1c1 = mux_38_nl & reg_while_stage_v_3_tmp;
  assign or_91_nl = (reg_lfst_exit_while_for_2_lpi_1_dfm_st_2_1_0_tmp!=2'b10) | sync2_Push_mioi_bawt
      | reg_while_for_slc_while_for_acc_3_svs_st_2_tmp | reg_lfst_exit_while_for_2_lpi_1_dfm_st_2_2_tmp
      | and_dcpl_37;
  assign mux_41_nl = MUX_s_1_2_2(and_dcpl_37, or_91_nl, reg_while_stage_v_3_tmp);
  assign while_stage_v_4_mx1c1 = (~ mux_41_nl) & reg_while_stage_v_4_tmp;
  assign and_66_nl = lfst_exit_while_for_2_lpi_1_dfm_5_2 & and_tmp;
  assign and_65_nl = (nor_tmp | (~ (while_for_2_mux_3_tmp[0])) | while_for_2_equal_tmp_2_1)
      & or_7_cse & and_tmp;
  assign while_for_1_slc_while_for_1_acc_3_svs_st_1_mx0c1 = MUX_s_1_2_2(and_66_nl,
      and_65_nl, reg_while_stage_v_2_tmp);
  assign or_tmp_1_pff = (~ while_mux_4_rmff) | sync3_Pop_mioi_bawt_iff | (while_for_2_mux_20_rmff[0])
      | while_for_mux_5_rmff | (~ (while_for_2_mux_20_rmff[1])) | while_for_2_mux_21_rmff;
  assign and_tmp_pff = ((~ while_mux_2_rmff) | (while_for_2_mux_18_rmff!=2'b10) |
      while_for_2_mux_19_rmff | while_for_mux_4_rmff | sync2_Push_mioi_bawt_iff)
      & or_tmp_1_pff;
  assign and_dcpl_11_pff = (~ while_for_2_mux_21_rmff) & (while_for_2_mux_20_rmff==2'b10);
  assign and_dcpl_9_pff = ~(while_for_mux_5_rmff | sync3_Pop_mioi_bawt_iff);
  assign while_while_or_3_cse_1_pff = sync1_Push_mioi_bawt_iff | (~((~ while_for_mux_rmff)
      & (while_for_2_mux_16_rmff[1]) & (~(while_for_2_mux_17_rmff | (while_for_2_mux_16_rmff[0])))
      & while_mux_rmff));
  assign while_while_or_1_cse_1_pff = sync2_Push_mioi_bawt_iff | (~((~ while_for_mux_4_rmff)
      & (while_for_2_mux_18_rmff[1]) & (~(while_for_2_mux_19_rmff | (while_for_2_mux_18_rmff[0])))
      & while_mux_2_rmff));
  assign while_while_or_cse_1_pff = sync3_Pop_mioi_bawt_iff | (~((~ while_for_mux_5_rmff)
      & (while_for_2_mux_20_rmff[1]) & (~(while_for_2_mux_21_rmff | (while_for_2_mux_20_rmff[0])))
      & while_mux_4_rmff));
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      acc_done <= 1'b0;
    end
    else if ( run_wen & ((and_dcpl_2 & (~ while_for_1_slc_while_for_1_acc_3_svs_st_3)
        & (reg_lfst_exit_while_for_2_lpi_1_dfm_st_3_1_0_tmp[0]) & reg_while_stage_v_4_tmp)
        | acc_done_mx0c1) ) begin
      acc_done <= ~ acc_done_mx0c1;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      reg_sync3_Pop_mioi_iswt0_tmp <= 1'b0;
      reg_sync2_Push_mioi_iswt0_tmp <= 1'b0;
      reg_sync1_Push_mioi_iswt0_tmp <= 1'b0;
      reg_while_stage_v_1_tmp <= 1'b0;
      reg_while_stage_v_2_tmp <= 1'b0;
      reg_while_for_slc_while_for_acc_3_svs_st_1_tmp <= 1'b0;
      reg_lfst_exit_while_for_2_lpi_1_dfm_st_1_2_tmp <= 1'b0;
      reg_lfst_exit_while_for_2_lpi_1_dfm_st_1_1_0_tmp <= 2'b00;
      reg_while_stage_v_3_tmp <= 1'b0;
      reg_while_for_slc_while_for_acc_3_svs_st_2_tmp <= 1'b0;
      reg_lfst_exit_while_for_2_lpi_1_dfm_st_2_2_tmp <= 1'b0;
      reg_lfst_exit_while_for_2_lpi_1_dfm_st_2_1_0_tmp <= 2'b00;
      reg_while_stage_v_4_tmp <= 1'b0;
      reg_while_for_slc_while_for_acc_3_svs_st_3_tmp <= 1'b0;
      reg_lfst_exit_while_for_2_lpi_1_dfm_st_3_2_tmp <= 1'b0;
      reg_lfst_exit_while_for_2_lpi_1_dfm_st_3_1_0_tmp <= 2'b00;
      run_wen <= 1'b1;
    end
    else begin
      reg_sync3_Pop_mioi_iswt0_tmp <= while_mux_5_rmff;
      reg_sync2_Push_mioi_iswt0_tmp <= while_mux_3_rmff;
      reg_sync1_Push_mioi_iswt0_tmp <= while_mux_1_rmff;
      reg_while_stage_v_1_tmp <= while_mux_6_rmff;
      reg_while_stage_v_2_tmp <= while_mux_rmff;
      reg_while_for_slc_while_for_acc_3_svs_st_1_tmp <= while_for_mux_rmff;
      reg_lfst_exit_while_for_2_lpi_1_dfm_st_1_2_tmp <= while_for_2_mux_17_rmff;
      reg_lfst_exit_while_for_2_lpi_1_dfm_st_1_1_0_tmp <= while_for_2_mux_16_rmff;
      reg_while_stage_v_3_tmp <= while_mux_2_rmff;
      reg_while_for_slc_while_for_acc_3_svs_st_2_tmp <= while_for_mux_4_rmff;
      reg_lfst_exit_while_for_2_lpi_1_dfm_st_2_2_tmp <= while_for_2_mux_19_rmff;
      reg_lfst_exit_while_for_2_lpi_1_dfm_st_2_1_0_tmp <= while_for_2_mux_18_rmff;
      reg_while_stage_v_4_tmp <= while_mux_4_rmff;
      reg_while_for_slc_while_for_acc_3_svs_st_3_tmp <= while_for_mux_5_rmff;
      reg_lfst_exit_while_for_2_lpi_1_dfm_st_3_2_tmp <= while_for_2_mux_21_rmff;
      reg_lfst_exit_while_for_2_lpi_1_dfm_st_3_1_0_tmp <= while_for_2_mux_20_rmff;
      run_wen <= run_wen_rtff;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_for_i_3_0_lpi_1 <= 4'b0000;
    end
    else if ( while_for_i_and_cse ) begin
      while_for_i_3_0_lpi_1 <= while_for_i_3_0_lpi_1_mx0w0;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      lfst_exit_while_for_2_lpi_1_dfm_5_1_0 <= 2'b00;
      lfst_exit_while_for_2_lpi_1_dfm_5_2 <= 1'b0;
    end
    else if ( while_for_2_and_6_cse ) begin
      lfst_exit_while_for_2_lpi_1_dfm_5_1_0 <= MUX_v_2_2_2(lfst_exit_while_for_2_lpi_1_dfm_5_1_0_mx0w0,
          lfst_exit_while_for_2_lpi_1_dfm_1_0_mx1w1, and_dcpl_30);
      lfst_exit_while_for_2_lpi_1_dfm_5_2 <= MUX_s_1_2_2(lfst_exit_while_for_2_lpi_1_dfm_5_2_mx0w0,
          while_for_2_equal_tmp_1_mx1w1, and_dcpl_30);
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      exitL_exit_while_for_2_sva <= 1'b1;
    end
    else if ( run_wen & (and_dcpl_29 | exitL_exit_while_for_2_sva_mx1c1 | exitL_exit_while_for_2_sva_mx1c2)
        ) begin
      exitL_exit_while_for_2_sva <= MUX1HOT_s_1_3_2(exitL_exit_while_for_2_sva_mx0w0,
          while_for_2_acc_itm_3_1, lfst_exit_while_for_2_lpi_1_dfm_2_mx1w2, {and_dcpl_29
          , exitL_exit_while_for_2_sva_mx1c1 , exitL_exit_while_for_2_sva_mx1c2});
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_for_2_or_tmp_1 <= 1'b0;
      while_for_i_3_0_sva_1_1 <= 4'b0000;
      while_for_2_equal_tmp_1 <= 1'b0;
      while_for_2_equal_tmp_2_1 <= 1'b0;
      while_for_slc_while_for_acc_3_svs_1 <= 1'b0;
      while_for_1_slc_while_for_1_acc_3_svs_1 <= 1'b0;
    end
    else if ( while_and_16_cse ) begin
      while_for_2_or_tmp_1 <= while_for_2_or_tmp_mx0w0;
      while_for_i_3_0_sva_1_1 <= while_for_i_3_0_sva_2;
      while_for_2_equal_tmp_1 <= while_for_2_equal_tmp_mx0w0;
      while_for_2_equal_tmp_2_1 <= while_for_2_equal_tmp_2_mx0w0;
      while_for_slc_while_for_acc_3_svs_1 <= while_for_acc_itm_3_1;
      while_for_1_slc_while_for_1_acc_3_svs_1 <= while_for_1_acc_itm_3_1;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_for_1_slc_while_for_1_acc_3_svs_st_3 <= 1'b0;
    end
    else if ( run_wen ) begin
      while_for_1_slc_while_for_1_acc_3_svs_st_3 <= while_for_1_slc_while_for_1_acc_3_svs_st_2;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_for_slc_while_for_acc_3_svs_st <= 1'b0;
    end
    else if ( run_wen & (~ mux_tmp_16) ) begin
      while_for_slc_while_for_acc_3_svs_st <= while_for_acc_itm_3_1;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_for_1_i_3_0_lpi_1 <= 4'b0000;
    end
    else if ( run_wen & (~(while_for_2_or_tmp_mx0w0 | while_for_2_equal_tmp_2_mx0w0
        | or_dcpl_13)) ) begin
      while_for_1_i_3_0_lpi_1 <= MUX_v_4_2_2(while_for_while_for_and_nl, while_for_1_i_3_0_sva_2,
          while_for_2_equal_tmp_1_mx1w1);
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_for_2_i_3_0_lpi_1 <= 4'b0000;
    end
    else if ( run_wen & (~((while_for_1_acc_itm_3_1 & while_for_2_equal_tmp_1_mx1w1)
        | or_dcpl_13 | while_for_2_equal_tmp_mx0w0 | while_for_2_or_tmp_mx0w0)) )
        begin
      while_for_2_i_3_0_lpi_1 <= MUX_v_4_2_2(({{3{while_for_1_acc_itm_3_1}}, while_for_1_acc_itm_3_1}),
          while_for_2_i_3_0_sva_2, while_for_2_i_and_2_nl);
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_for_1_slc_while_for_1_acc_3_svs_st_2 <= 1'b0;
    end
    else if ( run_wen & (~ and_dcpl_12) ) begin
      while_for_1_slc_while_for_1_acc_3_svs_st_2 <= while_for_1_slc_while_for_1_acc_3_svs_st_1;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_for_1_slc_while_for_1_acc_3_svs_st_1 <= 1'b0;
    end
    else if ( run_wen & (mux_45_nl | while_for_1_slc_while_for_1_acc_3_svs_st_1_mx0c1)
        ) begin
      while_for_1_slc_while_for_1_acc_3_svs_st_1 <= MUX_s_1_2_2(while_for_1_acc_itm_3_1,
          while_for_2_acc_itm_3_1, while_for_1_slc_while_for_1_acc_3_svs_st_1_mx0c1);
    end
  end
  assign while_for_while_for_and_nl = MUX_v_4_2_2(4'b0000, while_for_1_i_3_0_lpi_1,
      while_for_acc_itm_3_1);
  assign while_for_2_i_and_2_nl = while_for_2_equal_tmp_2_mx0w0 & (~ or_dcpl_13);
  assign nor_29_nl = ~(lfst_exit_while_for_2_lpi_1_dfm_5_2 | (~ and_tmp));
  assign or_94_nl = (~ (while_for_2_mux_3_tmp[0])) | while_for_2_equal_tmp_2_1;
  assign mux_44_nl = MUX_s_1_2_2((~ and_tmp), or_tmp_47, or_94_nl);
  assign nor_30_nl = ~(nor_tmp | mux_44_nl);
  assign mux_45_nl = MUX_s_1_2_2(nor_29_nl, nor_30_nl, reg_while_stage_v_2_tmp);

  function automatic  MUX1HOT_s_1_3_2;
    input  input_2;
    input  input_1;
    input  input_0;
    input [2:0] sel;
    reg  result;
  begin
    result = input_0 & sel[0];
    result = result | (input_1 & sel[1]);
    result = result | (input_2 & sel[2]);
    MUX1HOT_s_1_3_2 = result;
  end
  endfunction


  function automatic [1:0] MUX1HOT_v_2_3_2;
    input [1:0] input_2;
    input [1:0] input_1;
    input [1:0] input_0;
    input [2:0] sel;
    reg [1:0] result;
  begin
    result = input_0 & {2{sel[0]}};
    result = result | (input_1 & {2{sel[1]}});
    result = result | (input_2 & {2{sel[2]}});
    MUX1HOT_v_2_3_2 = result;
  end
  endfunction


  function automatic [3:0] MUX1HOT_v_4_3_2;
    input [3:0] input_2;
    input [3:0] input_1;
    input [3:0] input_0;
    input [2:0] sel;
    reg [3:0] result;
  begin
    result = input_0 & {4{sel[0]}};
    result = result | (input_1 & {4{sel[1]}});
    result = result | (input_2 & {4{sel[2]}});
    MUX1HOT_v_4_3_2 = result;
  end
  endfunction


  function automatic  MUX_s_1_2_2;
    input  input_0;
    input  input_1;
    input  sel;
    reg  result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_s_1_2_2 = result;
  end
  endfunction


  function automatic [1:0] MUX_v_2_2_2;
    input [1:0] input_0;
    input [1:0] input_1;
    input  sel;
    reg [1:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_2_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input  sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction


  function automatic [0:0] readslicef_4_1_3;
    input [3:0] vector;
    reg [3:0] tmp;
  begin
    tmp = vector >> 3;
    readslicef_4_1_3 = tmp[0:0];
  end
  endfunction


  function automatic [1:0] signext_2_1;
    input  vector;
  begin
    signext_2_1= {{1{vector}}, vector};
  end
  endfunction


  function automatic [3:0] signext_4_1;
    input  vector;
  begin
    signext_4_1= {{3{vector}}, vector};
  end
  endfunction


  function automatic [3:0] conv_u2s_3_4 ;
    input [2:0]  vector ;
  begin
    conv_u2s_3_4 =  {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    InputBuffer_run
// ------------------------------------------------------------------


module InputBuffer_run (
  clk, rst, cfg_block_size, cfg_input_base, sync1_val, sync1_rdy, sync1_msg, dma_read_ctrl_val,
      dma_read_ctrl_rdy, dma_read_ctrl_msg, dma_read_chnl_val, dma_read_chnl_rdy,
      dma_read_chnl_msg, rotate_in_val, rotate_in_rdy, rotate_in_msg, mem_rsci_clken_d,
      mem_rsci_d_d, mem_rsci_q_d, mem_rsci_radr_d, mem_rsci_wadr_d, mem_rsci_readA_r_ram_ir_internal_RMASK_B_d,
      mem_rsci_we_d_pff
);
  input clk;
  input rst;
  input [63:0] cfg_block_size;
  input [63:0] cfg_input_base;
  input sync1_val;
  output sync1_rdy;
  input sync1_msg;
  output dma_read_ctrl_val;
  input dma_read_ctrl_rdy;
  output [66:0] dma_read_ctrl_msg;
  input dma_read_chnl_val;
  output dma_read_chnl_rdy;
  input [63:0] dma_read_chnl_msg;
  output rotate_in_val;
  input rotate_in_rdy;
  output [1023:0] rotate_in_msg;
  output mem_rsci_clken_d;
  output [63:0] mem_rsci_d_d;
  input [63:0] mem_rsci_q_d;
  output [13:0] mem_rsci_radr_d;
  output [13:0] mem_rsci_wadr_d;
  output mem_rsci_readA_r_ram_ir_internal_RMASK_B_d;
  output mem_rsci_we_d_pff;


  // Interconnect Declarations
  reg run_wen;
  wire sync1_Pop_mioi_wen_comp;
  wire dma_read_ctrl_Push_mioi_wen_comp;
  wire dma_read_chnl_Pop_mioi_wen_comp;
  wire [63:0] dma_read_chnl_Pop_mioi_idat_mxwt;
  wire rotate_in_Push_mioi_wen_comp;
  reg [27:0] dma_read_ctrl_Push_mioi_idat_63_36;
  reg [31:0] dma_read_ctrl_Push_mioi_idat_31_0;
  reg [63:0] rotate_in_Push_mioi_idat_1023_960;
  reg [63:0] rotate_in_Push_mioi_idat_959_896;
  reg [63:0] rotate_in_Push_mioi_idat_895_832;
  reg [63:0] rotate_in_Push_mioi_idat_831_768;
  reg [63:0] rotate_in_Push_mioi_idat_767_704;
  reg [63:0] rotate_in_Push_mioi_idat_703_640;
  reg [63:0] rotate_in_Push_mioi_idat_639_576;
  reg [63:0] rotate_in_Push_mioi_idat_575_512;
  reg [63:0] rotate_in_Push_mioi_idat_511_448;
  reg [63:0] rotate_in_Push_mioi_idat_447_384;
  reg [63:0] rotate_in_Push_mioi_idat_383_320;
  reg [63:0] rotate_in_Push_mioi_idat_319_256;
  reg [63:0] rotate_in_Push_mioi_idat_255_192;
  reg [63:0] rotate_in_Push_mioi_idat_191_128;
  reg [63:0] rotate_in_Push_mioi_idat_127_64;
  reg [63:0] rotate_in_Push_mioi_idat_63_0;
  wire [8:0] fsm_output;
  wire not_tmp_7;
  wire and_dcpl_2;
  wire and_dcpl_3;
  wire and_dcpl_4;
  wire or_dcpl_29;
  wire or_dcpl_30;
  wire and_dcpl_7;
  wire and_dcpl_8;
  wire or_dcpl_31;
  wire or_dcpl_32;
  wire and_dcpl_11;
  wire and_dcpl_12;
  wire or_dcpl_33;
  wire or_dcpl_34;
  wire and_dcpl_15;
  wire and_dcpl_16;
  wire or_dcpl_36;
  wire and_dcpl_19;
  wire or_dcpl_37;
  wire or_dcpl_38;
  wire and_dcpl_22;
  wire or_dcpl_39;
  wire and_dcpl_25;
  wire or_dcpl_40;
  wire or_dcpl_41;
  wire and_dcpl_31;
  wire or_dcpl_43;
  wire or_dcpl_44;
  wire or_dcpl_45;
  wire or_dcpl_46;
  wire or_dcpl_47;
  wire or_dcpl_48;
  wire or_dcpl_49;
  wire or_dcpl_50;
  wire exit_while_for_1_sva_mx0;
  wire exit_while_for_sva_mx0;
  reg [3:0] while_for_1_for_j_4_0_sva_3_0_1;
  reg [4:0] while_for_1_for_j_4_0_sva_1;
  wire while_and_cse;
  wire or_26_cse;
  wire or_29_cse;
  reg [31:0] while_for_1_i_sva;
  wire run_wen_rtff;
  reg reg_sync1_Pop_mioi_iswt0_tmp;
  reg reg_dma_read_ctrl_Push_mioi_iswt0_tmp;
  reg reg_dma_read_chnl_Pop_mioi_iswt0_tmp;
  reg reg_rotate_in_Push_mioi_iswt0_tmp;
  wire while_mux_rmff;
  wire while_mux_2_rmff;
  wire while_for_data_mux_rmff;
  wire while_for_1_mux_1_rmff;
  wire z_out;
  wire [31:0] z_out_1;
  wire [32:0] nl_z_out_1;
  reg [63:0] while_for_1_out_reg_data_7_sva_1;
  reg [63:0] while_for_1_out_reg_data_8_sva_1;
  reg [63:0] while_for_1_out_reg_data_6_sva_1;
  reg [63:0] while_for_1_out_reg_data_9_sva_1;
  reg [63:0] while_for_1_out_reg_data_5_sva_1;
  reg [63:0] while_for_1_out_reg_data_10_sva_1;
  reg [63:0] while_for_1_out_reg_data_4_sva_1;
  reg [63:0] while_for_1_out_reg_data_11_sva_1;
  reg [63:0] while_for_1_out_reg_data_3_sva_1;
  reg [63:0] while_for_1_out_reg_data_12_sva_1;
  reg [63:0] while_for_1_out_reg_data_2_sva_1;
  reg [63:0] while_for_1_out_reg_data_13_sva_1;
  reg [63:0] while_for_1_out_reg_data_1_sva_1;
  reg [63:0] while_for_1_out_reg_data_14_sva_1;
  reg [63:0] while_for_1_out_reg_data_0_sva_1;
  wire rotate_in_Push_mioi_idat_63_0_mx0c1;
  wire rotate_in_Push_mioi_idat_127_64_mx0c1;
  wire rotate_in_Push_mioi_idat_191_128_mx0c1;
  wire rotate_in_Push_mioi_idat_255_192_mx0c1;
  wire rotate_in_Push_mioi_idat_319_256_mx0c1;
  wire rotate_in_Push_mioi_idat_383_320_mx0c1;
  wire rotate_in_Push_mioi_idat_447_384_mx0c1;
  wire rotate_in_Push_mioi_idat_511_448_mx0c1;
  wire rotate_in_Push_mioi_idat_575_512_mx0c1;
  wire rotate_in_Push_mioi_idat_639_576_mx0c1;
  wire rotate_in_Push_mioi_idat_703_640_mx0c1;
  wire rotate_in_Push_mioi_idat_767_704_mx0c1;
  wire rotate_in_Push_mioi_idat_831_768_mx0c1;
  wire rotate_in_Push_mioi_idat_895_832_mx0c1;
  wire rotate_in_Push_mioi_idat_959_896_mx0c1;

  wire and_227_nl;
  wire nor_15_nl;
  wire nor_19_nl;
  wire[64:0] acc_nl;
  wire[65:0] nl_acc_nl;
  wire[3:0] operator_64_false_nand_nl;
  wire[31:0] while_for_mux_18_nl;

  // Interconnect Declarations for Component Instantiations 
  wire [66:0] nl_InputBuffer_run_dma_read_ctrl_Push_mioi_inst_dma_read_ctrl_Push_mioi_idat;
  assign nl_InputBuffer_run_dma_read_ctrl_Push_mioi_inst_dma_read_ctrl_Push_mioi_idat
      = {3'b100 , dma_read_ctrl_Push_mioi_idat_63_36 , 4'b0000 , dma_read_ctrl_Push_mioi_idat_31_0};
  wire [1023:0] nl_InputBuffer_run_rotate_in_Push_mioi_inst_rotate_in_Push_mioi_idat;
  assign nl_InputBuffer_run_rotate_in_Push_mioi_inst_rotate_in_Push_mioi_idat = {rotate_in_Push_mioi_idat_1023_960
      , rotate_in_Push_mioi_idat_959_896 , rotate_in_Push_mioi_idat_895_832 , rotate_in_Push_mioi_idat_831_768
      , rotate_in_Push_mioi_idat_767_704 , rotate_in_Push_mioi_idat_703_640 , rotate_in_Push_mioi_idat_639_576
      , rotate_in_Push_mioi_idat_575_512 , rotate_in_Push_mioi_idat_511_448 , rotate_in_Push_mioi_idat_447_384
      , rotate_in_Push_mioi_idat_383_320 , rotate_in_Push_mioi_idat_319_256 , rotate_in_Push_mioi_idat_255_192
      , rotate_in_Push_mioi_idat_191_128 , rotate_in_Push_mioi_idat_127_64 , rotate_in_Push_mioi_idat_63_0};
  wire  nl_InputBuffer_run_run_fsm_inst_while_for_1_for_C_1_tr0;
  assign nl_InputBuffer_run_run_fsm_inst_while_for_1_for_C_1_tr0 = while_for_1_for_j_4_0_sva_1[4];
  InputBuffer_run_sync1_Pop_mioi InputBuffer_run_sync1_Pop_mioi_inst (
      .clk(clk),
      .rst(rst),
      .sync1_val(sync1_val),
      .sync1_rdy(sync1_rdy),
      .sync1_msg(sync1_msg),
      .sync1_Pop_mioi_oswt(reg_sync1_Pop_mioi_iswt0_tmp),
      .sync1_Pop_mioi_wen_comp(sync1_Pop_mioi_wen_comp),
      .sync1_Pop_mioi_oswt_pff(while_mux_rmff)
    );
  InputBuffer_run_dma_read_ctrl_Push_mioi InputBuffer_run_dma_read_ctrl_Push_mioi_inst
      (
      .clk(clk),
      .rst(rst),
      .dma_read_ctrl_val(dma_read_ctrl_val),
      .dma_read_ctrl_rdy(dma_read_ctrl_rdy),
      .dma_read_ctrl_msg(dma_read_ctrl_msg),
      .dma_read_ctrl_Push_mioi_oswt(reg_dma_read_ctrl_Push_mioi_iswt0_tmp),
      .dma_read_ctrl_Push_mioi_wen_comp(dma_read_ctrl_Push_mioi_wen_comp),
      .dma_read_ctrl_Push_mioi_idat(nl_InputBuffer_run_dma_read_ctrl_Push_mioi_inst_dma_read_ctrl_Push_mioi_idat[66:0]),
      .dma_read_ctrl_Push_mioi_oswt_pff(while_mux_2_rmff)
    );
  InputBuffer_run_dma_read_chnl_Pop_mioi InputBuffer_run_dma_read_chnl_Pop_mioi_inst
      (
      .clk(clk),
      .rst(rst),
      .dma_read_chnl_val(dma_read_chnl_val),
      .dma_read_chnl_rdy(dma_read_chnl_rdy),
      .dma_read_chnl_msg(dma_read_chnl_msg),
      .dma_read_chnl_Pop_mioi_oswt(reg_dma_read_chnl_Pop_mioi_iswt0_tmp),
      .dma_read_chnl_Pop_mioi_wen_comp(dma_read_chnl_Pop_mioi_wen_comp),
      .dma_read_chnl_Pop_mioi_idat_mxwt(dma_read_chnl_Pop_mioi_idat_mxwt),
      .dma_read_chnl_Pop_mioi_oswt_pff(while_for_data_mux_rmff)
    );
  InputBuffer_run_rotate_in_Push_mioi InputBuffer_run_rotate_in_Push_mioi_inst (
      .clk(clk),
      .rst(rst),
      .rotate_in_val(rotate_in_val),
      .rotate_in_rdy(rotate_in_rdy),
      .rotate_in_msg(rotate_in_msg),
      .rotate_in_Push_mioi_oswt(reg_rotate_in_Push_mioi_iswt0_tmp),
      .rotate_in_Push_mioi_wen_comp(rotate_in_Push_mioi_wen_comp),
      .rotate_in_Push_mioi_idat(nl_InputBuffer_run_rotate_in_Push_mioi_inst_rotate_in_Push_mioi_idat[1023:0]),
      .rotate_in_Push_mioi_oswt_pff(while_for_1_mux_1_rmff)
    );
  InputBuffer_run_staller InputBuffer_run_staller_inst (
      .run_wen(run_wen_rtff),
      .sync1_Pop_mioi_wen_comp(sync1_Pop_mioi_wen_comp),
      .dma_read_ctrl_Push_mioi_wen_comp(dma_read_ctrl_Push_mioi_wen_comp),
      .dma_read_chnl_Pop_mioi_wen_comp(dma_read_chnl_Pop_mioi_wen_comp),
      .rotate_in_Push_mioi_wen_comp(rotate_in_Push_mioi_wen_comp)
    );
  InputBuffer_run_run_fsm InputBuffer_run_run_fsm_inst (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .fsm_output(fsm_output),
      .while_C_2_tr0(exit_while_for_sva_mx0),
      .while_for_C_1_tr0(exit_while_for_sva_mx0),
      .while_C_3_tr0(exit_while_for_1_sva_mx0),
      .while_for_1_for_C_1_tr0(nl_InputBuffer_run_run_fsm_inst_while_for_1_for_C_1_tr0),
      .while_for_1_C_0_tr0(exit_while_for_1_sva_mx0)
    );
  assign mem_rsci_clken_d = run_wen;
  assign or_26_cse = (while_for_1_for_j_4_0_sva_3_0_1[3:2]!=2'b00);
  assign or_29_cse = (while_for_1_for_j_4_0_sva_3_0_1[3:2]!=2'b10);
  assign while_and_cse = run_wen & (fsm_output[1]);
  assign and_227_nl = (while_for_1_for_j_4_0_sva_1[4]) & (fsm_output[7]);
  assign while_for_1_mux_1_rmff = MUX_s_1_2_2(reg_rotate_in_Push_mioi_iswt0_tmp,
      and_227_nl, run_wen);
  assign nor_15_nl = ~(exit_while_for_sva_mx0 | (~((fsm_output[2]) | (fsm_output[4]))));
  assign while_for_data_mux_rmff = MUX_s_1_2_2(reg_dma_read_chnl_Pop_mioi_iswt0_tmp,
      nor_15_nl, run_wen);
  assign while_mux_2_rmff = MUX_s_1_2_2(reg_dma_read_ctrl_Push_mioi_iswt0_tmp, (fsm_output[1]),
      run_wen);
  assign while_mux_rmff = MUX_s_1_2_2(reg_sync1_Pop_mioi_iswt0_tmp, (fsm_output[0]),
      run_wen);
  assign exit_while_for_sva_mx0 = MUX_s_1_2_2((~ z_out), (~ ($signed((while_for_1_i_sva[31:4]))
      < $signed({1'b0, (cfg_block_size[59:0])}))), fsm_output[4]);
  assign exit_while_for_1_sva_mx0 = MUX_s_1_2_2((~ z_out), (~ ($signed(z_out_1) <
      $signed(cfg_block_size))), fsm_output[8]);
  assign not_tmp_7 = ~((while_for_1_for_j_4_0_sva_3_0_1[1:0]==2'b11));
  assign and_dcpl_2 = (~ (while_for_1_for_j_4_0_sva_3_0_1[3])) & (while_for_1_for_j_4_0_sva_1[4]);
  assign and_dcpl_3 = ~((while_for_1_for_j_4_0_sva_3_0_1[1:0]!=2'b00));
  assign and_dcpl_4 = and_dcpl_3 & (~ (while_for_1_for_j_4_0_sva_3_0_1[2]));
  assign or_dcpl_29 = (while_for_1_for_j_4_0_sva_3_0_1[1:0]!=2'b00);
  assign or_dcpl_30 = or_dcpl_29 | or_26_cse;
  assign and_dcpl_7 = (while_for_1_for_j_4_0_sva_3_0_1[1:0]==2'b01);
  assign and_dcpl_8 = and_dcpl_7 & (~ (while_for_1_for_j_4_0_sva_3_0_1[2]));
  assign or_dcpl_31 = (while_for_1_for_j_4_0_sva_3_0_1[1:0]!=2'b01);
  assign or_dcpl_32 = or_dcpl_31 | or_26_cse;
  assign and_dcpl_11 = (while_for_1_for_j_4_0_sva_3_0_1[1:0]==2'b10);
  assign and_dcpl_12 = and_dcpl_11 & (~ (while_for_1_for_j_4_0_sva_3_0_1[2]));
  assign or_dcpl_33 = (while_for_1_for_j_4_0_sva_3_0_1[1:0]!=2'b10);
  assign or_dcpl_34 = or_dcpl_33 | or_26_cse;
  assign and_dcpl_15 = (while_for_1_for_j_4_0_sva_3_0_1[1:0]==2'b11);
  assign and_dcpl_16 = and_dcpl_15 & (~ (while_for_1_for_j_4_0_sva_3_0_1[2]));
  assign or_dcpl_36 = not_tmp_7 | or_26_cse;
  assign and_dcpl_19 = and_dcpl_3 & (while_for_1_for_j_4_0_sva_3_0_1[2]);
  assign or_dcpl_37 = (while_for_1_for_j_4_0_sva_3_0_1[3:2]!=2'b01);
  assign or_dcpl_38 = or_dcpl_29 | or_dcpl_37;
  assign and_dcpl_22 = and_dcpl_7 & (while_for_1_for_j_4_0_sva_3_0_1[2]);
  assign or_dcpl_39 = or_dcpl_31 | or_dcpl_37;
  assign and_dcpl_25 = and_dcpl_11 & (while_for_1_for_j_4_0_sva_3_0_1[2]);
  assign or_dcpl_40 = or_dcpl_33 | or_dcpl_37;
  assign or_dcpl_41 = not_tmp_7 | or_dcpl_37;
  assign and_dcpl_31 = (while_for_1_for_j_4_0_sva_3_0_1[3]) & (while_for_1_for_j_4_0_sva_1[4]);
  assign or_dcpl_43 = or_dcpl_29 | or_29_cse;
  assign or_dcpl_44 = or_dcpl_31 | or_29_cse;
  assign or_dcpl_45 = or_dcpl_33 | or_29_cse;
  assign or_dcpl_46 = not_tmp_7 | or_29_cse;
  assign or_dcpl_47 = ~((while_for_1_for_j_4_0_sva_3_0_1[3:2]==2'b11));
  assign or_dcpl_48 = or_dcpl_29 | or_dcpl_47;
  assign or_dcpl_49 = or_dcpl_31 | or_dcpl_47;
  assign or_dcpl_50 = or_dcpl_33 | or_dcpl_47;
  assign rotate_in_Push_mioi_idat_63_0_mx0c1 = or_dcpl_30 & (while_for_1_for_j_4_0_sva_1[4])
      & (fsm_output[7]);
  assign rotate_in_Push_mioi_idat_127_64_mx0c1 = or_dcpl_32 & (while_for_1_for_j_4_0_sva_1[4])
      & (fsm_output[7]);
  assign rotate_in_Push_mioi_idat_191_128_mx0c1 = or_dcpl_34 & (while_for_1_for_j_4_0_sva_1[4])
      & (fsm_output[7]);
  assign rotate_in_Push_mioi_idat_255_192_mx0c1 = or_dcpl_36 & (while_for_1_for_j_4_0_sva_1[4])
      & (fsm_output[7]);
  assign rotate_in_Push_mioi_idat_319_256_mx0c1 = or_dcpl_38 & (while_for_1_for_j_4_0_sva_1[4])
      & (fsm_output[7]);
  assign rotate_in_Push_mioi_idat_383_320_mx0c1 = or_dcpl_39 & (while_for_1_for_j_4_0_sva_1[4])
      & (fsm_output[7]);
  assign rotate_in_Push_mioi_idat_447_384_mx0c1 = or_dcpl_40 & (while_for_1_for_j_4_0_sva_1[4])
      & (fsm_output[7]);
  assign rotate_in_Push_mioi_idat_511_448_mx0c1 = or_dcpl_41 & (while_for_1_for_j_4_0_sva_1[4])
      & (fsm_output[7]);
  assign rotate_in_Push_mioi_idat_575_512_mx0c1 = or_dcpl_43 & (while_for_1_for_j_4_0_sva_1[4])
      & (fsm_output[7]);
  assign rotate_in_Push_mioi_idat_639_576_mx0c1 = or_dcpl_44 & (while_for_1_for_j_4_0_sva_1[4])
      & (fsm_output[7]);
  assign rotate_in_Push_mioi_idat_703_640_mx0c1 = or_dcpl_45 & (while_for_1_for_j_4_0_sva_1[4])
      & (fsm_output[7]);
  assign rotate_in_Push_mioi_idat_767_704_mx0c1 = or_dcpl_46 & (while_for_1_for_j_4_0_sva_1[4])
      & (fsm_output[7]);
  assign rotate_in_Push_mioi_idat_831_768_mx0c1 = or_dcpl_48 & (while_for_1_for_j_4_0_sva_1[4])
      & (fsm_output[7]);
  assign rotate_in_Push_mioi_idat_895_832_mx0c1 = or_dcpl_49 & (while_for_1_for_j_4_0_sva_1[4])
      & (fsm_output[7]);
  assign rotate_in_Push_mioi_idat_959_896_mx0c1 = or_dcpl_50 & (while_for_1_for_j_4_0_sva_1[4])
      & (fsm_output[7]);
  assign mem_rsci_d_d = dma_read_chnl_Pop_mioi_idat_mxwt;
  assign mem_rsci_radr_d = {(while_for_1_i_sva[9:0]) , while_for_1_for_j_4_0_sva_3_0_1};
  assign mem_rsci_wadr_d = while_for_1_i_sva[13:0];
  assign mem_rsci_we_d_pff = fsm_output[3];
  assign mem_rsci_readA_r_ram_ir_internal_RMASK_B_d = fsm_output[6];
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      rotate_in_Push_mioi_idat_63_0 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & ((and_dcpl_4 & and_dcpl_2 & (fsm_output[7])) | rotate_in_Push_mioi_idat_63_0_mx0c1)
        ) begin
      rotate_in_Push_mioi_idat_63_0 <= MUX_v_64_2_2(mem_rsci_q_d, while_for_1_out_reg_data_0_sva_1,
          rotate_in_Push_mioi_idat_63_0_mx0c1);
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      rotate_in_Push_mioi_idat_127_64 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & ((and_dcpl_8 & and_dcpl_2 & (fsm_output[7])) | rotate_in_Push_mioi_idat_127_64_mx0c1)
        ) begin
      rotate_in_Push_mioi_idat_127_64 <= MUX_v_64_2_2(mem_rsci_q_d, while_for_1_out_reg_data_1_sva_1,
          rotate_in_Push_mioi_idat_127_64_mx0c1);
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      rotate_in_Push_mioi_idat_191_128 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & ((and_dcpl_12 & and_dcpl_2 & (fsm_output[7])) | rotate_in_Push_mioi_idat_191_128_mx0c1)
        ) begin
      rotate_in_Push_mioi_idat_191_128 <= MUX_v_64_2_2(mem_rsci_q_d, while_for_1_out_reg_data_2_sva_1,
          rotate_in_Push_mioi_idat_191_128_mx0c1);
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      rotate_in_Push_mioi_idat_255_192 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & ((and_dcpl_16 & and_dcpl_2 & (fsm_output[7])) | rotate_in_Push_mioi_idat_255_192_mx0c1)
        ) begin
      rotate_in_Push_mioi_idat_255_192 <= MUX_v_64_2_2(mem_rsci_q_d, while_for_1_out_reg_data_3_sva_1,
          rotate_in_Push_mioi_idat_255_192_mx0c1);
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      rotate_in_Push_mioi_idat_319_256 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & ((and_dcpl_19 & and_dcpl_2 & (fsm_output[7])) | rotate_in_Push_mioi_idat_319_256_mx0c1)
        ) begin
      rotate_in_Push_mioi_idat_319_256 <= MUX_v_64_2_2(mem_rsci_q_d, while_for_1_out_reg_data_4_sva_1,
          rotate_in_Push_mioi_idat_319_256_mx0c1);
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      rotate_in_Push_mioi_idat_383_320 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & ((and_dcpl_22 & and_dcpl_2 & (fsm_output[7])) | rotate_in_Push_mioi_idat_383_320_mx0c1)
        ) begin
      rotate_in_Push_mioi_idat_383_320 <= MUX_v_64_2_2(mem_rsci_q_d, while_for_1_out_reg_data_5_sva_1,
          rotate_in_Push_mioi_idat_383_320_mx0c1);
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      rotate_in_Push_mioi_idat_447_384 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & ((and_dcpl_25 & and_dcpl_2 & (fsm_output[7])) | rotate_in_Push_mioi_idat_447_384_mx0c1)
        ) begin
      rotate_in_Push_mioi_idat_447_384 <= MUX_v_64_2_2(mem_rsci_q_d, while_for_1_out_reg_data_6_sva_1,
          rotate_in_Push_mioi_idat_447_384_mx0c1);
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      rotate_in_Push_mioi_idat_511_448 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & ((and_dcpl_15 & (while_for_1_for_j_4_0_sva_3_0_1[2]) & and_dcpl_2
        & (fsm_output[7])) | rotate_in_Push_mioi_idat_511_448_mx0c1) ) begin
      rotate_in_Push_mioi_idat_511_448 <= MUX_v_64_2_2(mem_rsci_q_d, while_for_1_out_reg_data_7_sva_1,
          rotate_in_Push_mioi_idat_511_448_mx0c1);
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      rotate_in_Push_mioi_idat_575_512 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & ((and_dcpl_4 & and_dcpl_31 & (fsm_output[7])) | rotate_in_Push_mioi_idat_575_512_mx0c1)
        ) begin
      rotate_in_Push_mioi_idat_575_512 <= MUX_v_64_2_2(mem_rsci_q_d, while_for_1_out_reg_data_8_sva_1,
          rotate_in_Push_mioi_idat_575_512_mx0c1);
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      rotate_in_Push_mioi_idat_639_576 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & ((and_dcpl_8 & and_dcpl_31 & (fsm_output[7])) | rotate_in_Push_mioi_idat_639_576_mx0c1)
        ) begin
      rotate_in_Push_mioi_idat_639_576 <= MUX_v_64_2_2(mem_rsci_q_d, while_for_1_out_reg_data_9_sva_1,
          rotate_in_Push_mioi_idat_639_576_mx0c1);
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      rotate_in_Push_mioi_idat_703_640 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & ((and_dcpl_12 & and_dcpl_31 & (fsm_output[7])) | rotate_in_Push_mioi_idat_703_640_mx0c1)
        ) begin
      rotate_in_Push_mioi_idat_703_640 <= MUX_v_64_2_2(mem_rsci_q_d, while_for_1_out_reg_data_10_sva_1,
          rotate_in_Push_mioi_idat_703_640_mx0c1);
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      rotate_in_Push_mioi_idat_767_704 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & ((and_dcpl_16 & and_dcpl_31 & (fsm_output[7])) | rotate_in_Push_mioi_idat_767_704_mx0c1)
        ) begin
      rotate_in_Push_mioi_idat_767_704 <= MUX_v_64_2_2(mem_rsci_q_d, while_for_1_out_reg_data_11_sva_1,
          rotate_in_Push_mioi_idat_767_704_mx0c1);
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      rotate_in_Push_mioi_idat_831_768 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & ((and_dcpl_19 & and_dcpl_31 & (fsm_output[7])) | rotate_in_Push_mioi_idat_831_768_mx0c1)
        ) begin
      rotate_in_Push_mioi_idat_831_768 <= MUX_v_64_2_2(mem_rsci_q_d, while_for_1_out_reg_data_12_sva_1,
          rotate_in_Push_mioi_idat_831_768_mx0c1);
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      rotate_in_Push_mioi_idat_895_832 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & ((and_dcpl_22 & and_dcpl_31 & (fsm_output[7])) | rotate_in_Push_mioi_idat_895_832_mx0c1)
        ) begin
      rotate_in_Push_mioi_idat_895_832 <= MUX_v_64_2_2(mem_rsci_q_d, while_for_1_out_reg_data_13_sva_1,
          rotate_in_Push_mioi_idat_895_832_mx0c1);
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      rotate_in_Push_mioi_idat_959_896 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & ((and_dcpl_25 & and_dcpl_31 & (fsm_output[7])) | rotate_in_Push_mioi_idat_959_896_mx0c1)
        ) begin
      rotate_in_Push_mioi_idat_959_896 <= MUX_v_64_2_2(mem_rsci_q_d, while_for_1_out_reg_data_14_sva_1,
          rotate_in_Push_mioi_idat_959_896_mx0c1);
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      rotate_in_Push_mioi_idat_1023_960 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & (while_for_1_for_j_4_0_sva_1[4]) & (fsm_output[7]) ) begin
      rotate_in_Push_mioi_idat_1023_960 <= mem_rsci_q_d;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_for_1_out_reg_data_14_sva_1 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & (~ or_dcpl_50) & (fsm_output[7]) ) begin
      while_for_1_out_reg_data_14_sva_1 <= mem_rsci_q_d;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_for_1_out_reg_data_1_sva_1 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & (~ or_dcpl_32) & (fsm_output[7]) ) begin
      while_for_1_out_reg_data_1_sva_1 <= mem_rsci_q_d;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_for_1_out_reg_data_13_sva_1 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & (~ or_dcpl_49) & (fsm_output[7]) ) begin
      while_for_1_out_reg_data_13_sva_1 <= mem_rsci_q_d;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_for_1_out_reg_data_2_sva_1 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & (~ or_dcpl_34) & (fsm_output[7]) ) begin
      while_for_1_out_reg_data_2_sva_1 <= mem_rsci_q_d;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_for_1_out_reg_data_12_sva_1 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & (~ or_dcpl_48) & (fsm_output[7]) ) begin
      while_for_1_out_reg_data_12_sva_1 <= mem_rsci_q_d;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_for_1_out_reg_data_3_sva_1 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & (~ or_dcpl_36) & (fsm_output[7]) ) begin
      while_for_1_out_reg_data_3_sva_1 <= mem_rsci_q_d;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_for_1_out_reg_data_11_sva_1 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & (~ or_dcpl_46) & (fsm_output[7]) ) begin
      while_for_1_out_reg_data_11_sva_1 <= mem_rsci_q_d;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_for_1_out_reg_data_4_sva_1 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & (~ or_dcpl_38) & (fsm_output[7]) ) begin
      while_for_1_out_reg_data_4_sva_1 <= mem_rsci_q_d;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_for_1_out_reg_data_10_sva_1 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & (~ or_dcpl_45) & (fsm_output[7]) ) begin
      while_for_1_out_reg_data_10_sva_1 <= mem_rsci_q_d;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_for_1_out_reg_data_5_sva_1 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & (~ or_dcpl_39) & (fsm_output[7]) ) begin
      while_for_1_out_reg_data_5_sva_1 <= mem_rsci_q_d;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_for_1_out_reg_data_9_sva_1 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & (~ or_dcpl_44) & (fsm_output[7]) ) begin
      while_for_1_out_reg_data_9_sva_1 <= mem_rsci_q_d;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_for_1_out_reg_data_6_sva_1 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & (~ or_dcpl_40) & (fsm_output[7]) ) begin
      while_for_1_out_reg_data_6_sva_1 <= mem_rsci_q_d;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_for_1_out_reg_data_8_sva_1 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & (~ or_dcpl_43) & (fsm_output[7]) ) begin
      while_for_1_out_reg_data_8_sva_1 <= mem_rsci_q_d;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_for_1_out_reg_data_7_sva_1 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & (~ or_dcpl_41) & (fsm_output[7]) ) begin
      while_for_1_out_reg_data_7_sva_1 <= mem_rsci_q_d;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      dma_read_ctrl_Push_mioi_idat_31_0 <= 32'b00000000000000000000000000000000;
      dma_read_ctrl_Push_mioi_idat_63_36 <= 28'b0000000000000000000000000000;
    end
    else if ( while_and_cse ) begin
      dma_read_ctrl_Push_mioi_idat_31_0 <= cfg_input_base[31:0];
      dma_read_ctrl_Push_mioi_idat_63_36 <= cfg_block_size[27:0];
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      reg_rotate_in_Push_mioi_iswt0_tmp <= 1'b0;
      reg_dma_read_chnl_Pop_mioi_iswt0_tmp <= 1'b0;
      reg_dma_read_ctrl_Push_mioi_iswt0_tmp <= 1'b0;
      reg_sync1_Pop_mioi_iswt0_tmp <= 1'b0;
      run_wen <= 1'b1;
    end
    else begin
      reg_rotate_in_Push_mioi_iswt0_tmp <= while_for_1_mux_1_rmff;
      reg_dma_read_chnl_Pop_mioi_iswt0_tmp <= while_for_data_mux_rmff;
      reg_dma_read_ctrl_Push_mioi_iswt0_tmp <= while_mux_2_rmff;
      reg_sync1_Pop_mioi_iswt0_tmp <= while_mux_rmff;
      run_wen <= run_wen_rtff;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_for_1_i_sva <= 32'b00000000000000000000000000000000;
    end
    else if ( run_wen & (~((fsm_output[4]) | (fsm_output[6]) | (fsm_output[7])))
        ) begin
      while_for_1_i_sva <= MUX_v_32_2_2(32'b00000000000000000000000000000000, z_out_1,
          nor_19_nl);
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_for_1_out_reg_data_0_sva_1 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & (~ or_dcpl_30) & (fsm_output[7]) ) begin
      while_for_1_out_reg_data_0_sva_1 <= mem_rsci_q_d;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_for_1_for_j_4_0_sva_3_0_1 <= 4'b0000;
    end
    else if ( run_wen & ((fsm_output[5]) | (fsm_output[8]) | (fsm_output[7])) ) begin
      while_for_1_for_j_4_0_sva_3_0_1 <= MUX_v_4_2_2(4'b0000, (while_for_1_for_j_4_0_sva_1[3:0]),
          (fsm_output[7]));
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_for_1_for_j_4_0_sva_1 <= 5'b00000;
    end
    else if ( run_wen ) begin
      while_for_1_for_j_4_0_sva_1 <= z_out_1[4:0];
    end
  end
  assign nor_19_nl = ~((fsm_output[2]) | (fsm_output[5]));
  assign operator_64_false_nand_nl = ~(MUX_v_4_2_2(4'b0000, (cfg_block_size[63:60]),
      (fsm_output[5])));
  assign nl_acc_nl = conv_s2u_64_65({operator_64_false_nand_nl , (~ (cfg_block_size[59:0]))})
      + 65'b00000000000000000000000000000000000000000000000000000000000000001;
  assign acc_nl = nl_acc_nl[64:0];
  assign z_out = readslicef_65_1_64(acc_nl);
  assign while_for_mux_18_nl = MUX_v_32_2_2(while_for_1_i_sva, ({28'b0000000000000000000000000000
      , while_for_1_for_j_4_0_sva_3_0_1}), fsm_output[6]);
  assign nl_z_out_1 = while_for_mux_18_nl + 32'b00000000000000000000000000000001;
  assign z_out_1 = nl_z_out_1[31:0];

  function automatic  MUX_s_1_2_2;
    input  input_0;
    input  input_1;
    input  sel;
    reg  result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_s_1_2_2 = result;
  end
  endfunction


  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input  sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input  sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction


  function automatic [63:0] MUX_v_64_2_2;
    input [63:0] input_0;
    input [63:0] input_1;
    input  sel;
    reg [63:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_64_2_2 = result;
  end
  endfunction


  function automatic [0:0] readslicef_65_1_64;
    input [64:0] vector;
    reg [64:0] tmp;
  begin
    tmp = vector >> 64;
    readslicef_65_1_64 = tmp[0:0];
  end
  endfunction


  function automatic [64:0] conv_s2u_64_65 ;
    input [63:0]  vector ;
  begin
    conv_s2u_64_65 = {vector[63], vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate_run
// ------------------------------------------------------------------


module Rotate_run (
  clk, rst, cfg_cos_alpha, cfg_sin_alpha, cfg_cos_beta, cfg_sin_beta, cfg_cos_gamma,
      cfg_sin_gamma, cfg_cos_2_alpha, cfg_sin_2_alpha, cfg_cos_2_beta, cfg_cos_2_gamma,
      cfg_sin_2_gamma, cfg_cos_3_alpha, cfg_sin_3_alpha, cfg_cos_3_beta, cfg_sin_3_beta,
      cfg_cos_3_gamma, cfg_sin_3_gamma, rotate_in_val, rotate_in_rdy, rotate_in_msg,
      rotate_out_val, rotate_out_rdy, rotate_out_msg, while_mul_108_cmp_1_b, while_mul_108_cmp_1_en,
      while_mul_108_cmp_1_z, while_mul_73_cmp_1_b, while_mul_73_cmp_1_en, while_mul_73_cmp_1_z,
      while_mul_44_cmp_1_b, while_mul_44_cmp_1_en, while_mul_44_cmp_1_z, while_mul_36_cmp_1_a,
      while_mul_36_cmp_1_b, while_mul_36_cmp_1_en, while_mul_36_cmp_1_z
);
  input clk;
  input rst;
  input [63:0] cfg_cos_alpha;
  input [63:0] cfg_sin_alpha;
  input [63:0] cfg_cos_beta;
  input [63:0] cfg_sin_beta;
  input [63:0] cfg_cos_gamma;
  input [63:0] cfg_sin_gamma;
  input [63:0] cfg_cos_2_alpha;
  input [63:0] cfg_sin_2_alpha;
  input [63:0] cfg_cos_2_beta;
  input [63:0] cfg_cos_2_gamma;
  input [63:0] cfg_sin_2_gamma;
  input [63:0] cfg_cos_3_alpha;
  input [63:0] cfg_sin_3_alpha;
  input [63:0] cfg_cos_3_beta;
  input [63:0] cfg_sin_3_beta;
  input [63:0] cfg_cos_3_gamma;
  input [63:0] cfg_sin_3_gamma;
  input rotate_in_val;
  output rotate_in_rdy;
  input [1023:0] rotate_in_msg;
  output rotate_out_val;
  input rotate_out_rdy;
  output [1023:0] rotate_out_msg;
  output [63:0] while_mul_108_cmp_1_b;
  output while_mul_108_cmp_1_en;
  input [111:0] while_mul_108_cmp_1_z;
  output [113:0] while_mul_73_cmp_1_b;
  output while_mul_73_cmp_1_en;
  input [177:0] while_mul_73_cmp_1_z;
  output [112:0] while_mul_44_cmp_1_b;
  output while_mul_44_cmp_1_en;
  input [176:0] while_mul_44_cmp_1_z;
  output [48:0] while_mul_36_cmp_1_a;
  output [63:0] while_mul_36_cmp_1_b;
  output while_mul_36_cmp_1_en;
  input [112:0] while_mul_36_cmp_1_z;


  // Interconnect Declarations
  wire run_wen;
  wire run_wten;
  wire rotate_in_Pop_mioi_bawt;
  wire rotate_in_Pop_mioi_iden;
  reg rotate_in_Pop_mioi_iswt0;
  wire rotate_in_Pop_mioi_iden_1;
  wire rotate_in_Pop_mioi_wen_comp;
  wire [959:0] rotate_in_Pop_mioi_idat_mxwt;
  wire rotate_in_Pop_mioi_ivld;
  wire rotate_in_Pop_mioi_ivld_oreg;
  wire rotate_out_Push_mioi_bawt;
  wire rotate_out_Push_mioi_iden;
  wire rotate_out_Push_mioi_wen_comp;
  wire rotate_out_Push_mioi_irdy;
  wire rotate_out_Push_mioi_irdy_oreg;
  wire while_mul_115_cmp_bawt;
  wire while_mul_115_cmp_iden;
  wire while_mul_115_cmp_iden_1;
  wire while_mul_115_cmp_iden_2;
  wire while_mul_115_cmp_iden_3;
  wire while_mul_115_cmp_iden_4;
  reg while_mul_115_cmp_iswt5_2;
  wire while_mul_115_cmp_iden_5;
  wire while_mul_115_cmp_iden_6;
  reg while_mul_115_cmp_iswt5_3;
  wire while_mul_115_cmp_iden_7;
  wire [162:0] while_mul_115_cmp_z_mxwt;
  wire [161:0] while_mul_115_cmp_z_mxwt_1;
  wire [162:0] while_mul_115_cmp_z_mxwt_2;
  wire [115:0] while_mul_115_cmp_z_mxwt_3;
  wire while_mul_110_cmp_bawt;
  wire while_mul_110_cmp_iden;
  wire while_mul_110_cmp_iden_1;
  wire while_mul_110_cmp_iden_2;
  wire while_mul_110_cmp_iden_3;
  wire while_mul_110_cmp_iden_4;
  wire while_mul_110_cmp_iden_5;
  wire [255:0] while_mul_110_cmp_z_mxwt;
  wire [255:0] while_mul_110_cmp_z_mxwt_1;
  wire [209:0] while_mul_110_cmp_z_mxwt_2;
  wire while_mul_111_cmp_bawt;
  wire while_mul_111_cmp_iden;
  wire while_mul_111_cmp_iden_1;
  wire while_mul_111_cmp_iden_2;
  reg while_mul_111_cmp_iswt7_1;
  wire while_mul_111_cmp_iden_3;
  wire while_mul_111_cmp_iden_4;
  wire while_mul_111_cmp_iden_5;
  wire [241:0] while_mul_111_cmp_z_mxwt;
  wire [241:0] while_mul_111_cmp_z_mxwt_1;
  wire [241:0] while_mul_111_cmp_z_mxwt_2;
  wire while_mul_108_cmp_bawt;
  wire while_mul_108_cmp_iden;
  wire while_mul_108_cmp_iden_1;
  wire while_mul_108_cmp_iden_2;
  reg while_mul_108_cmp_iswt3_1;
  wire while_mul_108_cmp_iden_3;
  wire [111:0] while_mul_108_cmp_z_mxwt;
  wire [111:0] while_mul_108_cmp_z_mxwt_1;
  wire while_mul_76_cmp_bawt;
  wire while_mul_76_cmp_iden;
  wire while_mul_76_cmp_iden_1;
  wire while_mul_76_cmp_iden_2;
  reg while_mul_76_cmp_iswt7_1;
  wire while_mul_76_cmp_iden_3;
  wire [239:0] while_mul_76_cmp_z_mxwt;
  wire [239:0] while_mul_76_cmp_z_mxwt_1;
  wire while_mul_77_cmp_bawt;
  wire while_mul_77_cmp_iden;
  wire while_mul_77_cmp_iden_1;
  wire while_mul_77_cmp_iden_2;
  reg while_mul_77_cmp_iswt5_1;
  wire while_mul_77_cmp_iden_3;
  wire while_mul_77_cmp_iden_4;
  wire while_mul_77_cmp_iden_5;
  wire [177:0] while_mul_77_cmp_z_mxwt;
  wire [175:0] while_mul_77_cmp_z_mxwt_1;
  wire [175:0] while_mul_77_cmp_z_mxwt_2;
  wire while_mul_70_cmp_bawt;
  wire while_mul_70_cmp_iden;
  reg while_mul_70_cmp_iswt3;
  wire while_mul_70_cmp_iden_1;
  wire while_mul_70_cmp_iden_2;
  wire while_mul_70_cmp_iden_3;
  wire [113:0] while_mul_70_cmp_z_mxwt;
  wire [114:0] while_mul_70_cmp_z_mxwt_1;
  wire while_while_mul_cmp_bawt;
  wire while_while_mul_cmp_iden;
  reg while_while_mul_cmp_iswt9;
  wire while_while_mul_cmp_iden_1;
  wire while_while_mul_cmp_iden_2;
  wire while_while_mul_cmp_iden_3;
  wire [255:0] while_while_mul_cmp_z_mxwt;
  wire [255:0] while_while_mul_cmp_z_mxwt_1;
  wire while_mul_67_cmp_bawt;
  wire while_mul_67_cmp_iden;
  reg while_mul_67_cmp_iswt7;
  wire while_mul_67_cmp_iden_1;
  wire while_mul_67_cmp_iden_2;
  wire while_mul_67_cmp_iden_3;
  wire [207:0] while_mul_67_cmp_z_mxwt;
  wire [177:0] while_mul_67_cmp_z_mxwt_1;
  wire while_mul_73_cmp_bawt;
  wire while_mul_73_cmp_iden;
  wire while_mul_73_cmp_iden_1;
  wire while_mul_73_cmp_iden_2;
  reg while_mul_73_cmp_iswt5_1;
  wire while_mul_73_cmp_iden_3;
  wire [177:0] while_mul_73_cmp_z_mxwt;
  wire [177:0] while_mul_73_cmp_z_mxwt_1;
  wire while_mul_44_cmp_bawt;
  wire while_mul_44_cmp_iden;
  reg while_mul_44_cmp_iswt5;
  wire while_mul_44_cmp_iden_1;
  wire while_mul_44_cmp_iden_2;
  wire while_mul_44_cmp_iden_3;
  wire [176:0] while_mul_44_cmp_z_mxwt;
  wire [176:0] while_mul_44_cmp_z_mxwt_1;
  wire while_mul_37_cmp_bawt;
  wire while_mul_37_cmp_iden;
  wire while_mul_37_cmp_iden_1;
  wire while_mul_37_cmp_iden_2;
  reg while_mul_37_cmp_iswt5_1;
  wire while_mul_37_cmp_iden_3;
  wire [161:0] while_mul_37_cmp_z_mxwt;
  wire [159:0] while_mul_37_cmp_z_mxwt_1;
  wire while_mul_34_cmp_bawt;
  wire while_mul_34_cmp_iden;
  reg while_mul_34_cmp_iswt7;
  wire while_mul_34_cmp_iden_1;
  wire while_mul_34_cmp_iden_2;
  reg while_mul_34_cmp_iswt7_1;
  wire while_mul_34_cmp_iden_3;
  wire [209:0] while_mul_34_cmp_z_mxwt;
  wire [207:0] while_mul_34_cmp_z_mxwt_1;
  wire while_mul_34_cmp_1_bawt;
  wire while_mul_34_cmp_1_iden;
  wire while_mul_34_cmp_1_iden_1;
  wire while_mul_34_cmp_1_iden_2;
  wire while_mul_34_cmp_1_iden_3;
  wire while_mul_34_cmp_1_iden_4;
  wire while_mul_34_cmp_1_iden_5;
  wire [209:0] while_mul_34_cmp_1_z_mxwt;
  wire [206:0] while_mul_34_cmp_1_z_mxwt_1;
  wire [207:0] while_mul_34_cmp_1_z_mxwt_2;
  wire while_mul_36_cmp_bawt;
  wire while_mul_36_cmp_iden;
  reg while_mul_36_cmp_iswt3;
  wire while_mul_36_cmp_iden_1;
  wire while_mul_36_cmp_iden_2;
  wire while_mul_36_cmp_iden_3;
  wire [112:0] while_mul_36_cmp_z_mxwt;
  wire [112:0] while_mul_36_cmp_z_mxwt_1;
  wire while_mul_25_cmp_bawt;
  wire while_mul_25_cmp_iden;
  wire while_mul_25_cmp_iden_1;
  wire while_mul_25_cmp_iden_2;
  reg while_mul_25_cmp_iswt5_1;
  wire while_mul_25_cmp_iden_3;
  wire while_mul_25_cmp_iden_4;
  reg while_mul_25_cmp_iswt5_2;
  wire while_mul_25_cmp_iden_5;
  wire while_mul_25_cmp_iden_6;
  wire while_mul_25_cmp_iden_7;
  wire [177:0] while_mul_25_cmp_z_mxwt;
  wire [177:0] while_mul_25_cmp_z_mxwt_1;
  wire [176:0] while_mul_25_cmp_z_mxwt_2;
  wire [176:0] while_mul_25_cmp_z_mxwt_3;
  wire while_mul_26_cmp_bawt;
  wire while_mul_26_cmp_iden;
  reg while_mul_26_cmp_iswt3;
  wire while_mul_26_cmp_iden_1;
  wire while_mul_26_cmp_iden_2;
  reg while_mul_26_cmp_iswt3_1;
  wire while_mul_26_cmp_iden_3;
  wire [113:0] while_mul_26_cmp_z_mxwt;
  wire [112:0] while_mul_26_cmp_z_mxwt_1;
  wire while_mul_26_cmp_1_bawt;
  wire while_mul_26_cmp_1_iden;
  wire while_mul_26_cmp_1_iden_1;
  wire while_mul_26_cmp_1_iden_2;
  reg while_mul_26_cmp_1_iswt3_1;
  wire while_mul_26_cmp_1_iden_3;
  wire [113:0] while_mul_26_cmp_1_z_mxwt;
  wire [113:0] while_mul_26_cmp_1_z_mxwt_1;
  wire while_mul_cmp_bawt;
  wire while_mul_cmp_iden;
  wire while_mul_cmp_iden_1;
  wire while_mul_cmp_iden_2;
  wire while_mul_cmp_iden_3;
  wire while_mul_cmp_iden_4;
  wire while_mul_cmp_iden_5;
  wire [111:0] while_mul_cmp_z_mxwt;
  wire [111:0] while_mul_cmp_z_mxwt_1;
  wire [111:0] while_mul_cmp_z_mxwt_2;
  wire while_mul_cmp_1_bawt;
  wire while_mul_cmp_1_iden;
  reg while_mul_cmp_1_iswt3;
  wire while_mul_cmp_1_iden_1;
  wire while_mul_cmp_1_iden_2;
  wire while_mul_cmp_1_iden_3;
  wire while_mul_cmp_1_iden_4;
  wire while_mul_cmp_1_iden_5;
  wire [111:0] while_mul_cmp_1_z_mxwt;
  wire [111:0] while_mul_cmp_1_z_mxwt_1;
  wire [111:0] while_mul_cmp_1_z_mxwt_2;
  wire while_mul_cmp_2_bawt;
  wire while_mul_cmp_2_iden;
  wire while_mul_cmp_2_iden_1;
  wire while_mul_cmp_2_iden_2;
  wire while_mul_cmp_2_iden_3;
  wire while_mul_cmp_2_iden_4;
  wire while_mul_cmp_2_iden_5;
  wire [111:0] while_mul_cmp_2_z_mxwt;
  wire [111:0] while_mul_cmp_2_z_mxwt_1;
  wire [127:0] while_mul_cmp_2_z_mxwt_2;
  wire while_mul_cmp_3_bawt;
  wire while_mul_cmp_3_iden;
  wire while_mul_cmp_3_iden_1;
  wire while_mul_cmp_3_iden_2;
  wire while_mul_cmp_3_iden_3;
  wire while_mul_cmp_3_iden_4;
  wire while_mul_cmp_3_iden_5;
  wire [111:0] while_mul_cmp_3_z_mxwt;
  wire [111:0] while_mul_cmp_3_z_mxwt_1;
  wire [111:0] while_mul_cmp_3_z_mxwt_2;
  wire while_mul_cmp_4_bawt;
  wire while_mul_cmp_4_iden;
  wire while_mul_cmp_4_iden_1;
  wire while_mul_cmp_4_iden_2;
  wire while_mul_cmp_4_iden_3;
  wire while_mul_cmp_4_iden_4;
  wire while_mul_cmp_4_iden_5;
  wire [111:0] while_mul_cmp_4_z_mxwt;
  wire [111:0] while_mul_cmp_4_z_mxwt_1;
  wire [111:0] while_mul_cmp_4_z_mxwt_2;
  wire while_mul_cmp_5_bawt;
  wire while_mul_cmp_5_iden;
  wire while_mul_cmp_5_iden_1;
  wire while_mul_cmp_5_iden_2;
  wire while_mul_cmp_5_iden_3;
  wire while_mul_cmp_5_iden_4;
  wire while_mul_cmp_5_iden_5;
  wire [111:0] while_mul_cmp_5_z_mxwt;
  wire [111:0] while_mul_cmp_5_z_mxwt_1;
  wire [111:0] while_mul_cmp_5_z_mxwt_2;
  wire while_mul_cmp_6_bawt;
  wire while_mul_cmp_6_iden;
  wire while_mul_cmp_6_iden_1;
  wire while_mul_cmp_6_iden_2;
  wire while_mul_cmp_6_iden_3;
  wire while_mul_cmp_6_iden_4;
  wire while_mul_cmp_6_iden_5;
  wire [111:0] while_mul_cmp_6_z_mxwt;
  wire [111:0] while_mul_cmp_6_z_mxwt_1;
  wire [111:0] while_mul_cmp_6_z_mxwt_2;
  wire while_mul_cmp_7_bawt;
  wire while_mul_cmp_7_iden;
  wire while_mul_cmp_7_iden_1;
  wire while_mul_cmp_7_iden_2;
  wire while_mul_cmp_7_iden_3;
  wire while_mul_cmp_7_iden_4;
  wire while_mul_cmp_7_iden_5;
  wire [111:0] while_mul_cmp_7_z_mxwt;
  wire [111:0] while_mul_cmp_7_z_mxwt_1;
  wire [111:0] while_mul_cmp_7_z_mxwt_2;
  wire while_mul_cmp_8_bawt;
  wire while_mul_cmp_8_iden;
  wire while_mul_cmp_8_iden_1;
  wire while_mul_cmp_8_iden_2;
  wire while_mul_cmp_8_iden_3;
  wire while_mul_cmp_8_iden_4;
  wire while_mul_cmp_8_iden_5;
  wire [111:0] while_mul_cmp_8_z_mxwt;
  wire [111:0] while_mul_cmp_8_z_mxwt_1;
  wire [111:0] while_mul_cmp_8_z_mxwt_2;
  wire while_mul_cmp_9_bawt;
  wire while_mul_cmp_9_iden;
  wire while_mul_cmp_9_iden_1;
  wire while_mul_cmp_9_iden_2;
  wire while_mul_cmp_9_iden_3;
  wire while_mul_cmp_9_iden_4;
  wire while_mul_cmp_9_iden_5;
  wire [111:0] while_mul_cmp_9_z_mxwt;
  wire [111:0] while_mul_cmp_9_z_mxwt_1;
  wire [111:0] while_mul_cmp_9_z_mxwt_2;
  wire while_mul_cmp_10_bawt;
  wire while_mul_cmp_10_iden;
  wire while_mul_cmp_10_iden_1;
  wire while_mul_cmp_10_iden_2;
  wire while_mul_cmp_10_iden_3;
  wire while_mul_cmp_10_iden_4;
  wire while_mul_cmp_10_iden_5;
  wire [111:0] while_mul_cmp_10_z_mxwt;
  wire [111:0] while_mul_cmp_10_z_mxwt_1;
  wire [111:0] while_mul_cmp_10_z_mxwt_2;
  wire while_mul_cmp_11_bawt;
  wire while_mul_cmp_11_iden;
  wire while_mul_cmp_11_iden_1;
  wire while_mul_cmp_11_iden_2;
  reg while_mul_cmp_11_iswt3_1;
  wire while_mul_cmp_11_iden_3;
  wire while_mul_cmp_11_iden_4;
  wire while_mul_cmp_11_iden_5;
  wire [111:0] while_mul_cmp_11_z_mxwt;
  wire [111:0] while_mul_cmp_11_z_mxwt_1;
  wire [111:0] while_mul_cmp_11_z_mxwt_2;
  wire while_mul_cmp_12_bawt;
  wire while_mul_cmp_12_iden;
  wire while_mul_cmp_12_iden_1;
  wire while_mul_cmp_12_iden_2;
  wire while_mul_cmp_12_iden_3;
  wire while_mul_cmp_12_iden_4;
  wire while_mul_cmp_12_iden_5;
  wire [111:0] while_mul_cmp_12_z_mxwt;
  wire [111:0] while_mul_cmp_12_z_mxwt_1;
  wire [111:0] while_mul_cmp_12_z_mxwt_2;
  wire while_mul_cmp_13_bawt;
  wire while_mul_cmp_13_iden;
  wire while_mul_cmp_13_iden_1;
  wire while_mul_cmp_13_iden_2;
  wire while_mul_cmp_13_iden_3;
  wire while_mul_cmp_13_iden_4;
  wire while_mul_cmp_13_iden_5;
  wire [111:0] while_mul_cmp_13_z_mxwt;
  wire [111:0] while_mul_cmp_13_z_mxwt_1;
  wire [111:0] while_mul_cmp_13_z_mxwt_2;
  wire while_mul_cmp_14_bawt;
  wire while_mul_cmp_14_iden;
  wire while_mul_cmp_14_iden_1;
  wire while_mul_cmp_14_iden_2;
  wire while_mul_cmp_14_iden_3;
  wire while_mul_cmp_14_iden_4;
  wire while_mul_cmp_14_iden_5;
  wire [111:0] while_mul_cmp_14_z_mxwt;
  wire [111:0] while_mul_cmp_14_z_mxwt_1;
  wire [111:0] while_mul_cmp_14_z_mxwt_2;
  reg [63:0] rotate_out_Push_mioi_idat_1023_960;
  reg [63:0] rotate_out_Push_mioi_idat_959_896;
  reg [63:0] rotate_out_Push_mioi_idat_895_832;
  reg [63:0] rotate_out_Push_mioi_idat_831_768;
  reg [63:0] rotate_out_Push_mioi_idat_767_704;
  reg [63:0] rotate_out_Push_mioi_idat_703_640;
  reg [63:0] rotate_out_Push_mioi_idat_639_576;
  reg [63:0] rotate_out_Push_mioi_idat_575_512;
  reg [63:0] rotate_out_Push_mioi_idat_511_448;
  reg [63:0] rotate_out_Push_mioi_idat_447_384;
  reg [63:0] rotate_out_Push_mioi_idat_383_320;
  reg [63:0] rotate_out_Push_mioi_idat_319_256;
  reg [63:0] rotate_out_Push_mioi_idat_255_192;
  reg [63:0] rotate_out_Push_mioi_idat_191_128;
  reg [63:0] rotate_out_Push_mioi_idat_127_64;
  wire [4:0] fsm_output;
  wire while_nor_tmp;
  wire while_and_228_tmp;
  wire while_and_216_tmp;
  wire while_and_205_tmp;
  wire while_and_196_tmp;
  wire while_and_187_tmp;
  wire while_and_154_tmp;
  wire while_and_134_tmp;
  wire while_and_79_tmp;
  wire while_and_53_tmp;
  wire while_and_43_tmp;
  wire while_and_33_tmp;
  wire while_and_25_tmp;
  wire while_and_1_tmp;
  wire or_dcpl;
  wire or_dcpl_2;
  wire or_dcpl_4;
  wire or_dcpl_5;
  wire or_dcpl_6;
  wire or_dcpl_8;
  wire or_tmp;
  wire or_dcpl_32;
  wire or_dcpl_33;
  wire or_dcpl_34;
  wire or_dcpl_35;
  wire or_dcpl_37;
  wire and_dcpl_13;
  wire or_dcpl_43;
  wire and_dcpl_25;
  wire or_tmp_26;
  wire or_dcpl_66;
  wire or_tmp_49;
  wire or_tmp_55;
  wire or_dcpl_70;
  wire or_dcpl_72;
  wire or_dcpl_73;
  wire and_dcpl_37;
  wire and_dcpl_38;
  wire and_dcpl_39;
  wire and_dcpl_56;
  wire and_dcpl_72;
  wire and_dcpl_74;
  wire and_dcpl_80;
  wire or_dcpl_109;
  wire or_dcpl_124;
  wire or_dcpl_125;
  wire or_tmp_103;
  wire or_tmp_105;
  wire or_tmp_106;
  wire or_tmp_107;
  wire nor_tmp_14;
  wire or_tmp_108;
  wire or_tmp_109;
  wire or_tmp_110;
  wire mux_tmp_53;
  wire or_tmp_111;
  wire or_tmp_113;
  wire mux_tmp_64;
  wire or_tmp_115;
  wire and_dcpl_112;
  wire nor_tmp_17;
  wire and_tmp_9;
  wire and_tmp_10;
  wire mux_tmp_75;
  wire or_tmp_132;
  wire or_tmp_133;
  wire or_tmp_135;
  wire or_tmp_136;
  wire or_tmp_138;
  wire or_tmp_139;
  wire or_tmp_140;
  wire or_tmp_153;
  wire nor_tmp_26;
  wire mux_tmp_113;
  wire and_dcpl_146;
  wire or_dcpl_135;
  wire nor_tmp_27;
  wire nor_tmp_28;
  wire or_tmp_197;
  wire or_dcpl_138;
  wire or_dcpl_139;
  wire and_dcpl_174;
  wire or_tmp_207;
  wire and_dcpl_190;
  wire or_dcpl_143;
  wire and_dcpl_211;
  wire or_dcpl_145;
  wire and_dcpl_217;
  wire or_dcpl_147;
  wire and_dcpl_223;
  wire or_dcpl_148;
  wire and_dcpl_232;
  wire or_dcpl_151;
  wire or_dcpl_152;
  wire nor_tmp_44;
  wire or_dcpl_159;
  wire or_dcpl_164;
  wire or_dcpl_173;
  wire or_dcpl_183;
  wire and_dcpl_274;
  wire or_dcpl_201;
  wire or_dcpl_206;
  wire or_dcpl_210;
  wire or_dcpl_218;
  wire or_dcpl_223;
  wire or_dcpl_231;
  wire or_dcpl_241;
  wire or_dcpl_249;
  wire or_dcpl_255;
  wire and_dcpl_284;
  wire and_dcpl_285;
  wire or_dcpl_274;
  wire or_dcpl_291;
  wire or_dcpl_303;
  wire or_tmp_372;
  wire or_tmp_389;
  wire or_tmp_394;
  wire or_tmp_467;
  wire or_tmp_490;
  wire or_tmp_494;
  wire or_tmp_523;
  wire or_tmp_547;
  wire or_tmp_565;
  wire or_tmp_627;
  wire or_tmp_737;
  wire or_tmp_757;
  wire or_tmp_777;
  wire or_tmp_783;
  wire and_404_cse;
  wire and_479_cse;
  wire and_470_cse;
  wire and_475_cse;
  wire and_478_cse;
  wire and_510_cse;
  wire and_472_cse;
  wire and_476_cse;
  wire and_515_cse;
  wire and_659_cse;
  wire and_689_cse;
  wire and_662_cse;
  wire and_693_cse;
  wire and_712_cse;
  wire and_733_cse;
  wire and_467_cse;
  wire and_739_cse;
  wire and_576_cse;
  wire and_731_cse;
  wire and_574_cse;
  wire and_784_cse;
  wire and_735_cse;
  wire and_783_cse;
  wire and_801_cse;
  wire and_861_cse;
  wire and_823_cse;
  wire and_842_cse;
  wire and_796_cse;
  wire and_900_cse;
  wire and_898_cse;
  wire and_902_cse;
  wire and_840_cse;
  wire and_828_cse;
  wire and_1003_cse;
  wire and_1032_cse;
  wire and_759_cse;
  wire and_947_cse;
  wire and_799_cse;
  wire and_827_cse;
  reg while_stage_v_3;
  reg while_stage_v_4;
  reg while_stage_v_5;
  reg while_stage_v_6;
  wire while_stage_v_7_mx2;
  wire while_while_or_87_cse_1;
  wire while_or_207_cse_1;
  wire while_or_208_cse_1;
  reg while_stage_v_7;
  reg while_stage_v_8;
  reg while_stage_v_9;
  reg while_stage_v_10;
  wire while_stage_v_11_mx2;
  reg while_stage_v_11;
  reg while_stage_v_12;
  reg while_stage_v_13;
  reg while_stage_v_14;
  reg while_stage_v_15;
  reg while_stage_v_16;
  reg while_stage_v_17;
  reg while_stage_v_18;
  wire while_stage_v_19_mx2;
  reg while_stage_v_19;
  reg while_stage_v_20;
  reg while_stage_v_21;
  reg while_stage_v_22;
  reg while_stage_v_23;
  reg while_stage_v_24;
  reg while_stage_v_25;
  reg while_stage_v_26;
  reg while_stage_v_27;
  reg while_stage_v_28;
  reg while_stage_v_29;
  reg while_stage_v_30;
  reg while_stage_v_31;
  reg while_stage_v_32;
  reg while_stage_v_33;
  reg while_stage_v_34;
  reg while_stage_v_35;
  reg while_stage_v_36;
  reg while_stage_v_37;
  reg while_stage_v_38;
  reg while_stage_v_39;
  reg while_stage_v_40;
  reg while_stage_v_41;
  reg while_stage_v_42;
  reg while_stage_v_43;
  wire while_stage_v_26_mx2;
  wire while_while_or_66_cse_1;
  wire while_while_or_62_cse_1;
  wire while_stage_v_34_mx2;
  wire while_while_or_45_cse_1;
  wire while_while_or_42_cse_1;
  wire while_while_or_39_cse_1;
  wire while_while_or_35_cse_1;
  wire while_stage_v_17_mx2;
  wire while_stage_v_21_mx2;
  wire while_stage_v_25_mx2;
  wire while_stage_v_33_mx2;
  wire while_while_or_7_cse_1;
  wire while_while_or_5_cse_1;
  wire while_stage_v_28_mx1;
  wire while_stage_v_32_mx1;
  wire while_stage_v_44_mx1;
  wire while_and_cse;
  reg reg_while_mul_cmp_14_iswt3_2_cse;
  reg reg_while_mul_cmp_14_iswt3_1_cse;
  reg reg_while_mul_cmp_14_iswt3_cse;
  reg reg_while_mul_cmp_14_oswt_cse;
  reg reg_while_mul_cmp_10_iswt3_1_cse;
  reg reg_while_mul_cmp_11_iswt3_cse;
  reg reg_while_mul_cmp_11_oswt_cse;
  reg reg_while_mul_cmp_7_iswt3_1_cse;
  reg reg_while_mul_cmp_1_iswt3_1_cse;
  reg reg_while_mul_25_cmp_oswt_3_cse;
  reg reg_while_mul_25_cmp_iswt5_3_cse;
  reg reg_while_mul_34_cmp_1_iswt7_cse;
  reg reg_while_mul_44_cmp_oswt_1_cse;
  reg reg_while_mul_76_cmp_oswt_cse;
  reg reg_while_mul_111_cmp_oswt_1_cse;
  reg reg_while_mul_44_cmp_iswt5_1_cse;
  wire while_and_312_cse;
  wire while_and_315_cse;
  wire while_and_317_cse;
  wire while_and_321_cse;
  wire while_and_326_cse;
  wire while_and_340_cse;
  wire while_and_345_cse;
  wire while_and_361_cse;
  wire while_and_324_cse;
  wire or_29_cse;
  wire and_2044_cse;
  wire or_1421_cse;
  wire and_2051_cse;
  wire or_1420_cse;
  wire or_1422_cse;
  wire while_nor_23_cse;
  wire or_357_cse;
  wire or_328_cse;
  wire or_290_cse;
  wire mux_101_cse;
  wire nand_45_cse;
  wire nand_68_cse;
  wire mux_131_cse;
  wire [66:0] while_acc_118_sdt;
  wire [68:0] nl_while_acc_118_sdt;
  reg reg_rotate_out_Push_mioi_iswt0_cse;
  wire mux_147_cse;
  wire mux_132_cse;
  wire or_131_cse;
  wire or_1425_cse;
  wire or_1426_cse;
  wire mux_249_cse;
  wire mux_269_cse;
  wire mux_244_cse;
  wire mux_168_cse;
  wire mux_254_cse;
  wire while_while_and_17_cse;
  wire nor_159_cse;
  wire mux_250_cse;
  wire mux_191_cse;
  wire mux_66_cse;
  wire or_132_cse;
  wire mux_256_cse;
  wire or_133_cse;
  wire or_134_cse;
  wire and_47_cse;
  wire or_927_rmff;
  wire or_926_rmff;
  wire or_921_rmff;
  wire or_914_rmff;
  wire or_908_rmff;
  wire or_898_rmff;
  wire or_888_rmff;
  wire or_882_rmff;
  wire or_840_rmff;
  wire or_866_rmff;
  wire or_859_rmff;
  wire or_698_rmff;
  wire or_847_rmff;
  wire or_849_rmff;
  wire or_788_rmff;
  wire or_787_rmff;
  wire or_830_rmff;
  wire or_808_rmff;
  wire or_800_rmff;
  wire or_697_rmff;
  wire or_714_rmff;
  reg [66:0] while_acc_86_cse_sva_3;
  reg [63:0] while_slc_111_48_19_ncse_sva;
  reg [66:0] while_acc_86_cse_sva;
  wire [68:0] nl_while_acc_86_cse_sva;
  reg [112:0] while_asn_itm_15_6;
  reg [111:0] while_asn_itm_9_6;
  reg [112:0] while_asn_itm_6_5;
  reg [63:0] while_slc_111_48_20_ncse_sva;
  reg [63:0] while_slc_111_48_21_ncse_sva;
  reg [175:0] while_slc_while_mul_77_cmp_z_mxwt_1_175_0_itm_1_1;
  reg [175:0] while_slc_while_mul_77_cmp_z_mxwt_1_175_0_itm;
  reg [111:0] while_slc_while_mul_36_cmp_1_z_111_0_itm_1_1;
  reg [111:0] while_asn_183_itm_3;
  reg [111:0] while_slc_while_mul_36_cmp_1_z_111_0_itm_1;
  reg [63:0] while_slc_111_48_16_ncse_sva_2;
  reg [63:0] while_slc_111_48_18_ncse_sva_2;
  reg [63:0] while_slc_111_48_20_ncse_sva_2;
  reg [63:0] reg_0_operator_for_7_reg_0_operator_for_slc_while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_64_63_0_1_itm_9;
  reg [239:0] while_asn_185_itm_2;
  reg [177:0] while_slc_while_mul_67_cmp_z_mxwt_1_177_0_itm_1;
  reg [177:0] while_slc_while_mul_67_cmp_z_mxwt_1_177_0_itm_1_1;
  reg [63:0] while_slc_111_48_8_ncse_sva_7;
  reg [113:0] while_asn_itm_5_1;
  reg [113:0] while_asn_itm_2;
  reg [113:0] while_asn_itm_4;
  reg [113:0] while_asn_itm_10_1;
  reg [112:0] while_asn_itm_1_1;
  reg [113:0] while_asn_itm_11_1;
  reg [63:0] while_slc_111_48_9_ncse_sva_2;
  reg [63:0] while_slc_111_48_9_ncse_sva;
  reg [127:0] while_mul_38_cse_sva;
  reg [127:0] while_asn_itm_13_7;
  reg [63:0] while_slc_111_48_21_ncse_sva_6;
  reg [63:0] reg_0_operator_for_7_reg_0_operator_for_slc_while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_64_63_0_2_itm_4;
  reg [177:0] while_asn_itm_8_2;
  reg [63:0] reg_0_operator_for_7_reg_0_operator_for_slc_while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_64_63_0_3_itm_3;
  reg [176:0] while_mul_25_cse_sva;
  reg [63:0] while_slc_111_48_16_ncse_sva_1;
  reg [831:0] while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_sva_1023_192;
  reg [63:0] while_slc_111_48_19_ncse_sva_1;
  reg [112:0] while_asn_itm_7_1;
  reg [112:0] while_slc_while_mul_26_cmp_z_mxwt_112_0_itm_3;
  reg [112:0] while_asn_itm_1;
  reg [63:0] while_slc_111_48_20_ncse_sva_1;
  reg [63:0] while_slc_111_48_16_ncse_sva;
  reg [63:0] while_slc_111_48_3_ncse_sva;
  reg [63:0] while_slc_207_144_1_ncse_sva_3;
  reg [63:0] while_slc_111_48_17_ncse_sva_1;
  reg [63:0] while_slc_while_acc_82_206_143_ncse_sva_1;
  reg [63:0] while_slc_111_48_6_ncse_sva;
  reg [63:0] while_slc_while_acc_90_162_99_ncse_sva;
  reg [63:0] while_slc_207_144_2_ncse_sva_1;
  reg [63:0] while_slc_111_48_1_ncse_sva;
  reg [63:0] while_slc_111_48_8_ncse_sva;
  reg [63:0] while_slc_159_96_ncse_sva;
  reg [63:0] while_slc_while_acc_81_206_143_ncse_sva_2;
  reg [63:0] while_slc_111_48_ncse_sva;
  reg [63:0] while_slc_111_48_7_ncse_sva;
  reg [63:0] while_slc_159_96_ncse_sva_4;
  reg [112:0] while_asn_itm_3_1;
  wire [16:0] while_acc_78_cse_sva_1;
  wire [17:0] nl_while_acc_78_cse_sva_1;
  reg [112:0] while_mul_26_cse_sva_5;
  reg [16:0] while_acc_78_cse_sva_1_1;
  reg [16:0] while_acc_78_cse_sva_3;
  reg [17:0] while_acc_75_itm;
  wire [18:0] nl_while_acc_75_itm;
  reg [46:0] while_slc_while_acc_74_psp_46_0_itm;
  reg [111:0] while_asn_itm_12_2;
  reg [63:0] while_slc_111_48_21_ncse_sva_1;
  reg [63:0] while_slc_111_48_17_ncse_sva;
  reg [63:0] while_slc_111_48_18_ncse_sva;
  wire while_or_217_itm;
  wire while_or_224_itm;
  wire while_or_225_itm;
  wire while_or_229_itm;
  wire while_or_238_itm;
  wire [64:0] z_out_3;
  wire [65:0] nl_z_out_3;
  wire [64:0] z_out_8;
  wire [66:0] nl_z_out_8;
  reg [112:0] while_mul_26_cse_sva;
  reg [63:0] while_slc_207_144_1_ncse_sva;
  reg [16:0] while_acc_78_cse_sva;
  reg [63:0] while_slc_207_144_2_ncse_sva;
  reg [63:0] while_slc_while_acc_82_206_143_ncse_sva;
  reg while_stage_v;
  reg while_stage_v_1;
  reg while_stage_v_2;
  reg [111:0] while_slc_while_mul_cmp_14_z_mxwt_2_111_0_itm;
  reg [111:0] while_slc_while_mul_cmp_10_z_mxwt_2_111_0_itm;
  reg [111:0] while_slc_while_mul_cmp_6_z_mxwt_1_111_0_itm;
  reg [159:0] while_slc_while_mul_37_cmp_z_mxwt_1_159_0_1_itm;
  reg [63:0] reg_0_operator_for_7_reg_0_operator_for_slc_while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_64_63_0_3_itm;
  reg [112:0] while_asn_itm_1_2;
  reg [207:0] while_slc_while_mul_34_cmp_z_mxwt_1_207_0_1_itm;
  reg [177:0] while_slc_while_mul_67_cmp_z_mxwt_1_177_0_itm;
  reg [114:0] while_asn_187_itm;
  reg [111:0] while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm;
  reg [112:0] while_asn_itm_3;
  reg [206:0] while_slc_while_mul_79_sdt_207_1_itm;
  reg [114:0] while_asn_188_itm;
  reg [111:0] while_slc_while_mul_36_cmp_1_z_111_0_itm_1_2;
  reg [206:0] while_slc_while_acc_46_207_1_itm;
  reg [111:0] while_asn_183_itm;
  reg [208:0] while_slc_while_mul_34_cmp_z_mxwt_208_0_itm;
  reg [115:0] while_slc_while_mul_115_cmp_z_mxwt_3_115_0_itm;
  reg [112:0] while_asn_itm_6;
  reg [162:0] while_asn_180_itm;
  reg [112:0] while_asn_itm_7;
  reg [177:0] while_asn_itm_8;
  reg [209:0] while_slc_while_mul_124_256_1_itm;
  reg [114:0] while_asn_189_itm;
  reg [111:0] while_asn_itm_9;
  reg [161:0] while_slc_while_mul_115_cmp_z_mxwt_1_161_0_itm;
  reg [239:0] while_asn_185_itm;
  reg [255:0] while_asn_190_itm;
  reg [255:0] while_acc_125_itm;
  wire [257:0] nl_while_acc_125_itm;
  reg [115:0] while_slc_while_mul_37_cmp_z_mxwt_115_0_itm;
  reg [112:0] while_slc_while_mul_26_cmp_z_mxwt_112_0_itm;
  reg [113:0] while_asn_itm_11;
  reg [127:0] while_asn_itm_13;
  reg [161:0] while_asn_itm_14;
  reg [112:0] while_asn_itm_15;
  reg [111:0] while_slc_while_mul_cmp_14_z_mxwt_1_111_0_itm;
  reg [63:0] while_slc_111_48_15_itm;
  reg [111:0] while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm_1;
  reg [207:0] while_slc_while_mul_24_208_1_itm;
  reg [207:0] while_asn_itm_16;
  reg [111:0] while_slc_while_mul_cmp_3_z_mxwt_1_111_0_itm;
  reg [111:0] while_slc_while_mul_cmp_13_z_mxwt_1_111_0_itm;
  reg [111:0] while_slc_while_mul_cmp_9_z_mxwt_1_111_0_itm;
  reg [63:0] while_slc_111_48_5_itm;
  reg [111:0] while_slc_while_mul_cmp_11_z_mxwt_2_111_0_itm;
  reg [63:0] while_slc_111_48_2_itm;
  reg [111:0] while_slc_while_mul_cmp_8_z_mxwt_1_111_0_itm;
  reg [63:0] while_slc_111_48_4_itm;
  reg [63:0] while_slc_111_48_8_ncse_sva_1;
  reg [63:0] while_slc_111_48_8_ncse_sva_2;
  reg [63:0] while_slc_111_48_8_ncse_sva_3;
  reg [63:0] while_slc_111_48_8_ncse_sva_4;
  reg [63:0] while_slc_111_48_8_ncse_sva_5;
  reg [63:0] while_slc_111_48_8_ncse_sva_6;
  reg [63:0] while_slc_111_48_9_ncse_sva_1;
  reg [112:0] while_mul_26_cse_sva_1;
  reg [112:0] while_mul_26_cse_sva_2;
  reg [112:0] while_mul_26_cse_sva_3;
  reg [112:0] while_mul_26_cse_sva_4;
  reg [63:0] while_slc_207_144_1_ncse_sva_1;
  reg [63:0] while_slc_207_144_1_ncse_sva_2;
  reg [16:0] while_acc_78_cse_sva_2;
  reg [63:0] while_slc_159_96_ncse_sva_1;
  reg [63:0] while_slc_159_96_ncse_sva_2;
  reg [63:0] while_slc_159_96_ncse_sva_3;
  reg [63:0] while_slc_111_48_18_ncse_sva_1;
  reg [63:0] while_slc_111_48_21_ncse_sva_2;
  reg [63:0] while_slc_111_48_21_ncse_sva_3;
  reg [63:0] while_slc_111_48_21_ncse_sva_4;
  reg [63:0] while_slc_111_48_21_ncse_sva_5;
  reg [63:0] while_slc_while_acc_81_206_143_ncse_sva_1;
  reg [66:0] while_acc_86_cse_sva_1;
  reg [66:0] while_acc_86_cse_sva_2;
  reg [111:0] while_slc_while_mul_cmp_10_z_mxwt_2_111_0_itm_1;
  reg [159:0] while_slc_while_mul_37_cmp_z_mxwt_1_159_0_itm_1;
  reg [159:0] while_slc_while_mul_37_cmp_z_mxwt_1_159_0_itm_2;
  reg [159:0] while_slc_while_mul_37_cmp_z_mxwt_1_159_0_itm_3;
  reg [159:0] while_slc_while_mul_37_cmp_z_mxwt_1_159_0_itm_4;
  reg [111:0] while_slc_while_mul_cmp_6_z_mxwt_1_111_0_itm_1;
  reg [111:0] while_slc_while_mul_cmp_6_z_mxwt_1_111_0_itm_2;
  reg [111:0] while_slc_while_mul_cmp_6_z_mxwt_1_111_0_itm_3;
  reg [111:0] while_slc_while_mul_cmp_6_z_mxwt_1_111_0_itm_4;
  reg [159:0] while_slc_while_mul_37_cmp_z_mxwt_1_159_0_1_itm_1;
  reg [159:0] while_slc_while_mul_37_cmp_z_mxwt_1_159_0_1_itm_2;
  reg [159:0] while_slc_while_mul_37_cmp_z_mxwt_1_159_0_1_itm_3;
  reg [63:0] reg_0_operator_for_7_reg_0_operator_for_slc_while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_64_63_0_3_itm_1;
  reg [63:0] reg_0_operator_for_7_reg_0_operator_for_slc_while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_64_63_0_3_itm_2;
  reg [207:0] while_slc_while_mul_34_cmp_z_mxwt_1_207_0_1_itm_1;
  reg [207:0] while_slc_while_mul_34_cmp_z_mxwt_1_207_0_1_itm_2;
  reg [114:0] while_asn_187_itm_1;
  reg [114:0] while_asn_187_itm_2;
  reg [114:0] while_asn_187_itm_3;
  reg [114:0] while_asn_187_itm_4;
  reg [111:0] while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm_1_1;
  reg [111:0] while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm_2;
  reg [111:0] while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm_3;
  reg [111:0] while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm_4;
  reg [114:0] while_asn_188_itm_1;
  reg [114:0] while_asn_188_itm_2;
  reg [114:0] while_asn_188_itm_3;
  reg [114:0] while_asn_188_itm_4;
  reg [111:0] while_asn_183_itm_1;
  reg [111:0] while_asn_183_itm_2;
  reg [115:0] while_slc_while_mul_115_cmp_z_mxwt_3_115_0_itm_1;
  reg [115:0] while_slc_while_mul_115_cmp_z_mxwt_3_115_0_itm_2;
  reg [115:0] while_slc_while_mul_115_cmp_z_mxwt_3_115_0_itm_3;
  reg [115:0] while_slc_while_mul_115_cmp_z_mxwt_3_115_0_itm_4;
  reg [115:0] while_slc_while_mul_115_cmp_z_mxwt_3_115_0_itm_5;
  reg [115:0] while_slc_while_mul_115_cmp_z_mxwt_3_115_0_itm_6;
  reg [112:0] while_asn_itm_6_1;
  reg [112:0] while_asn_itm_6_2;
  reg [112:0] while_asn_itm_6_3;
  reg [112:0] while_asn_itm_6_4;
  reg [162:0] while_asn_180_itm_1;
  reg [177:0] while_asn_itm_8_1;
  reg [209:0] while_slc_while_mul_124_256_1_itm_1;
  reg [209:0] while_slc_while_mul_124_256_1_itm_2;
  reg [114:0] while_asn_189_itm_1;
  reg [114:0] while_asn_189_itm_2;
  reg [114:0] while_asn_189_itm_3;
  reg [114:0] while_asn_189_itm_4;
  reg [114:0] while_asn_189_itm_5;
  reg [111:0] while_asn_itm_9_1;
  reg [111:0] while_asn_itm_9_2;
  reg [111:0] while_asn_itm_9_3;
  reg [111:0] while_asn_itm_9_4;
  reg [111:0] while_asn_itm_9_5;
  reg [239:0] while_asn_185_itm_1;
  reg [255:0] while_asn_190_itm_1;
  reg [112:0] while_slc_while_mul_26_cmp_z_mxwt_112_0_itm_1;
  reg [112:0] while_slc_while_mul_26_cmp_z_mxwt_112_0_itm_2;
  reg [111:0] while_asn_itm_12_1;
  reg [127:0] while_asn_itm_13_1;
  reg [127:0] while_asn_itm_13_2;
  reg [127:0] while_asn_itm_13_3;
  reg [127:0] while_asn_itm_13_4;
  reg [127:0] while_asn_itm_13_5;
  reg [127:0] while_asn_itm_13_6;
  reg [112:0] while_asn_itm_15_1;
  reg [112:0] while_asn_itm_15_2;
  reg [112:0] while_asn_itm_15_3;
  reg [112:0] while_asn_itm_15_4;
  reg [112:0] while_asn_itm_15_5;
  reg [111:0] while_slc_while_mul_cmp_14_z_mxwt_1_111_0_itm_1;
  reg [111:0] while_slc_while_mul_cmp_14_z_mxwt_1_111_0_itm_2;
  reg [111:0] while_slc_while_mul_cmp_14_z_mxwt_1_111_0_itm_3;
  reg [63:0] while_slc_111_48_15_itm_1;
  reg [63:0] while_slc_111_48_15_itm_2;
  reg [63:0] while_slc_111_48_15_itm_3;
  reg [63:0] while_slc_111_48_15_itm_4;
  reg [111:0] while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm_1_1_1;
  reg [111:0] while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm_1_2;
  reg [111:0] while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm_1_3;
  reg [111:0] while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm_1_4;
  reg [111:0] while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm_1_5;
  reg [111:0] while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm_1_6;
  reg [111:0] while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm_1_7;
  reg [207:0] while_slc_while_mul_24_208_1_itm_1;
  reg [207:0] while_slc_while_mul_24_208_1_itm_2;
  reg [207:0] while_slc_while_mul_24_208_1_itm_3;
  reg [207:0] while_slc_while_mul_24_208_1_itm_4;
  reg [207:0] while_slc_while_mul_24_208_1_itm_5;
  reg [63:0] reg_0_operator_for_7_reg_0_operator_for_slc_while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_64_63_0_1_itm_4;
  reg [63:0] reg_0_operator_for_7_reg_0_operator_for_slc_while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_64_63_0_1_itm_5;
  reg [63:0] reg_0_operator_for_7_reg_0_operator_for_slc_while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_64_63_0_1_itm_6;
  reg [63:0] reg_0_operator_for_7_reg_0_operator_for_slc_while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_64_63_0_1_itm_7;
  reg [63:0] reg_0_operator_for_7_reg_0_operator_for_slc_while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_64_63_0_1_itm_8;
  reg [111:0] while_slc_while_mul_cmp_3_z_mxwt_1_111_0_itm_1;
  reg [111:0] while_slc_while_mul_cmp_3_z_mxwt_1_111_0_itm_2;
  reg [111:0] while_slc_while_mul_cmp_3_z_mxwt_1_111_0_itm_3;
  reg [111:0] while_slc_while_mul_cmp_3_z_mxwt_1_111_0_itm_4;
  reg [111:0] while_slc_while_mul_cmp_3_z_mxwt_1_111_0_itm_5;
  reg [111:0] while_slc_while_mul_cmp_3_z_mxwt_1_111_0_itm_6;
  reg [111:0] while_slc_while_mul_cmp_3_z_mxwt_1_111_0_itm_7;
  reg [111:0] while_slc_while_mul_cmp_13_z_mxwt_1_111_0_itm_1;
  reg [111:0] while_slc_while_mul_cmp_13_z_mxwt_1_111_0_itm_2;
  reg [111:0] while_slc_while_mul_cmp_13_z_mxwt_1_111_0_itm_3;
  reg [111:0] while_slc_while_mul_cmp_13_z_mxwt_1_111_0_itm_4;
  reg [111:0] while_slc_while_mul_cmp_13_z_mxwt_1_111_0_itm_5;
  reg [111:0] while_slc_while_mul_cmp_13_z_mxwt_1_111_0_itm_6;
  reg [111:0] while_slc_while_mul_cmp_13_z_mxwt_1_111_0_itm_7;
  reg [111:0] while_slc_while_mul_cmp_9_z_mxwt_1_111_0_itm_1;
  reg [63:0] while_slc_111_48_5_itm_1;
  reg [63:0] while_slc_111_48_5_itm_2;
  reg [63:0] while_slc_111_48_5_itm_3;
  reg [63:0] while_slc_111_48_5_itm_4;
  reg [63:0] while_slc_111_48_5_itm_5;
  reg [63:0] while_slc_111_48_5_itm_6;
  reg [63:0] while_slc_111_48_5_itm_7;
  reg [111:0] while_slc_while_mul_cmp_11_z_mxwt_2_111_0_itm_1;
  reg [63:0] while_slc_111_48_2_itm_1;
  reg [63:0] while_slc_111_48_2_itm_2;
  reg [63:0] while_slc_111_48_2_itm_3;
  reg [63:0] while_slc_111_48_2_itm_4;
  reg [63:0] while_slc_111_48_2_itm_5;
  reg [63:0] while_slc_111_48_2_itm_6;
  reg [63:0] while_slc_111_48_2_itm_7;
  reg [63:0] while_slc_111_48_2_itm_8;
  reg [111:0] while_slc_while_mul_cmp_8_z_mxwt_1_111_0_itm_1;
  reg [63:0] while_slc_111_48_4_itm_1;
  reg [63:0] while_slc_111_48_4_itm_2;
  reg [63:0] while_slc_111_48_4_itm_3;
  reg [63:0] while_slc_111_48_4_itm_4;
  reg [63:0] while_slc_111_48_4_itm_5;
  reg [63:0] while_slc_111_48_4_itm_6;
  reg [63:0] while_slc_111_48_4_itm_7;
  wire while_stage_v_10_mx2;
  wire while_stage_v_18_mx2;
  wire while_stage_v_22_mx2;
  wire while_stage_v_20_mx1;
  wire while_stage_v_16_mx1;
  wire while_stage_v_12_mx1;
  wire while_or_33_cse_1;
  wire while_or_34_cse_1;
  wire while_while_or_17_cse_1;
  wire while_or_18_cse_1;
  wire while_or_19_cse_1;
  wire while_or_20_cse_1;
  wire while_or_165_cse_1;
  wire while_or_166_cse_1;
  wire while_or_167_cse_1;
  wire while_or_168_cse_1;
  wire while_or_169_cse_1;
  wire while_while_or_68_cse_1;
  wire or_861_cse;
  wire while_and_451_cse;
  wire while_and_455_cse;
  wire while_and_458_cse;
  wire while_and_460_cse;
  wire while_and_463_cse;
  wire while_and_468_cse;
  wire while_and_475_cse;
  wire while_and_477_cse;
  wire while_and_480_cse;
  wire while_and_482_cse;
  wire while_and_484_cse;
  wire while_and_493_cse;
  wire while_and_496_cse;
  wire while_and_500_cse;
  wire while_and_507_cse;
  wire while_and_467_cse;
  wire while_and_518_cse;
  wire while_and_503_cse;
  wire while_and_462_cse;
  wire while_and_502_cse;
  wire while_nor_91_cse;
  wire or_731_cse_1;
  wire or_260_itm;
  wire [63:0] while_acc_115_itm_111_48_1;
  wire [63:0] while_acc_95_itm_161_98_1;
  wire [63:0] while_acc_124_itm_255_192_1;
  wire [63:0] while_acc_114_itm_111_48_1;
  wire [63:0] while_acc_111_itm_111_48_1;
  wire [63:0] while_acc_130_itm_111_48_1;
  wire [63:0] z_out_111_48;
  wire [63:0] z_out_1_111_48;
  wire [206:0] z_out_2_207_1;
  wire [207:0] nl_z_out_2_207_1;
  wire [63:0] z_out_4_111_48;
  wire [63:0] z_out_5_111_48;
  wire [63:0] z_out_6_111_48;
  wire [63:0] z_out_7_111_48;

  wire mux_169_nl;
  wire nor_163_nl;
  wire nor_164_nl;
  wire mux_167_nl;
  wire mux_166_nl;
  wire mux_165_nl;
  wire and_2087_nl;
  wire mux_164_nl;
  wire and_2089_nl;
  wire or_370_nl;
  wire mux_170_nl;
  wire nor_165_nl;
  wire nor_166_nl;
  wire mux_133_nl;
  wire nor_158_nl;
  wire[111:0] while_acc_106_nl;
  wire[112:0] nl_while_acc_106_nl;
  wire[111:0] while_acc_107_nl;
  wire[112:0] nl_while_acc_107_nl;
  wire[207:0] while_acc_76_nl;
  wire[209:0] nl_while_acc_76_nl;
  wire[111:0] while_acc_108_nl;
  wire[112:0] nl_while_acc_108_nl;
  wire[162:0] while_acc_85_nl;
  wire[163:0] nl_while_acc_85_nl;
  wire[255:0] while_acc_102_nl;
  wire[257:0] nl_while_acc_102_nl;
  wire[111:0] while_acc_71_nl;
  wire[112:0] nl_while_acc_71_nl;
  wire mux_130_nl;
  wire mux_129_nl;
  wire mux_128_nl;
  wire mux_127_nl;
  wire mux_126_nl;
  wire mux_125_nl;
  wire mux_124_nl;
  wire mux_123_nl;
  wire mux_122_nl;
  wire mux_121_nl;
  wire or_267_nl;
  wire[159:0] while_acc_79_nl;
  wire[161:0] nl_while_acc_79_nl;
  wire[111:0] while_acc_4_nl;
  wire[112:0] nl_while_acc_4_nl;
  wire[162:0] while_acc_90_nl;
  wire[163:0] nl_while_acc_90_nl;
  wire[208:0] while_acc_104_nl;
  wire[210:0] nl_while_acc_104_nl;
  wire[111:0] while_acc_113_nl;
  wire[112:0] nl_while_acc_113_nl;
  wire[207:0] while_acc_80_nl;
  wire[209:0] nl_while_acc_80_nl;
  wire[206:0] while_acc_81_nl;
  wire[207:0] nl_while_acc_81_nl;
  wire[206:0] while_acc_82_nl;
  wire[207:0] nl_while_acc_82_nl;
  wire[207:0] while_acc_77_nl;
  wire[210:0] nl_while_acc_77_nl;
  wire[111:0] while_acc_3_nl;
  wire[112:0] nl_while_acc_3_nl;
  wire[111:0] while_acc_115_nl;
  wire[112:0] nl_while_acc_115_nl;
  wire[161:0] while_acc_95_nl;
  wire[162:0] nl_while_acc_95_nl;
  wire[209:0] while_acc_103_nl;
  wire[211:0] nl_while_acc_103_nl;
  wire[255:0] while_acc_124_nl;
  wire[256:0] nl_while_acc_124_nl;
  wire[209:0] while_acc_129_nl;
  wire[210:0] nl_while_acc_129_nl;
  wire[111:0] while_acc_114_nl;
  wire[112:0] nl_while_acc_114_nl;
  wire[111:0] while_acc_111_nl;
  wire[112:0] nl_while_acc_111_nl;
  wire mux_270_nl;
  wire nand_16_nl;
  wire mux_220_nl;
  wire mux_219_nl;
  wire or_456_nl;
  wire[111:0] while_acc_130_nl;
  wire[112:0] nl_while_acc_130_nl;
  wire mux_63_nl;
  wire mux_65_nl;
  wire or_244_nl;
  wire mux_62_nl;
  wire mux_61_nl;
  wire mux_60_nl;
  wire mux_59_nl;
  wire mux_58_nl;
  wire mux_57_nl;
  wire mux_56_nl;
  wire mux_55_nl;
  wire mux_54_nl;
  wire and_2054_nl;
  wire mux_68_nl;
  wire mux_67_nl;
  wire nor_108_nl;
  wire nor_82_nl;
  wire or_262_nl;
  wire nor_111_nl;
  wire or_306_nl;
  wire or_420_nl;
  wire mux_190_nl;
  wire mux_189_nl;
  wire mux_187_nl;
  wire mux_186_nl;
  wire or_333_nl;
  wire mux_204_nl;
  wire or_436_nl;
  wire mux_243_nl;
  wire nand_12_nl;
  wire mux_242_nl;
  wire mux_241_nl;
  wire mux_240_nl;
  wire and_2061_nl;
  wire mux_239_nl;
  wire mux_238_nl;
  wire mux_237_nl;
  wire mux_236_nl;
  wire mux_235_nl;
  wire mux_234_nl;
  wire and_2060_nl;
  wire or_484_nl;
  wire nor_125_nl;
  wire nor_126_nl;
  wire mux_248_nl;
  wire mux_247_nl;
  wire mux_246_nl;
  wire mux_245_nl;
  wire and_2063_nl;
  wire mux_251_nl;
  wire nand_14_nl;
  wire mux_253_nl;
  wire mux_252_nl;
  wire mux_255_nl;
  wire or_544_nl;
  wire mux_258_nl;
  wire mux_257_nl;
  wire or_546_nl;
  wire mux_264_nl;
  wire nand_15_nl;
  wire nor_128_nl;
  wire mux_268_nl;
  wire mux_267_nl;
  wire mux_266_nl;
  wire mux_265_nl;
  wire or_90_nl;
  wire or_166_nl;
  wire mux_74_nl;
  wire and_2071_nl;
  wire mux_88_nl;
  wire mux_100_nl;
  wire nor_135_nl;
  wire mux_120_nl;
  wire and_2076_nl;
  wire and_2077_nl;
  wire mux_157_nl;
  wire nor_147_nl;
  wire mux_174_nl;
  wire and_2084_nl;
  wire[4:0] while_mux_90_nl;
  wire[4:0] while_mux_564_nl;
  wire[1:0] while_mux_565_nl;
  wire[3:0] while_mux_566_nl;
  wire[112:0] acc_nl;
  wire[113:0] nl_acc_nl;
  wire[111:0] while_while_mux_4_nl;
  wire[111:0] while_mux1h_640_nl;
  wire[112:0] acc_1_nl;
  wire[113:0] nl_acc_1_nl;
  wire[111:0] while_mux1h_641_nl;
  wire[111:0] while_mux1h_642_nl;
  wire[111:0] while_mux_579_nl;
  wire[2:0] while_while_and_87_nl;
  wire while_not_235_nl;
  wire[63:0] while_mux_580_nl;
  wire[62:0] while_mux_581_nl;
  wire[111:0] while_acc_136_nl;
  wire[112:0] nl_while_acc_136_nl;
  wire[111:0] while_mux_582_nl;
  wire[111:0] while_mux_583_nl;
  wire[111:0] while_acc_137_nl;
  wire[112:0] nl_while_acc_137_nl;
  wire[111:0] while_mux_584_nl;
  wire[111:0] while_mux_585_nl;
  wire[111:0] while_acc_138_nl;
  wire[112:0] nl_while_acc_138_nl;
  wire[111:0] while_mux_586_nl;
  wire[111:0] while_mux_587_nl;
  wire[111:0] while_acc_139_nl;
  wire[112:0] nl_while_acc_139_nl;
  wire[111:0] while_mux_588_nl;
  wire[111:0] while_mux_589_nl;
  wire operator_96_48_true_AC_TRN_AC_WRAP_3_operator_96_48_true_AC_TRN_AC_WRAP_3_or_1_nl;
  wire[61:0] operator_96_48_true_AC_TRN_AC_WRAP_3_operator_96_48_true_AC_TRN_AC_WRAP_3_mux_2_nl;

  // Interconnect Declarations for Component Instantiations 
  wire [1023:0] nl_Rotate_run_rotate_out_Push_mioi_inst_rotate_out_Push_mioi_idat;
  assign nl_Rotate_run_rotate_out_Push_mioi_inst_rotate_out_Push_mioi_idat = {rotate_out_Push_mioi_idat_1023_960
      , rotate_out_Push_mioi_idat_959_896 , rotate_out_Push_mioi_idat_895_832 , rotate_out_Push_mioi_idat_831_768
      , rotate_out_Push_mioi_idat_767_704 , rotate_out_Push_mioi_idat_703_640 , rotate_out_Push_mioi_idat_639_576
      , rotate_out_Push_mioi_idat_575_512 , rotate_out_Push_mioi_idat_511_448 , rotate_out_Push_mioi_idat_447_384
      , rotate_out_Push_mioi_idat_383_320 , rotate_out_Push_mioi_idat_319_256 , rotate_out_Push_mioi_idat_255_192
      , rotate_out_Push_mioi_idat_191_128 , rotate_out_Push_mioi_idat_127_64 , 64'b0000000000000000000000000000000000000000000000000000000000000000};
  wire[65:0] while_acc_121_nl;
  wire[66:0] nl_while_acc_121_nl;
  wire[65:0] while_acc_122_nl;
  wire[66:0] nl_while_acc_122_nl;
  wire[62:0] while_acc_127_nl;
  wire[63:0] nl_while_acc_127_nl;
  wire [66:0] nl_Rotate_run_while_mul_115_cmp_inst_while_mul_115_cmp_a_run;
  assign nl_while_acc_122_nl = ({(~ cfg_sin_3_beta) , 2'b00}) + conv_s2s_64_66(cfg_sin_3_beta);
  assign while_acc_122_nl = nl_while_acc_122_nl[65:0];
  assign nl_while_acc_127_nl = conv_s2s_62_63(cfg_sin_beta[63:2]) + 63'b000000000000000000000000000000000000000000000000000000000000001;
  assign while_acc_127_nl = nl_while_acc_127_nl[62:0];
  assign nl_while_acc_121_nl = while_acc_122_nl + conv_s2s_65_66({while_acc_127_nl
      , (cfg_sin_beta[1:0])});
  assign while_acc_121_nl = nl_while_acc_121_nl[65:0];
  assign nl_Rotate_run_while_mul_115_cmp_inst_while_mul_115_cmp_a_run = MUX1HOT_v_67_4_2(while_acc_86_cse_sva_3,
      (signext_67_66(while_acc_121_nl)), ({{3{while_slc_111_48_19_ncse_sva[63]}},
      while_slc_111_48_19_ncse_sva}), while_acc_86_cse_sva, {or_tmp_394 , (fsm_output[1])
      , (fsm_output[3]) , (fsm_output[4])});
  wire[67:0] while_acc_88_nl;
  wire[69:0] nl_while_acc_88_nl;
  wire [112:0] nl_Rotate_run_while_mul_115_cmp_inst_while_mul_115_cmp_b_run;
  assign nl_while_acc_88_nl = conv_s2s_64_68(cfg_cos_beta) + conv_s2s_64_68(~ cfg_cos_3_beta)
      + ({cfg_cos_3_beta , 4'b0001});
  assign while_acc_88_nl = nl_while_acc_88_nl[67:0];
  assign nl_Rotate_run_while_mul_115_cmp_inst_while_mul_115_cmp_b_run = MUX1HOT_v_113_4_2(while_asn_itm_15_6,
      ({{1{while_asn_itm_9_6[111]}}, while_asn_itm_9_6}), (signext_113_68(while_acc_88_nl)),
      while_asn_itm_6_5, {or_tmp_394 , (fsm_output[1]) , (fsm_output[3]) , (fsm_output[4])});
  wire [241:0] nl_Rotate_run_while_mul_110_cmp_inst_while_mul_110_cmp_b_run;
  assign nl_Rotate_run_while_mul_110_cmp_inst_while_mul_110_cmp_b_run = MUX1HOT_v_242_3_2(while_mul_111_cmp_z_mxwt_1,
      while_mul_111_cmp_z_mxwt, while_mul_111_cmp_z_mxwt_2, {or_tmp_547 , (fsm_output[2])
      , (fsm_output[3])});
  wire [177:0] nl_Rotate_run_while_mul_111_cmp_inst_while_mul_111_cmp_b_run;
  assign nl_Rotate_run_while_mul_111_cmp_inst_while_mul_111_cmp_b_run = MUX1HOT_v_178_4_2(while_mul_67_cmp_z_mxwt_1,
      while_mul_73_cmp_z_mxwt, while_mul_73_cmp_1_z, while_mul_73_cmp_z_mxwt_1, {(fsm_output[1])
      , (fsm_output[2]) , (fsm_output[3]) , (fsm_output[4])});
  wire [63:0] nl_Rotate_run_while_mul_108_cmp_inst_while_mul_108_cmp_b_run;
  assign nl_Rotate_run_while_mul_108_cmp_inst_while_mul_108_cmp_b_run = MUX1HOT_v_64_3_2(while_slc_111_48_20_ncse_sva,
      (rotate_in_Pop_mioi_idat_mxwt[767:704]), while_slc_111_48_21_ncse_sva, {or_tmp_389
      , (fsm_output[1]) , (fsm_output[4])});
  wire  nl_Rotate_run_while_mul_76_cmp_inst_while_mul_76_cmp_oswt_unreg_1;
  assign nl_Rotate_run_while_mul_76_cmp_inst_while_mul_76_cmp_oswt_unreg_1 = and_902_cse
      | and_842_cse | and_733_cse;
  wire [175:0] nl_Rotate_run_while_mul_76_cmp_inst_while_mul_76_cmp_b_run;
  assign nl_Rotate_run_while_mul_76_cmp_inst_while_mul_76_cmp_b_run = MUX1HOT_v_176_4_2(while_slc_while_mul_77_cmp_z_mxwt_1_175_0_itm_1_1,
      (while_mul_44_cmp_1_z[175:0]), while_mul_77_cmp_z_mxwt_2, while_slc_while_mul_77_cmp_z_mxwt_1_175_0_itm,
      {or_tmp_467 , (fsm_output[2]) , (fsm_output[3]) , (fsm_output[4])});
  wire  nl_Rotate_run_while_mul_77_cmp_inst_while_mul_77_cmp_oswt_unreg_1;
  assign nl_Rotate_run_while_mul_77_cmp_inst_while_mul_77_cmp_oswt_unreg_1 = and_784_cse
      | and_900_cse;
  wire [65:0] nl_Rotate_run_while_mul_77_cmp_inst_while_mul_77_cmp_a_run;
  assign nl_Rotate_run_while_mul_77_cmp_inst_while_mul_77_cmp_a_run = MUX1HOT_v_66_3_2(({{2{cfg_sin_beta[63]}},
      cfg_sin_beta}), ({{2{cfg_cos_beta[63]}}, cfg_cos_beta}), ({z_out_8 , (cfg_cos_2_beta[0])}),
      {(fsm_output[1]) , or_tmp_490 , (fsm_output[3])});
  wire [111:0] nl_Rotate_run_while_mul_77_cmp_inst_while_mul_77_cmp_b_run;
  assign nl_Rotate_run_while_mul_77_cmp_inst_while_mul_77_cmp_b_run = MUX1HOT_v_112_4_2(while_slc_while_mul_36_cmp_1_z_111_0_itm_1_1,
      while_mul_108_cmp_z_mxwt_1, while_asn_183_itm_3, while_slc_while_mul_36_cmp_1_z_111_0_itm_1,
      {or_tmp_394 , (fsm_output[1]) , (fsm_output[3]) , (fsm_output[4])});
  wire  nl_Rotate_run_while_mul_70_cmp_inst_while_mul_70_cmp_oswt_unreg;
  assign nl_Rotate_run_while_mul_70_cmp_inst_while_mul_70_cmp_oswt_unreg = and_801_cse
      | and_735_cse | and_739_cse;
  wire [63:0] nl_Rotate_run_while_mul_70_cmp_inst_while_mul_70_cmp_a_run;
  assign nl_Rotate_run_while_mul_70_cmp_inst_while_mul_70_cmp_a_run = MUX1HOT_v_64_4_2(while_slc_111_48_16_ncse_sva_2,
      while_slc_111_48_18_ncse_sva_2, while_slc_111_48_20_ncse_sva_2, reg_0_operator_for_7_reg_0_operator_for_slc_while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_64_63_0_1_itm_9,
      {or_tmp_467 , (fsm_output[2]) , (fsm_output[3]) , (fsm_output[4])});
  wire while_mux1h_40_nl;
  wire[64:0] while_mux1h_639_nl;
  wire while_while_mux_2_nl;
  wire [66:0] nl_Rotate_run_while_mul_70_cmp_inst_while_mul_70_cmp_b_run;
  assign while_mux1h_40_nl = MUX1HOT_s_1_3_2((z_out_8[64]), (while_acc_118_sdt[66]),
      (while_acc_75_itm[17]), {or_731_cse_1 , (fsm_output[3]) , (fsm_output[4])});
  assign while_mux1h_639_nl = MUX1HOT_v_65_4_2(z_out_8, ({(z_out_8[63:0]) , (cfg_cos_2_beta[1])}),
      (while_acc_118_sdt[65:1]), ({while_acc_75_itm , while_slc_while_acc_74_psp_46_0_itm}),
      {(fsm_output[1]) , (fsm_output[2]) , (fsm_output[3]) , (fsm_output[4])});
  assign while_while_mux_2_nl = MUX_s_1_2_2((cfg_cos_2_beta[0]), (while_acc_118_sdt[0]),
      fsm_output[3]);
  assign nl_Rotate_run_while_mul_70_cmp_inst_while_mul_70_cmp_b_run = {while_mux1h_40_nl
      , while_mux1h_639_nl , while_while_mux_2_nl};
  wire  nl_Rotate_run_while_while_mul_cmp_inst_while_while_mul_cmp_oswt_unreg;
  assign nl_Rotate_run_while_while_mul_cmp_inst_while_while_mul_cmp_oswt_unreg =
      and_823_cse | and_902_cse | and_842_cse;
  wire [239:0] nl_Rotate_run_while_while_mul_cmp_inst_while_while_mul_cmp_b_run;
  assign nl_Rotate_run_while_while_mul_cmp_inst_while_while_mul_cmp_b_run = MUX1HOT_v_240_4_2(while_asn_185_itm_2,
      while_mul_76_cmp_z_mxwt, ({{62{while_slc_while_mul_67_cmp_z_mxwt_1_177_0_itm_1[177]}},
      while_slc_while_mul_67_cmp_z_mxwt_1_177_0_itm_1}), ({{62{while_slc_while_mul_67_cmp_z_mxwt_1_177_0_itm_1_1[177]}},
      while_slc_while_mul_67_cmp_z_mxwt_1_177_0_itm_1_1}), {or_tmp_467 , (fsm_output[2])
      , (fsm_output[3]) , (fsm_output[4])});
  wire  nl_Rotate_run_while_mul_67_cmp_inst_while_mul_67_cmp_oswt_unreg;
  assign nl_Rotate_run_while_mul_67_cmp_inst_while_mul_67_cmp_oswt_unreg = and_801_cse
      | and_783_cse | and_861_cse;
  wire [63:0] nl_Rotate_run_while_mul_67_cmp_inst_while_mul_67_cmp_a_run;
  assign nl_Rotate_run_while_mul_67_cmp_inst_while_mul_67_cmp_a_run = MUX1HOT_v_64_3_2(while_slc_111_48_8_ncse_sva_7,
      cfg_cos_beta, cfg_sin_beta, {or_tmp_394 , (fsm_output[1]) , or_tmp_372});
  wire [176:0] nl_Rotate_run_while_mul_67_cmp_inst_while_mul_67_cmp_b_run;
  assign nl_Rotate_run_while_mul_67_cmp_inst_while_mul_67_cmp_b_run = MUX1HOT_v_177_4_2(({{63{while_asn_itm_5_1[113]}},
      while_asn_itm_5_1}), while_mul_44_cmp_z_mxwt, ({{63{while_asn_itm_2[113]}},
      while_asn_itm_2}), ({{63{while_asn_itm_4[113]}}, while_asn_itm_4}), {(fsm_output[1])
      , (fsm_output[2]) , (fsm_output[3]) , (fsm_output[4])});
  wire [113:0] nl_Rotate_run_while_mul_73_cmp_inst_while_mul_73_cmp_b_run;
  assign nl_Rotate_run_while_mul_73_cmp_inst_while_mul_73_cmp_b_run = MUX1HOT_v_114_3_2(while_asn_itm_10_1,
      ({{1{while_asn_itm_1_1[112]}}, while_asn_itm_1_1}), while_asn_itm_11_1, {or_tmp_394
      , (fsm_output[1]) , (fsm_output[4])});
  wire  nl_Rotate_run_while_mul_44_cmp_inst_while_mul_44_cmp_oswt_unreg;
  assign nl_Rotate_run_while_mul_44_cmp_inst_while_mul_44_cmp_oswt_unreg = and_574_cse
      | and_783_cse;
  wire [63:0] nl_Rotate_run_while_mul_44_cmp_inst_while_mul_44_cmp_a_run;
  assign nl_Rotate_run_while_mul_44_cmp_inst_while_mul_44_cmp_a_run = MUX_v_64_2_2(while_slc_111_48_9_ncse_sva_2,
      cfg_cos_beta, or_tmp_547);
  wire[64:0] while_mux1h_1_nl;
  wire[47:0] while_mux1h_nl;
  wire [112:0] nl_Rotate_run_while_mul_44_cmp_inst_while_mul_44_cmp_b_run;
  assign while_mux1h_1_nl = MUX1HOT_v_65_3_2((while_asn_itm_3_1[112:48]), ({{48{while_acc_78_cse_sva_1[16]}},
      while_acc_78_cse_sva_1}), (while_mul_26_cse_sva_5[112:48]), {(fsm_output[1])
      , (fsm_output[3]) , (fsm_output[4])});
  assign while_mux1h_nl = MUX1HOT_v_48_3_2((while_asn_itm_3_1[47:0]), (cfg_cos_2_beta[47:0]),
      (while_mul_26_cse_sva_5[47:0]), {(fsm_output[1]) , (fsm_output[3]) , (fsm_output[4])});
  assign nl_Rotate_run_while_mul_44_cmp_inst_while_mul_44_cmp_b_run = {while_mux1h_1_nl
      , while_mux1h_nl};
  wire  nl_Rotate_run_while_mul_37_cmp_inst_while_mul_37_cmp_oswt_unreg_1;
  assign nl_Rotate_run_while_mul_37_cmp_inst_while_mul_37_cmp_oswt_unreg_1 = and_827_cse
      | and_828_cse;
  wire[67:0] operator_96_48_true_AC_TRN_AC_WRAP_2_acc_nl;
  wire[69:0] nl_operator_96_48_true_AC_TRN_AC_WRAP_2_acc_nl;
  wire[67:0] while_acc_100_nl;
  wire[69:0] nl_while_acc_100_nl;
  wire [67:0] nl_Rotate_run_while_mul_37_cmp_inst_while_mul_37_cmp_a_run;
  assign nl_operator_96_48_true_AC_TRN_AC_WRAP_2_acc_nl = ({cfg_cos_2_beta , 4'b0001})
      + conv_s2s_64_68(~ cfg_cos_2_beta) + 68'b11111111111111111111000000000000000000000000000000000000000000000000;
  assign operator_96_48_true_AC_TRN_AC_WRAP_2_acc_nl = nl_operator_96_48_true_AC_TRN_AC_WRAP_2_acc_nl[67:0];
  assign nl_while_acc_100_nl = conv_s2s_64_68(~ cfg_cos_beta) + conv_s2s_64_68(cfg_cos_3_beta)
      + ({cfg_cos_beta , 4'b0001});
  assign while_acc_100_nl = nl_while_acc_100_nl[67:0];
  assign nl_Rotate_run_while_mul_37_cmp_inst_while_mul_37_cmp_a_run = MUX1HOT_v_68_4_2(({{4{z_out_6_111_48[63]}},
      z_out_6_111_48}), ({{4{while_slc_111_48_9_ncse_sva[63]}}, while_slc_111_48_9_ncse_sva}),
      operator_96_48_true_AC_TRN_AC_WRAP_2_acc_nl, while_acc_100_nl, {(fsm_output[1])
      , (fsm_output[2]) , (fsm_output[3]) , (fsm_output[4])});
  wire [127:0] nl_Rotate_run_while_mul_37_cmp_inst_while_mul_37_cmp_b_run;
  assign nl_Rotate_run_while_mul_37_cmp_inst_while_mul_37_cmp_b_run = MUX1HOT_v_128_4_2(while_mul_38_cse_sva,
      while_mul_cmp_2_z_mxwt_2, while_asn_itm_13_7, ({{64{while_slc_111_48_21_ncse_sva_6[63]}},
      while_slc_111_48_21_ncse_sva_6}), {or_tmp_394 , (fsm_output[1]) , (fsm_output[3])
      , (fsm_output[4])});
  wire  nl_Rotate_run_while_mul_34_cmp_inst_while_mul_34_cmp_oswt_unreg_1;
  assign nl_Rotate_run_while_mul_34_cmp_inst_while_mul_34_cmp_oswt_unreg_1 = and_799_cse
      | and_467_cse;
  wire nor_160_nl;
  wire [63:0] nl_Rotate_run_while_mul_34_cmp_inst_while_mul_34_cmp_a_run;
  assign nor_160_nl = ~((fsm_output[0]) | (fsm_output[2]));
  assign nl_Rotate_run_while_mul_34_cmp_inst_while_mul_34_cmp_a_run = MUX_v_64_2_2(reg_0_operator_for_7_reg_0_operator_for_slc_while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_64_63_0_2_itm_4,
      cfg_sin_beta, nor_160_nl);
  wire [177:0] nl_Rotate_run_while_mul_34_cmp_inst_while_mul_34_cmp_b_run;
  assign nl_Rotate_run_while_mul_34_cmp_inst_while_mul_34_cmp_b_run = MUX1HOT_v_178_4_2(while_asn_itm_8_2,
      while_mul_77_cmp_z_mxwt, ({{1{while_mul_25_cmp_z_mxwt_2[176]}}, while_mul_25_cmp_z_mxwt_2}),
      (signext_178_177(while_mul_73_cmp_z_mxwt_1[176:0])), {or_dcpl_125 , (fsm_output[1])
      , (fsm_output[2]) , (fsm_output[3])});
  wire [63:0] nl_Rotate_run_while_mul_34_cmp_1_inst_while_mul_34_cmp_1_a_run;
  assign nl_Rotate_run_while_mul_34_cmp_1_inst_while_mul_34_cmp_1_a_run = MUX1HOT_v_64_3_2(reg_0_operator_for_7_reg_0_operator_for_slc_while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_64_63_0_3_itm_3,
      while_slc_111_48_9_ncse_sva_2, cfg_sin_beta, {or_tmp_467 , (fsm_output[2])
      , or_tmp_372});
  wire [177:0] nl_Rotate_run_while_mul_34_cmp_1_inst_while_mul_34_cmp_1_b_run;
  assign nl_Rotate_run_while_mul_34_cmp_1_inst_while_mul_34_cmp_1_b_run = MUX1HOT_v_178_4_2(({{1{while_mul_25_cmp_z_mxwt_3[176]}},
      while_mul_25_cmp_z_mxwt_3}), ({{1{while_mul_25_cse_sva[176]}}, while_mul_25_cse_sva}),
      ({{1{while_mul_44_cmp_z_mxwt_1[176]}}, while_mul_44_cmp_z_mxwt_1}), while_mul_25_cmp_z_mxwt,
      {(fsm_output[1]) , (fsm_output[2]) , (fsm_output[3]) , (fsm_output[4])});
  wire  nl_Rotate_run_while_mul_36_cmp_inst_while_mul_36_cmp_oswt_unreg;
  assign nl_Rotate_run_while_mul_36_cmp_inst_while_mul_36_cmp_oswt_unreg = and_479_cse
      | and_689_cse;
  wire [63:0] nl_Rotate_run_while_mul_36_cmp_inst_while_mul_36_cmp_b_run;
  assign nl_Rotate_run_while_mul_36_cmp_inst_while_mul_36_cmp_b_run = MUX1HOT_v_64_4_2(while_slc_111_48_16_ncse_sva_1,
      (while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_sva_1023_192[639:576]),
      while_slc_111_48_19_ncse_sva_1, cfg_cos_beta, {or_tmp_467 , (fsm_output[2])
      , (fsm_output[3]) , (fsm_output[4])});
  wire[2:0] while_mux_46_nl;
  wire[3:0] while_mux_563_nl;
  wire [48:0] nl_Rotate_run_while_mul_36_cmp_inst_while_mul_36_cmp_a_run_pff;
  assign while_mux_46_nl = MUX_v_3_2_2(3'b100, 3'b011, fsm_output[4]);
  assign while_mux_563_nl = MUX_v_4_2_2(4'b1000, 4'b0111, fsm_output[4]);
  assign nl_Rotate_run_while_mul_36_cmp_inst_while_mul_36_cmp_a_run_pff = {1'b1 ,
      (fsm_output[4]) , 5'b01110 , (fsm_output[4]) , 1'b1 , while_mux_46_nl , 1'b0
      , while_mux_563_nl , 1'b1 , (~ (fsm_output[4])) , 2'b10 , (signext_3_1(fsm_output[4]))
      , 2'b00 , (signext_2_1(fsm_output[4])) , 1'b0 , (~ (fsm_output[4])) , 3'b101
      , (signext_4_1(~ (fsm_output[4]))) , 4'b0010 , (fsm_output[4]) , 3'b011 , (fsm_output[4])
      , 3'b001};
  wire[16:0] while_mux1h_30_nl;
  wire[47:0] while_while_mux_1_nl;
  wire [64:0] nl_Rotate_run_while_mul_25_cmp_inst_while_mul_25_cmp_a_run;
  assign while_mux1h_30_nl = MUX1HOT_v_17_3_2(while_acc_78_cse_sva_1_1, while_acc_78_cse_sva_3,
      (signext_17_16(cfg_sin_beta[63:48])), {(fsm_output[1]) , (fsm_output[2]) ,
      or_tmp_372});
  assign while_while_mux_1_nl = MUX_v_48_2_2((cfg_cos_2_beta[47:0]), (cfg_sin_beta[47:0]),
      or_tmp_372);
  assign nl_Rotate_run_while_mul_25_cmp_inst_while_mul_25_cmp_a_run = {while_mux1h_30_nl
      , while_while_mux_1_nl};
  wire [112:0] nl_Rotate_run_while_mul_25_cmp_inst_while_mul_25_cmp_b_run;
  assign nl_Rotate_run_while_mul_25_cmp_inst_while_mul_25_cmp_b_run = MUX1HOT_v_113_4_2(while_asn_itm_7_1,
      while_slc_while_mul_26_cmp_z_mxwt_112_0_itm_3, while_mul_26_cmp_z_mxwt_1, while_asn_itm_1,
      {or_tmp_467 , (fsm_output[2]) , (fsm_output[3]) , (fsm_output[4])});
  wire  nl_Rotate_run_while_mul_26_cmp_inst_while_mul_26_cmp_oswt_unreg_1;
  assign nl_Rotate_run_while_mul_26_cmp_inst_while_mul_26_cmp_oswt_unreg_1 = and_662_cse
      | and_712_cse | and_693_cse;
  wire nor_103_nl;
  wire [63:0] nl_Rotate_run_while_mul_26_cmp_inst_while_mul_26_cmp_b_run;
  assign nor_103_nl = ~((fsm_output[4:3]!=2'b00));
  assign nl_Rotate_run_while_mul_26_cmp_inst_while_mul_26_cmp_b_run = MUX1HOT_v_64_3_2(while_slc_111_48_20_ncse_sva_1,
      cfg_sin_beta, while_slc_111_48_19_ncse_sva, {nor_103_nl , (fsm_output[3]) ,
      (fsm_output[4])});
  wire while_while_or_136_nl;
  wire[2:0] while_mux1h_28_nl;
  wire while_while_or_137_nl;
  wire[7:0] while_mux1h_364_nl;
  wire[6:0] while_mux1h_365_nl;
  wire while_while_or_89_nl;
  wire[2:0] while_mux1h_361_nl;
  wire[2:0] while_while_or_138_nl;
  wire while_not_nl;
  wire[1:0] while_while_mux_nl;
  wire[4:0] while_mux1h_362_nl;
  wire [49:0] nl_Rotate_run_while_mul_26_cmp_inst_while_mul_26_cmp_a_run_pff;
  assign while_while_or_136_nl = (~(or_tmp_467 | (fsm_output[3]))) | or_tmp_490;
  assign while_mux1h_28_nl = MUX1HOT_v_3_3_2(3'b001, 3'b110, 3'b101, {or_tmp_467
      , or_tmp_490 , (fsm_output[3])});
  assign while_while_or_137_nl = (~ or_tmp_467) | or_tmp_490;
  assign while_mux1h_364_nl = MUX1HOT_v_8_3_2(8'b10001000, 8'b01111011, 8'b01100111,
      {or_tmp_467 , or_tmp_490 , (fsm_output[3])});
  assign while_mux1h_365_nl = MUX1HOT_v_7_3_2(7'b1100000, 7'b1010101, 7'b0101110,
      {or_tmp_467 , or_tmp_490 , (fsm_output[3])});
  assign while_while_or_89_nl = (~ or_tmp_467) | or_tmp_490 | (fsm_output[3]);
  assign while_mux1h_361_nl = MUX1HOT_v_3_3_2(3'b110, 3'b001, 3'b010, {or_tmp_467
      , or_tmp_490 , (fsm_output[3])});
  assign while_not_nl = ~ (fsm_output[3]);
  assign while_while_or_138_nl = MUX_v_3_2_2(({{2{or_tmp_467}}, or_tmp_467}), 3'b111,
      while_not_nl);
  assign while_while_mux_nl = MUX_v_2_2_2(2'b01, 2'b10, or_tmp_490);
  assign while_mux1h_362_nl = MUX1HOT_v_5_3_2(5'b00110, 5'b01000, 5'b10111, {or_tmp_467
      , or_tmp_490 , (fsm_output[3])});
  assign nl_Rotate_run_while_mul_26_cmp_inst_while_mul_26_cmp_a_run_pff = {while_while_or_136_nl
      , 1'b1 , while_mux1h_28_nl , 2'b11 , or_tmp_490 , while_while_or_137_nl , 1'b1
      , while_mux1h_364_nl , 1'b1 , while_mux1h_365_nl , 1'b0 , (signext_2_1(while_while_or_89_nl))
      , 1'b0 , while_mux1h_361_nl , 1'b1 , or_tmp_467 , while_while_or_138_nl , 1'b0
      , while_while_mux_nl , 1'b0 , while_mux1h_362_nl , 1'b0 , or_tmp_490 , 1'b1};
  wire  nl_Rotate_run_while_mul_26_cmp_1_inst_while_mul_26_cmp_1_oswt_unreg_1;
  assign nl_Rotate_run_while_mul_26_cmp_1_inst_while_mul_26_cmp_1_oswt_unreg_1 =
      and_470_cse | and_515_cse | and_693_cse;
  wire [63:0] nl_Rotate_run_while_mul_26_cmp_1_inst_while_mul_26_cmp_1_b_run;
  assign nl_Rotate_run_while_mul_26_cmp_1_inst_while_mul_26_cmp_1_b_run = MUX1HOT_v_64_4_2(while_slc_111_48_16_ncse_sva,
      (rotate_in_Pop_mioi_idat_mxwt[767:704]), while_acc_111_itm_111_48_1, while_slc_111_48_21_ncse_sva,
      {or_tmp_389 , (fsm_output[1]) , (fsm_output[2]) , (fsm_output[4])});
  wire [63:0] nl_Rotate_run_while_mul_cmp_inst_while_mul_cmp_a_run;
  assign nl_Rotate_run_while_mul_cmp_inst_while_mul_cmp_a_run = MUX_v_64_2_2(cfg_sin_alpha,
      cfg_sin_gamma, or_tmp_372);
  wire [63:0] nl_Rotate_run_while_mul_cmp_inst_while_mul_cmp_b_run;
  assign nl_Rotate_run_while_mul_cmp_inst_while_mul_cmp_b_run = MUX1HOT_v_64_4_2(while_slc_111_48_3_ncse_sva,
      (rotate_in_Pop_mioi_idat_mxwt[447:384]), (while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_sva_1023_192[63:0]),
      while_slc_207_144_1_ncse_sva_3, {or_tmp_389 , (fsm_output[1]) , (fsm_output[2])
      , (fsm_output[4])});
  wire [63:0] nl_Rotate_run_while_mul_cmp_1_inst_while_mul_cmp_1_a_run;
  assign nl_Rotate_run_while_mul_cmp_1_inst_while_mul_cmp_1_a_run = MUX1HOT_v_64_4_2(while_slc_111_48_17_ncse_sva_1,
      cfg_sin_alpha, while_acc_114_itm_111_48_1, while_slc_while_acc_82_206_143_ncse_sva_1,
      {or_tmp_467 , (fsm_output[2]) , (fsm_output[3]) , (fsm_output[4])});
  wire [63:0] nl_Rotate_run_while_mul_cmp_1_inst_while_mul_cmp_1_b_run;
  assign nl_Rotate_run_while_mul_cmp_1_inst_while_mul_cmp_1_b_run = MUX1HOT_v_64_3_2(cfg_cos_2_beta,
      (while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_sva_1023_192[703:640]),
      cfg_sin_gamma, {(fsm_output[1]) , (fsm_output[2]) , or_tmp_372});
  wire [63:0] nl_Rotate_run_while_mul_cmp_2_inst_while_mul_cmp_2_a_run;
  assign nl_Rotate_run_while_mul_cmp_2_inst_while_mul_cmp_2_a_run = MUX_v_64_2_2(cfg_cos_beta,
      cfg_sin_3_gamma, fsm_output[4]);
  wire [63:0] nl_Rotate_run_while_mul_cmp_2_inst_while_mul_cmp_2_b_run;
  assign nl_Rotate_run_while_mul_cmp_2_inst_while_mul_cmp_2_b_run = MUX1HOT_v_64_4_2(while_slc_111_48_6_ncse_sva,
      cfg_sin_beta, (while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_sva_1023_192[639:576]),
      while_acc_124_itm_255_192_1, {or_tmp_389 , (fsm_output[1]) , (fsm_output[2])
      , (fsm_output[4])});
  wire [63:0] nl_Rotate_run_while_mul_cmp_3_inst_while_mul_cmp_3_a_run;
  assign nl_Rotate_run_while_mul_cmp_3_inst_while_mul_cmp_3_a_run = MUX1HOT_v_64_4_2(while_slc_while_acc_90_162_99_ncse_sva,
      (rotate_in_Pop_mioi_idat_mxwt[255:192]), (while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_sva_1023_192[511:448]),
      while_acc_114_itm_111_48_1, {or_dcpl_125 , (fsm_output[1]) , (fsm_output[2])
      , (fsm_output[3])});
  wire [63:0] nl_Rotate_run_while_mul_cmp_3_inst_while_mul_cmp_3_b_run;
  assign nl_Rotate_run_while_mul_cmp_3_inst_while_mul_cmp_3_b_run = MUX_v_64_2_2(cfg_sin_2_alpha,
      cfg_cos_gamma, or_tmp_372);
  wire [63:0] nl_Rotate_run_while_mul_cmp_4_inst_while_mul_cmp_4_a_run;
  assign nl_Rotate_run_while_mul_cmp_4_inst_while_mul_cmp_4_a_run = MUX1HOT_v_64_4_2(while_slc_207_144_2_ncse_sva_1,
      (rotate_in_Pop_mioi_idat_mxwt[511:448]), (while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_sva_1023_192[767:704]),
      cfg_sin_beta, {or_dcpl_125 , (fsm_output[1]) , (fsm_output[2]) , (fsm_output[3])});
  wire [63:0] nl_Rotate_run_while_mul_cmp_4_inst_while_mul_cmp_4_b_run;
  assign nl_Rotate_run_while_mul_cmp_4_inst_while_mul_cmp_4_b_run = MUX1HOT_v_64_3_2(while_slc_111_48_6_ncse_sva,
      cfg_cos_2_alpha, cfg_sin_3_gamma, {or_tmp_389 , or_731_cse_1 , (fsm_output[4])});
  wire [63:0] nl_Rotate_run_while_mul_cmp_5_inst_while_mul_cmp_5_a_run;
  assign nl_Rotate_run_while_mul_cmp_5_inst_while_mul_cmp_5_a_run = MUX1HOT_v_64_4_2(while_slc_111_48_1_ncse_sva,
      (rotate_in_Pop_mioi_idat_mxwt[319:256]), cfg_sin_3_alpha, cfg_sin_2_gamma,
      {or_tmp_389 , (fsm_output[1]) , (fsm_output[2]) , (fsm_output[4])});
  wire [63:0] nl_Rotate_run_while_mul_cmp_5_inst_while_mul_cmp_5_b_run;
  assign nl_Rotate_run_while_mul_cmp_5_inst_while_mul_cmp_5_b_run = MUX1HOT_v_64_4_2(cfg_sin_alpha,
      (while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_sva_1023_192[831:768]),
      cfg_sin_beta, while_acc_95_itm_161_98_1, {(fsm_output[1]) , (fsm_output[2])
      , (fsm_output[3]) , (fsm_output[4])});
  wire [63:0] nl_Rotate_run_while_mul_cmp_6_inst_while_mul_cmp_6_a_run;
  assign nl_Rotate_run_while_mul_cmp_6_inst_while_mul_cmp_6_a_run = MUX1HOT_v_64_4_2((rotate_in_Pop_mioi_idat_mxwt[447:384]),
      (while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_sva_1023_192[447:384]),
      cfg_cos_2_beta, while_acc_124_itm_255_192_1, {(fsm_output[1]) , (fsm_output[2])
      , (fsm_output[3]) , (fsm_output[4])});
  wire [63:0] nl_Rotate_run_while_mul_cmp_6_inst_while_mul_cmp_6_b_run;
  assign nl_Rotate_run_while_mul_cmp_6_inst_while_mul_cmp_6_b_run = MUX1HOT_v_64_4_2(while_slc_111_48_8_ncse_sva,
      cfg_cos_alpha, cfg_sin_3_alpha, cfg_cos_3_gamma, {or_tmp_389 , (fsm_output[1])
      , (fsm_output[2]) , (fsm_output[4])});
  wire [63:0] nl_Rotate_run_while_mul_cmp_7_inst_while_mul_cmp_7_a_run;
  assign nl_Rotate_run_while_mul_cmp_7_inst_while_mul_cmp_7_a_run = MUX1HOT_v_64_4_2(while_slc_159_96_ncse_sva,
      (rotate_in_Pop_mioi_idat_mxwt[319:256]), (while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_sva_1023_192[831:768]),
      while_slc_while_acc_81_206_143_ncse_sva_2, {or_tmp_389 , (fsm_output[1]) ,
      (fsm_output[2]) , (fsm_output[4])});
  wire [63:0] nl_Rotate_run_while_mul_cmp_7_inst_while_mul_cmp_7_b_run;
  assign nl_Rotate_run_while_mul_cmp_7_inst_while_mul_cmp_7_b_run = MUX1HOT_v_64_3_2(cfg_cos_alpha,
      cfg_cos_3_alpha, cfg_cos_2_gamma, {(fsm_output[1]) , (fsm_output[2]) , or_tmp_372});
  wire [63:0] nl_Rotate_run_while_mul_cmp_8_inst_while_mul_cmp_8_a_run;
  assign nl_Rotate_run_while_mul_cmp_8_inst_while_mul_cmp_8_a_run = MUX1HOT_v_64_4_2(while_slc_111_48_ncse_sva,
      (rotate_in_Pop_mioi_idat_mxwt[255:192]), (while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_sva_1023_192[511:448]),
      while_slc_while_acc_82_206_143_ncse_sva_1, {or_tmp_389 , (fsm_output[1]) ,
      (fsm_output[2]) , (fsm_output[4])});
  wire [63:0] nl_Rotate_run_while_mul_cmp_8_inst_while_mul_cmp_8_b_run;
  assign nl_Rotate_run_while_mul_cmp_8_inst_while_mul_cmp_8_b_run = MUX_v_64_2_2(cfg_cos_2_alpha,
      cfg_cos_gamma, or_tmp_372);
  wire [63:0] nl_Rotate_run_while_mul_cmp_9_inst_while_mul_cmp_9_a_run;
  assign nl_Rotate_run_while_mul_cmp_9_inst_while_mul_cmp_9_a_run = MUX1HOT_v_64_3_2(while_slc_111_48_ncse_sva,
      cfg_sin_2_alpha, while_slc_207_144_2_ncse_sva_1, {or_tmp_389 , or_731_cse_1
      , (fsm_output[4])});
  wire [63:0] nl_Rotate_run_while_mul_cmp_9_inst_while_mul_cmp_9_b_run;
  assign nl_Rotate_run_while_mul_cmp_9_inst_while_mul_cmp_9_b_run = MUX1HOT_v_64_4_2((rotate_in_Pop_mioi_idat_mxwt[511:448]),
      (while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_sva_1023_192[767:704]),
      cfg_sin_gamma, cfg_cos_3_gamma, {(fsm_output[1]) , (fsm_output[2]) , (fsm_output[3])
      , (fsm_output[4])});
  wire [63:0] nl_Rotate_run_while_mul_cmp_10_inst_while_mul_cmp_10_a_run;
  assign nl_Rotate_run_while_mul_cmp_10_inst_while_mul_cmp_10_a_run = MUX1HOT_v_64_4_2(while_slc_111_48_7_ncse_sva,
      (rotate_in_Pop_mioi_idat_mxwt[127:64]), (while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_sva_1023_192[447:384]),
      cfg_sin_2_gamma, {or_tmp_389 , (fsm_output[1]) , (fsm_output[2]) , (fsm_output[4])});
  wire or_719_nl;
  wire [63:0] nl_Rotate_run_while_mul_cmp_10_inst_while_mul_cmp_10_b_run;
  assign or_719_nl = (fsm_output[1]) | (fsm_output[3]);
  assign nl_Rotate_run_while_mul_cmp_10_inst_while_mul_cmp_10_b_run = MUX1HOT_v_64_3_2(while_slc_159_96_ncse_sva_4,
      cfg_sin_beta, cfg_cos_3_alpha, {or_dcpl_125 , or_719_nl , (fsm_output[2])});
  wire [63:0] nl_Rotate_run_while_mul_cmp_11_inst_while_mul_cmp_11_a_run;
  assign nl_Rotate_run_while_mul_cmp_11_inst_while_mul_cmp_11_a_run = MUX1HOT_v_64_4_2(while_slc_111_48_1_ncse_sva,
      (rotate_in_Pop_mioi_idat_mxwt[127:64]), while_slc_111_48_7_ncse_sva, cfg_sin_gamma,
      {or_tmp_394 , (fsm_output[1]) , (fsm_output[3]) , (fsm_output[4])});
  wire [63:0] nl_Rotate_run_while_mul_cmp_11_inst_while_mul_cmp_11_b_run;
  assign nl_Rotate_run_while_mul_cmp_11_inst_while_mul_cmp_11_b_run = MUX_v_64_2_2(while_slc_while_acc_90_162_99_ncse_sva,
      cfg_cos_beta, and_404_cse);
  wire [63:0] nl_Rotate_run_while_mul_cmp_12_inst_while_mul_cmp_12_a_run;
  assign nl_Rotate_run_while_mul_cmp_12_inst_while_mul_cmp_12_a_run = MUX1HOT_v_64_4_2(while_slc_111_48_3_ncse_sva,
      (rotate_in_Pop_mioi_idat_mxwt[63:0]), (while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_sva_1023_192[575:512]),
      while_slc_207_144_1_ncse_sva_3, {or_tmp_389 , (fsm_output[1]) , (fsm_output[2])
      , (fsm_output[4])});
  wire [63:0] nl_Rotate_run_while_mul_cmp_12_inst_while_mul_cmp_12_b_run;
  assign nl_Rotate_run_while_mul_cmp_12_inst_while_mul_cmp_12_b_run = MUX_v_64_2_2(cfg_sin_alpha,
      cfg_cos_gamma, or_tmp_372);
  wire [63:0] nl_Rotate_run_while_mul_cmp_13_inst_while_mul_cmp_13_a_run;
  assign nl_Rotate_run_while_mul_cmp_13_inst_while_mul_cmp_13_a_run = MUX1HOT_v_64_4_2((rotate_in_Pop_mioi_idat_mxwt[191:128]),
      (while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_sva_1023_192[703:640]),
      while_acc_115_itm_111_48_1, while_acc_95_itm_161_98_1, {(fsm_output[1]) , (fsm_output[2])
      , (fsm_output[3]) , (fsm_output[4])});
  wire [63:0] nl_Rotate_run_while_mul_cmp_13_inst_while_mul_cmp_13_b_run;
  assign nl_Rotate_run_while_mul_cmp_13_inst_while_mul_cmp_13_b_run = MUX_v_64_2_2(cfg_cos_alpha,
      cfg_cos_2_gamma, or_tmp_372);
  wire [63:0] nl_Rotate_run_while_mul_cmp_14_inst_while_mul_cmp_14_a_run;
  assign nl_Rotate_run_while_mul_cmp_14_inst_while_mul_cmp_14_a_run = MUX1HOT_v_64_4_2(while_slc_while_acc_81_206_143_ncse_sva_2,
      (rotate_in_Pop_mioi_idat_mxwt[63:0]), (while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_sva_1023_192[575:512]),
      while_acc_115_itm_111_48_1, {or_dcpl_125 , (fsm_output[1]) , (fsm_output[2])
      , (fsm_output[3])});
  wire [63:0] nl_Rotate_run_while_mul_cmp_14_inst_while_mul_cmp_14_b_run;
  assign nl_Rotate_run_while_mul_cmp_14_inst_while_mul_cmp_14_b_run = MUX_v_64_2_2(cfg_cos_alpha,
      cfg_sin_2_gamma, or_tmp_372);
  wire nor_nl;
  wire nor_1_nl;
  wire mux_274_nl;
  wire nand_17_nl;
  wire nor_2_nl;
  wire nor_3_nl;
  wire  nl_Rotate_run_staller_inst_run_flen_unreg;
  assign nor_nl = ~(while_nor_tmp | (while_stage_v_3 & (~(while_stage_v_4 | while_stage_v_5
      | while_stage_v_6 | while_stage_v_7_mx2)) & (while_mul_36_cmp_bawt | (~ while_stage_v_7_mx2))
      & while_while_or_87_cse_1 & while_or_207_cse_1 & while_or_208_cse_1 & (fsm_output[4]))
      | (while_stage_v_7 & (~(while_stage_v_8 | while_stage_v_9 | while_stage_v_10
      | while_stage_v_11_mx2)) & while_mul_36_cmp_bawt & while_while_or_87_cse_1
      & while_or_207_cse_1 & while_or_208_cse_1 & (fsm_output[4])) | (while_stage_v_11
      & (~(while_stage_v_12 | while_stage_v_13 | while_stage_v_14 | (while_stage_v_15
      & or_dcpl_201))) & while_mul_37_cmp_bawt & while_or_207_cse_1 & while_or_208_cse_1
      & (fsm_output[4])) | (while_stage_v_15 & (~(while_stage_v_16 | while_stage_v_17
      | while_stage_v_18 | while_stage_v_19_mx2)) & while_or_207_cse_1 & while_or_208_cse_1
      & (fsm_output[4])) | (while_stage_v_19 & (~(while_stage_v_20 | while_stage_v_21
      | while_stage_v_22 | (while_stage_v_23 & or_dcpl_231))) & while_mul_67_cmp_bawt
      & while_mul_73_cmp_bawt & (fsm_output[4])) | (while_stage_v_23 & (~(while_stage_v_24
      | while_stage_v_25 | while_stage_v_26 | (while_stage_v_27 & or_dcpl_249)))
      & (fsm_output[4])) | (while_stage_v_27 & (~(while_stage_v_28 | while_stage_v_29
      | while_stage_v_30 | (while_stage_v_31 & or_dcpl_274))) & (fsm_output[4]))
      | (while_stage_v_31 & (~(while_stage_v_32 | while_stage_v_33 | while_stage_v_34
      | (while_stage_v_35 & or_dcpl_291))) & (fsm_output[4])) | (while_stage_v_35
      & (~(while_stage_v_36 | while_stage_v_37 | while_stage_v_38 | (while_stage_v_39
      & or_dcpl_303))) & (fsm_output[4])) | (while_stage_v_39 & (~(while_stage_v_40
      | while_stage_v_41 | while_stage_v_42 | (while_stage_v_43 & or_dcpl_124)))
      & (fsm_output[4])) | while_while_and_17_cse);
  assign nand_17_nl = ~(nor_tmp_44 & (~ mux_254_cse));
  assign mux_274_nl = MUX_s_1_2_2((~ or_29_cse), nand_17_nl, while_stage_v_28);
  assign nor_1_nl = ~(while_and_79_tmp | while_and_53_tmp | while_and_43_tmp | while_and_33_tmp
      | while_and_25_tmp | (while_stage_v_20 & (~(while_stage_v_21 | while_stage_v_22
      | while_stage_v_23 | (while_stage_v_24 & (mux_274_nl | while_stage_v_26 | while_stage_v_27
      | while_stage_v_25)))) & while_mul_44_cmp_bawt & while_mul_34_cmp_1_bawt &
      while_mul_67_cmp_bawt & while_while_or_7_cse_1 & while_while_or_5_cse_1 & (~
      while_stage_v_44_mx1)) | (while_stage_v_24 & (~(while_stage_v_25 | while_stage_v_26
      | while_stage_v_27 | while_stage_v_28_mx1)) & while_while_or_7_cse_1 & while_while_or_5_cse_1
      & (~ while_stage_v_44_mx1)) | (while_stage_v_28 & (~(while_stage_v_29 | while_stage_v_30
      | while_stage_v_31 | while_stage_v_32_mx1)) & while_mul_110_cmp_bawt & while_while_or_5_cse_1
      & (~ while_stage_v_44_mx1)) | (while_stage_v_32 & (~(while_stage_v_33 | while_stage_v_34
      | while_stage_v_35 | (while_stage_v_36 & (and_dcpl_284 | or_dcpl_4 | while_stage_v_37))))
      & while_while_mul_cmp_bawt & (~ while_stage_v_44_mx1)) | (while_stage_v_36
      & (~(while_stage_v_37 | while_stage_v_38 | while_stage_v_39 | and_dcpl_284))
      & (~ while_stage_v_44_mx1)) | (while_stage_v_40 & (~(while_stage_v_41 | while_stage_v_42
      | while_stage_v_43)) & (~ while_stage_v_44_mx1)) | while_and_1_tmp);
  assign nor_2_nl = ~(while_and_154_tmp | while_and_134_tmp | (while_stage_v_9 &
      (~(while_stage_v_10 | while_stage_v_11 | while_stage_v_12 | (while_stage_v_13
      & (mux_244_cse | while_stage_v_16 | while_stage_v_15 | while_stage_v_14))))
      & while_while_or_45_cse_1 & while_while_or_42_cse_1 & while_while_or_39_cse_1
      & while_while_or_35_cse_1) | (while_stage_v_13 & (~(while_stage_v_14 | while_stage_v_15
      | while_stage_v_16 | while_stage_v_17_mx2)) & while_while_or_45_cse_1 & while_while_or_42_cse_1
      & while_while_or_39_cse_1 & while_while_or_35_cse_1) | (while_stage_v_17 &
      (~(while_stage_v_18 | while_stage_v_19 | while_stage_v_20 | while_stage_v_21_mx2))
      & while_mul_70_cmp_bawt & while_while_or_42_cse_1 & while_while_or_39_cse_1
      & while_while_or_35_cse_1) | (while_stage_v_21 & (~(while_stage_v_22 | while_stage_v_23
      | while_stage_v_24 | while_stage_v_25_mx2)) & while_mul_34_cmp_1_bawt & while_while_or_39_cse_1
      & while_while_or_35_cse_1) | (while_stage_v_25 & (~(while_stage_v_26 | while_stage_v_27
      | while_stage_v_28 | (while_stage_v_29 & (while_stage_v_33_mx2 | while_stage_v_32
      | while_stage_v_31 | while_stage_v_30)))) & while_mul_34_cmp_bawt & while_while_or_35_cse_1)
      | (while_stage_v_29 & (~(while_stage_v_30 | while_stage_v_31 | while_stage_v_32
      | while_stage_v_33_mx2)) & while_while_or_35_cse_1) | (while_stage_v_33 & (~(while_stage_v_34
      | while_stage_v_35 | while_stage_v_36 | (while_stage_v_37 & (nor_tmp_26 | or_tmp_49
      | while_stage_v_38)))) & while_while_mul_cmp_bawt) | (while_stage_v_37 & (~(while_stage_v_38
      | while_stage_v_39 | while_stage_v_40 | (while_stage_v_41 & (while_stage_v_42
      | or_1421_cse))))) | (while_stage_v_41 & (~(while_stage_v_42 | while_stage_v_43
      | reg_rotate_out_Push_mioi_iswt0_cse))));
  assign nor_3_nl = ~(while_and_228_tmp | while_and_216_tmp | while_and_205_tmp |
      while_and_196_tmp | while_and_187_tmp | (while_stage_v_22 & (~(while_stage_v_23
      | while_stage_v_24 | while_stage_v_25 | while_stage_v_26_mx2)) & while_mul_44_cmp_bawt
      & while_while_or_66_cse_1 & while_while_or_62_cse_1) | (while_stage_v_26 &
      (~(while_stage_v_27 | while_stage_v_28 | while_stage_v_29 | (while_stage_v_30
      & (and_tmp_10 | or_dcpl_34 | while_stage_v_31)))) & while_mul_34_cmp_bawt &
      while_while_or_62_cse_1) | (while_stage_v_30 & (~(while_stage_v_31 | while_stage_v_32
      | while_stage_v_33 | while_stage_v_34_mx2)) & while_while_or_62_cse_1) | (while_stage_v_34
      & (~(while_stage_v_35 | while_stage_v_36 | while_stage_v_37 | (while_stage_v_38
      & or_260_itm))) & while_while_mul_cmp_bawt) | (while_stage_v_38 & (~(while_stage_v_39
      | while_stage_v_40 | while_stage_v_41 | (while_stage_v_42 & or_1421_cse))))
      | (while_stage_v_42 & while_nor_23_cse));
  assign nl_Rotate_run_staller_inst_run_flen_unreg = MUX1HOT_s_1_4_2(nor_nl, nor_1_nl,
      nor_2_nl, nor_3_nl, {or_dcpl_125 , (fsm_output[1]) , (fsm_output[2]) , (fsm_output[3])});
  Rotate_run_rotate_in_Pop_mioi Rotate_run_rotate_in_Pop_mioi_inst (
      .clk(clk),
      .rst(rst),
      .rotate_in_val(rotate_in_val),
      .rotate_in_rdy(rotate_in_rdy),
      .rotate_in_msg(rotate_in_msg),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .rotate_in_Pop_mioi_oswt_unreg(and_475_cse),
      .rotate_in_Pop_mioi_bawt(rotate_in_Pop_mioi_bawt),
      .rotate_in_Pop_mioi_iden(rotate_in_Pop_mioi_iden),
      .rotate_in_Pop_mioi_iswt0(rotate_in_Pop_mioi_iswt0),
      .rotate_in_Pop_mioi_iden_1(rotate_in_Pop_mioi_iden_1),
      .rotate_in_Pop_mioi_wen_comp(rotate_in_Pop_mioi_wen_comp),
      .rotate_in_Pop_mioi_idat_mxwt(rotate_in_Pop_mioi_idat_mxwt),
      .rotate_in_Pop_mioi_ivld(rotate_in_Pop_mioi_ivld),
      .rotate_in_Pop_mioi_ivld_oreg(rotate_in_Pop_mioi_ivld_oreg)
    );
  Rotate_run_wait_dp Rotate_run_wait_dp_inst (
      .clk(clk),
      .rst(rst),
      .rotate_in_Pop_mioi_ivld(rotate_in_Pop_mioi_ivld),
      .rotate_in_Pop_mioi_ivld_oreg(rotate_in_Pop_mioi_ivld_oreg),
      .rotate_out_Push_mioi_irdy(rotate_out_Push_mioi_irdy),
      .rotate_out_Push_mioi_irdy_oreg(rotate_out_Push_mioi_irdy_oreg)
    );
  Rotate_run_rotate_out_Push_mioi Rotate_run_rotate_out_Push_mioi_inst (
      .clk(clk),
      .rst(rst),
      .rotate_out_val(rotate_out_val),
      .rotate_out_rdy(rotate_out_rdy),
      .rotate_out_msg(rotate_out_msg),
      .run_wen(run_wen),
      .rotate_out_Push_mioi_oswt_unreg(or_tmp_627),
      .rotate_out_Push_mioi_bawt(rotate_out_Push_mioi_bawt),
      .rotate_out_Push_mioi_iden(rotate_out_Push_mioi_iden),
      .rotate_out_Push_mioi_iswt0(reg_rotate_out_Push_mioi_iswt0_cse),
      .rotate_out_Push_mioi_wen_comp(rotate_out_Push_mioi_wen_comp),
      .rotate_out_Push_mioi_idat(nl_Rotate_run_rotate_out_Push_mioi_inst_rotate_out_Push_mioi_idat[1023:0]),
      .rotate_out_Push_mioi_irdy(rotate_out_Push_mioi_irdy),
      .rotate_out_Push_mioi_irdy_oreg(rotate_out_Push_mioi_irdy_oreg)
    );
  Rotate_run_while_mul_115_cmp Rotate_run_while_mul_115_cmp_inst (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_115_cmp_oswt_unreg(and_662_cse),
      .while_mul_115_cmp_bawt(while_mul_115_cmp_bawt),
      .while_mul_115_cmp_iden(while_mul_115_cmp_iden),
      .while_mul_115_cmp_iswt5(reg_while_mul_cmp_10_iswt3_1_cse),
      .while_mul_115_cmp_iden_1(while_mul_115_cmp_iden_1),
      .while_mul_115_cmp_oswt_unreg_1(and_842_cse),
      .while_mul_115_cmp_iden_2(while_mul_115_cmp_iden_2),
      .while_mul_115_cmp_iswt5_1(reg_while_mul_44_cmp_iswt5_1_cse),
      .while_mul_115_cmp_iden_3(while_mul_115_cmp_iden_3),
      .while_mul_115_cmp_oswt_unreg_2(and_1003_cse),
      .while_mul_115_cmp_iden_4(while_mul_115_cmp_iden_4),
      .while_mul_115_cmp_iswt5_2(while_mul_115_cmp_iswt5_2),
      .while_mul_115_cmp_iden_5(while_mul_115_cmp_iden_5),
      .while_mul_115_cmp_oswt_unreg_3(while_while_and_17_cse),
      .while_mul_115_cmp_iden_6(while_mul_115_cmp_iden_6),
      .while_mul_115_cmp_iswt5_3(while_mul_115_cmp_iswt5_3),
      .while_mul_115_cmp_iden_7(while_mul_115_cmp_iden_7),
      .while_mul_115_cmp_a_run(nl_Rotate_run_while_mul_115_cmp_inst_while_mul_115_cmp_a_run[66:0]),
      .while_mul_115_cmp_b_run(nl_Rotate_run_while_mul_115_cmp_inst_while_mul_115_cmp_b_run[112:0]),
      .while_mul_115_cmp_z_mxwt(while_mul_115_cmp_z_mxwt),
      .while_mul_115_cmp_z_mxwt_1(while_mul_115_cmp_z_mxwt_1),
      .while_mul_115_cmp_z_mxwt_2(while_mul_115_cmp_z_mxwt_2),
      .while_mul_115_cmp_z_mxwt_3(while_mul_115_cmp_z_mxwt_3),
      .while_mul_115_cmp_iswt5_3_pff(and_828_cse),
      .while_mul_115_cmp_iswt5_2_pff(and_902_cse),
      .while_mul_115_cmp_iswt5_1_pff(and_840_cse),
      .while_mul_115_cmp_iswt5_pff(and_510_cse)
    );
  Rotate_run_while_mul_110_cmp Rotate_run_while_mul_110_cmp_inst (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_110_cmp_oswt_unreg(and_796_cse),
      .while_mul_110_cmp_bawt(while_mul_110_cmp_bawt),
      .while_mul_110_cmp_iden(while_mul_110_cmp_iden),
      .while_mul_110_cmp_iswt9(reg_while_mul_76_cmp_oswt_cse),
      .while_mul_110_cmp_iden_1(while_mul_110_cmp_iden_1),
      .while_mul_110_cmp_oswt_unreg_1(while_or_238_itm),
      .while_mul_110_cmp_iden_2(while_mul_110_cmp_iden_2),
      .while_mul_110_cmp_iswt9_1(reg_while_mul_111_cmp_oswt_1_cse),
      .while_mul_110_cmp_iden_3(while_mul_110_cmp_iden_3),
      .while_mul_110_cmp_oswt_unreg_2(while_while_and_17_cse),
      .while_mul_110_cmp_iden_4(while_mul_110_cmp_iden_4),
      .while_mul_110_cmp_iswt9_2(reg_while_mul_44_cmp_oswt_1_cse),
      .while_mul_110_cmp_iden_5(while_mul_110_cmp_iden_5),
      .while_mul_110_cmp_a_run(cfg_sin_beta),
      .while_mul_110_cmp_b_run(nl_Rotate_run_while_mul_110_cmp_inst_while_mul_110_cmp_b_run[241:0]),
      .while_mul_110_cmp_z_mxwt(while_mul_110_cmp_z_mxwt),
      .while_mul_110_cmp_z_mxwt_1(while_mul_110_cmp_z_mxwt_1),
      .while_mul_110_cmp_z_mxwt_2(while_mul_110_cmp_z_mxwt_2),
      .while_mul_110_cmp_iswt9_2_pff(and_842_cse),
      .while_mul_110_cmp_iswt9_1_pff(or_927_rmff),
      .while_mul_110_cmp_iswt9_pff(and_801_cse)
    );
  Rotate_run_while_mul_111_cmp Rotate_run_while_mul_111_cmp_inst (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_111_cmp_oswt_unreg(and_801_cse),
      .while_mul_111_cmp_bawt(while_mul_111_cmp_bawt),
      .while_mul_111_cmp_iden(while_mul_111_cmp_iden),
      .while_mul_111_cmp_iswt7(reg_while_mul_cmp_14_iswt3_1_cse),
      .while_mul_111_cmp_iden_1(while_mul_111_cmp_iden_1),
      .while_mul_111_cmp_oswt_unreg_1(or_927_rmff),
      .while_mul_111_cmp_iden_2(while_mul_111_cmp_iden_2),
      .while_mul_111_cmp_iswt7_1(while_mul_111_cmp_iswt7_1),
      .while_mul_111_cmp_iden_3(while_mul_111_cmp_iden_3),
      .while_mul_111_cmp_oswt_unreg_2(and_842_cse),
      .while_mul_111_cmp_iden_4(while_mul_111_cmp_iden_4),
      .while_mul_111_cmp_iswt7_2(reg_while_mul_25_cmp_iswt5_3_cse),
      .while_mul_111_cmp_iden_5(while_mul_111_cmp_iden_5),
      .while_mul_111_cmp_a_run(cfg_sin_beta),
      .while_mul_111_cmp_b_run(nl_Rotate_run_while_mul_111_cmp_inst_while_mul_111_cmp_b_run[177:0]),
      .while_mul_111_cmp_z_mxwt(while_mul_111_cmp_z_mxwt),
      .while_mul_111_cmp_z_mxwt_1(while_mul_111_cmp_z_mxwt_1),
      .while_mul_111_cmp_z_mxwt_2(while_mul_111_cmp_z_mxwt_2),
      .while_mul_111_cmp_iswt7_2_pff(and_731_cse),
      .while_mul_111_cmp_iswt7_1_pff(or_926_rmff),
      .while_mul_111_cmp_iswt7_pff(and_470_cse)
    );
  Rotate_run_while_mul_108_cmp Rotate_run_while_mul_108_cmp_inst (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_108_cmp_oswt_unreg(and_478_cse),
      .while_mul_108_cmp_bawt(while_mul_108_cmp_bawt),
      .while_mul_108_cmp_iden(while_mul_108_cmp_iden),
      .while_mul_108_cmp_iswt3(reg_while_mul_cmp_11_iswt3_cse),
      .while_mul_108_cmp_iden_1(while_mul_108_cmp_iden_1),
      .while_mul_108_cmp_oswt_unreg_1(or_861_cse),
      .while_mul_108_cmp_iden_2(while_mul_108_cmp_iden_2),
      .while_mul_108_cmp_iswt3_1(while_mul_108_cmp_iswt3_1),
      .while_mul_108_cmp_iden_3(while_mul_108_cmp_iden_3),
      .while_mul_108_cmp_b_run(nl_Rotate_run_while_mul_108_cmp_inst_while_mul_108_cmp_b_run[63:0]),
      .while_mul_108_cmp_z_mxwt(while_mul_108_cmp_z_mxwt),
      .while_mul_108_cmp_z_mxwt_1(while_mul_108_cmp_z_mxwt_1),
      .while_mul_108_cmp_iswt3_1_pff(or_921_rmff),
      .while_mul_108_cmp_iswt3_pff(and_475_cse)
    );
  Rotate_run_while_mul_76_cmp Rotate_run_while_mul_76_cmp_inst (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_76_cmp_oswt_unreg(and_801_cse),
      .while_mul_76_cmp_bawt(while_mul_76_cmp_bawt),
      .while_mul_76_cmp_iden(while_mul_76_cmp_iden),
      .while_mul_76_cmp_iswt7(reg_while_mul_cmp_14_iswt3_1_cse),
      .while_mul_76_cmp_iden_1(while_mul_76_cmp_iden_1),
      .while_mul_76_cmp_oswt_unreg_1(nl_Rotate_run_while_mul_76_cmp_inst_while_mul_76_cmp_oswt_unreg_1),
      .while_mul_76_cmp_iden_2(while_mul_76_cmp_iden_2),
      .while_mul_76_cmp_iswt7_1(while_mul_76_cmp_iswt7_1),
      .while_mul_76_cmp_iden_3(while_mul_76_cmp_iden_3),
      .while_mul_76_cmp_a_run(cfg_sin_beta),
      .while_mul_76_cmp_b_run(nl_Rotate_run_while_mul_76_cmp_inst_while_mul_76_cmp_b_run[175:0]),
      .while_mul_76_cmp_z_mxwt(while_mul_76_cmp_z_mxwt),
      .while_mul_76_cmp_z_mxwt_1(while_mul_76_cmp_z_mxwt_1),
      .while_mul_76_cmp_iswt7_1_pff(or_914_rmff),
      .while_mul_76_cmp_iswt7_pff(and_470_cse)
    );
  Rotate_run_while_mul_77_cmp Rotate_run_while_mul_77_cmp_inst (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_77_cmp_oswt_unreg(and_470_cse),
      .while_mul_77_cmp_bawt(while_mul_77_cmp_bawt),
      .while_mul_77_cmp_iden(while_mul_77_cmp_iden),
      .while_mul_77_cmp_iswt5(reg_while_mul_cmp_11_oswt_cse),
      .while_mul_77_cmp_iden_1(while_mul_77_cmp_iden_1),
      .while_mul_77_cmp_oswt_unreg_1(nl_Rotate_run_while_mul_77_cmp_inst_while_mul_77_cmp_oswt_unreg_1),
      .while_mul_77_cmp_iden_2(while_mul_77_cmp_iden_2),
      .while_mul_77_cmp_iswt5_1(while_mul_77_cmp_iswt5_1),
      .while_mul_77_cmp_iden_3(while_mul_77_cmp_iden_3),
      .while_mul_77_cmp_oswt_unreg_2(and_796_cse),
      .while_mul_77_cmp_iden_4(while_mul_77_cmp_iden_4),
      .while_mul_77_cmp_iswt5_2(reg_while_mul_cmp_7_iswt3_1_cse),
      .while_mul_77_cmp_iden_5(while_mul_77_cmp_iden_5),
      .while_mul_77_cmp_a_run(nl_Rotate_run_while_mul_77_cmp_inst_while_mul_77_cmp_a_run[65:0]),
      .while_mul_77_cmp_b_run(nl_Rotate_run_while_mul_77_cmp_inst_while_mul_77_cmp_b_run[111:0]),
      .while_mul_77_cmp_z_mxwt(while_mul_77_cmp_z_mxwt),
      .while_mul_77_cmp_z_mxwt_1(while_mul_77_cmp_z_mxwt_1),
      .while_mul_77_cmp_z_mxwt_2(while_mul_77_cmp_z_mxwt_2),
      .while_mul_77_cmp_iswt5_2_pff(and_574_cse),
      .while_mul_77_cmp_iswt5_1_pff(or_908_rmff),
      .while_mul_77_cmp_iswt5_pff(and_478_cse)
    );
  Rotate_run_while_mul_70_cmp Rotate_run_while_mul_70_cmp_inst (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_70_cmp_oswt_unreg(nl_Rotate_run_while_mul_70_cmp_inst_while_mul_70_cmp_oswt_unreg),
      .while_mul_70_cmp_bawt(while_mul_70_cmp_bawt),
      .while_mul_70_cmp_iden(while_mul_70_cmp_iden),
      .while_mul_70_cmp_iswt3(while_mul_70_cmp_iswt3),
      .while_mul_70_cmp_iden_1(while_mul_70_cmp_iden_1),
      .while_mul_70_cmp_oswt_unreg_1(while_while_and_17_cse),
      .while_mul_70_cmp_iden_2(while_mul_70_cmp_iden_2),
      .while_mul_70_cmp_iswt3_1(reg_while_mul_cmp_14_iswt3_2_cse),
      .while_mul_70_cmp_iden_3(while_mul_70_cmp_iden_3),
      .while_mul_70_cmp_a_run(nl_Rotate_run_while_mul_70_cmp_inst_while_mul_70_cmp_a_run[63:0]),
      .while_mul_70_cmp_b_run(nl_Rotate_run_while_mul_70_cmp_inst_while_mul_70_cmp_b_run[66:0]),
      .while_mul_70_cmp_z_mxwt(while_mul_70_cmp_z_mxwt),
      .while_mul_70_cmp_z_mxwt_1(while_mul_70_cmp_z_mxwt_1),
      .while_mul_70_cmp_iswt3_1_pff(and_467_cse),
      .while_mul_70_cmp_iswt3_pff(or_898_rmff)
    );
  Rotate_run_while_while_mul_cmp Rotate_run_while_while_mul_cmp_inst (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_while_mul_cmp_oswt_unreg(nl_Rotate_run_while_while_mul_cmp_inst_while_while_mul_cmp_oswt_unreg),
      .while_while_mul_cmp_bawt(while_while_mul_cmp_bawt),
      .while_while_mul_cmp_iden(while_while_mul_cmp_iden),
      .while_while_mul_cmp_iswt9(while_while_mul_cmp_iswt9),
      .while_while_mul_cmp_iden_1(while_while_mul_cmp_iden_1),
      .while_while_mul_cmp_oswt_unreg_1(while_while_and_17_cse),
      .while_while_mul_cmp_iden_2(while_while_mul_cmp_iden_2),
      .while_while_mul_cmp_iswt9_1(reg_while_mul_44_cmp_oswt_1_cse),
      .while_while_mul_cmp_iden_3(while_while_mul_cmp_iden_3),
      .while_while_mul_cmp_a_run(cfg_sin_beta),
      .while_while_mul_cmp_b_run(nl_Rotate_run_while_while_mul_cmp_inst_while_while_mul_cmp_b_run[239:0]),
      .while_while_mul_cmp_z_mxwt(while_while_mul_cmp_z_mxwt),
      .while_while_mul_cmp_z_mxwt_1(while_while_mul_cmp_z_mxwt_1),
      .while_while_mul_cmp_iswt9_1_pff(and_842_cse),
      .while_while_mul_cmp_iswt9_pff(or_888_rmff)
    );
  Rotate_run_while_mul_67_cmp Rotate_run_while_mul_67_cmp_inst (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_67_cmp_oswt_unreg(nl_Rotate_run_while_mul_67_cmp_inst_while_mul_67_cmp_oswt_unreg),
      .while_mul_67_cmp_bawt(while_mul_67_cmp_bawt),
      .while_mul_67_cmp_iden(while_mul_67_cmp_iden),
      .while_mul_67_cmp_iswt7(while_mul_67_cmp_iswt7),
      .while_mul_67_cmp_iden_1(while_mul_67_cmp_iden_1),
      .while_mul_67_cmp_oswt_unreg_1(or_tmp_565),
      .while_mul_67_cmp_iden_2(while_mul_67_cmp_iden_2),
      .while_mul_67_cmp_iswt7_1(reg_while_mul_44_cmp_oswt_1_cse),
      .while_mul_67_cmp_iden_3(while_mul_67_cmp_iden_3),
      .while_mul_67_cmp_a_run(nl_Rotate_run_while_mul_67_cmp_inst_while_mul_67_cmp_a_run[63:0]),
      .while_mul_67_cmp_b_run(nl_Rotate_run_while_mul_67_cmp_inst_while_mul_67_cmp_b_run[176:0]),
      .while_mul_67_cmp_z_mxwt(while_mul_67_cmp_z_mxwt),
      .while_mul_67_cmp_z_mxwt_1(while_mul_67_cmp_z_mxwt_1),
      .while_mul_67_cmp_iswt7_1_pff(and_842_cse),
      .while_mul_67_cmp_iswt7_pff(or_882_rmff)
    );
  Rotate_run_while_mul_73_cmp Rotate_run_while_mul_73_cmp_inst (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_73_cmp_oswt_unreg(while_or_224_itm),
      .while_mul_73_cmp_bawt(while_mul_73_cmp_bawt),
      .while_mul_73_cmp_iden(while_mul_73_cmp_iden),
      .while_mul_73_cmp_iswt5(reg_while_mul_34_cmp_1_iswt7_cse),
      .while_mul_73_cmp_iden_1(while_mul_73_cmp_iden_1),
      .while_mul_73_cmp_oswt_unreg_1(and_731_cse),
      .while_mul_73_cmp_iden_2(while_mul_73_cmp_iden_2),
      .while_mul_73_cmp_iswt5_1(while_mul_73_cmp_iswt5_1),
      .while_mul_73_cmp_iden_3(while_mul_73_cmp_iden_3),
      .while_mul_73_cmp_a_run(cfg_cos_beta),
      .while_mul_73_cmp_b_run(nl_Rotate_run_while_mul_73_cmp_inst_while_mul_73_cmp_b_run[113:0]),
      .while_mul_73_cmp_z_mxwt(while_mul_73_cmp_z_mxwt),
      .while_mul_73_cmp_z_mxwt_1(while_mul_73_cmp_z_mxwt_1),
      .while_mul_73_cmp_iswt5_1_pff(and_861_cse),
      .while_mul_73_cmp_iswt5_pff(or_840_rmff)
    );
  Rotate_run_while_mul_44_cmp Rotate_run_while_mul_44_cmp_inst (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_44_cmp_oswt_unreg(nl_Rotate_run_while_mul_44_cmp_inst_while_mul_44_cmp_oswt_unreg),
      .while_mul_44_cmp_bawt(while_mul_44_cmp_bawt),
      .while_mul_44_cmp_iden(while_mul_44_cmp_iden),
      .while_mul_44_cmp_iswt5(while_mul_44_cmp_iswt5),
      .while_mul_44_cmp_iden_1(while_mul_44_cmp_iden_1),
      .while_mul_44_cmp_oswt_unreg_1(and_842_cse),
      .while_mul_44_cmp_iden_2(while_mul_44_cmp_iden_2),
      .while_mul_44_cmp_iswt5_1(reg_while_mul_44_cmp_iswt5_1_cse),
      .while_mul_44_cmp_iden_3(while_mul_44_cmp_iden_3),
      .while_mul_44_cmp_a_run(nl_Rotate_run_while_mul_44_cmp_inst_while_mul_44_cmp_a_run[63:0]),
      .while_mul_44_cmp_b_run(nl_Rotate_run_while_mul_44_cmp_inst_while_mul_44_cmp_b_run[112:0]),
      .while_mul_44_cmp_z_mxwt(while_mul_44_cmp_z_mxwt),
      .while_mul_44_cmp_z_mxwt_1(while_mul_44_cmp_z_mxwt_1),
      .while_mul_44_cmp_iswt5_1_pff(and_840_cse),
      .while_mul_44_cmp_iswt5_pff(or_866_rmff)
    );
  Rotate_run_while_mul_37_cmp Rotate_run_while_mul_37_cmp_inst (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_37_cmp_oswt_unreg(or_861_cse),
      .while_mul_37_cmp_bawt(while_mul_37_cmp_bawt),
      .while_mul_37_cmp_iden(while_mul_37_cmp_iden),
      .while_mul_37_cmp_iswt5(reg_while_mul_cmp_14_oswt_cse),
      .while_mul_37_cmp_iden_1(while_mul_37_cmp_iden_1),
      .while_mul_37_cmp_oswt_unreg_1(nl_Rotate_run_while_mul_37_cmp_inst_while_mul_37_cmp_oswt_unreg_1),
      .while_mul_37_cmp_iden_2(while_mul_37_cmp_iden_2),
      .while_mul_37_cmp_iswt5_1(while_mul_37_cmp_iswt5_1),
      .while_mul_37_cmp_iden_3(while_mul_37_cmp_iden_3),
      .while_mul_37_cmp_a_run(nl_Rotate_run_while_mul_37_cmp_inst_while_mul_37_cmp_a_run[67:0]),
      .while_mul_37_cmp_b_run(nl_Rotate_run_while_mul_37_cmp_inst_while_mul_37_cmp_b_run[127:0]),
      .while_mul_37_cmp_z_mxwt(while_mul_37_cmp_z_mxwt),
      .while_mul_37_cmp_z_mxwt_1(while_mul_37_cmp_z_mxwt_1),
      .while_mul_37_cmp_iswt5_1_pff(or_859_rmff),
      .while_mul_37_cmp_iswt5_pff(or_698_rmff)
    );
  Rotate_run_while_mul_34_cmp Rotate_run_while_mul_34_cmp_inst (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_34_cmp_oswt_unreg(while_or_229_itm),
      .while_mul_34_cmp_bawt(while_mul_34_cmp_bawt),
      .while_mul_34_cmp_iden(while_mul_34_cmp_iden),
      .while_mul_34_cmp_iswt7(while_mul_34_cmp_iswt7),
      .while_mul_34_cmp_iden_1(while_mul_34_cmp_iden_1),
      .while_mul_34_cmp_oswt_unreg_1(nl_Rotate_run_while_mul_34_cmp_inst_while_mul_34_cmp_oswt_unreg_1),
      .while_mul_34_cmp_iden_2(while_mul_34_cmp_iden_2),
      .while_mul_34_cmp_iswt7_1(while_mul_34_cmp_iswt7_1),
      .while_mul_34_cmp_iden_3(while_mul_34_cmp_iden_3),
      .while_mul_34_cmp_a_run(nl_Rotate_run_while_mul_34_cmp_inst_while_mul_34_cmp_a_run[63:0]),
      .while_mul_34_cmp_b_run(nl_Rotate_run_while_mul_34_cmp_inst_while_mul_34_cmp_b_run[177:0]),
      .while_mul_34_cmp_z_mxwt(while_mul_34_cmp_z_mxwt),
      .while_mul_34_cmp_z_mxwt_1(while_mul_34_cmp_z_mxwt_1),
      .while_mul_34_cmp_iswt7_1_pff(or_847_rmff),
      .while_mul_34_cmp_iswt7_pff(or_849_rmff)
    );
  Rotate_run_while_mul_34_cmp_1 Rotate_run_while_mul_34_cmp_1_inst (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_34_cmp_1_oswt_unreg(while_or_225_itm),
      .while_mul_34_cmp_1_bawt(while_mul_34_cmp_1_bawt),
      .while_mul_34_cmp_1_iden(while_mul_34_cmp_1_iden),
      .while_mul_34_cmp_1_iswt7(reg_while_mul_34_cmp_1_iswt7_cse),
      .while_mul_34_cmp_1_iden_1(while_mul_34_cmp_1_iden_1),
      .while_mul_34_cmp_1_oswt_unreg_1(or_tmp_523),
      .while_mul_34_cmp_1_iden_2(while_mul_34_cmp_1_iden_2),
      .while_mul_34_cmp_1_iswt7_1(reg_while_mul_cmp_7_iswt3_1_cse),
      .while_mul_34_cmp_1_iden_3(while_mul_34_cmp_1_iden_3),
      .while_mul_34_cmp_1_oswt_unreg_2(and_467_cse),
      .while_mul_34_cmp_1_iden_4(while_mul_34_cmp_1_iden_4),
      .while_mul_34_cmp_1_iswt7_2(reg_while_mul_25_cmp_oswt_3_cse),
      .while_mul_34_cmp_1_iden_5(while_mul_34_cmp_1_iden_5),
      .while_mul_34_cmp_1_a_run(nl_Rotate_run_while_mul_34_cmp_1_inst_while_mul_34_cmp_1_a_run[63:0]),
      .while_mul_34_cmp_1_b_run(nl_Rotate_run_while_mul_34_cmp_1_inst_while_mul_34_cmp_1_b_run[177:0]),
      .while_mul_34_cmp_1_z_mxwt(while_mul_34_cmp_1_z_mxwt),
      .while_mul_34_cmp_1_z_mxwt_1(while_mul_34_cmp_1_z_mxwt_1),
      .while_mul_34_cmp_1_z_mxwt_2(while_mul_34_cmp_1_z_mxwt_2),
      .while_mul_34_cmp_1_iswt7_2_pff(and_733_cse),
      .while_mul_34_cmp_1_iswt7_1_pff(and_574_cse),
      .while_mul_34_cmp_1_iswt7_pff(or_840_rmff)
    );
  Rotate_run_while_mul_36_cmp Rotate_run_while_mul_36_cmp_inst (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_36_cmp_oswt_unreg(nl_Rotate_run_while_mul_36_cmp_inst_while_mul_36_cmp_oswt_unreg),
      .while_mul_36_cmp_bawt(while_mul_36_cmp_bawt),
      .while_mul_36_cmp_iden(while_mul_36_cmp_iden),
      .while_mul_36_cmp_iswt3(while_mul_36_cmp_iswt3),
      .while_mul_36_cmp_iden_1(while_mul_36_cmp_iden_1),
      .while_mul_36_cmp_oswt_unreg_1(or_788_rmff),
      .while_mul_36_cmp_iden_2(while_mul_36_cmp_iden_2),
      .while_mul_36_cmp_iswt3_1(reg_while_mul_cmp_1_iswt3_1_cse),
      .while_mul_36_cmp_iden_3(while_mul_36_cmp_iden_3),
      .while_mul_36_cmp_b_run(nl_Rotate_run_while_mul_36_cmp_inst_while_mul_36_cmp_b_run[63:0]),
      .while_mul_36_cmp_z_mxwt(while_mul_36_cmp_z_mxwt),
      .while_mul_36_cmp_z_mxwt_1(while_mul_36_cmp_z_mxwt_1),
      .while_mul_36_cmp_iswt3_1_pff(or_787_rmff),
      .while_mul_36_cmp_iswt3_pff(or_830_rmff),
      .while_mul_36_cmp_a_run_pff(nl_Rotate_run_while_mul_36_cmp_inst_while_mul_36_cmp_a_run_pff[48:0])
    );
  Rotate_run_while_mul_25_cmp Rotate_run_while_mul_25_cmp_inst (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_25_cmp_oswt_unreg(and_662_cse),
      .while_mul_25_cmp_bawt(while_mul_25_cmp_bawt),
      .while_mul_25_cmp_iden(while_mul_25_cmp_iden),
      .while_mul_25_cmp_iswt5(reg_while_mul_cmp_10_iswt3_1_cse),
      .while_mul_25_cmp_iden_1(while_mul_25_cmp_iden_1),
      .while_mul_25_cmp_oswt_unreg_1(and_739_cse),
      .while_mul_25_cmp_iden_2(while_mul_25_cmp_iden_2),
      .while_mul_25_cmp_iswt5_1(while_mul_25_cmp_iswt5_1),
      .while_mul_25_cmp_iden_3(while_mul_25_cmp_iden_3),
      .while_mul_25_cmp_oswt_unreg_2(and_574_cse),
      .while_mul_25_cmp_iden_4(while_mul_25_cmp_iden_4),
      .while_mul_25_cmp_iswt5_2(while_mul_25_cmp_iswt5_2),
      .while_mul_25_cmp_iden_5(while_mul_25_cmp_iden_5),
      .while_mul_25_cmp_oswt_unreg_3(and_733_cse),
      .while_mul_25_cmp_iden_6(while_mul_25_cmp_iden_6),
      .while_mul_25_cmp_iswt5_3(reg_while_mul_25_cmp_iswt5_3_cse),
      .while_mul_25_cmp_iden_7(while_mul_25_cmp_iden_7),
      .while_mul_25_cmp_a_run(nl_Rotate_run_while_mul_25_cmp_inst_while_mul_25_cmp_a_run[64:0]),
      .while_mul_25_cmp_b_run(nl_Rotate_run_while_mul_25_cmp_inst_while_mul_25_cmp_b_run[112:0]),
      .while_mul_25_cmp_z_mxwt(while_mul_25_cmp_z_mxwt),
      .while_mul_25_cmp_z_mxwt_1(while_mul_25_cmp_z_mxwt_1),
      .while_mul_25_cmp_z_mxwt_2(while_mul_25_cmp_z_mxwt_2),
      .while_mul_25_cmp_z_mxwt_3(while_mul_25_cmp_z_mxwt_3),
      .while_mul_25_cmp_iswt5_3_pff(and_731_cse),
      .while_mul_25_cmp_iswt5_2_pff(and_735_cse),
      .while_mul_25_cmp_iswt5_1_pff(and_693_cse),
      .while_mul_25_cmp_iswt5_pff(and_510_cse)
    );
  Rotate_run_while_mul_26_cmp Rotate_run_while_mul_26_cmp_inst (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_26_cmp_oswt_unreg(and_510_cse),
      .while_mul_26_cmp_bawt(while_mul_26_cmp_bawt),
      .while_mul_26_cmp_iden(while_mul_26_cmp_iden),
      .while_mul_26_cmp_iswt3(while_mul_26_cmp_iswt3),
      .while_mul_26_cmp_iden_1(while_mul_26_cmp_iden_1),
      .while_mul_26_cmp_oswt_unreg_1(nl_Rotate_run_while_mul_26_cmp_inst_while_mul_26_cmp_oswt_unreg_1),
      .while_mul_26_cmp_iden_2(while_mul_26_cmp_iden_2),
      .while_mul_26_cmp_iswt3_1(while_mul_26_cmp_iswt3_1),
      .while_mul_26_cmp_iden_3(while_mul_26_cmp_iden_3),
      .while_mul_26_cmp_b_run(nl_Rotate_run_while_mul_26_cmp_inst_while_mul_26_cmp_b_run[63:0]),
      .while_mul_26_cmp_z_mxwt(while_mul_26_cmp_z_mxwt),
      .while_mul_26_cmp_z_mxwt_1(while_mul_26_cmp_z_mxwt_1),
      .while_mul_26_cmp_iswt3_1_pff(or_808_rmff),
      .while_mul_26_cmp_iswt3_pff(or_tmp_494),
      .while_mul_26_cmp_a_run_pff(nl_Rotate_run_while_mul_26_cmp_inst_while_mul_26_cmp_a_run_pff[49:0])
    );
  Rotate_run_while_mul_26_cmp_1 Rotate_run_while_mul_26_cmp_1_inst (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_26_cmp_1_oswt_unreg(and_478_cse),
      .while_mul_26_cmp_1_bawt(while_mul_26_cmp_1_bawt),
      .while_mul_26_cmp_1_iden(while_mul_26_cmp_1_iden),
      .while_mul_26_cmp_1_iswt3(reg_while_mul_cmp_11_iswt3_cse),
      .while_mul_26_cmp_1_iden_1(while_mul_26_cmp_1_iden_1),
      .while_mul_26_cmp_1_oswt_unreg_1(nl_Rotate_run_while_mul_26_cmp_1_inst_while_mul_26_cmp_1_oswt_unreg_1),
      .while_mul_26_cmp_1_iden_2(while_mul_26_cmp_1_iden_2),
      .while_mul_26_cmp_1_iswt3_1(while_mul_26_cmp_1_iswt3_1),
      .while_mul_26_cmp_1_iden_3(while_mul_26_cmp_1_iden_3),
      .while_mul_26_cmp_1_b_run(nl_Rotate_run_while_mul_26_cmp_1_inst_while_mul_26_cmp_1_b_run[63:0]),
      .while_mul_26_cmp_1_z_mxwt(while_mul_26_cmp_1_z_mxwt),
      .while_mul_26_cmp_1_z_mxwt_1(while_mul_26_cmp_1_z_mxwt_1),
      .while_mul_26_cmp_1_iswt3_1_pff(or_800_rmff),
      .while_mul_26_cmp_1_iswt3_pff(and_475_cse)
    );
  Rotate_run_while_mul_cmp Rotate_run_while_mul_cmp_inst (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_cmp_oswt_unreg(or_698_rmff),
      .while_mul_cmp_bawt(while_mul_cmp_bawt),
      .while_mul_cmp_iden(while_mul_cmp_iden),
      .while_mul_cmp_iswt3(reg_while_mul_cmp_14_iswt3_cse),
      .while_mul_cmp_iden_1(while_mul_cmp_iden_1),
      .while_mul_cmp_oswt_unreg_1(and_472_cse),
      .while_mul_cmp_iden_2(while_mul_cmp_iden_2),
      .while_mul_cmp_iswt3_1(reg_while_mul_cmp_14_iswt3_1_cse),
      .while_mul_cmp_iden_3(while_mul_cmp_iden_3),
      .while_mul_cmp_oswt_unreg_2(while_while_and_17_cse),
      .while_mul_cmp_iden_4(while_mul_cmp_iden_4),
      .while_mul_cmp_iswt3_2(reg_while_mul_cmp_14_iswt3_2_cse),
      .while_mul_cmp_iden_5(while_mul_cmp_iden_5),
      .while_mul_cmp_a_run(nl_Rotate_run_while_mul_cmp_inst_while_mul_cmp_a_run[63:0]),
      .while_mul_cmp_b_run(nl_Rotate_run_while_mul_cmp_inst_while_mul_cmp_b_run[63:0]),
      .while_mul_cmp_z_mxwt(while_mul_cmp_z_mxwt),
      .while_mul_cmp_z_mxwt_1(while_mul_cmp_z_mxwt_1),
      .while_mul_cmp_z_mxwt_2(while_mul_cmp_z_mxwt_2),
      .while_mul_cmp_iswt3_2_pff(and_467_cse),
      .while_mul_cmp_iswt3_1_pff(and_470_cse),
      .while_mul_cmp_iswt3_pff(or_697_rmff)
    );
  Rotate_run_while_mul_cmp_1 Rotate_run_while_mul_cmp_1_inst (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_cmp_1_oswt_unreg(and_479_cse),
      .while_mul_cmp_1_bawt(while_mul_cmp_1_bawt),
      .while_mul_cmp_1_iden(while_mul_cmp_1_iden),
      .while_mul_cmp_1_iswt3(while_mul_cmp_1_iswt3),
      .while_mul_cmp_1_iden_1(while_mul_cmp_1_iden_1),
      .while_mul_cmp_1_oswt_unreg_1(or_788_rmff),
      .while_mul_cmp_1_iden_2(while_mul_cmp_1_iden_2),
      .while_mul_cmp_1_iswt3_1(reg_while_mul_cmp_1_iswt3_1_cse),
      .while_mul_cmp_1_iden_3(while_mul_cmp_1_iden_3),
      .while_mul_cmp_1_oswt_unreg_2(while_while_and_17_cse),
      .while_mul_cmp_1_iden_4(while_mul_cmp_1_iden_4),
      .while_mul_cmp_1_iswt3_2(reg_while_mul_cmp_14_iswt3_2_cse),
      .while_mul_cmp_1_iden_5(while_mul_cmp_1_iden_5),
      .while_mul_cmp_1_a_run(nl_Rotate_run_while_mul_cmp_1_inst_while_mul_cmp_1_a_run[63:0]),
      .while_mul_cmp_1_b_run(nl_Rotate_run_while_mul_cmp_1_inst_while_mul_cmp_1_b_run[63:0]),
      .while_mul_cmp_1_z_mxwt(while_mul_cmp_1_z_mxwt),
      .while_mul_cmp_1_z_mxwt_1(while_mul_cmp_1_z_mxwt_1),
      .while_mul_cmp_1_z_mxwt_2(while_mul_cmp_1_z_mxwt_2),
      .while_mul_cmp_1_iswt3_2_pff(and_467_cse),
      .while_mul_cmp_1_iswt3_1_pff(or_787_rmff),
      .while_mul_cmp_1_iswt3_pff(and_476_cse)
    );
  Rotate_run_while_mul_cmp_2 Rotate_run_while_mul_cmp_2_inst (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_cmp_2_oswt_unreg(or_698_rmff),
      .while_mul_cmp_2_bawt(while_mul_cmp_2_bawt),
      .while_mul_cmp_2_iden(while_mul_cmp_2_iden),
      .while_mul_cmp_2_iswt3(reg_while_mul_cmp_14_iswt3_cse),
      .while_mul_cmp_2_iden_1(while_mul_cmp_2_iden_1),
      .while_mul_cmp_2_oswt_unreg_1(and_470_cse),
      .while_mul_cmp_2_iden_2(while_mul_cmp_2_iden_2),
      .while_mul_cmp_2_iswt3_1(reg_while_mul_cmp_10_iswt3_1_cse),
      .while_mul_cmp_2_iden_3(while_mul_cmp_2_iden_3),
      .while_mul_cmp_2_oswt_unreg_2(while_while_and_17_cse),
      .while_mul_cmp_2_iden_4(while_mul_cmp_2_iden_4),
      .while_mul_cmp_2_iswt3_2(reg_while_mul_cmp_14_iswt3_2_cse),
      .while_mul_cmp_2_iden_5(while_mul_cmp_2_iden_5),
      .while_mul_cmp_2_a_run(nl_Rotate_run_while_mul_cmp_2_inst_while_mul_cmp_2_a_run[63:0]),
      .while_mul_cmp_2_b_run(nl_Rotate_run_while_mul_cmp_2_inst_while_mul_cmp_2_b_run[63:0]),
      .while_mul_cmp_2_z_mxwt(while_mul_cmp_2_z_mxwt),
      .while_mul_cmp_2_z_mxwt_1(while_mul_cmp_2_z_mxwt_1),
      .while_mul_cmp_2_z_mxwt_2(while_mul_cmp_2_z_mxwt_2),
      .while_mul_cmp_2_iswt3_2_pff(and_467_cse),
      .while_mul_cmp_2_iswt3_1_pff(and_510_cse),
      .while_mul_cmp_2_iswt3_pff(or_697_rmff)
    );
  Rotate_run_while_mul_cmp_3 Rotate_run_while_mul_cmp_3_inst (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_cmp_3_oswt_unreg(or_698_rmff),
      .while_mul_cmp_3_bawt(while_mul_cmp_3_bawt),
      .while_mul_cmp_3_iden(while_mul_cmp_3_iden),
      .while_mul_cmp_3_iswt3(reg_while_mul_cmp_14_iswt3_cse),
      .while_mul_cmp_3_iden_1(while_mul_cmp_3_iden_1),
      .while_mul_cmp_3_oswt_unreg_1(and_472_cse),
      .while_mul_cmp_3_iden_2(while_mul_cmp_3_iden_2),
      .while_mul_cmp_3_iswt3_1(reg_while_mul_cmp_14_iswt3_1_cse),
      .while_mul_cmp_3_iden_3(while_mul_cmp_3_iden_3),
      .while_mul_cmp_3_oswt_unreg_2(while_while_and_17_cse),
      .while_mul_cmp_3_iden_4(while_mul_cmp_3_iden_4),
      .while_mul_cmp_3_iswt3_2(reg_while_mul_cmp_14_iswt3_2_cse),
      .while_mul_cmp_3_iden_5(while_mul_cmp_3_iden_5),
      .while_mul_cmp_3_a_run(nl_Rotate_run_while_mul_cmp_3_inst_while_mul_cmp_3_a_run[63:0]),
      .while_mul_cmp_3_b_run(nl_Rotate_run_while_mul_cmp_3_inst_while_mul_cmp_3_b_run[63:0]),
      .while_mul_cmp_3_z_mxwt(while_mul_cmp_3_z_mxwt),
      .while_mul_cmp_3_z_mxwt_1(while_mul_cmp_3_z_mxwt_1),
      .while_mul_cmp_3_z_mxwt_2(while_mul_cmp_3_z_mxwt_2),
      .while_mul_cmp_3_iswt3_2_pff(and_467_cse),
      .while_mul_cmp_3_iswt3_1_pff(and_470_cse),
      .while_mul_cmp_3_iswt3_pff(or_697_rmff)
    );
  Rotate_run_while_mul_cmp_4 Rotate_run_while_mul_cmp_4_inst (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_cmp_4_oswt_unreg(or_698_rmff),
      .while_mul_cmp_4_bawt(while_mul_cmp_4_bawt),
      .while_mul_cmp_4_iden(while_mul_cmp_4_iden),
      .while_mul_cmp_4_iswt3(reg_while_mul_cmp_14_iswt3_cse),
      .while_mul_cmp_4_iden_1(while_mul_cmp_4_iden_1),
      .while_mul_cmp_4_oswt_unreg_1(and_470_cse),
      .while_mul_cmp_4_iden_2(while_mul_cmp_4_iden_2),
      .while_mul_cmp_4_iswt3_1(reg_while_mul_cmp_10_iswt3_1_cse),
      .while_mul_cmp_4_iden_3(while_mul_cmp_4_iden_3),
      .while_mul_cmp_4_oswt_unreg_2(while_while_and_17_cse),
      .while_mul_cmp_4_iden_4(while_mul_cmp_4_iden_4),
      .while_mul_cmp_4_iswt3_2(reg_while_mul_cmp_14_iswt3_2_cse),
      .while_mul_cmp_4_iden_5(while_mul_cmp_4_iden_5),
      .while_mul_cmp_4_a_run(nl_Rotate_run_while_mul_cmp_4_inst_while_mul_cmp_4_a_run[63:0]),
      .while_mul_cmp_4_b_run(nl_Rotate_run_while_mul_cmp_4_inst_while_mul_cmp_4_b_run[63:0]),
      .while_mul_cmp_4_z_mxwt(while_mul_cmp_4_z_mxwt),
      .while_mul_cmp_4_z_mxwt_1(while_mul_cmp_4_z_mxwt_1),
      .while_mul_cmp_4_z_mxwt_2(while_mul_cmp_4_z_mxwt_2),
      .while_mul_cmp_4_iswt3_2_pff(and_467_cse),
      .while_mul_cmp_4_iswt3_1_pff(and_510_cse),
      .while_mul_cmp_4_iswt3_pff(or_697_rmff)
    );
  Rotate_run_while_mul_cmp_5 Rotate_run_while_mul_cmp_5_inst (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_cmp_5_oswt_unreg(or_698_rmff),
      .while_mul_cmp_5_bawt(while_mul_cmp_5_bawt),
      .while_mul_cmp_5_iden(while_mul_cmp_5_iden),
      .while_mul_cmp_5_iswt3(reg_while_mul_cmp_14_iswt3_cse),
      .while_mul_cmp_5_iden_1(while_mul_cmp_5_iden_1),
      .while_mul_cmp_5_oswt_unreg_1(and_470_cse),
      .while_mul_cmp_5_iden_2(while_mul_cmp_5_iden_2),
      .while_mul_cmp_5_iswt3_1(reg_while_mul_cmp_10_iswt3_1_cse),
      .while_mul_cmp_5_iden_3(while_mul_cmp_5_iden_3),
      .while_mul_cmp_5_oswt_unreg_2(while_while_and_17_cse),
      .while_mul_cmp_5_iden_4(while_mul_cmp_5_iden_4),
      .while_mul_cmp_5_iswt3_2(reg_while_mul_cmp_14_iswt3_2_cse),
      .while_mul_cmp_5_iden_5(while_mul_cmp_5_iden_5),
      .while_mul_cmp_5_a_run(nl_Rotate_run_while_mul_cmp_5_inst_while_mul_cmp_5_a_run[63:0]),
      .while_mul_cmp_5_b_run(nl_Rotate_run_while_mul_cmp_5_inst_while_mul_cmp_5_b_run[63:0]),
      .while_mul_cmp_5_z_mxwt(while_mul_cmp_5_z_mxwt),
      .while_mul_cmp_5_z_mxwt_1(while_mul_cmp_5_z_mxwt_1),
      .while_mul_cmp_5_z_mxwt_2(while_mul_cmp_5_z_mxwt_2),
      .while_mul_cmp_5_iswt3_2_pff(and_467_cse),
      .while_mul_cmp_5_iswt3_1_pff(and_510_cse),
      .while_mul_cmp_5_iswt3_pff(or_697_rmff)
    );
  Rotate_run_while_mul_cmp_6 Rotate_run_while_mul_cmp_6_inst (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_cmp_6_oswt_unreg(or_698_rmff),
      .while_mul_cmp_6_bawt(while_mul_cmp_6_bawt),
      .while_mul_cmp_6_iden(while_mul_cmp_6_iden),
      .while_mul_cmp_6_iswt3(reg_while_mul_cmp_14_iswt3_cse),
      .while_mul_cmp_6_iden_1(while_mul_cmp_6_iden_1),
      .while_mul_cmp_6_oswt_unreg_1(and_470_cse),
      .while_mul_cmp_6_iden_2(while_mul_cmp_6_iden_2),
      .while_mul_cmp_6_iswt3_1(reg_while_mul_cmp_10_iswt3_1_cse),
      .while_mul_cmp_6_iden_3(while_mul_cmp_6_iden_3),
      .while_mul_cmp_6_oswt_unreg_2(while_while_and_17_cse),
      .while_mul_cmp_6_iden_4(while_mul_cmp_6_iden_4),
      .while_mul_cmp_6_iswt3_2(reg_while_mul_cmp_14_iswt3_2_cse),
      .while_mul_cmp_6_iden_5(while_mul_cmp_6_iden_5),
      .while_mul_cmp_6_a_run(nl_Rotate_run_while_mul_cmp_6_inst_while_mul_cmp_6_a_run[63:0]),
      .while_mul_cmp_6_b_run(nl_Rotate_run_while_mul_cmp_6_inst_while_mul_cmp_6_b_run[63:0]),
      .while_mul_cmp_6_z_mxwt(while_mul_cmp_6_z_mxwt),
      .while_mul_cmp_6_z_mxwt_1(while_mul_cmp_6_z_mxwt_1),
      .while_mul_cmp_6_z_mxwt_2(while_mul_cmp_6_z_mxwt_2),
      .while_mul_cmp_6_iswt3_2_pff(and_467_cse),
      .while_mul_cmp_6_iswt3_1_pff(and_510_cse),
      .while_mul_cmp_6_iswt3_pff(or_697_rmff)
    );
  Rotate_run_while_mul_cmp_7 Rotate_run_while_mul_cmp_7_inst (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_cmp_7_oswt_unreg(or_698_rmff),
      .while_mul_cmp_7_bawt(while_mul_cmp_7_bawt),
      .while_mul_cmp_7_iden(while_mul_cmp_7_iden),
      .while_mul_cmp_7_iswt3(reg_while_mul_cmp_14_iswt3_cse),
      .while_mul_cmp_7_iden_1(while_mul_cmp_7_iden_1),
      .while_mul_cmp_7_oswt_unreg_1(and_576_cse),
      .while_mul_cmp_7_iden_2(while_mul_cmp_7_iden_2),
      .while_mul_cmp_7_iswt3_1(reg_while_mul_cmp_7_iswt3_1_cse),
      .while_mul_cmp_7_iden_3(while_mul_cmp_7_iden_3),
      .while_mul_cmp_7_oswt_unreg_2(while_while_and_17_cse),
      .while_mul_cmp_7_iden_4(while_mul_cmp_7_iden_4),
      .while_mul_cmp_7_iswt3_2(reg_while_mul_cmp_14_iswt3_2_cse),
      .while_mul_cmp_7_iden_5(while_mul_cmp_7_iden_5),
      .while_mul_cmp_7_a_run(nl_Rotate_run_while_mul_cmp_7_inst_while_mul_cmp_7_a_run[63:0]),
      .while_mul_cmp_7_b_run(nl_Rotate_run_while_mul_cmp_7_inst_while_mul_cmp_7_b_run[63:0]),
      .while_mul_cmp_7_z_mxwt(while_mul_cmp_7_z_mxwt),
      .while_mul_cmp_7_z_mxwt_1(while_mul_cmp_7_z_mxwt_1),
      .while_mul_cmp_7_z_mxwt_2(while_mul_cmp_7_z_mxwt_2),
      .while_mul_cmp_7_iswt3_2_pff(and_467_cse),
      .while_mul_cmp_7_iswt3_1_pff(and_574_cse),
      .while_mul_cmp_7_iswt3_pff(or_697_rmff)
    );
  Rotate_run_while_mul_cmp_8 Rotate_run_while_mul_cmp_8_inst (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_cmp_8_oswt_unreg(or_698_rmff),
      .while_mul_cmp_8_bawt(while_mul_cmp_8_bawt),
      .while_mul_cmp_8_iden(while_mul_cmp_8_iden),
      .while_mul_cmp_8_iswt3(reg_while_mul_cmp_14_iswt3_cse),
      .while_mul_cmp_8_iden_1(while_mul_cmp_8_iden_1),
      .while_mul_cmp_8_oswt_unreg_1(and_470_cse),
      .while_mul_cmp_8_iden_2(while_mul_cmp_8_iden_2),
      .while_mul_cmp_8_iswt3_1(reg_while_mul_cmp_10_iswt3_1_cse),
      .while_mul_cmp_8_iden_3(while_mul_cmp_8_iden_3),
      .while_mul_cmp_8_oswt_unreg_2(while_while_and_17_cse),
      .while_mul_cmp_8_iden_4(while_mul_cmp_8_iden_4),
      .while_mul_cmp_8_iswt3_2(reg_while_mul_cmp_14_iswt3_2_cse),
      .while_mul_cmp_8_iden_5(while_mul_cmp_8_iden_5),
      .while_mul_cmp_8_a_run(nl_Rotate_run_while_mul_cmp_8_inst_while_mul_cmp_8_a_run[63:0]),
      .while_mul_cmp_8_b_run(nl_Rotate_run_while_mul_cmp_8_inst_while_mul_cmp_8_b_run[63:0]),
      .while_mul_cmp_8_z_mxwt(while_mul_cmp_8_z_mxwt),
      .while_mul_cmp_8_z_mxwt_1(while_mul_cmp_8_z_mxwt_1),
      .while_mul_cmp_8_z_mxwt_2(while_mul_cmp_8_z_mxwt_2),
      .while_mul_cmp_8_iswt3_2_pff(and_467_cse),
      .while_mul_cmp_8_iswt3_1_pff(and_510_cse),
      .while_mul_cmp_8_iswt3_pff(or_697_rmff)
    );
  Rotate_run_while_mul_cmp_9 Rotate_run_while_mul_cmp_9_inst (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_cmp_9_oswt_unreg(or_698_rmff),
      .while_mul_cmp_9_bawt(while_mul_cmp_9_bawt),
      .while_mul_cmp_9_iden(while_mul_cmp_9_iden),
      .while_mul_cmp_9_iswt3(reg_while_mul_cmp_14_iswt3_cse),
      .while_mul_cmp_9_iden_1(while_mul_cmp_9_iden_1),
      .while_mul_cmp_9_oswt_unreg_1(and_470_cse),
      .while_mul_cmp_9_iden_2(while_mul_cmp_9_iden_2),
      .while_mul_cmp_9_iswt3_1(reg_while_mul_cmp_10_iswt3_1_cse),
      .while_mul_cmp_9_iden_3(while_mul_cmp_9_iden_3),
      .while_mul_cmp_9_oswt_unreg_2(while_while_and_17_cse),
      .while_mul_cmp_9_iden_4(while_mul_cmp_9_iden_4),
      .while_mul_cmp_9_iswt3_2(reg_while_mul_cmp_14_iswt3_2_cse),
      .while_mul_cmp_9_iden_5(while_mul_cmp_9_iden_5),
      .while_mul_cmp_9_a_run(nl_Rotate_run_while_mul_cmp_9_inst_while_mul_cmp_9_a_run[63:0]),
      .while_mul_cmp_9_b_run(nl_Rotate_run_while_mul_cmp_9_inst_while_mul_cmp_9_b_run[63:0]),
      .while_mul_cmp_9_z_mxwt(while_mul_cmp_9_z_mxwt),
      .while_mul_cmp_9_z_mxwt_1(while_mul_cmp_9_z_mxwt_1),
      .while_mul_cmp_9_z_mxwt_2(while_mul_cmp_9_z_mxwt_2),
      .while_mul_cmp_9_iswt3_2_pff(and_467_cse),
      .while_mul_cmp_9_iswt3_1_pff(and_510_cse),
      .while_mul_cmp_9_iswt3_pff(or_697_rmff)
    );
  Rotate_run_while_mul_cmp_10 Rotate_run_while_mul_cmp_10_inst (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_cmp_10_oswt_unreg(or_698_rmff),
      .while_mul_cmp_10_bawt(while_mul_cmp_10_bawt),
      .while_mul_cmp_10_iden(while_mul_cmp_10_iden),
      .while_mul_cmp_10_iswt3(reg_while_mul_cmp_14_iswt3_cse),
      .while_mul_cmp_10_iden_1(while_mul_cmp_10_iden_1),
      .while_mul_cmp_10_oswt_unreg_1(and_470_cse),
      .while_mul_cmp_10_iden_2(while_mul_cmp_10_iden_2),
      .while_mul_cmp_10_iswt3_1(reg_while_mul_cmp_10_iswt3_1_cse),
      .while_mul_cmp_10_iden_3(while_mul_cmp_10_iden_3),
      .while_mul_cmp_10_oswt_unreg_2(while_while_and_17_cse),
      .while_mul_cmp_10_iden_4(while_mul_cmp_10_iden_4),
      .while_mul_cmp_10_iswt3_2(reg_while_mul_cmp_14_iswt3_2_cse),
      .while_mul_cmp_10_iden_5(while_mul_cmp_10_iden_5),
      .while_mul_cmp_10_a_run(nl_Rotate_run_while_mul_cmp_10_inst_while_mul_cmp_10_a_run[63:0]),
      .while_mul_cmp_10_b_run(nl_Rotate_run_while_mul_cmp_10_inst_while_mul_cmp_10_b_run[63:0]),
      .while_mul_cmp_10_z_mxwt(while_mul_cmp_10_z_mxwt),
      .while_mul_cmp_10_z_mxwt_1(while_mul_cmp_10_z_mxwt_1),
      .while_mul_cmp_10_z_mxwt_2(while_mul_cmp_10_z_mxwt_2),
      .while_mul_cmp_10_iswt3_2_pff(and_467_cse),
      .while_mul_cmp_10_iswt3_1_pff(and_510_cse),
      .while_mul_cmp_10_iswt3_pff(or_697_rmff)
    );
  Rotate_run_while_mul_cmp_11 Rotate_run_while_mul_cmp_11_inst (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_cmp_11_oswt_unreg(and_478_cse),
      .while_mul_cmp_11_bawt(while_mul_cmp_11_bawt),
      .while_mul_cmp_11_iden(while_mul_cmp_11_iden),
      .while_mul_cmp_11_iswt3(reg_while_mul_cmp_11_iswt3_cse),
      .while_mul_cmp_11_iden_1(while_mul_cmp_11_iden_1),
      .while_mul_cmp_11_oswt_unreg_1(while_or_217_itm),
      .while_mul_cmp_11_iden_2(while_mul_cmp_11_iden_2),
      .while_mul_cmp_11_iswt3_1(while_mul_cmp_11_iswt3_1),
      .while_mul_cmp_11_iden_3(while_mul_cmp_11_iden_3),
      .while_mul_cmp_11_oswt_unreg_2(while_while_and_17_cse),
      .while_mul_cmp_11_iden_4(while_mul_cmp_11_iden_4),
      .while_mul_cmp_11_iswt3_2(reg_while_mul_cmp_14_iswt3_2_cse),
      .while_mul_cmp_11_iden_5(while_mul_cmp_11_iden_5),
      .while_mul_cmp_11_a_run(nl_Rotate_run_while_mul_cmp_11_inst_while_mul_cmp_11_a_run[63:0]),
      .while_mul_cmp_11_b_run(nl_Rotate_run_while_mul_cmp_11_inst_while_mul_cmp_11_b_run[63:0]),
      .while_mul_cmp_11_z_mxwt(while_mul_cmp_11_z_mxwt),
      .while_mul_cmp_11_z_mxwt_1(while_mul_cmp_11_z_mxwt_1),
      .while_mul_cmp_11_z_mxwt_2(while_mul_cmp_11_z_mxwt_2),
      .while_mul_cmp_11_iswt3_2_pff(and_467_cse),
      .while_mul_cmp_11_iswt3_1_pff(or_714_rmff),
      .while_mul_cmp_11_iswt3_pff(and_475_cse)
    );
  Rotate_run_while_mul_cmp_12 Rotate_run_while_mul_cmp_12_inst (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_cmp_12_oswt_unreg(or_698_rmff),
      .while_mul_cmp_12_bawt(while_mul_cmp_12_bawt),
      .while_mul_cmp_12_iden(while_mul_cmp_12_iden),
      .while_mul_cmp_12_iswt3(reg_while_mul_cmp_14_iswt3_cse),
      .while_mul_cmp_12_iden_1(while_mul_cmp_12_iden_1),
      .while_mul_cmp_12_oswt_unreg_1(and_472_cse),
      .while_mul_cmp_12_iden_2(while_mul_cmp_12_iden_2),
      .while_mul_cmp_12_iswt3_1(reg_while_mul_cmp_14_iswt3_1_cse),
      .while_mul_cmp_12_iden_3(while_mul_cmp_12_iden_3),
      .while_mul_cmp_12_oswt_unreg_2(while_while_and_17_cse),
      .while_mul_cmp_12_iden_4(while_mul_cmp_12_iden_4),
      .while_mul_cmp_12_iswt3_2(reg_while_mul_cmp_14_iswt3_2_cse),
      .while_mul_cmp_12_iden_5(while_mul_cmp_12_iden_5),
      .while_mul_cmp_12_a_run(nl_Rotate_run_while_mul_cmp_12_inst_while_mul_cmp_12_a_run[63:0]),
      .while_mul_cmp_12_b_run(nl_Rotate_run_while_mul_cmp_12_inst_while_mul_cmp_12_b_run[63:0]),
      .while_mul_cmp_12_z_mxwt(while_mul_cmp_12_z_mxwt),
      .while_mul_cmp_12_z_mxwt_1(while_mul_cmp_12_z_mxwt_1),
      .while_mul_cmp_12_z_mxwt_2(while_mul_cmp_12_z_mxwt_2),
      .while_mul_cmp_12_iswt3_2_pff(and_467_cse),
      .while_mul_cmp_12_iswt3_1_pff(and_470_cse),
      .while_mul_cmp_12_iswt3_pff(or_697_rmff)
    );
  Rotate_run_while_mul_cmp_13 Rotate_run_while_mul_cmp_13_inst (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_cmp_13_oswt_unreg(or_698_rmff),
      .while_mul_cmp_13_bawt(while_mul_cmp_13_bawt),
      .while_mul_cmp_13_iden(while_mul_cmp_13_iden),
      .while_mul_cmp_13_iswt3(reg_while_mul_cmp_14_iswt3_cse),
      .while_mul_cmp_13_iden_1(while_mul_cmp_13_iden_1),
      .while_mul_cmp_13_oswt_unreg_1(and_472_cse),
      .while_mul_cmp_13_iden_2(while_mul_cmp_13_iden_2),
      .while_mul_cmp_13_iswt3_1(reg_while_mul_cmp_14_iswt3_1_cse),
      .while_mul_cmp_13_iden_3(while_mul_cmp_13_iden_3),
      .while_mul_cmp_13_oswt_unreg_2(while_while_and_17_cse),
      .while_mul_cmp_13_iden_4(while_mul_cmp_13_iden_4),
      .while_mul_cmp_13_iswt3_2(reg_while_mul_cmp_14_iswt3_2_cse),
      .while_mul_cmp_13_iden_5(while_mul_cmp_13_iden_5),
      .while_mul_cmp_13_a_run(nl_Rotate_run_while_mul_cmp_13_inst_while_mul_cmp_13_a_run[63:0]),
      .while_mul_cmp_13_b_run(nl_Rotate_run_while_mul_cmp_13_inst_while_mul_cmp_13_b_run[63:0]),
      .while_mul_cmp_13_z_mxwt(while_mul_cmp_13_z_mxwt),
      .while_mul_cmp_13_z_mxwt_1(while_mul_cmp_13_z_mxwt_1),
      .while_mul_cmp_13_z_mxwt_2(while_mul_cmp_13_z_mxwt_2),
      .while_mul_cmp_13_iswt3_2_pff(and_467_cse),
      .while_mul_cmp_13_iswt3_1_pff(and_470_cse),
      .while_mul_cmp_13_iswt3_pff(or_697_rmff)
    );
  Rotate_run_while_mul_cmp_14 Rotate_run_while_mul_cmp_14_inst (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .while_mul_cmp_14_oswt_unreg(or_698_rmff),
      .while_mul_cmp_14_bawt(while_mul_cmp_14_bawt),
      .while_mul_cmp_14_iden(while_mul_cmp_14_iden),
      .while_mul_cmp_14_iswt3(reg_while_mul_cmp_14_iswt3_cse),
      .while_mul_cmp_14_iden_1(while_mul_cmp_14_iden_1),
      .while_mul_cmp_14_oswt_unreg_1(and_472_cse),
      .while_mul_cmp_14_iden_2(while_mul_cmp_14_iden_2),
      .while_mul_cmp_14_iswt3_1(reg_while_mul_cmp_14_iswt3_1_cse),
      .while_mul_cmp_14_iden_3(while_mul_cmp_14_iden_3),
      .while_mul_cmp_14_oswt_unreg_2(while_while_and_17_cse),
      .while_mul_cmp_14_iden_4(while_mul_cmp_14_iden_4),
      .while_mul_cmp_14_iswt3_2(reg_while_mul_cmp_14_iswt3_2_cse),
      .while_mul_cmp_14_iden_5(while_mul_cmp_14_iden_5),
      .while_mul_cmp_14_a_run(nl_Rotate_run_while_mul_cmp_14_inst_while_mul_cmp_14_a_run[63:0]),
      .while_mul_cmp_14_b_run(nl_Rotate_run_while_mul_cmp_14_inst_while_mul_cmp_14_b_run[63:0]),
      .while_mul_cmp_14_z_mxwt(while_mul_cmp_14_z_mxwt),
      .while_mul_cmp_14_z_mxwt_1(while_mul_cmp_14_z_mxwt_1),
      .while_mul_cmp_14_z_mxwt_2(while_mul_cmp_14_z_mxwt_2),
      .while_mul_cmp_14_iswt3_2_pff(and_467_cse),
      .while_mul_cmp_14_iswt3_1_pff(and_470_cse),
      .while_mul_cmp_14_iswt3_pff(or_697_rmff)
    );
  Rotate_run_staller Rotate_run_staller_inst (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .run_wten(run_wten),
      .rotate_in_Pop_mioi_iden(rotate_in_Pop_mioi_iden),
      .rotate_in_Pop_mioi_iden_1(rotate_in_Pop_mioi_iden_1),
      .rotate_in_Pop_mioi_wen_comp(rotate_in_Pop_mioi_wen_comp),
      .rotate_out_Push_mioi_iden(rotate_out_Push_mioi_iden),
      .rotate_out_Push_mioi_wen_comp(rotate_out_Push_mioi_wen_comp),
      .while_mul_115_cmp_iden(while_mul_115_cmp_iden),
      .while_mul_115_cmp_iden_1(while_mul_115_cmp_iden_1),
      .while_mul_115_cmp_iden_2(while_mul_115_cmp_iden_2),
      .while_mul_115_cmp_iden_3(while_mul_115_cmp_iden_3),
      .while_mul_115_cmp_iden_4(while_mul_115_cmp_iden_4),
      .while_mul_115_cmp_iden_5(while_mul_115_cmp_iden_5),
      .while_mul_115_cmp_iden_6(while_mul_115_cmp_iden_6),
      .while_mul_115_cmp_iden_7(while_mul_115_cmp_iden_7),
      .while_mul_110_cmp_iden(while_mul_110_cmp_iden),
      .while_mul_110_cmp_iden_1(while_mul_110_cmp_iden_1),
      .while_mul_110_cmp_iden_2(while_mul_110_cmp_iden_2),
      .while_mul_110_cmp_iden_3(while_mul_110_cmp_iden_3),
      .while_mul_110_cmp_iden_4(while_mul_110_cmp_iden_4),
      .while_mul_110_cmp_iden_5(while_mul_110_cmp_iden_5),
      .while_mul_111_cmp_iden(while_mul_111_cmp_iden),
      .while_mul_111_cmp_iden_1(while_mul_111_cmp_iden_1),
      .while_mul_111_cmp_iden_2(while_mul_111_cmp_iden_2),
      .while_mul_111_cmp_iden_3(while_mul_111_cmp_iden_3),
      .while_mul_111_cmp_iden_4(while_mul_111_cmp_iden_4),
      .while_mul_111_cmp_iden_5(while_mul_111_cmp_iden_5),
      .while_mul_108_cmp_iden(while_mul_108_cmp_iden),
      .while_mul_108_cmp_iden_1(while_mul_108_cmp_iden_1),
      .while_mul_108_cmp_iden_2(while_mul_108_cmp_iden_2),
      .while_mul_108_cmp_iden_3(while_mul_108_cmp_iden_3),
      .while_mul_76_cmp_iden(while_mul_76_cmp_iden),
      .while_mul_76_cmp_iden_1(while_mul_76_cmp_iden_1),
      .while_mul_76_cmp_iden_2(while_mul_76_cmp_iden_2),
      .while_mul_76_cmp_iden_3(while_mul_76_cmp_iden_3),
      .while_mul_77_cmp_iden(while_mul_77_cmp_iden),
      .while_mul_77_cmp_iden_1(while_mul_77_cmp_iden_1),
      .while_mul_77_cmp_iden_2(while_mul_77_cmp_iden_2),
      .while_mul_77_cmp_iden_3(while_mul_77_cmp_iden_3),
      .while_mul_77_cmp_iden_4(while_mul_77_cmp_iden_4),
      .while_mul_77_cmp_iden_5(while_mul_77_cmp_iden_5),
      .while_mul_70_cmp_iden(while_mul_70_cmp_iden),
      .while_mul_70_cmp_iden_1(while_mul_70_cmp_iden_1),
      .while_mul_70_cmp_iden_2(while_mul_70_cmp_iden_2),
      .while_mul_70_cmp_iden_3(while_mul_70_cmp_iden_3),
      .while_while_mul_cmp_iden(while_while_mul_cmp_iden),
      .while_while_mul_cmp_iden_1(while_while_mul_cmp_iden_1),
      .while_while_mul_cmp_iden_2(while_while_mul_cmp_iden_2),
      .while_while_mul_cmp_iden_3(while_while_mul_cmp_iden_3),
      .while_mul_67_cmp_iden(while_mul_67_cmp_iden),
      .while_mul_67_cmp_iden_1(while_mul_67_cmp_iden_1),
      .while_mul_67_cmp_iden_2(while_mul_67_cmp_iden_2),
      .while_mul_67_cmp_iden_3(while_mul_67_cmp_iden_3),
      .while_mul_73_cmp_iden(while_mul_73_cmp_iden),
      .while_mul_73_cmp_iden_1(while_mul_73_cmp_iden_1),
      .while_mul_73_cmp_iden_2(while_mul_73_cmp_iden_2),
      .while_mul_73_cmp_iden_3(while_mul_73_cmp_iden_3),
      .while_mul_44_cmp_iden(while_mul_44_cmp_iden),
      .while_mul_44_cmp_iden_1(while_mul_44_cmp_iden_1),
      .while_mul_44_cmp_iden_2(while_mul_44_cmp_iden_2),
      .while_mul_44_cmp_iden_3(while_mul_44_cmp_iden_3),
      .while_mul_37_cmp_iden(while_mul_37_cmp_iden),
      .while_mul_37_cmp_iden_1(while_mul_37_cmp_iden_1),
      .while_mul_37_cmp_iden_2(while_mul_37_cmp_iden_2),
      .while_mul_37_cmp_iden_3(while_mul_37_cmp_iden_3),
      .while_mul_34_cmp_iden(while_mul_34_cmp_iden),
      .while_mul_34_cmp_iden_1(while_mul_34_cmp_iden_1),
      .while_mul_34_cmp_iden_2(while_mul_34_cmp_iden_2),
      .while_mul_34_cmp_iden_3(while_mul_34_cmp_iden_3),
      .while_mul_34_cmp_1_iden(while_mul_34_cmp_1_iden),
      .while_mul_34_cmp_1_iden_1(while_mul_34_cmp_1_iden_1),
      .while_mul_34_cmp_1_iden_2(while_mul_34_cmp_1_iden_2),
      .while_mul_34_cmp_1_iden_3(while_mul_34_cmp_1_iden_3),
      .while_mul_34_cmp_1_iden_4(while_mul_34_cmp_1_iden_4),
      .while_mul_34_cmp_1_iden_5(while_mul_34_cmp_1_iden_5),
      .while_mul_36_cmp_iden(while_mul_36_cmp_iden),
      .while_mul_36_cmp_iden_1(while_mul_36_cmp_iden_1),
      .while_mul_36_cmp_iden_2(while_mul_36_cmp_iden_2),
      .while_mul_36_cmp_iden_3(while_mul_36_cmp_iden_3),
      .while_mul_25_cmp_iden(while_mul_25_cmp_iden),
      .while_mul_25_cmp_iden_1(while_mul_25_cmp_iden_1),
      .while_mul_25_cmp_iden_2(while_mul_25_cmp_iden_2),
      .while_mul_25_cmp_iden_3(while_mul_25_cmp_iden_3),
      .while_mul_25_cmp_iden_4(while_mul_25_cmp_iden_4),
      .while_mul_25_cmp_iden_5(while_mul_25_cmp_iden_5),
      .while_mul_25_cmp_iden_6(while_mul_25_cmp_iden_6),
      .while_mul_25_cmp_iden_7(while_mul_25_cmp_iden_7),
      .while_mul_26_cmp_iden(while_mul_26_cmp_iden),
      .while_mul_26_cmp_iden_1(while_mul_26_cmp_iden_1),
      .while_mul_26_cmp_iden_2(while_mul_26_cmp_iden_2),
      .while_mul_26_cmp_iden_3(while_mul_26_cmp_iden_3),
      .while_mul_26_cmp_1_iden(while_mul_26_cmp_1_iden),
      .while_mul_26_cmp_1_iden_1(while_mul_26_cmp_1_iden_1),
      .while_mul_26_cmp_1_iden_2(while_mul_26_cmp_1_iden_2),
      .while_mul_26_cmp_1_iden_3(while_mul_26_cmp_1_iden_3),
      .while_mul_cmp_iden(while_mul_cmp_iden),
      .while_mul_cmp_iden_1(while_mul_cmp_iden_1),
      .while_mul_cmp_iden_2(while_mul_cmp_iden_2),
      .while_mul_cmp_iden_3(while_mul_cmp_iden_3),
      .while_mul_cmp_iden_4(while_mul_cmp_iden_4),
      .while_mul_cmp_iden_5(while_mul_cmp_iden_5),
      .while_mul_cmp_1_iden(while_mul_cmp_1_iden),
      .while_mul_cmp_1_iden_1(while_mul_cmp_1_iden_1),
      .while_mul_cmp_1_iden_2(while_mul_cmp_1_iden_2),
      .while_mul_cmp_1_iden_3(while_mul_cmp_1_iden_3),
      .while_mul_cmp_1_iden_4(while_mul_cmp_1_iden_4),
      .while_mul_cmp_1_iden_5(while_mul_cmp_1_iden_5),
      .while_mul_cmp_2_iden(while_mul_cmp_2_iden),
      .while_mul_cmp_2_iden_1(while_mul_cmp_2_iden_1),
      .while_mul_cmp_2_iden_2(while_mul_cmp_2_iden_2),
      .while_mul_cmp_2_iden_3(while_mul_cmp_2_iden_3),
      .while_mul_cmp_2_iden_4(while_mul_cmp_2_iden_4),
      .while_mul_cmp_2_iden_5(while_mul_cmp_2_iden_5),
      .while_mul_cmp_3_iden(while_mul_cmp_3_iden),
      .while_mul_cmp_3_iden_1(while_mul_cmp_3_iden_1),
      .while_mul_cmp_3_iden_2(while_mul_cmp_3_iden_2),
      .while_mul_cmp_3_iden_3(while_mul_cmp_3_iden_3),
      .while_mul_cmp_3_iden_4(while_mul_cmp_3_iden_4),
      .while_mul_cmp_3_iden_5(while_mul_cmp_3_iden_5),
      .while_mul_cmp_4_iden(while_mul_cmp_4_iden),
      .while_mul_cmp_4_iden_1(while_mul_cmp_4_iden_1),
      .while_mul_cmp_4_iden_2(while_mul_cmp_4_iden_2),
      .while_mul_cmp_4_iden_3(while_mul_cmp_4_iden_3),
      .while_mul_cmp_4_iden_4(while_mul_cmp_4_iden_4),
      .while_mul_cmp_4_iden_5(while_mul_cmp_4_iden_5),
      .while_mul_cmp_5_iden(while_mul_cmp_5_iden),
      .while_mul_cmp_5_iden_1(while_mul_cmp_5_iden_1),
      .while_mul_cmp_5_iden_2(while_mul_cmp_5_iden_2),
      .while_mul_cmp_5_iden_3(while_mul_cmp_5_iden_3),
      .while_mul_cmp_5_iden_4(while_mul_cmp_5_iden_4),
      .while_mul_cmp_5_iden_5(while_mul_cmp_5_iden_5),
      .while_mul_cmp_6_iden(while_mul_cmp_6_iden),
      .while_mul_cmp_6_iden_1(while_mul_cmp_6_iden_1),
      .while_mul_cmp_6_iden_2(while_mul_cmp_6_iden_2),
      .while_mul_cmp_6_iden_3(while_mul_cmp_6_iden_3),
      .while_mul_cmp_6_iden_4(while_mul_cmp_6_iden_4),
      .while_mul_cmp_6_iden_5(while_mul_cmp_6_iden_5),
      .while_mul_cmp_7_iden(while_mul_cmp_7_iden),
      .while_mul_cmp_7_iden_1(while_mul_cmp_7_iden_1),
      .while_mul_cmp_7_iden_2(while_mul_cmp_7_iden_2),
      .while_mul_cmp_7_iden_3(while_mul_cmp_7_iden_3),
      .while_mul_cmp_7_iden_4(while_mul_cmp_7_iden_4),
      .while_mul_cmp_7_iden_5(while_mul_cmp_7_iden_5),
      .while_mul_cmp_8_iden(while_mul_cmp_8_iden),
      .while_mul_cmp_8_iden_1(while_mul_cmp_8_iden_1),
      .while_mul_cmp_8_iden_2(while_mul_cmp_8_iden_2),
      .while_mul_cmp_8_iden_3(while_mul_cmp_8_iden_3),
      .while_mul_cmp_8_iden_4(while_mul_cmp_8_iden_4),
      .while_mul_cmp_8_iden_5(while_mul_cmp_8_iden_5),
      .while_mul_cmp_9_iden(while_mul_cmp_9_iden),
      .while_mul_cmp_9_iden_1(while_mul_cmp_9_iden_1),
      .while_mul_cmp_9_iden_2(while_mul_cmp_9_iden_2),
      .while_mul_cmp_9_iden_3(while_mul_cmp_9_iden_3),
      .while_mul_cmp_9_iden_4(while_mul_cmp_9_iden_4),
      .while_mul_cmp_9_iden_5(while_mul_cmp_9_iden_5),
      .while_mul_cmp_10_iden(while_mul_cmp_10_iden),
      .while_mul_cmp_10_iden_1(while_mul_cmp_10_iden_1),
      .while_mul_cmp_10_iden_2(while_mul_cmp_10_iden_2),
      .while_mul_cmp_10_iden_3(while_mul_cmp_10_iden_3),
      .while_mul_cmp_10_iden_4(while_mul_cmp_10_iden_4),
      .while_mul_cmp_10_iden_5(while_mul_cmp_10_iden_5),
      .while_mul_cmp_11_iden(while_mul_cmp_11_iden),
      .while_mul_cmp_11_iden_1(while_mul_cmp_11_iden_1),
      .while_mul_cmp_11_iden_2(while_mul_cmp_11_iden_2),
      .while_mul_cmp_11_iden_3(while_mul_cmp_11_iden_3),
      .while_mul_cmp_11_iden_4(while_mul_cmp_11_iden_4),
      .while_mul_cmp_11_iden_5(while_mul_cmp_11_iden_5),
      .while_mul_cmp_12_iden(while_mul_cmp_12_iden),
      .while_mul_cmp_12_iden_1(while_mul_cmp_12_iden_1),
      .while_mul_cmp_12_iden_2(while_mul_cmp_12_iden_2),
      .while_mul_cmp_12_iden_3(while_mul_cmp_12_iden_3),
      .while_mul_cmp_12_iden_4(while_mul_cmp_12_iden_4),
      .while_mul_cmp_12_iden_5(while_mul_cmp_12_iden_5),
      .while_mul_cmp_13_iden(while_mul_cmp_13_iden),
      .while_mul_cmp_13_iden_1(while_mul_cmp_13_iden_1),
      .while_mul_cmp_13_iden_2(while_mul_cmp_13_iden_2),
      .while_mul_cmp_13_iden_3(while_mul_cmp_13_iden_3),
      .while_mul_cmp_13_iden_4(while_mul_cmp_13_iden_4),
      .while_mul_cmp_13_iden_5(while_mul_cmp_13_iden_5),
      .while_mul_cmp_14_iden(while_mul_cmp_14_iden),
      .while_mul_cmp_14_iden_1(while_mul_cmp_14_iden_1),
      .while_mul_cmp_14_iden_2(while_mul_cmp_14_iden_2),
      .while_mul_cmp_14_iden_3(while_mul_cmp_14_iden_3),
      .while_mul_cmp_14_iden_4(while_mul_cmp_14_iden_4),
      .while_mul_cmp_14_iden_5(while_mul_cmp_14_iden_5),
      .run_flen_unreg(nl_Rotate_run_staller_inst_run_flen_unreg)
    );
  Rotate_run_run_fsm Rotate_run_run_fsm_inst (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .fsm_output(fsm_output)
    );
  assign while_mul_108_cmp_1_en = and_510_cse | and_659_cse | and_515_cse | and_689_cse;
  assign while_mul_73_cmp_1_en = and_510_cse | ((while_and_43_tmp | while_and_53_tmp)
      & (fsm_output[1])) | ((and_dcpl_112 | while_and_134_tmp) & (fsm_output[2]))
      | and_689_cse;
  assign nor_163_nl = ~((~ while_mul_67_cmp_bawt) | (~ while_stage_v_20) | while_stage_v_21
      | while_stage_v_22 | while_stage_v_23 | (~(while_mul_44_cmp_bawt & while_mul_34_cmp_1_bawt
      & mux_168_cse)));
  assign and_2087_nl = or_1425_cse & while_stage_v_28;
  assign mux_165_nl = MUX_s_1_2_2((~ or_29_cse), while_stage_v_32, and_2087_nl);
  assign and_2089_nl = or_1426_cse & while_stage_v_28;
  assign mux_164_nl = MUX_s_1_2_2((~ or_29_cse), while_stage_v_32, and_2089_nl);
  assign mux_166_nl = MUX_s_1_2_2(mux_165_nl, mux_164_nl, while_stage_v_40);
  assign or_370_nl = (~ while_mul_110_cmp_bawt) | while_stage_v_29 | while_stage_v_30
      | while_stage_v_31;
  assign mux_167_nl = MUX_s_1_2_2(mux_166_nl, or_357_cse, or_370_nl);
  assign nor_164_nl = ~(or_tmp_207 | mux_167_nl);
  assign mux_169_nl = MUX_s_1_2_2(nor_163_nl, nor_164_nl, while_stage_v_24);
  assign nor_165_nl = ~((~ while_stage_v_19) | (~ while_mul_73_cmp_bawt) | (~ while_mul_67_cmp_bawt)
      | while_stage_v_20 | while_stage_v_21 | while_stage_v_22);
  assign nor_166_nl = ~(or_tmp_135 | (while_stage_v_27 & (or_tmp_136 | (while_stage_v_31
      & (or_tmp_55 | (while_stage_v_35 & (or_tmp_138 | (while_stage_v_39 & or_tmp_139))))))));
  assign mux_170_nl = MUX_s_1_2_2(nor_165_nl, nor_166_nl, while_stage_v_23);
  assign while_mul_44_cmp_1_en = and_574_cse | (mux_169_nl & or_dcpl & (fsm_output[1]))
      | and_784_cse | (mux_170_nl & (fsm_output[4]));
  assign nor_158_nl = ~((~ while_stage_v_7) | (~ while_mul_36_cmp_bawt) | while_stage_v_8
      | while_stage_v_9 | while_stage_v_10 | (~ or_tmp_140));
  assign mux_133_nl = MUX_s_1_2_2(nor_158_nl, nor_159_cse, while_stage_v_11);
  assign while_mul_36_cmp_1_en = ((while_and_205_tmp | while_and_216_tmp) & (fsm_output[3]))
      | ((while_and_33_tmp | while_and_43_tmp) & (fsm_output[1])) | and_515_cse |
      (mux_133_nl & (fsm_output[4]));
  assign while_and_cse = run_wen & (~((~ (fsm_output[4])) | or_dcpl_124));
  assign while_nor_23_cse = ~(while_stage_v_43 | reg_rotate_out_Push_mioi_iswt0_cse);
  assign while_while_and_17_cse = while_stage_v_43 & (~ reg_rotate_out_Push_mioi_iswt0_cse)
      & (fsm_output[4]);
  assign or_697_rmff = and_475_cse | and_476_cse;
  assign or_698_rmff = and_478_cse | and_479_cse;
  assign or_714_rmff = and_510_cse | and_479_cse;
  assign or_787_rmff = and_470_cse | and_659_cse;
  assign or_788_rmff = and_472_cse | and_662_cse;
  assign or_800_rmff = and_510_cse | and_479_cse | and_689_cse;
  assign or_808_rmff = and_659_cse | and_515_cse | and_689_cse;
  assign mux_121_nl = MUX_s_1_2_2((~ or_tmp_140), while_stage_v_19, or_tmp_139);
  assign mux_122_nl = MUX_s_1_2_2((~ or_tmp_140), mux_121_nl, while_stage_v_39);
  assign mux_123_nl = MUX_s_1_2_2(mux_122_nl, while_stage_v_19, or_tmp_138);
  assign mux_124_nl = MUX_s_1_2_2((~ or_tmp_140), mux_123_nl, while_stage_v_35);
  assign mux_125_nl = MUX_s_1_2_2(mux_124_nl, while_stage_v_19, or_tmp_55);
  assign mux_126_nl = MUX_s_1_2_2((~ or_tmp_140), mux_125_nl, while_stage_v_31);
  assign mux_127_nl = MUX_s_1_2_2(mux_126_nl, while_stage_v_19, or_tmp_136);
  assign mux_128_nl = MUX_s_1_2_2((~ or_tmp_140), mux_127_nl, while_stage_v_27);
  assign mux_129_nl = MUX_s_1_2_2(mux_128_nl, while_stage_v_19, or_tmp_135);
  assign mux_130_nl = MUX_s_1_2_2((~ or_tmp_140), mux_129_nl, while_stage_v_23);
  assign or_267_nl = while_stage_v_20 | while_stage_v_21 | while_stage_v_22;
  assign mux_131_cse = MUX_s_1_2_2(mux_130_nl, while_stage_v_19, or_267_nl);
  assign or_328_cse = or_tmp_133 | mux_131_cse;
  assign mux_132_cse = MUX_s_1_2_2((~ or_tmp_140), or_328_cse, while_stage_v_15);
  assign nor_159_cse = ~(or_tmp_132 | mux_132_cse);
  assign or_830_rmff = and_476_cse | and_759_cse;
  assign or_840_rmff = and_662_cse | and_712_cse;
  assign or_847_rmff = and_796_cse | and_733_cse;
  assign or_849_rmff = and_801_cse | and_739_cse;
  assign or_859_rmff = and_823_cse | and_733_cse;
  assign or_861_cse = and_470_cse | and_693_cse;
  assign or_1425_cse = ((while_stage_v_37 | while_stage_v_38 | while_stage_v_39)
      & while_stage_v_36) | while_stage_v_33 | while_stage_v_34 | while_stage_v_35;
  assign or_1426_cse = ((while_stage_v_41 | while_stage_v_42 | while_stage_v_43 |
      while_stage_v_37 | while_stage_v_38 | while_stage_v_39) & while_stage_v_36)
      | while_stage_v_33 | while_stage_v_34 | while_stage_v_35;
  assign mux_168_cse = MUX_s_1_2_2((~ or_357_cse), or_29_cse, while_mul_110_cmp_bawt);
  assign or_866_rmff = and_472_cse | and_735_cse;
  assign or_882_rmff = and_470_cse | and_662_cse | and_693_cse;
  assign or_888_rmff = and_574_cse | and_898_cse | and_900_cse;
  assign nl_while_acc_118_sdt = ({z_out_3 , (cfg_cos_3_beta[0]) , 1'b0}) + conv_s2s_64_67(cfg_cos_beta)
      + conv_s2s_64_67(cfg_cos_3_beta);
  assign while_acc_118_sdt = nl_while_acc_118_sdt[66:0];
  assign or_898_rmff = and_472_cse | and_662_cse | and_712_cse;
  assign or_908_rmff = and_739_cse | and_947_cse;
  assign or_914_rmff = and_898_cse | and_731_cse | and_900_cse;
  assign or_921_rmff = and_510_cse | and_689_cse;
  assign or_926_rmff = and_783_cse | and_861_cse;
  assign or_927_rmff = and_796_cse | and_840_cse;
  assign while_or_217_itm = and_515_cse | and_470_cse;
  assign while_or_224_itm = and_801_cse | and_861_cse;
  assign while_or_225_itm = and_783_cse | and_784_cse;
  assign while_or_229_itm = and_731_cse | and_576_cse;
  assign while_or_238_itm = and_828_cse | and_1003_cse;
  assign while_and_451_cse = run_wen & (~(or_dcpl_5 | or_tmp_783));
  assign while_and_312_cse = run_wen & (~((~ (fsm_output[4])) | or_dcpl_164));
  assign while_and_315_cse = run_wen & (~((~ (fsm_output[4])) | or_dcpl_173));
  assign while_and_317_cse = run_wen & (~((~ (fsm_output[4])) | or_dcpl_201));
  assign while_and_455_cse = run_wen & and_515_cse;
  assign while_and_321_cse = run_wen & (~((~ (fsm_output[4])) | or_dcpl_210));
  assign while_and_324_cse = run_wen & (~((~ (fsm_output[2])) | or_dcpl_223));
  assign while_and_326_cse = run_wen & (~((~ (fsm_output[4])) | or_dcpl_231));
  assign while_and_458_cse = run_wen & and_900_cse;
  assign while_and_460_cse = run_wen & (~ while_stage_v_24) & (fsm_output[4]);
  assign while_and_462_cse = run_wen & (~ while_stage_v_27) & (fsm_output[3]);
  assign while_and_463_cse = run_wen & (~ or_134_cse) & (fsm_output[4]);
  assign while_and_467_cse = run_wen & (~ while_stage_v_32) & (fsm_output[4]);
  assign while_and_468_cse = run_wen & (~ or_132_cse) & (fsm_output[4]);
  assign while_and_475_cse = run_wen & (~ or_dcpl_37) & (fsm_output[4]);
  assign while_and_477_cse = run_wen & (~ or_dcpl_35) & (fsm_output[4]);
  assign while_and_480_cse = run_wen & (~ or_dcpl_4) & (fsm_output[2]);
  assign while_and_482_cse = run_wen & (~ while_stage_v_39) & (fsm_output[3]);
  assign while_and_484_cse = run_wen & (~ or_131_cse) & (fsm_output[4]);
  assign while_nor_91_cse = ~(while_stage_v_42 | while_stage_v_43);
  assign while_and_493_cse = run_wen & and_947_cse;
  assign while_and_496_cse = run_wen & while_and_205_tmp & (fsm_output[3]);
  assign while_and_340_cse = run_wen & (fsm_output[2]) & while_and_134_tmp;
  assign while_and_345_cse = run_wen & (fsm_output[1]) & while_and_53_tmp;
  assign while_and_361_cse = run_wen & (fsm_output[1]) & while_and_33_tmp;
  assign while_and_500_cse = run_wen & and_712_cse;
  assign while_and_502_cse = run_wen & while_and_196_tmp & (fsm_output[3]);
  assign while_and_503_cse = run_wen & while_and_187_tmp & (fsm_output[3]);
  assign while_and_507_cse = run_wen & (~ or_133_cse) & (fsm_output[4]);
  assign while_and_518_cse = run_wen & (~ or_dcpl_43) & (fsm_output[2]);
  assign and_2051_cse = or_1421_cse & while_stage_v_42;
  assign nl_while_acc_115_nl = while_mul_cmp_2_z_mxwt_1 - while_mul_cmp_10_z_mxwt_1;
  assign while_acc_115_nl = nl_while_acc_115_nl[111:0];
  assign while_acc_115_itm_111_48_1 = readslicef_112_64_48(while_acc_115_nl);
  assign nl_while_acc_103_nl = while_mul_34_cmp_z_mxwt + while_slc_while_mul_124_256_1_itm_2
      + ({while_asn_189_itm_5 , 95'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000});
  assign while_acc_103_nl = nl_while_acc_103_nl[209:0];
  assign nl_while_acc_95_nl = (readslicef_210_162_48(while_acc_103_nl)) + while_slc_while_mul_115_cmp_z_mxwt_1_161_0_itm;
  assign while_acc_95_nl = nl_while_acc_95_nl[161:0];
  assign while_acc_95_itm_161_98_1 = readslicef_162_64_98(while_acc_95_nl);
  assign nl_while_acc_129_nl = ({while_slc_while_mul_37_cmp_z_mxwt_115_0_itm , 94'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001})
      + (~ while_mul_34_cmp_1_z_mxwt);
  assign while_acc_129_nl = nl_while_acc_129_nl[209:0];
  assign nl_while_acc_124_nl = while_acc_125_itm + ({while_acc_129_nl , 46'b0000000000000000000000000000000000000000000001});
  assign while_acc_124_nl = nl_while_acc_124_nl[255:0];
  assign while_acc_124_itm_255_192_1 = readslicef_256_64_192(while_acc_124_nl);
  assign nl_while_acc_114_nl = while_mul_cmp_4_z_mxwt_1 - while_mul_cmp_11_z_mxwt_1;
  assign while_acc_114_nl = nl_while_acc_114_nl[111:0];
  assign while_acc_114_itm_111_48_1 = readslicef_112_64_48(while_acc_114_nl);
  assign nl_while_acc_111_nl = while_mul_cmp_14_z_mxwt_2 - while_mul_cmp_1_z_mxwt_2;
  assign while_acc_111_nl = nl_while_acc_111_nl[111:0];
  assign while_acc_111_itm_111_48_1 = readslicef_112_64_48(while_acc_111_nl);
  assign while_nor_tmp = ~((while_stage_v & (~ (fsm_output[0]))) | (while_stage_v_1
      & (~ (fsm_output[0]))) | (while_stage_v_2 & (~ (fsm_output[0]))) | (while_stage_v_3
      & (and_404_cse | (or_dcpl_159 & (fsm_output[4])))) | (while_stage_v_5 & (~
      (fsm_output[0]))) | (while_stage_v_6 & (~ (fsm_output[0]))) | (while_stage_v_7
      & (and_404_cse | (or_dcpl_164 & (fsm_output[4])))) | (while_stage_v_9 & (~
      (fsm_output[0]))) | (while_stage_v_10 & (~ (fsm_output[0]))) | (while_stage_v_11
      & (and_404_cse | (or_dcpl_173 & (fsm_output[4])))) | (while_stage_v_13 & (~
      (fsm_output[0]))) | (while_stage_v_14 & (~ (fsm_output[0]))) | (while_stage_v_15
      & (and_404_cse | (or_dcpl_201 & (fsm_output[4])))) | (while_stage_v_17 & (~
      (fsm_output[0]))) | (while_stage_v_18 & (~ (fsm_output[0]))) | (while_stage_v_19
      & (and_404_cse | (or_dcpl_210 & (fsm_output[4])))) | (while_stage_v_21 & (~
      (fsm_output[0]))) | (while_stage_v_22 & (~ (fsm_output[0]))) | (while_stage_v_23
      & (and_404_cse | (or_dcpl_231 & (fsm_output[4])))) | (while_stage_v_25 & (~
      (fsm_output[0]))) | (while_stage_v_26 & (~ (fsm_output[0]))) | (while_stage_v_27
      & (and_404_cse | (or_dcpl_249 & (fsm_output[4])))) | (while_stage_v_29 & (~
      (fsm_output[0]))) | (while_stage_v_30 & (~ (fsm_output[0]))) | (while_stage_v_31
      & (and_404_cse | (or_dcpl_274 & (fsm_output[4])))) | (while_stage_v_33 & (~
      (fsm_output[0]))) | (while_stage_v_34 & (~ (fsm_output[0]))) | (while_stage_v_35
      & (and_404_cse | (or_dcpl_291 & (fsm_output[4])))) | (while_stage_v_37 & (~
      (fsm_output[0]))) | (while_stage_v_38 & (~ (fsm_output[0]))) | (while_stage_v_39
      & (and_404_cse | (or_dcpl_303 & (fsm_output[4])))) | (while_stage_v_41 & (~
      (fsm_output[0]))) | (while_stage_v_42 & (~ (fsm_output[0]))) | (while_stage_v_43
      & (and_404_cse | (or_dcpl_124 & (fsm_output[4])))));
  assign while_stage_v_7_mx2 = while_stage_v_7 & or_dcpl_164;
  assign while_stage_v_10_mx2 = while_stage_v_10 & (~ while_and_205_tmp);
  assign while_stage_v_11_mx2 = while_stage_v_11 & or_dcpl_173;
  assign while_stage_v_17_mx2 = while_stage_v_17 & or_dcpl_206;
  assign while_stage_v_18_mx2 = while_stage_v_18 & (~ while_and_187_tmp);
  assign while_stage_v_19_mx2 = while_stage_v_19 & or_dcpl_210;
  assign while_stage_v_21_mx2 = while_stage_v_21 & or_dcpl_223;
  assign nand_16_nl = ~(nor_tmp_17 & mux_269_cse);
  assign mux_270_nl = MUX_s_1_2_2((~ or_1422_cse), nand_16_nl, while_stage_v_26);
  assign while_stage_v_22_mx2 = while_stage_v_22 & (mux_270_nl | (~ while_mul_44_cmp_bawt)
      | while_stage_v_25 | while_stage_v_24 | while_stage_v_23);
  assign while_stage_v_25_mx2 = while_stage_v_25 & or_dcpl_241;
  assign while_stage_v_26_mx2 = while_stage_v_26 & (mux_tmp_75 | (~ while_mul_34_cmp_bawt)
      | while_stage_v_29 | while_stage_v_28 | while_stage_v_27);
  assign while_stage_v_33_mx2 = while_stage_v_33 & ((while_stage_v_37 & (or_tmp_111
      | nor_tmp_26)) | while_stage_v_36 | (~ while_while_mul_cmp_bawt) | while_stage_v_35
      | while_stage_v_34);
  assign while_stage_v_34_mx2 = while_stage_v_34 & (and_tmp_9 | or_dcpl_35 | (~ while_while_mul_cmp_bawt)
      | while_stage_v_35);
  assign while_stage_v_20_mx1 = while_stage_v_20 & or_dcpl_218;
  assign while_stage_v_28_mx1 = while_stage_v_28 & (((and_dcpl_285 | or_dcpl_255
      | or_dcpl_32) & while_stage_v_32) | while_stage_v_44_mx1 | (~ while_mul_110_cmp_bawt)
      | while_stage_v_31 | or_dcpl_70);
  assign while_stage_v_32_mx1 = while_stage_v_32 & (and_dcpl_285 | while_stage_v_44_mx1
      | or_dcpl_255 | or_dcpl_32);
  assign while_stage_v_44_mx1 = reg_rotate_out_Push_mioi_iswt0_cse & (~ rotate_out_Push_mioi_bawt);
  assign while_stage_v_16_mx1 = while_stage_v_16 & (~ while_and_25_tmp);
  assign while_stage_v_12_mx1 = while_stage_v_12 & (~ while_and_33_tmp);
  assign nl_while_acc_78_cse_sva_1 = conv_s2s_16_17(cfg_cos_2_beta[63:48]) + 17'b00000000000000011;
  assign while_acc_78_cse_sva_1 = nl_while_acc_78_cse_sva_1[16:0];
  assign while_and_79_tmp = while_stage_v & (~(while_stage_v_1 | while_stage_v_2
      | while_stage_v_3 | (while_stage_v_4 & (~ while_and_53_tmp)))) & rotate_in_Pop_mioi_bawt
      & while_or_33_cse_1 & while_or_34_cse_1 & while_while_or_17_cse_1 & while_or_18_cse_1
      & while_or_19_cse_1 & while_or_20_cse_1 & while_while_or_7_cse_1 & while_while_or_5_cse_1
      & (~ while_stage_v_44_mx1);
  assign while_and_53_tmp = while_stage_v_4 & (~(while_stage_v_5 | while_stage_v_6
      | while_stage_v_7 | (while_stage_v_8 & (~ while_and_43_tmp)))) & while_mul_cmp_14_bawt
      & while_mul_cmp_13_bawt & while_mul_cmp_12_bawt & while_mul_cmp_10_bawt & while_mul_cmp_9_bawt
      & while_mul_cmp_8_bawt & while_mul_cmp_bawt & while_mul_cmp_7_bawt & while_mul_cmp_6_bawt
      & while_mul_cmp_5_bawt & while_mul_cmp_4_bawt & while_mul_cmp_3_bawt & while_mul_cmp_2_bawt
      & while_mul_26_cmp_1_bawt & while_mul_108_cmp_bawt & while_mul_cmp_11_bawt
      & while_or_33_cse_1 & while_or_34_cse_1 & while_while_or_17_cse_1 & while_or_18_cse_1
      & while_or_19_cse_1 & while_or_20_cse_1 & while_while_or_7_cse_1 & while_while_or_5_cse_1
      & (~ while_stage_v_44_mx1);
  assign while_and_43_tmp = while_stage_v_8 & (~(while_stage_v_9 | while_stage_v_10
      | while_stage_v_11 | while_stage_v_12_mx1)) & while_while_or_17_cse_1 & while_or_18_cse_1
      & while_or_19_cse_1 & while_or_20_cse_1 & while_while_or_7_cse_1 & while_while_or_5_cse_1
      & (~ while_stage_v_44_mx1);
  assign while_and_33_tmp = while_stage_v_12 & (~(while_stage_v_13 | while_stage_v_14
      | while_stage_v_15 | while_stage_v_16_mx1)) & while_mul_25_cmp_bawt & while_mul_115_cmp_bawt
      & while_or_18_cse_1 & while_or_19_cse_1 & while_or_20_cse_1 & while_while_or_7_cse_1
      & while_while_or_5_cse_1 & (~ while_stage_v_44_mx1);
  assign while_and_25_tmp = while_stage_v_16 & (~(while_stage_v_17 | while_stage_v_18
      | while_stage_v_19 | while_stage_v_20_mx1)) & while_mul_70_cmp_bawt & while_while_or_7_cse_1
      & while_while_or_5_cse_1 & (~ while_stage_v_44_mx1);
  assign while_and_1_tmp = reg_rotate_out_Push_mioi_iswt0_cse & rotate_out_Push_mioi_bawt;
  assign while_or_33_cse_1 = while_mul_25_cmp_bawt | (~ while_stage_v_12_mx1);
  assign while_or_34_cse_1 = while_mul_115_cmp_bawt | (~ while_stage_v_12_mx1);
  assign while_while_or_17_cse_1 = while_mul_70_cmp_bawt | (~ while_stage_v_16_mx1);
  assign while_or_18_cse_1 = while_mul_44_cmp_bawt | (~ while_stage_v_20_mx1);
  assign while_or_19_cse_1 = while_mul_34_cmp_1_bawt | (~ while_stage_v_20_mx1);
  assign while_or_20_cse_1 = while_mul_67_cmp_bawt | (~ while_stage_v_20_mx1);
  assign while_while_or_7_cse_1 = while_mul_110_cmp_bawt | (~ while_stage_v_28_mx1);
  assign while_while_or_5_cse_1 = while_while_mul_cmp_bawt | (~ while_stage_v_32_mx1);
  assign while_and_154_tmp = while_stage_v_1 & (~(while_stage_v_2 | while_stage_v_3
      | while_stage_v_4 | (while_stage_v_5 & (~ while_and_134_tmp)))) & while_while_or_45_cse_1
      & while_while_or_42_cse_1 & while_while_or_39_cse_1 & while_while_or_35_cse_1;
  assign mux_219_nl = MUX_s_1_2_2(or_tmp_115, (~ mux_tmp_64), while_mul_70_cmp_bawt);
  assign or_456_nl = or_tmp | mux_66_cse;
  assign mux_220_nl = MUX_s_1_2_2(mux_219_nl, or_456_nl, while_stage_v_13);
  assign while_and_134_tmp = while_stage_v_5 & (~(while_stage_v_6 | while_stage_v_7
      | while_stage_v_8 | (while_stage_v_9 & (mux_220_nl | while_stage_v_12 | while_stage_v_11
      | while_stage_v_10)))) & while_mul_cmp_bawt & while_mul_cmp_5_bawt & while_mul_cmp_10_bawt
      & while_mul_cmp_9_bawt & while_mul_cmp_8_bawt & while_mul_cmp_1_bawt & while_mul_cmp_14_bawt
      & while_mul_cmp_13_bawt & while_mul_cmp_12_bawt & while_mul_cmp_4_bawt & while_mul_cmp_3_bawt
      & while_mul_cmp_7_bawt & while_mul_cmp_6_bawt & while_mul_36_cmp_bawt & while_mul_cmp_2_bawt
      & while_while_or_45_cse_1 & while_while_or_42_cse_1 & while_while_or_39_cse_1
      & while_while_or_35_cse_1;
  assign while_while_or_45_cse_1 = while_mul_70_cmp_bawt | (~ while_stage_v_17_mx2);
  assign while_while_or_42_cse_1 = while_mul_34_cmp_1_bawt | (~ while_stage_v_21_mx2);
  assign while_while_or_39_cse_1 = while_mul_34_cmp_bawt | (~ while_stage_v_25_mx2);
  assign while_while_or_35_cse_1 = while_while_mul_cmp_bawt | (~ while_stage_v_33_mx2);
  assign while_and_228_tmp = while_stage_v_2 & (~(while_stage_v_3 | while_stage_v_4
      | while_stage_v_5 | (while_stage_v_6 & (~ while_and_216_tmp)))) & (while_mul_37_cmp_bawt
      | (~ while_stage_v_10_mx2)) & (while_mul_77_cmp_bawt | (~ while_stage_v_10_mx2))
      & while_or_165_cse_1 & while_or_166_cse_1 & while_or_167_cse_1 & while_or_168_cse_1
      & while_or_169_cse_1 & while_while_or_68_cse_1 & while_while_or_66_cse_1 &
      while_while_or_62_cse_1;
  assign while_and_216_tmp = while_stage_v_6 & (~(while_stage_v_7 | while_stage_v_8
      | while_stage_v_9 | while_stage_v_10_mx2)) & while_mul_26_cmp_bawt & while_or_165_cse_1
      & while_or_166_cse_1 & while_or_167_cse_1 & while_or_168_cse_1 & while_or_169_cse_1
      & while_while_or_68_cse_1 & while_while_or_66_cse_1 & while_while_or_62_cse_1;
  assign while_and_205_tmp = while_stage_v_10 & (~(while_stage_v_11 | while_stage_v_12
      | while_stage_v_13 | (while_stage_v_14 & (~ while_and_196_tmp)))) & while_mul_37_cmp_bawt
      & while_mul_77_cmp_bawt & while_or_165_cse_1 & while_or_166_cse_1 & while_or_167_cse_1
      & while_or_168_cse_1 & while_or_169_cse_1 & while_while_or_68_cse_1 & while_while_or_66_cse_1
      & while_while_or_62_cse_1;
  assign while_and_196_tmp = while_stage_v_14 & (~(while_stage_v_15 | while_stage_v_16
      | while_stage_v_17 | while_stage_v_18_mx2)) & while_while_or_68_cse_1 & while_while_or_66_cse_1
      & while_while_or_62_cse_1;
  assign while_and_187_tmp = while_stage_v_18 & (~(while_stage_v_19 | while_stage_v_20
      | while_stage_v_21 | while_stage_v_22_mx2)) & while_mul_73_cmp_bawt & while_mul_67_cmp_bawt
      & while_mul_111_cmp_bawt & while_mul_70_cmp_bawt & while_mul_76_cmp_bawt &
      while_while_or_66_cse_1 & while_while_or_62_cse_1;
  assign while_or_165_cse_1 = while_mul_73_cmp_bawt | (~ while_stage_v_18_mx2);
  assign while_or_166_cse_1 = while_mul_67_cmp_bawt | (~ while_stage_v_18_mx2);
  assign while_or_167_cse_1 = while_mul_111_cmp_bawt | (~ while_stage_v_18_mx2);
  assign while_or_168_cse_1 = while_mul_70_cmp_bawt | (~ while_stage_v_18_mx2);
  assign while_or_169_cse_1 = while_mul_76_cmp_bawt | (~ while_stage_v_18_mx2);
  assign while_while_or_68_cse_1 = while_mul_44_cmp_bawt | (~ while_stage_v_22_mx2);
  assign while_while_or_66_cse_1 = while_mul_34_cmp_bawt | (~ while_stage_v_26_mx2);
  assign while_while_or_62_cse_1 = while_while_mul_cmp_bawt | (~ while_stage_v_34_mx2);
  assign while_while_or_87_cse_1 = while_mul_37_cmp_bawt | (~ while_stage_v_11_mx2);
  assign while_or_207_cse_1 = while_mul_67_cmp_bawt | (~ while_stage_v_19_mx2);
  assign while_or_208_cse_1 = while_mul_73_cmp_bawt | (~ while_stage_v_19_mx2);
  assign nl_while_acc_130_nl = while_mul_cmp_4_z_mxwt_2 + while_mul_cmp_3_z_mxwt_2;
  assign while_acc_130_nl = nl_while_acc_130_nl[111:0];
  assign while_acc_130_itm_111_48_1 = readslicef_112_64_48(while_acc_130_nl);
  assign or_dcpl = (~ reg_rotate_out_Push_mioi_iswt0_cse) | rotate_out_Push_mioi_bawt;
  assign or_dcpl_2 = while_stage_v_41 | while_stage_v_42 | while_stage_v_43;
  assign or_dcpl_4 = while_stage_v_39 | while_stage_v_38;
  assign or_dcpl_5 = or_dcpl_4 | while_stage_v_37;
  assign or_dcpl_6 = ~(or_dcpl_2 & while_stage_v_40);
  assign or_dcpl_8 = while_stage_v_38 | while_stage_v_37;
  assign or_tmp = while_stage_v_14 | while_stage_v_15 | while_stage_v_16;
  assign or_29_cse = (~ while_stage_v_32) | while_while_mul_cmp_bawt;
  assign or_dcpl_32 = while_stage_v_34 | while_stage_v_33;
  assign or_dcpl_33 = or_dcpl_32 | while_stage_v_32;
  assign or_dcpl_34 = while_stage_v_33 | while_stage_v_32;
  assign or_dcpl_35 = while_stage_v_37 | while_stage_v_36;
  assign or_dcpl_37 = or_dcpl_8 | while_stage_v_36;
  assign and_dcpl_13 = while_while_mul_cmp_bawt & (~ while_stage_v_35);
  assign or_dcpl_43 = while_stage_v_35 | while_stage_v_34;
  assign and_dcpl_25 = ~(while_stage_v_34 | while_stage_v_33);
  assign or_1420_cse = while_stage_v_42 | while_stage_v_43 | reg_rotate_out_Push_mioi_iswt0_cse;
  assign or_tmp_26 = while_stage_v_31 | while_stage_v_32 | while_stage_v_33;
  assign and_2044_cse = while_stage_v_43 & reg_rotate_out_Push_mioi_iswt0_cse;
  assign or_dcpl_66 = while_stage_v_25 | while_stage_v_26;
  assign or_tmp_49 = while_stage_v_39 | while_stage_v_40;
  assign or_tmp_55 = while_stage_v_32 | while_stage_v_33 | while_stage_v_34;
  assign or_dcpl_70 = while_stage_v_30 | while_stage_v_29;
  assign or_dcpl_72 = while_stage_v_42 | while_stage_v_40;
  assign or_dcpl_73 = and_2044_cse | while_stage_v_41;
  assign or_131_cse = or_dcpl_73 | or_dcpl_72;
  assign and_dcpl_37 = or_131_cse & while_stage_v_39;
  assign or_132_cse = and_dcpl_37 | or_dcpl_37;
  assign and_dcpl_38 = or_132_cse & while_stage_v_35;
  assign or_133_cse = and_dcpl_38 | or_dcpl_33;
  assign and_dcpl_39 = or_133_cse & while_stage_v_31;
  assign or_1421_cse = while_stage_v_43 | reg_rotate_out_Push_mioi_iswt0_cse;
  assign or_1422_cse = (~ while_stage_v_34) | while_while_mul_cmp_bawt;
  assign and_dcpl_56 = ~(while_stage_v_37 | while_stage_v_36);
  assign and_dcpl_72 = ~(while_stage_v_42 | while_stage_v_40);
  assign and_dcpl_74 = ~(and_2044_cse | while_stage_v_41);
  assign and_dcpl_80 = ~(while_stage_v_25 | while_stage_v_26);
  assign or_dcpl_109 = ~((~(and_dcpl_74 & and_dcpl_72)) & while_stage_v_39);
  assign or_134_cse = and_dcpl_39 | or_dcpl_70 | while_stage_v_28;
  assign and_47_cse = or_134_cse & while_stage_v_27;
  assign or_dcpl_124 = (~ while_stage_v_43) | reg_rotate_out_Push_mioi_iswt0_cse;
  assign or_dcpl_125 = (fsm_output[0]) | (fsm_output[4]);
  assign or_tmp_103 = (~ while_mul_34_cmp_1_bawt) | while_stage_v_22 | while_stage_v_23
      | while_stage_v_24;
  assign or_tmp_105 = while_while_mul_cmp_bawt | (~ while_stage_v_33);
  assign or_tmp_106 = (~(while_mul_34_cmp_bawt | (~ while_stage_v_25))) | while_stage_v_21
      | (~ or_tmp_105);
  assign or_tmp_107 = while_stage_v_26 | while_stage_v_27 | while_stage_v_28;
  assign nor_tmp_14 = while_stage_v_25 & while_stage_v_21;
  assign or_tmp_108 = nor_tmp_14 | (~ or_tmp_105);
  assign or_tmp_109 = while_stage_v_30 | while_stage_v_31 | while_stage_v_32;
  assign or_tmp_110 = while_stage_v_34 | while_stage_v_35 | while_stage_v_36;
  assign mux_tmp_53 = MUX_s_1_2_2((~ or_tmp_105), while_stage_v_33, nor_tmp_14);
  assign or_tmp_111 = while_stage_v_38 | while_stage_v_39 | while_stage_v_40;
  assign or_tmp_113 = while_stage_v_25 | (~ or_tmp_105);
  assign mux_63_nl = MUX_s_1_2_2((~ or_tmp_113), or_tmp_105, while_mul_34_cmp_bawt);
  assign mux_tmp_64 = MUX_s_1_2_2((~ or_tmp_106), mux_63_nl, while_mul_34_cmp_1_bawt);
  assign or_tmp_115 = while_stage_v_17 | (~ mux_tmp_64);
  assign and_2054_nl = or_1420_cse & while_stage_v_41 & while_stage_v_25 & while_stage_v_21;
  assign mux_54_nl = MUX_s_1_2_2((~ or_tmp_105), while_stage_v_33, and_2054_nl);
  assign mux_55_nl = MUX_s_1_2_2(mux_54_nl, mux_tmp_53, or_tmp_111);
  assign mux_56_nl = MUX_s_1_2_2((~ or_tmp_105), mux_55_nl, while_stage_v_37);
  assign mux_57_nl = MUX_s_1_2_2(mux_56_nl, mux_tmp_53, or_tmp_110);
  assign mux_58_nl = MUX_s_1_2_2(mux_57_nl, or_tmp_108, or_tmp_109);
  assign mux_59_nl = MUX_s_1_2_2((~ or_tmp_105), mux_58_nl, while_stage_v_29);
  assign mux_60_nl = MUX_s_1_2_2(mux_59_nl, or_tmp_108, or_tmp_107);
  assign mux_61_nl = MUX_s_1_2_2(or_tmp_113, mux_60_nl, while_mul_34_cmp_bawt);
  assign mux_62_nl = MUX_s_1_2_2(mux_61_nl, or_tmp_106, or_tmp_103);
  assign or_244_nl = while_stage_v_18 | while_stage_v_19 | while_stage_v_20 | mux_62_nl;
  assign mux_65_nl = MUX_s_1_2_2((~ mux_tmp_64), or_244_nl, while_stage_v_17);
  assign mux_66_cse = MUX_s_1_2_2(or_tmp_115, mux_65_nl, while_mul_70_cmp_bawt);
  assign mux_67_nl = MUX_s_1_2_2((~ or_tmp_115), mux_tmp_64, while_mul_70_cmp_bawt);
  assign nor_108_nl = ~(or_tmp | mux_66_cse);
  assign mux_68_nl = MUX_s_1_2_2(mux_67_nl, nor_108_nl, while_stage_v_13);
  assign and_dcpl_112 = mux_68_nl & (~(while_stage_v_12 | while_stage_v_11)) & while_stage_v_9
      & (~ while_stage_v_10);
  assign nor_tmp_17 = ~(while_stage_v_27 | while_stage_v_28 | while_stage_v_29 |
      (~ while_mul_34_cmp_bawt));
  assign or_260_itm = or_tmp_49 | and_2051_cse | while_stage_v_41;
  assign and_tmp_9 = while_stage_v_38 & or_260_itm;
  assign and_tmp_10 = while_stage_v_34 & (while_stage_v_35 | (~ while_while_mul_cmp_bawt)
      | while_stage_v_36 | while_stage_v_37 | and_tmp_9);
  assign nor_82_nl = ~(while_while_mul_cmp_bawt | (~ while_stage_v_34));
  assign or_262_nl = or_tmp_26 | and_tmp_10;
  assign mux_tmp_75 = MUX_s_1_2_2(nor_82_nl, or_262_nl, while_stage_v_30);
  assign or_tmp_132 = (~ while_mul_37_cmp_bawt) | while_stage_v_12 | while_stage_v_13
      | while_stage_v_14;
  assign or_tmp_133 = while_stage_v_16 | while_stage_v_17 | while_stage_v_18;
  assign or_tmp_135 = while_stage_v_24 | while_stage_v_25 | while_stage_v_26;
  assign or_tmp_136 = while_stage_v_28 | while_stage_v_29 | while_stage_v_30;
  assign or_tmp_138 = while_stage_v_36 | while_stage_v_37 | while_stage_v_38;
  assign or_tmp_139 = and_2044_cse | while_stage_v_40 | while_stage_v_41 | while_stage_v_42;
  assign nand_45_cse = ~(while_mul_73_cmp_bawt & while_mul_67_cmp_bawt);
  assign or_tmp_140 = ~(nand_45_cse & while_stage_v_19);
  assign or_tmp_153 = (~ while_stage_v_25) | while_mul_34_cmp_bawt;
  assign or_290_cse = (~ or_tmp_153) | while_stage_v_21 | (~ or_tmp_105);
  assign mux_101_cse = MUX_s_1_2_2((~ or_tmp_105), while_stage_v_33, while_stage_v_21);
  assign nor_tmp_26 = or_1420_cse & while_stage_v_41;
  assign nor_111_nl = ~((~ while_stage_v_33) | while_while_mul_cmp_bawt);
  assign or_306_nl = or_tmp_109 | while_stage_v_33_mx2;
  assign mux_tmp_113 = MUX_s_1_2_2(nor_111_nl, or_306_nl, while_stage_v_29);
  assign and_dcpl_146 = ~(while_stage_v_38 | while_stage_v_37);
  assign or_dcpl_135 = ~((~(or_dcpl_109 & and_dcpl_146 & (~ while_stage_v_36))) &
      while_stage_v_35);
  assign nor_tmp_27 = ~(while_stage_v_22 | while_stage_v_23 | while_stage_v_24 |
      (~ while_mul_34_cmp_1_bawt));
  assign nor_tmp_28 = ~(while_stage_v_26 | while_stage_v_27 | while_stage_v_28 |
      (~ while_mul_34_cmp_bawt));
  assign or_tmp_197 = while_stage_v_11 | (~ or_tmp_140);
  assign mux_147_cse = MUX_s_1_2_2(or_tmp_197, (~ or_tmp_140), while_mul_37_cmp_bawt);
  assign or_dcpl_138 = while_nor_23_cse | (~ while_stage_v_42);
  assign or_dcpl_139 = ~((~(or_dcpl_138 & (~(while_stage_v_41 | while_stage_v_40
      | while_stage_v_39)))) & while_stage_v_38);
  assign and_dcpl_174 = (~ while_stage_v_22) & while_mul_34_cmp_1_bawt;
  assign or_tmp_207 = while_stage_v_25 | while_stage_v_26 | while_stage_v_27;
  assign or_357_cse = while_stage_v_28 | (~ or_29_cse);
  assign and_dcpl_190 = ~(while_stage_v_39 | while_stage_v_38);
  assign or_dcpl_143 = ~((~(or_dcpl_6 & and_dcpl_190 & (~ while_stage_v_37))) & while_stage_v_36);
  assign and_dcpl_211 = ~(while_stage_v_40 | while_stage_v_39);
  assign or_dcpl_145 = ~((~(while_nor_91_cse & (~ reg_rotate_out_Push_mioi_iswt0_cse)))
      & while_stage_v_41);
  assign and_dcpl_217 = ~(while_stage_v_30 | while_stage_v_29);
  assign or_dcpl_147 = ~((~(or_dcpl_135 & and_dcpl_25 & (~ while_stage_v_32))) &
      while_stage_v_31);
  assign and_dcpl_223 = (~ while_stage_v_36) & while_while_mul_cmp_bawt;
  assign or_dcpl_148 = ~((~(or_dcpl_145 & and_dcpl_211 & (~ while_stage_v_38))) &
      while_stage_v_37);
  assign and_dcpl_232 = while_mul_67_cmp_bawt & while_mul_73_cmp_bawt & (~ while_stage_v_22);
  assign or_dcpl_151 = ~((~(or_dcpl_147 & and_dcpl_217 & (~ while_stage_v_28))) &
      while_stage_v_27);
  assign or_dcpl_152 = ~((~(or_dcpl_151 & and_dcpl_80 & (~ while_stage_v_24))) &
      while_stage_v_23);
  assign nor_tmp_44 = ~(while_stage_v_29 | while_stage_v_30 | while_stage_v_31 |
      (~ while_mul_110_cmp_bawt));
  assign mux_186_nl = MUX_s_1_2_2((~ or_tmp_140), or_328_cse, while_stage_v_11);
  assign mux_187_nl = MUX_s_1_2_2(or_tmp_197, mux_186_nl, while_mul_37_cmp_bawt);
  assign mux_189_nl = MUX_s_1_2_2(mux_147_cse, mux_187_nl, while_stage_v_15);
  assign or_333_nl = while_stage_v_12 | while_stage_v_13 | while_stage_v_14;
  assign mux_190_nl = MUX_s_1_2_2(mux_189_nl, or_tmp_197, or_333_nl);
  assign or_420_nl = (~ while_mul_36_cmp_bawt) | while_stage_v_8 | while_stage_v_9
      | while_stage_v_10 | mux_190_nl;
  assign mux_191_cse = MUX_s_1_2_2(mux_147_cse, or_420_nl, while_stage_v_7);
  assign or_dcpl_159 = mux_191_cse | (~ while_stage_v_3) | while_stage_v_4 | while_stage_v_5
      | while_stage_v_6;
  assign or_436_nl = or_tmp_132 | mux_132_cse;
  assign mux_204_nl = MUX_s_1_2_2((~ or_tmp_140), or_436_nl, while_stage_v_11);
  assign or_dcpl_164 = mux_204_nl | while_stage_v_9 | while_stage_v_10 | while_stage_v_8
      | (~(while_mul_36_cmp_bawt & while_stage_v_7));
  assign or_dcpl_173 = mux_132_cse | while_stage_v_14 | while_stage_v_13 | while_stage_v_12
      | (~(while_mul_37_cmp_bawt & while_stage_v_11));
  assign nand_68_cse = ~(or_tmp_153 & or_tmp_105);
  assign mux_243_nl = MUX_s_1_2_2(or_290_cse, nand_68_cse, while_mul_34_cmp_1_bawt);
  assign and_2060_nl = or_1420_cse & while_stage_v_41 & while_stage_v_21;
  assign mux_234_nl = MUX_s_1_2_2((~ or_tmp_105), while_stage_v_33, and_2060_nl);
  assign mux_235_nl = MUX_s_1_2_2(mux_234_nl, mux_101_cse, or_tmp_111);
  assign mux_236_nl = MUX_s_1_2_2((~ or_tmp_105), mux_235_nl, while_stage_v_37);
  assign mux_237_nl = MUX_s_1_2_2(mux_236_nl, mux_101_cse, or_tmp_110);
  assign or_484_nl = while_stage_v_21 | (~ or_tmp_105);
  assign mux_238_nl = MUX_s_1_2_2(mux_237_nl, or_484_nl, or_tmp_109);
  assign mux_239_nl = MUX_s_1_2_2(or_tmp_105, (~ mux_238_nl), while_stage_v_29);
  assign and_2061_nl = while_mul_34_cmp_bawt & mux_239_nl;
  assign nor_125_nl = ~((~ while_mul_34_cmp_bawt) | while_stage_v_21 | (~ or_tmp_105));
  assign mux_240_nl = MUX_s_1_2_2(and_2061_nl, nor_125_nl, or_tmp_107);
  assign mux_241_nl = MUX_s_1_2_2(or_tmp_105, mux_240_nl, while_stage_v_25);
  assign mux_242_nl = MUX_s_1_2_2(mux_241_nl, (~ or_290_cse), or_tmp_103);
  assign nand_12_nl = ~((~(while_stage_v_18 | while_stage_v_19 | while_stage_v_20
      | (~ while_mul_70_cmp_bawt))) & mux_242_nl);
  assign mux_244_cse = MUX_s_1_2_2(mux_243_nl, nand_12_nl, while_stage_v_17);
  assign or_dcpl_183 = nand_45_cse | while_stage_v_22;
  assign and_dcpl_274 = (and_47_cse | or_dcpl_66 | while_stage_v_24) & while_stage_v_23;
  assign or_dcpl_201 = ((and_dcpl_274 | or_dcpl_183 | while_stage_v_21 | while_stage_v_20)
      & while_stage_v_19) | while_stage_v_18 | while_stage_v_17 | while_stage_v_16
      | (~ while_stage_v_15);
  assign mux_245_nl = MUX_s_1_2_2((~ or_tmp_105), while_stage_v_33, nor_tmp_26);
  assign mux_246_nl = MUX_s_1_2_2(mux_245_nl, while_stage_v_33, or_tmp_111);
  assign mux_247_nl = MUX_s_1_2_2((~ or_tmp_105), mux_246_nl, while_stage_v_37);
  assign mux_248_nl = MUX_s_1_2_2(mux_247_nl, while_stage_v_33, or_tmp_110);
  assign nor_126_nl = ~(or_tmp_109 | mux_248_nl);
  assign mux_249_cse = MUX_s_1_2_2(or_tmp_105, nor_126_nl, while_stage_v_29);
  assign and_2063_nl = nor_tmp_28 & mux_249_cse;
  assign mux_250_cse = MUX_s_1_2_2(or_tmp_105, and_2063_nl, while_stage_v_25);
  assign nand_14_nl = ~(nor_tmp_27 & mux_250_cse);
  assign mux_251_nl = MUX_s_1_2_2(nand_68_cse, nand_14_nl, while_stage_v_21);
  assign or_dcpl_206 = mux_251_nl | while_stage_v_19 | while_stage_v_20 | while_stage_v_18
      | (~(while_mul_70_cmp_bawt & while_stage_v_17));
  assign or_dcpl_210 = and_dcpl_274 | or_dcpl_183 | while_stage_v_21 | (~ while_stage_v_19)
      | while_stage_v_20;
  assign mux_253_nl = MUX_s_1_2_2((~ or_29_cse), while_stage_v_32, or_1425_cse);
  assign mux_252_nl = MUX_s_1_2_2((~ or_29_cse), while_stage_v_32, or_1426_cse);
  assign mux_254_cse = MUX_s_1_2_2(mux_253_nl, mux_252_nl, while_stage_v_40);
  assign or_544_nl = while_stage_v_29 | while_stage_v_30 | while_stage_v_31 | mux_254_cse;
  assign mux_255_nl = MUX_s_1_2_2((~ or_29_cse), or_544_nl, while_stage_v_28);
  assign mux_256_cse = MUX_s_1_2_2(or_357_cse, mux_255_nl, while_mul_110_cmp_bawt);
  assign mux_257_nl = MUX_s_1_2_2(or_357_cse, (~ or_29_cse), while_mul_110_cmp_bawt);
  assign or_546_nl = or_tmp_207 | mux_256_cse;
  assign mux_258_nl = MUX_s_1_2_2(mux_257_nl, or_546_nl, while_stage_v_24);
  assign or_dcpl_218 = mux_258_nl | while_stage_v_44_mx1 | (~ while_mul_44_cmp_bawt)
      | (~ while_mul_67_cmp_bawt) | while_stage_v_22 | (~ while_mul_34_cmp_1_bawt)
      | while_stage_v_23 | while_stage_v_21 | (~ while_stage_v_20);
  assign nand_15_nl = ~(nor_tmp_28 & mux_249_cse);
  assign mux_264_nl = MUX_s_1_2_2((~ or_tmp_105), nand_15_nl, while_stage_v_25);
  assign or_dcpl_223 = mux_264_nl | while_stage_v_22 | (~ while_mul_34_cmp_1_bawt)
      | while_stage_v_24 | while_stage_v_23 | (~ while_stage_v_21);
  assign mux_265_nl = MUX_s_1_2_2((~ or_1422_cse), while_stage_v_34, and_2051_cse);
  assign or_90_nl = while_stage_v_39 | while_stage_v_40 | while_stage_v_41;
  assign mux_266_nl = MUX_s_1_2_2(mux_265_nl, while_stage_v_34, or_90_nl);
  assign mux_267_nl = MUX_s_1_2_2((~ or_1422_cse), mux_266_nl, while_stage_v_38);
  assign or_166_nl = while_stage_v_35 | while_stage_v_36 | while_stage_v_37;
  assign mux_268_nl = MUX_s_1_2_2(mux_267_nl, while_stage_v_34, or_166_nl);
  assign nor_128_nl = ~(or_tmp_26 | mux_268_nl);
  assign mux_269_cse = MUX_s_1_2_2(or_1422_cse, nor_128_nl, while_stage_v_30);
  assign or_dcpl_231 = and_47_cse | or_dcpl_66 | while_stage_v_24 | (~ while_stage_v_23);
  assign or_dcpl_241 = mux_tmp_113 | (~ while_mul_34_cmp_bawt) | while_stage_v_28
      | while_stage_v_26 | while_stage_v_27 | (~ while_stage_v_25);
  assign or_dcpl_249 = and_dcpl_39 | or_dcpl_70 | while_stage_v_28 | (~ while_stage_v_27);
  assign or_dcpl_255 = (~ while_while_mul_cmp_bawt) | while_stage_v_35;
  assign and_dcpl_284 = or_dcpl_2 & while_stage_v_40;
  assign and_dcpl_285 = (and_dcpl_284 | or_dcpl_5) & while_stage_v_36;
  assign or_dcpl_274 = and_dcpl_38 | or_dcpl_32 | while_stage_v_32 | (~ while_stage_v_31);
  assign or_dcpl_291 = and_dcpl_37 | or_dcpl_8 | while_stage_v_36 | (~ while_stage_v_35);
  assign or_dcpl_303 = or_dcpl_73 | or_dcpl_72 | (~ while_stage_v_39);
  assign and_404_cse = ~((fsm_output[0]) | (fsm_output[4]));
  assign or_tmp_372 = (fsm_output[4:3]!=2'b00);
  assign and_467_cse = and_dcpl_74 & and_dcpl_72 & while_stage_v_39 & (fsm_output[4]);
  assign and_470_cse = while_and_205_tmp & (fsm_output[3]);
  assign and_472_cse = while_and_196_tmp & (fsm_output[3]);
  assign and_475_cse = while_and_79_tmp & (fsm_output[1]);
  assign and_476_cse = while_and_154_tmp & (fsm_output[2]);
  assign and_479_cse = while_and_134_tmp & (fsm_output[2]);
  assign and_478_cse = while_and_53_tmp & (fsm_output[1]);
  assign or_tmp_389 = (fsm_output[0]) | (fsm_output[3]);
  assign or_tmp_394 = (fsm_output[0]) | (fsm_output[2]);
  assign and_510_cse = while_and_216_tmp & (fsm_output[3]);
  assign and_515_cse = and_dcpl_112 & (fsm_output[2]);
  assign or_731_cse_1 = (fsm_output[2:1]!=2'b00);
  assign and_2071_nl = nor_tmp_17 & mux_269_cse;
  assign mux_74_nl = MUX_s_1_2_2(or_1422_cse, and_2071_nl, while_stage_v_26);
  assign and_574_cse = mux_74_nl & while_stage_v_22 & while_mul_44_cmp_bawt & (~
      while_stage_v_25) & (~(while_stage_v_24 | while_stage_v_23)) & (fsm_output[3]);
  assign and_576_cse = (~ mux_tmp_75) & while_mul_34_cmp_bawt & (~ while_stage_v_29)
      & (~ while_stage_v_28) & while_stage_v_26 & (~ while_stage_v_27) & (fsm_output[3]);
  assign or_tmp_467 = (fsm_output[1:0]!=2'b00);
  assign and_659_cse = while_and_43_tmp & (fsm_output[1]);
  assign and_662_cse = while_and_33_tmp & (fsm_output[1]);
  assign mux_88_nl = MUX_s_1_2_2(or_tmp_140, nor_159_cse, while_stage_v_11);
  assign and_689_cse = mux_88_nl & (~(while_stage_v_9 | while_stage_v_10 | while_stage_v_8))
      & while_mul_36_cmp_bawt & while_stage_v_7 & (fsm_output[4]);
  assign nor_135_nl = ~(or_tmp_133 | mux_131_cse);
  assign mux_100_nl = MUX_s_1_2_2(or_tmp_140, nor_135_nl, while_stage_v_15);
  assign and_693_cse = mux_100_nl & (~(while_stage_v_14 | while_stage_v_13 | while_stage_v_12))
      & while_mul_37_cmp_bawt & while_stage_v_11 & (fsm_output[4]);
  assign or_tmp_490 = (fsm_output[2]) | (fsm_output[4]);
  assign and_712_cse = (~ mux_244_cse) & (~(while_stage_v_16 | while_stage_v_15))
      & (~ while_stage_v_14) & while_stage_v_13 & (fsm_output[2]);
  assign or_tmp_494 = while_and_228_tmp & (fsm_output[3]);
  assign and_731_cse = (~ mux_tmp_113) & while_mul_34_cmp_bawt & (~ while_stage_v_28)
      & (~ while_stage_v_26) & (~ while_stage_v_27) & while_stage_v_25 & (fsm_output[2]);
  assign and_733_cse = or_dcpl_135 & and_dcpl_25 & (~ while_stage_v_32) & while_stage_v_31
      & (fsm_output[4]);
  assign and_735_cse = while_and_25_tmp & (fsm_output[1]);
  assign and_2076_nl = or_tmp_153 & or_tmp_105;
  assign and_2077_nl = nor_tmp_27 & mux_250_cse;
  assign mux_120_nl = MUX_s_1_2_2(and_2076_nl, and_2077_nl, while_stage_v_21);
  assign and_739_cse = mux_120_nl & (~(while_stage_v_19 | while_stage_v_20 | while_stage_v_18))
      & while_mul_70_cmp_bawt & while_stage_v_17 & (fsm_output[2]);
  assign and_759_cse = (~ mux_191_cse) & while_stage_v_3 & (~ while_stage_v_4) &
      (~(while_stage_v_5 | while_stage_v_6)) & (fsm_output[4]);
  assign or_tmp_523 = (~((~(or_dcpl_139 & and_dcpl_56 & and_dcpl_13)) & while_stage_v_34))
      & (~(while_stage_v_33 | while_stage_v_32)) & (~ while_stage_v_31) & while_stage_v_30
      & (fsm_output[3]);
  assign and_784_cse = mux_250_cse & and_dcpl_174 & (~ while_stage_v_24) & (~ while_stage_v_23)
      & while_stage_v_21 & (fsm_output[2]);
  assign nor_147_nl = ~(or_tmp_207 | mux_256_cse);
  assign mux_157_nl = MUX_s_1_2_2(mux_168_cse, nor_147_nl, while_stage_v_24);
  assign and_783_cse = mux_157_nl & or_dcpl & while_mul_44_cmp_bawt & while_mul_67_cmp_bawt
      & and_dcpl_174 & (~(while_stage_v_23 | while_stage_v_21)) & while_stage_v_20
      & (fsm_output[1]);
  assign and_796_cse = (~((~(or_dcpl_143 & and_dcpl_13 & and_dcpl_25)) & while_stage_v_32))
      & or_dcpl & while_mul_110_cmp_bawt & (~ while_stage_v_31) & (~ while_stage_v_30)
      & (~ while_stage_v_29) & while_stage_v_28 & (fsm_output[1]);
  assign and_799_cse = or_dcpl_6 & or_dcpl & and_dcpl_190 & (~ while_stage_v_37)
      & while_stage_v_36 & (fsm_output[1]);
  assign and_801_cse = while_and_187_tmp & (fsm_output[3]);
  assign and_823_cse = or_dcpl_139 & and_dcpl_56 & while_while_mul_cmp_bawt & (~
      while_stage_v_35) & while_stage_v_34 & (fsm_output[3]);
  assign and_828_cse = or_dcpl_145 & and_dcpl_211 & (~ while_stage_v_38) & while_stage_v_37
      & (fsm_output[2]);
  assign and_827_cse = or_dcpl & (~ while_stage_v_41) & while_nor_91_cse & while_stage_v_40
      & (fsm_output[1]);
  assign or_tmp_547 = (fsm_output[1]) | (fsm_output[4]);
  assign and_840_cse = or_dcpl_147 & and_dcpl_217 & (~ while_stage_v_28) & while_stage_v_27
      & (fsm_output[4]);
  assign and_842_cse = or_dcpl_148 & and_dcpl_223 & (~ while_stage_v_35) & (~ while_stage_v_34)
      & while_stage_v_33 & (fsm_output[2]);
  assign and_861_cse = or_dcpl_152 & and_dcpl_232 & (~ while_stage_v_21) & while_stage_v_19
      & (~ while_stage_v_20) & (fsm_output[4]);
  assign or_tmp_565 = while_stage_v_41 & (~ while_stage_v_42) & while_nor_23_cse
      & (fsm_output[2]);
  assign and_900_cse = or_dcpl_151 & and_dcpl_80 & (~ while_stage_v_24) & while_stage_v_23
      & (fsm_output[4]);
  assign and_2084_nl = nor_tmp_44 & (~ mux_254_cse);
  assign mux_174_nl = MUX_s_1_2_2(or_29_cse, and_2084_nl, while_stage_v_28);
  assign and_898_cse = mux_174_nl & or_dcpl & (~(while_stage_v_26 | while_stage_v_27))
      & (~ while_stage_v_25) & while_stage_v_24 & (fsm_output[1]);
  assign and_902_cse = or_dcpl_143 & or_dcpl & and_dcpl_13 & (~ while_stage_v_34)
      & (~ while_stage_v_33) & while_stage_v_32 & (fsm_output[1]);
  assign and_947_cse = (~((~(or_dcpl_152 & and_dcpl_232 & (~(while_stage_v_21 | while_stage_v_20))))
      & while_stage_v_19)) & (~(while_stage_v_18 | while_stage_v_17)) & (~ while_stage_v_16)
      & while_stage_v_15 & (fsm_output[4]);
  assign and_1003_cse = or_dcpl_138 & (~ while_stage_v_41) & and_dcpl_211 & while_stage_v_38
      & (fsm_output[3]);
  assign or_tmp_627 = while_and_1_tmp & (fsm_output[1]);
  assign and_1032_cse = ~((fsm_output[1]) | (fsm_output[4]));
  assign or_tmp_737 = (~((~(or_dcpl_148 & and_dcpl_223 & (~(while_stage_v_35 | while_stage_v_34))))
      & while_stage_v_33)) & (~(while_stage_v_32 | while_stage_v_31)) & (~ while_stage_v_30)
      & while_stage_v_29 & (fsm_output[2]);
  assign or_tmp_757 = or_dcpl_109 & and_dcpl_146 & (~ while_stage_v_36) & while_stage_v_35
      & (fsm_output[4]);
  assign or_tmp_777 = while_stage_v_42 & (~ while_stage_v_43) & (~ reg_rotate_out_Push_mioi_iswt0_cse)
      & (fsm_output[3]);
  assign or_tmp_783 = ~((fsm_output[1:0]!=2'b00));
  assign while_mul_108_cmp_1_b = while_slc_111_48_19_ncse_sva;
  assign while_mul_73_cmp_1_b = while_mul_26_cmp_1_z_mxwt_1;
  assign while_mul_44_cmp_1_b = {{1{while_asn_itm_12_2[111]}}, while_asn_itm_12_2};
  assign while_mux_90_nl = MUX_v_5_2_2(5'b01100, 5'b10011, and_1032_cse);
  assign while_mux_564_nl = MUX_v_5_2_2(5'b10011, 5'b01100, and_1032_cse);
  assign while_mux_565_nl = MUX_v_2_2_2(2'b10, 2'b01, and_1032_cse);
  assign while_mux_566_nl = MUX_v_4_2_2(4'b1000, 4'b0111, and_1032_cse);
  assign while_mul_36_cmp_1_a = {while_mux_90_nl , 2'b10 , while_mux_564_nl , 1'b0
      , and_1032_cse , 1'b0 , (~ and_1032_cse) , 3'b011 , and_1032_cse , 4'b0000
      , (signext_2_1(~ and_1032_cse)) , 2'b00 , while_mux_565_nl , 1'b1 , while_mux_566_nl
      , 3'b110 , (~ and_1032_cse) , 1'b1 , (signext_3_1(~ and_1032_cse)) , 1'b1 ,
      and_1032_cse , 1'b0 , (~ and_1032_cse) , 2'b01};
  assign while_mul_36_cmp_1_b = MUX1HOT_v_64_4_2(while_slc_111_48_17_ncse_sva_1,
      while_slc_111_48_21_ncse_sva_1, while_slc_111_48_17_ncse_sva, while_slc_111_48_18_ncse_sva,
      {or_tmp_467 , (fsm_output[2]) , (fsm_output[3]) , (fsm_output[4])});
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      rotate_in_Pop_mioi_iswt0 <= 1'b0;
      reg_while_mul_cmp_14_iswt3_2_cse <= 1'b0;
      reg_while_mul_cmp_14_iswt3_1_cse <= 1'b0;
      reg_while_mul_cmp_14_iswt3_cse <= 1'b0;
      reg_while_mul_cmp_14_oswt_cse <= 1'b0;
      while_mul_cmp_11_iswt3_1 <= 1'b0;
      reg_while_mul_cmp_11_iswt3_cse <= 1'b0;
      reg_while_mul_cmp_11_oswt_cse <= 1'b0;
      reg_while_mul_cmp_10_iswt3_1_cse <= 1'b0;
      reg_while_mul_cmp_7_iswt3_1_cse <= 1'b0;
      reg_while_mul_cmp_1_iswt3_1_cse <= 1'b0;
      while_mul_cmp_1_iswt3 <= 1'b0;
      while_mul_26_cmp_1_iswt3_1 <= 1'b0;
      while_mul_26_cmp_iswt3_1 <= 1'b0;
      while_mul_26_cmp_iswt3 <= 1'b0;
      reg_while_mul_25_cmp_iswt5_3_cse <= 1'b0;
      reg_while_mul_25_cmp_oswt_3_cse <= 1'b0;
      while_mul_25_cmp_iswt5_2 <= 1'b0;
      while_mul_25_cmp_iswt5_1 <= 1'b0;
      while_mul_36_cmp_iswt3 <= 1'b0;
      reg_while_mul_34_cmp_1_iswt7_cse <= 1'b0;
      while_mul_34_cmp_iswt7_1 <= 1'b0;
      while_mul_34_cmp_iswt7 <= 1'b0;
      while_mul_37_cmp_iswt5_1 <= 1'b0;
      reg_while_mul_44_cmp_iswt5_1_cse <= 1'b0;
      reg_while_mul_44_cmp_oswt_1_cse <= 1'b0;
      while_mul_44_cmp_iswt5 <= 1'b0;
      while_mul_73_cmp_iswt5_1 <= 1'b0;
      while_mul_67_cmp_iswt7 <= 1'b0;
      while_while_mul_cmp_iswt9 <= 1'b0;
      while_mul_70_cmp_iswt3 <= 1'b0;
      while_mul_77_cmp_iswt5_1 <= 1'b0;
      while_mul_76_cmp_iswt7_1 <= 1'b0;
      reg_while_mul_76_cmp_oswt_cse <= 1'b0;
      while_mul_108_cmp_iswt3_1 <= 1'b0;
      while_mul_111_cmp_iswt7_1 <= 1'b0;
      reg_while_mul_111_cmp_oswt_1_cse <= 1'b0;
      while_mul_115_cmp_iswt5_3 <= 1'b0;
      while_mul_115_cmp_iswt5_2 <= 1'b0;
    end
    else if ( run_wen ) begin
      rotate_in_Pop_mioi_iswt0 <= ~(and_404_cse | (~ while_nor_tmp));
      reg_while_mul_cmp_14_iswt3_2_cse <= and_467_cse;
      reg_while_mul_cmp_14_iswt3_1_cse <= and_470_cse;
      reg_while_mul_cmp_14_iswt3_cse <= or_697_rmff;
      reg_while_mul_cmp_14_oswt_cse <= or_698_rmff;
      while_mul_cmp_11_iswt3_1 <= or_714_rmff;
      reg_while_mul_cmp_11_iswt3_cse <= and_475_cse;
      reg_while_mul_cmp_11_oswt_cse <= and_478_cse;
      reg_while_mul_cmp_10_iswt3_1_cse <= and_510_cse;
      reg_while_mul_cmp_7_iswt3_1_cse <= and_574_cse;
      reg_while_mul_cmp_1_iswt3_1_cse <= or_787_rmff;
      while_mul_cmp_1_iswt3 <= and_476_cse;
      while_mul_26_cmp_1_iswt3_1 <= or_800_rmff;
      while_mul_26_cmp_iswt3_1 <= or_808_rmff;
      while_mul_26_cmp_iswt3 <= or_tmp_494;
      reg_while_mul_25_cmp_iswt5_3_cse <= and_731_cse;
      reg_while_mul_25_cmp_oswt_3_cse <= and_733_cse;
      while_mul_25_cmp_iswt5_2 <= and_735_cse;
      while_mul_25_cmp_iswt5_1 <= and_693_cse;
      while_mul_36_cmp_iswt3 <= or_830_rmff;
      reg_while_mul_34_cmp_1_iswt7_cse <= or_840_rmff;
      while_mul_34_cmp_iswt7_1 <= or_847_rmff;
      while_mul_34_cmp_iswt7 <= or_849_rmff;
      while_mul_37_cmp_iswt5_1 <= or_859_rmff;
      reg_while_mul_44_cmp_iswt5_1_cse <= and_840_cse;
      reg_while_mul_44_cmp_oswt_1_cse <= and_842_cse;
      while_mul_44_cmp_iswt5 <= or_866_rmff;
      while_mul_73_cmp_iswt5_1 <= and_861_cse;
      while_mul_67_cmp_iswt7 <= or_882_rmff;
      while_while_mul_cmp_iswt9 <= or_888_rmff;
      while_mul_70_cmp_iswt3 <= or_898_rmff;
      while_mul_77_cmp_iswt5_1 <= or_908_rmff;
      while_mul_76_cmp_iswt7_1 <= or_914_rmff;
      reg_while_mul_76_cmp_oswt_cse <= and_801_cse;
      while_mul_108_cmp_iswt3_1 <= or_921_rmff;
      while_mul_111_cmp_iswt7_1 <= or_926_rmff;
      reg_while_mul_111_cmp_oswt_1_cse <= or_927_rmff;
      while_mul_115_cmp_iswt5_3 <= and_828_cse;
      while_mul_115_cmp_iswt5_2 <= and_902_cse;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      rotate_out_Push_mioi_idat_127_64 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      rotate_out_Push_mioi_idat_191_128 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      rotate_out_Push_mioi_idat_255_192 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      rotate_out_Push_mioi_idat_319_256 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      rotate_out_Push_mioi_idat_383_320 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      rotate_out_Push_mioi_idat_447_384 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      rotate_out_Push_mioi_idat_511_448 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      rotate_out_Push_mioi_idat_575_512 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      rotate_out_Push_mioi_idat_639_576 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      rotate_out_Push_mioi_idat_703_640 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      rotate_out_Push_mioi_idat_767_704 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      rotate_out_Push_mioi_idat_831_768 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      rotate_out_Push_mioi_idat_895_832 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      rotate_out_Push_mioi_idat_959_896 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      rotate_out_Push_mioi_idat_1023_960 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_and_cse ) begin
      rotate_out_Push_mioi_idat_127_64 <= while_slc_111_48_4_itm_7;
      rotate_out_Push_mioi_idat_191_128 <= while_slc_111_48_2_itm_8;
      rotate_out_Push_mioi_idat_255_192 <= while_slc_111_48_5_itm_7;
      rotate_out_Push_mioi_idat_319_256 <= readslicef_112_64_48(while_acc_106_nl);
      rotate_out_Push_mioi_idat_383_320 <= readslicef_112_64_48(while_acc_107_nl);
      rotate_out_Push_mioi_idat_447_384 <= readslicef_208_64_144(while_acc_76_nl);
      rotate_out_Push_mioi_idat_511_448 <= z_out_4_111_48;
      rotate_out_Push_mioi_idat_575_512 <= while_slc_111_48_15_itm_4;
      rotate_out_Push_mioi_idat_639_576 <= readslicef_112_64_48(while_acc_108_nl);
      rotate_out_Push_mioi_idat_703_640 <= z_out_111_48;
      rotate_out_Push_mioi_idat_767_704 <= z_out_1_111_48;
      rotate_out_Push_mioi_idat_831_768 <= readslicef_163_64_99(while_acc_85_nl);
      rotate_out_Push_mioi_idat_895_832 <= readslicef_112_64_48(while_acc_71_nl);
      rotate_out_Push_mioi_idat_959_896 <= z_out_5_111_48;
      rotate_out_Push_mioi_idat_1023_960 <= z_out_6_111_48;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      reg_rotate_out_Push_mioi_iswt0_cse <= 1'b0;
    end
    else if ( run_wen & (or_tmp_627 | while_while_and_17_cse) ) begin
      reg_rotate_out_Push_mioi_iswt0_cse <= ~ or_tmp_627;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_stage_v <= 1'b0;
    end
    else if ( run_wen & ((while_nor_tmp & or_dcpl_125) | and_475_cse) ) begin
      while_stage_v <= ~ and_475_cse;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_stage_v_1 <= 1'b0;
    end
    else if ( run_wen & or_697_rmff ) begin
      while_stage_v_1 <= ~ and_476_cse;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_stage_v_2 <= 1'b0;
    end
    else if ( run_wen & (and_476_cse | or_tmp_494) ) begin
      while_stage_v_2 <= ~ or_tmp_494;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_stage_v_3 <= 1'b0;
    end
    else if ( run_wen & (or_tmp_494 | and_759_cse) ) begin
      while_stage_v_3 <= ~ and_759_cse;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_stage_v_5 <= 1'b0;
    end
    else if ( run_wen & or_698_rmff ) begin
      while_stage_v_5 <= ~ and_479_cse;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_stage_v_6 <= 1'b0;
    end
    else if ( run_wen & or_714_rmff ) begin
      while_stage_v_6 <= ~ and_510_cse;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_stage_v_7 <= 1'b0;
    end
    else if ( run_wen & or_921_rmff ) begin
      while_stage_v_7 <= ~ and_689_cse;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_stage_v_9 <= 1'b0;
    end
    else if ( run_wen & (and_659_cse | and_515_cse) ) begin
      while_stage_v_9 <= ~ and_515_cse;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_stage_v_10 <= 1'b0;
    end
    else if ( run_wen & while_or_217_itm ) begin
      while_stage_v_10 <= ~ and_470_cse;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_stage_v_11 <= 1'b0;
    end
    else if ( run_wen & or_861_cse ) begin
      while_stage_v_11 <= ~ and_693_cse;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_stage_v_13 <= 1'b0;
    end
    else if ( run_wen & or_840_rmff ) begin
      while_stage_v_13 <= ~ and_712_cse;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_stage_v_14 <= 1'b0;
    end
    else if ( run_wen & (and_712_cse | and_472_cse) ) begin
      while_stage_v_14 <= ~ and_472_cse;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_stage_v_15 <= 1'b0;
    end
    else if ( run_wen & (and_472_cse | and_947_cse) ) begin
      while_stage_v_15 <= ~ and_947_cse;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_stage_v_17 <= 1'b0;
    end
    else if ( run_wen & (and_735_cse | and_739_cse) ) begin
      while_stage_v_17 <= ~ and_739_cse;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_stage_v_18 <= 1'b0;
    end
    else if ( run_wen & or_849_rmff ) begin
      while_stage_v_18 <= ~ and_801_cse;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_stage_v_19 <= 1'b0;
    end
    else if ( run_wen & while_or_224_itm ) begin
      while_stage_v_19 <= ~ and_861_cse;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_stage_v_21 <= 1'b0;
    end
    else if ( run_wen & while_or_225_itm ) begin
      while_stage_v_21 <= ~ and_784_cse;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_stage_v_22 <= 1'b0;
    end
    else if ( run_wen & (and_784_cse | and_574_cse) ) begin
      while_stage_v_22 <= ~ and_574_cse;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_stage_v_23 <= 1'b0;
    end
    else if ( run_wen & (and_574_cse | and_900_cse) ) begin
      while_stage_v_23 <= ~ and_900_cse;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_stage_v_25 <= 1'b0;
    end
    else if ( run_wen & (and_898_cse | and_731_cse) ) begin
      while_stage_v_25 <= ~ and_731_cse;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_stage_v_26 <= 1'b0;
    end
    else if ( run_wen & while_or_229_itm ) begin
      while_stage_v_26 <= ~ and_576_cse;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_stage_v_27 <= 1'b0;
    end
    else if ( run_wen & (and_576_cse | and_840_cse) ) begin
      while_stage_v_27 <= ~ and_840_cse;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_stage_v_29 <= 1'b0;
    end
    else if ( run_wen & (and_796_cse | or_tmp_737) ) begin
      while_stage_v_29 <= ~ or_tmp_737;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_stage_v_30 <= 1'b0;
    end
    else if ( run_wen & (or_tmp_737 | or_tmp_523) ) begin
      while_stage_v_30 <= ~ or_tmp_523;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_stage_v_31 <= 1'b0;
    end
    else if ( run_wen & (or_tmp_523 | and_733_cse) ) begin
      while_stage_v_31 <= ~ and_733_cse;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_stage_v_33 <= 1'b0;
    end
    else if ( run_wen & (and_902_cse | and_842_cse) ) begin
      while_stage_v_33 <= ~ and_842_cse;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_stage_v_34 <= 1'b0;
    end
    else if ( run_wen & (and_842_cse | and_823_cse) ) begin
      while_stage_v_34 <= ~ and_823_cse;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_stage_v_35 <= 1'b0;
    end
    else if ( run_wen & (and_823_cse | or_tmp_757) ) begin
      while_stage_v_35 <= ~ or_tmp_757;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_stage_v_37 <= 1'b0;
    end
    else if ( run_wen & (and_799_cse | and_828_cse) ) begin
      while_stage_v_37 <= ~ and_828_cse;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_stage_v_38 <= 1'b0;
    end
    else if ( run_wen & while_or_238_itm ) begin
      while_stage_v_38 <= ~ and_1003_cse;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_stage_v_39 <= 1'b0;
    end
    else if ( run_wen & (and_1003_cse | and_467_cse) ) begin
      while_stage_v_39 <= ~ and_467_cse;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_stage_v_41 <= 1'b0;
    end
    else if ( run_wen & (and_827_cse | or_tmp_565) ) begin
      while_stage_v_41 <= ~ or_tmp_565;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_stage_v_42 <= 1'b0;
    end
    else if ( run_wen & (or_tmp_565 | or_tmp_777) ) begin
      while_stage_v_42 <= ~ or_tmp_777;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_stage_v_43 <= 1'b0;
    end
    else if ( run_wen & (or_tmp_777 | while_while_and_17_cse) ) begin
      while_stage_v_43 <= ~ while_while_and_17_cse;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_asn_itm_14 <= 162'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & (~(or_dcpl_2 | or_tmp_783)) ) begin
      while_asn_itm_14 <= while_mul_37_cmp_z_mxwt;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_slc_while_acc_74_psp_46_0_itm <= 47'b00000000000000000000000000000000000000000000000;
      while_acc_75_itm <= 18'b000000000000000000;
    end
    else if ( while_and_451_cse ) begin
      while_slc_while_acc_74_psp_46_0_itm <= z_out_3[46:0];
      while_acc_75_itm <= nl_while_acc_75_itm[17:0];
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_slc_while_mul_34_cmp_z_mxwt_208_0_itm <= 209'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & (~(or_dcpl_8 | or_tmp_783)) ) begin
      while_slc_while_mul_34_cmp_z_mxwt_208_0_itm <= while_mul_34_cmp_z_mxwt[208:0];
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_slc_159_96_ncse_sva <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & (~((~ (fsm_output[1])) | or_dcpl_218)) ) begin
      while_slc_159_96_ncse_sva <= readslicef_160_64_96(while_acc_79_nl);
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_25_cse_sva <= 177'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & while_and_33_tmp & (~ or_tmp_783) ) begin
      while_mul_25_cse_sva <= while_mul_25_cmp_z_mxwt_3;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_slc_111_48_20_ncse_sva_1 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_21_ncse_sva_1 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_cmp_10_z_mxwt_2_111_0_itm_1 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_asn_itm_1 <= 113'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_17_ncse_sva_1 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_16_ncse_sva_1 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_19_ncse_sva_1 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_9_ncse_sva_1 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_18_ncse_sva_1 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      reg_0_operator_for_7_reg_0_operator_for_slc_while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_64_63_0_3_itm_2
          <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_mul_26_cse_sva_1 <= 113'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_asn_itm_6_1 <= 113'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_8_ncse_sva_1 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_asn_itm_13_1 <= 128'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_cmp_11_z_mxwt_2_111_0_itm_1 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_and_312_cse ) begin
      while_slc_111_48_20_ncse_sva_1 <= while_slc_111_48_20_ncse_sva;
      while_slc_111_48_21_ncse_sva_1 <= while_slc_111_48_21_ncse_sva;
      while_slc_while_mul_cmp_10_z_mxwt_2_111_0_itm_1 <= while_slc_while_mul_cmp_10_z_mxwt_2_111_0_itm;
      while_asn_itm_1 <= while_mul_36_cmp_z_mxwt_1;
      while_slc_111_48_17_ncse_sva_1 <= while_slc_111_48_17_ncse_sva;
      while_slc_111_48_16_ncse_sva_1 <= while_slc_111_48_16_ncse_sva;
      while_slc_111_48_19_ncse_sva_1 <= while_slc_111_48_19_ncse_sva;
      while_slc_111_48_9_ncse_sva_1 <= while_slc_111_48_9_ncse_sva;
      while_slc_111_48_18_ncse_sva_1 <= while_slc_111_48_18_ncse_sva;
      reg_0_operator_for_7_reg_0_operator_for_slc_while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_64_63_0_3_itm_2
          <= reg_0_operator_for_7_reg_0_operator_for_slc_while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_64_63_0_3_itm_1;
      while_mul_26_cse_sva_1 <= while_mul_26_cse_sva;
      while_asn_itm_6_1 <= while_asn_itm_6;
      while_slc_111_48_8_ncse_sva_1 <= while_slc_111_48_8_ncse_sva;
      while_asn_itm_13_1 <= while_asn_itm_13;
      while_slc_while_mul_cmp_11_z_mxwt_2_111_0_itm_1 <= while_slc_while_mul_cmp_11_z_mxwt_2_111_0_itm;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_asn_itm_10_1 <= 114'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_18_ncse_sva_2 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_36_cmp_1_z_111_0_itm_1 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_asn_itm_5_1 <= 114'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_16_ncse_sva_2 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_asn_itm_1_1 <= 113'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      reg_0_operator_for_7_reg_0_operator_for_slc_while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_64_63_0_3_itm_3
          <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_9_ncse_sva_2 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_20_ncse_sva_2 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_asn_itm_12_1 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_37_cmp_z_mxwt_1_159_0_1_itm_1 <= 160'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_asn_183_itm_1 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_26_cse_sva_2 <= 113'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_asn_itm_6_2 <= 113'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_21_ncse_sva_2 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_8_ncse_sva_2 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_asn_itm_9_1 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_asn_itm_13_2 <= 128'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_37_cmp_z_mxwt_1_159_0_itm_1 <= 160'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_cmp_6_z_mxwt_1_111_0_itm_1 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_2_itm_1 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_cmp_8_z_mxwt_1_111_0_itm_1 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_cmp_9_z_mxwt_1_111_0_itm_1 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_and_315_cse ) begin
      while_asn_itm_10_1 <= while_mul_26_cmp_z_mxwt;
      while_slc_111_48_18_ncse_sva_2 <= while_slc_111_48_18_ncse_sva_1;
      while_slc_while_mul_36_cmp_1_z_111_0_itm_1 <= while_mul_36_cmp_1_z[111:0];
      while_asn_itm_5_1 <= while_mul_26_cmp_1_z_mxwt;
      while_slc_111_48_16_ncse_sva_2 <= while_slc_111_48_16_ncse_sva_1;
      while_asn_itm_1_1 <= while_asn_itm_1_2;
      reg_0_operator_for_7_reg_0_operator_for_slc_while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_64_63_0_3_itm_3
          <= reg_0_operator_for_7_reg_0_operator_for_slc_while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_64_63_0_3_itm_2;
      while_slc_111_48_9_ncse_sva_2 <= while_slc_111_48_9_ncse_sva_1;
      while_slc_111_48_20_ncse_sva_2 <= while_slc_111_48_20_ncse_sva_1;
      while_asn_itm_12_1 <= while_mul_108_cmp_z_mxwt;
      while_slc_while_mul_37_cmp_z_mxwt_1_159_0_1_itm_1 <= while_slc_while_mul_37_cmp_z_mxwt_1_159_0_1_itm;
      while_asn_183_itm_1 <= while_asn_183_itm;
      while_mul_26_cse_sva_2 <= while_mul_26_cse_sva_1;
      while_asn_itm_6_2 <= while_asn_itm_6_1;
      while_slc_111_48_21_ncse_sva_2 <= while_slc_111_48_21_ncse_sva_1;
      while_slc_111_48_8_ncse_sva_2 <= while_slc_111_48_8_ncse_sva_1;
      while_asn_itm_9_1 <= while_asn_itm_9;
      while_asn_itm_13_2 <= while_asn_itm_13_1;
      while_slc_while_mul_37_cmp_z_mxwt_1_159_0_itm_1 <= while_mul_37_cmp_z_mxwt_1;
      while_slc_while_mul_cmp_6_z_mxwt_1_111_0_itm_1 <= while_slc_while_mul_cmp_6_z_mxwt_1_111_0_itm;
      while_slc_111_48_2_itm_1 <= while_slc_111_48_2_itm;
      while_slc_while_mul_cmp_8_z_mxwt_1_111_0_itm_1 <= while_slc_while_mul_cmp_8_z_mxwt_1_111_0_itm;
      while_slc_while_mul_cmp_9_z_mxwt_1_111_0_itm_1 <= while_slc_while_mul_cmp_9_z_mxwt_1_111_0_itm;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_slc_while_mul_36_cmp_1_z_111_0_itm_1_1 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      reg_0_operator_for_7_reg_0_operator_for_slc_while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_64_63_0_2_itm_4
          <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_asn_itm_12_2 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_asn_itm_11_1 <= 114'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_37_cmp_z_mxwt_1_159_0_1_itm_2 <= 160'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_asn_183_itm_2 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_21_ncse_sva_3 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_8_ncse_sva_3 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_asn_itm_9_2 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_and_317_cse ) begin
      while_slc_while_mul_36_cmp_1_z_111_0_itm_1_1 <= while_slc_while_mul_36_cmp_1_z_111_0_itm_1_2;
      reg_0_operator_for_7_reg_0_operator_for_slc_while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_64_63_0_2_itm_4
          <= reg_0_operator_for_7_reg_0_operator_for_slc_while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_64_63_0_3_itm_3;
      while_asn_itm_12_2 <= while_asn_itm_12_1;
      while_asn_itm_11_1 <= while_asn_itm_11;
      while_slc_while_mul_37_cmp_z_mxwt_1_159_0_1_itm_2 <= while_slc_while_mul_37_cmp_z_mxwt_1_159_0_1_itm_1;
      while_asn_183_itm_2 <= while_asn_183_itm_1;
      while_slc_111_48_21_ncse_sva_3 <= while_slc_111_48_21_ncse_sva_2;
      while_slc_111_48_8_ncse_sva_3 <= while_slc_111_48_8_ncse_sva_2;
      while_asn_itm_9_2 <= while_asn_itm_9_1;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_stage_v_20 <= 1'b0;
    end
    else if ( run_wen & or_926_rmff ) begin
      while_stage_v_20 <= ~ and_783_cse;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_asn_itm_2 <= 114'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_3_ncse_sva <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_and_455_cse ) begin
      while_asn_itm_2 <= while_mul_26_cmp_1_z_mxwt;
      while_slc_111_48_3_ncse_sva <= readslicef_112_64_48(while_acc_4_nl);
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_slc_while_mul_67_cmp_z_mxwt_1_177_0_itm_1_1 <= 178'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_asn_183_itm_3 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_67_cmp_z_mxwt_1_177_0_itm_1 <= 178'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_acc_78_cse_sva_2 <= 17'b00000000000000000;
      while_asn_185_itm_1 <= 240'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_26_cmp_z_mxwt_112_0_itm_2 <= 113'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_26_cse_sva_4 <= 113'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_asn_itm_6_4 <= 113'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_21_ncse_sva_4 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_asn_itm_13_4 <= 128'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_8_ncse_sva_4 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_asn_itm_9_3 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_37_cmp_z_mxwt_1_159_0_itm_3 <= 160'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_cmp_6_z_mxwt_1_111_0_itm_3 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_asn_187_itm_1 <= 115'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm_2 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_asn_188_itm_1 <= 115'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_115_cmp_z_mxwt_3_115_0_itm_2 <= 116'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_asn_189_itm_1 <= 115'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_asn_itm_15_2 <= 113'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      reg_0_operator_for_7_reg_0_operator_for_slc_while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_64_63_0_1_itm_5
          <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_cmp_14_z_mxwt_1_111_0_itm_2 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm_1_2 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_cmp_3_z_mxwt_1_111_0_itm_2 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_cmp_13_z_mxwt_1_111_0_itm_2 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_5_itm_2 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_2_itm_3 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_4_itm_2 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_and_321_cse ) begin
      while_slc_while_mul_67_cmp_z_mxwt_1_177_0_itm_1_1 <= while_mul_67_cmp_z_mxwt_1;
      while_asn_183_itm_3 <= while_asn_183_itm_2;
      while_slc_while_mul_67_cmp_z_mxwt_1_177_0_itm_1 <= while_slc_while_mul_67_cmp_z_mxwt_1_177_0_itm;
      while_acc_78_cse_sva_2 <= while_acc_78_cse_sva_1_1;
      while_asn_185_itm_1 <= while_asn_185_itm;
      while_slc_while_mul_26_cmp_z_mxwt_112_0_itm_2 <= while_slc_while_mul_26_cmp_z_mxwt_112_0_itm_1;
      while_mul_26_cse_sva_4 <= while_mul_26_cse_sva_3;
      while_asn_itm_6_4 <= while_asn_itm_6_3;
      while_slc_111_48_21_ncse_sva_4 <= while_slc_111_48_21_ncse_sva_3;
      while_asn_itm_13_4 <= while_asn_itm_13_3;
      while_slc_111_48_8_ncse_sva_4 <= while_slc_111_48_8_ncse_sva_3;
      while_asn_itm_9_3 <= while_asn_itm_9_2;
      while_slc_while_mul_37_cmp_z_mxwt_1_159_0_itm_3 <= while_slc_while_mul_37_cmp_z_mxwt_1_159_0_itm_2;
      while_slc_while_mul_cmp_6_z_mxwt_1_111_0_itm_3 <= while_slc_while_mul_cmp_6_z_mxwt_1_111_0_itm_2;
      while_asn_187_itm_1 <= while_asn_187_itm;
      while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm_2 <= while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm_1_1;
      while_asn_188_itm_1 <= while_asn_188_itm;
      while_slc_while_mul_115_cmp_z_mxwt_3_115_0_itm_2 <= while_slc_while_mul_115_cmp_z_mxwt_3_115_0_itm_1;
      while_asn_189_itm_1 <= while_asn_189_itm;
      while_asn_itm_15_2 <= while_asn_itm_15_1;
      reg_0_operator_for_7_reg_0_operator_for_slc_while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_64_63_0_1_itm_5
          <= reg_0_operator_for_7_reg_0_operator_for_slc_while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_64_63_0_1_itm_4;
      while_slc_while_mul_cmp_14_z_mxwt_1_111_0_itm_2 <= while_slc_while_mul_cmp_14_z_mxwt_1_111_0_itm_1;
      while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm_1_2 <= while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm_1_1_1;
      while_slc_while_mul_cmp_3_z_mxwt_1_111_0_itm_2 <= while_slc_while_mul_cmp_3_z_mxwt_1_111_0_itm_1;
      while_slc_while_mul_cmp_13_z_mxwt_1_111_0_itm_2 <= while_slc_while_mul_cmp_13_z_mxwt_1_111_0_itm_1;
      while_slc_111_48_5_itm_2 <= while_slc_111_48_5_itm_1;
      while_slc_111_48_2_itm_3 <= while_slc_111_48_2_itm_2;
      while_slc_111_48_4_itm_2 <= while_slc_111_48_4_itm_1;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_slc_while_mul_37_cmp_z_mxwt_1_159_0_1_itm_3 <= 160'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & (~ while_stage_v_20) & (fsm_output[4]) ) begin
      while_slc_while_mul_37_cmp_z_mxwt_1_159_0_1_itm_3 <= while_slc_while_mul_37_cmp_z_mxwt_1_159_0_1_itm_2;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_slc_while_mul_77_cmp_z_mxwt_1_175_0_itm <= 176'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_24_208_1_itm <= 208'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_and_324_cse ) begin
      while_slc_while_mul_77_cmp_z_mxwt_1_175_0_itm <= while_mul_77_cmp_z_mxwt_1;
      while_slc_while_mul_24_208_1_itm <= while_mul_34_cmp_1_z_mxwt_2;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_stage_v_24 <= 1'b0;
    end
    else if ( run_wen & (and_898_cse | and_900_cse) ) begin
      while_stage_v_24 <= ~ and_898_cse;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_26_cse_sva_5 <= 113'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_asn_itm_6_5 <= 113'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_21_ncse_sva_5 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_asn_itm_8_1 <= 178'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_8_ncse_sva_5 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_asn_itm_9_4 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_asn_itm_13_5 <= 128'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_159_96_ncse_sva_1 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_asn_187_itm_2 <= 115'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm_3 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_asn_188_itm_2 <= 115'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_115_cmp_z_mxwt_3_115_0_itm_3 <= 116'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_asn_189_itm_2 <= 115'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_asn_itm_15_3 <= 113'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      reg_0_operator_for_7_reg_0_operator_for_slc_while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_64_63_0_1_itm_6
          <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm_1_3 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_24_208_1_itm_1 <= 208'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_cmp_3_z_mxwt_1_111_0_itm_3 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_cmp_13_z_mxwt_1_111_0_itm_3 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_5_itm_3 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_2_itm_4 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_4_itm_3 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_and_326_cse ) begin
      while_mul_26_cse_sva_5 <= while_mul_26_cse_sva_4;
      while_asn_itm_6_5 <= while_asn_itm_6_4;
      while_slc_111_48_21_ncse_sva_5 <= while_slc_111_48_21_ncse_sva_4;
      while_asn_itm_8_1 <= while_asn_itm_8;
      while_slc_111_48_8_ncse_sva_5 <= while_slc_111_48_8_ncse_sva_4;
      while_asn_itm_9_4 <= while_asn_itm_9_3;
      while_asn_itm_13_5 <= while_asn_itm_13_4;
      while_slc_159_96_ncse_sva_1 <= while_slc_159_96_ncse_sva;
      while_asn_187_itm_2 <= while_asn_187_itm_1;
      while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm_3 <= while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm_2;
      while_asn_188_itm_2 <= while_asn_188_itm_1;
      while_slc_while_mul_115_cmp_z_mxwt_3_115_0_itm_3 <= while_slc_while_mul_115_cmp_z_mxwt_3_115_0_itm_2;
      while_asn_189_itm_2 <= while_asn_189_itm_1;
      while_asn_itm_15_3 <= while_asn_itm_15_2;
      reg_0_operator_for_7_reg_0_operator_for_slc_while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_64_63_0_1_itm_6
          <= reg_0_operator_for_7_reg_0_operator_for_slc_while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_64_63_0_1_itm_5;
      while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm_1_3 <= while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm_1_2;
      while_slc_while_mul_24_208_1_itm_1 <= while_slc_while_mul_24_208_1_itm;
      while_slc_while_mul_cmp_3_z_mxwt_1_111_0_itm_3 <= while_slc_while_mul_cmp_3_z_mxwt_1_111_0_itm_2;
      while_slc_while_mul_cmp_13_z_mxwt_1_111_0_itm_3 <= while_slc_while_mul_cmp_13_z_mxwt_1_111_0_itm_2;
      while_slc_111_48_5_itm_3 <= while_slc_111_48_5_itm_2;
      while_slc_111_48_2_itm_4 <= while_slc_111_48_2_itm_3;
      while_slc_111_48_4_itm_3 <= while_slc_111_48_4_itm_2;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_slc_while_mul_26_cmp_z_mxwt_112_0_itm_3 <= 113'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_acc_78_cse_sva_3 <= 17'b00000000000000000;
      while_slc_while_mul_37_cmp_z_mxwt_1_159_0_itm_4 <= 160'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_cmp_6_z_mxwt_1_111_0_itm_4 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_cmp_14_z_mxwt_1_111_0_itm_3 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_and_458_cse ) begin
      while_slc_while_mul_26_cmp_z_mxwt_112_0_itm_3 <= while_slc_while_mul_26_cmp_z_mxwt_112_0_itm_2;
      while_acc_78_cse_sva_3 <= while_acc_78_cse_sva_2;
      while_slc_while_mul_37_cmp_z_mxwt_1_159_0_itm_4 <= while_slc_while_mul_37_cmp_z_mxwt_1_159_0_itm_3;
      while_slc_while_mul_cmp_6_z_mxwt_1_111_0_itm_4 <= while_slc_while_mul_cmp_6_z_mxwt_1_111_0_itm_3;
      while_slc_while_mul_cmp_14_z_mxwt_1_111_0_itm_3 <= while_slc_while_mul_cmp_14_z_mxwt_1_111_0_itm_2;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_asn_185_itm_2 <= 240'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_77_cmp_z_mxwt_1_175_0_itm_1_1 <= 176'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_and_460_cse ) begin
      while_asn_185_itm_2 <= while_asn_185_itm_1;
      while_slc_while_mul_77_cmp_z_mxwt_1_175_0_itm_1_1 <= while_mul_77_cmp_z_mxwt_1;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_acc_86_cse_sva <= 67'b0000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_34_cmp_z_mxwt_1_207_0_1_itm <= 208'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_15_itm <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_and_462_cse ) begin
      while_acc_86_cse_sva <= nl_while_acc_86_cse_sva[66:0];
      while_slc_while_mul_34_cmp_z_mxwt_1_207_0_1_itm <= while_mul_34_cmp_z_mxwt_1;
      while_slc_111_48_15_itm <= z_out_7_111_48;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_stage_v_28 <= 1'b0;
    end
    else if ( run_wen & or_927_rmff ) begin
      while_stage_v_28 <= ~ and_796_cse;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_slc_111_48_21_ncse_sva_6 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_asn_itm_8_2 <= 178'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_8_ncse_sva_6 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_asn_itm_9_5 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_asn_itm_13_6 <= 128'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_207_144_1_ncse_sva_1 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_159_96_ncse_sva_2 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_acc_86_cse_sva_1 <= 67'b0000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_34_cmp_z_mxwt_1_207_0_1_itm_1 <= 208'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_asn_187_itm_3 <= 115'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_asn_188_itm_3 <= 115'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_115_cmp_z_mxwt_3_115_0_itm_4 <= 116'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_asn_189_itm_3 <= 115'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_asn_itm_15_4 <= 113'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      reg_0_operator_for_7_reg_0_operator_for_slc_while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_64_63_0_1_itm_7
          <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm_4 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_15_itm_1 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm_1_4 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_24_208_1_itm_2 <= 208'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_cmp_3_z_mxwt_1_111_0_itm_4 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_cmp_13_z_mxwt_1_111_0_itm_4 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_5_itm_4 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_2_itm_5 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_4_itm_4 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_and_463_cse ) begin
      while_slc_111_48_21_ncse_sva_6 <= while_slc_111_48_21_ncse_sva_5;
      while_asn_itm_8_2 <= while_asn_itm_8_1;
      while_slc_111_48_8_ncse_sva_6 <= while_slc_111_48_8_ncse_sva_5;
      while_asn_itm_9_5 <= while_asn_itm_9_4;
      while_asn_itm_13_6 <= while_asn_itm_13_5;
      while_slc_207_144_1_ncse_sva_1 <= while_slc_207_144_1_ncse_sva;
      while_slc_159_96_ncse_sva_2 <= while_slc_159_96_ncse_sva_1;
      while_acc_86_cse_sva_1 <= while_acc_86_cse_sva;
      while_slc_while_mul_34_cmp_z_mxwt_1_207_0_1_itm_1 <= while_slc_while_mul_34_cmp_z_mxwt_1_207_0_1_itm;
      while_asn_187_itm_3 <= while_asn_187_itm_2;
      while_asn_188_itm_3 <= while_asn_188_itm_2;
      while_slc_while_mul_115_cmp_z_mxwt_3_115_0_itm_4 <= while_slc_while_mul_115_cmp_z_mxwt_3_115_0_itm_3;
      while_asn_189_itm_3 <= while_asn_189_itm_2;
      while_asn_itm_15_4 <= while_asn_itm_15_3;
      reg_0_operator_for_7_reg_0_operator_for_slc_while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_64_63_0_1_itm_7
          <= reg_0_operator_for_7_reg_0_operator_for_slc_while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_64_63_0_1_itm_6;
      while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm_4 <= while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm_3;
      while_slc_111_48_15_itm_1 <= while_slc_111_48_15_itm;
      while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm_1_4 <= while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm_1_3;
      while_slc_while_mul_24_208_1_itm_2 <= while_slc_while_mul_24_208_1_itm_1;
      while_slc_while_mul_cmp_3_z_mxwt_1_111_0_itm_4 <= while_slc_while_mul_cmp_3_z_mxwt_1_111_0_itm_3;
      while_slc_while_mul_cmp_13_z_mxwt_1_111_0_itm_4 <= while_slc_while_mul_cmp_13_z_mxwt_1_111_0_itm_3;
      while_slc_111_48_5_itm_4 <= while_slc_111_48_5_itm_3;
      while_slc_111_48_2_itm_5 <= while_slc_111_48_2_itm_4;
      while_slc_111_48_4_itm_4 <= while_slc_111_48_4_itm_3;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_stage_v_32 <= 1'b0;
    end
    else if ( run_wen & (and_902_cse | and_733_cse) ) begin
      while_stage_v_32 <= ~ and_902_cse;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_asn_itm_13_7 <= 128'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & (~ or_dcpl_33) & (fsm_output[4]) ) begin
      while_asn_itm_13_7 <= while_asn_itm_13_6;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_slc_111_48_8_ncse_sva_7 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & (~ or_dcpl_34) & (fsm_output[4]) ) begin
      while_slc_111_48_8_ncse_sva_7 <= while_slc_111_48_8_ncse_sva_6;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_asn_itm_9_6 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_asn_188_itm_4 <= 115'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_34_cmp_z_mxwt_1_207_0_1_itm_2 <= 208'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_asn_187_itm_4 <= 115'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_and_467_cse ) begin
      while_asn_itm_9_6 <= while_asn_itm_9_5;
      while_asn_188_itm_4 <= while_asn_188_itm_3;
      while_slc_while_mul_34_cmp_z_mxwt_1_207_0_1_itm_2 <= while_slc_while_mul_34_cmp_z_mxwt_1_207_0_1_itm_1;
      while_asn_187_itm_4 <= while_asn_187_itm_3;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_stage_v_36 <= 1'b0;
    end
    else if ( run_wen & (and_799_cse | or_tmp_757) ) begin
      while_stage_v_36 <= ~ and_799_cse;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_slc_159_96_ncse_sva_4 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_207_144_1_ncse_sva_3 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      reg_0_operator_for_7_reg_0_operator_for_slc_while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_64_63_0_1_itm_9
          <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_207_144_2_ncse_sva_1 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_acc_81_206_143_ncse_sva_2 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_acc_82_206_143_ncse_sva_1 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_124_256_1_itm_2 <= 210'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_asn_189_itm_5 <= 115'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_15_itm_3 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm_1_6 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_24_208_1_itm_4 <= 208'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_cmp_3_z_mxwt_1_111_0_itm_6 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_cmp_13_z_mxwt_1_111_0_itm_6 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_5_itm_6 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_2_itm_7 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_4_itm_6 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_and_468_cse ) begin
      while_slc_159_96_ncse_sva_4 <= while_slc_159_96_ncse_sva_3;
      while_slc_207_144_1_ncse_sva_3 <= while_slc_207_144_1_ncse_sva_2;
      reg_0_operator_for_7_reg_0_operator_for_slc_while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_64_63_0_1_itm_9
          <= reg_0_operator_for_7_reg_0_operator_for_slc_while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_64_63_0_1_itm_8;
      while_slc_207_144_2_ncse_sva_1 <= while_slc_207_144_2_ncse_sva;
      while_slc_while_acc_81_206_143_ncse_sva_2 <= while_slc_while_acc_81_206_143_ncse_sva_1;
      while_slc_while_acc_82_206_143_ncse_sva_1 <= while_slc_while_acc_82_206_143_ncse_sva;
      while_slc_while_mul_124_256_1_itm_2 <= while_slc_while_mul_124_256_1_itm_1;
      while_asn_189_itm_5 <= while_asn_189_itm_4;
      while_slc_111_48_15_itm_3 <= while_slc_111_48_15_itm_2;
      while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm_1_6 <= while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm_1_5;
      while_slc_while_mul_24_208_1_itm_4 <= while_slc_while_mul_24_208_1_itm_3;
      while_slc_while_mul_cmp_3_z_mxwt_1_111_0_itm_6 <= while_slc_while_mul_cmp_3_z_mxwt_1_111_0_itm_5;
      while_slc_while_mul_cmp_13_z_mxwt_1_111_0_itm_6 <= while_slc_while_mul_cmp_13_z_mxwt_1_111_0_itm_5;
      while_slc_111_48_5_itm_6 <= while_slc_111_48_5_itm_5;
      while_slc_111_48_2_itm_7 <= while_slc_111_48_2_itm_6;
      while_slc_111_48_4_itm_6 <= while_slc_111_48_4_itm_5;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_slc_while_mul_115_cmp_z_mxwt_3_115_0_itm_6 <= 116'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_asn_180_itm_1 <= 163'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_and_475_cse ) begin
      while_slc_while_mul_115_cmp_z_mxwt_3_115_0_itm_6 <= while_slc_while_mul_115_cmp_z_mxwt_3_115_0_itm_5;
      while_asn_180_itm_1 <= while_asn_180_itm;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_asn_itm_15_6 <= 113'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_acc_86_cse_sva_3 <= 67'b0000000000000000000000000000000000000000000000000000000000000000000;
      while_asn_190_itm_1 <= 256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_and_477_cse ) begin
      while_asn_itm_15_6 <= while_asn_itm_15_5;
      while_acc_86_cse_sva_3 <= while_acc_86_cse_sva_2;
      while_asn_190_itm_1 <= while_asn_190_itm;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_slc_while_mul_37_cmp_z_mxwt_115_0_itm <= 116'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_acc_125_itm <= 256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_and_480_cse ) begin
      while_slc_while_mul_37_cmp_z_mxwt_115_0_itm <= while_mul_37_cmp_z_mxwt[115:0];
      while_acc_125_itm <= nl_while_acc_125_itm[255:0];
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_slc_while_mul_115_cmp_z_mxwt_1_161_0_itm <= 162'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_acc_90_162_99_ncse_sva <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_and_482_cse ) begin
      while_slc_while_mul_115_cmp_z_mxwt_1_161_0_itm <= while_mul_115_cmp_z_mxwt_1;
      while_slc_while_acc_90_162_99_ncse_sva <= readslicef_163_64_99(while_acc_90_nl);
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_stage_v_40 <= 1'b0;
    end
    else if ( run_wen & (and_827_cse | and_467_cse) ) begin
      while_stage_v_40 <= ~ and_827_cse;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_slc_111_48_4_itm_7 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_2_itm_8 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_5_itm_7 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_cmp_13_z_mxwt_1_111_0_itm_7 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_cmp_3_z_mxwt_1_111_0_itm_7 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_24_208_1_itm_5 <= 208'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_15_itm_4 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm_1_7 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_and_484_cse ) begin
      while_slc_111_48_4_itm_7 <= while_slc_111_48_4_itm_6;
      while_slc_111_48_2_itm_8 <= while_slc_111_48_2_itm_7;
      while_slc_111_48_5_itm_7 <= while_slc_111_48_5_itm_6;
      while_slc_while_mul_cmp_13_z_mxwt_1_111_0_itm_7 <= while_slc_while_mul_cmp_13_z_mxwt_1_111_0_itm_6;
      while_slc_while_mul_cmp_3_z_mxwt_1_111_0_itm_7 <= while_slc_while_mul_cmp_3_z_mxwt_1_111_0_itm_6;
      while_slc_while_mul_24_208_1_itm_5 <= while_slc_while_mul_24_208_1_itm_4;
      while_slc_111_48_15_itm_4 <= while_slc_111_48_15_itm_3;
      while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm_1_7 <= while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm_1_6;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_asn_itm_16 <= 208'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & while_nor_91_cse & (fsm_output[2]) ) begin
      while_asn_itm_16 <= while_mul_67_cmp_z_mxwt;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_stage_v_16 <= 1'b0;
    end
    else if ( run_wen & (and_735_cse | and_947_cse) ) begin
      while_stage_v_16 <= ~ and_735_cse;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_asn_itm_7_1 <= 113'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_acc_78_cse_sva_1_1 <= 17'b00000000000000000;
      while_asn_itm_3_1 <= 113'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_mul_26_cse_sva_3 <= 113'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_asn_itm_6_3 <= 113'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_26_cmp_z_mxwt_112_0_itm_1 <= 113'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_asn_itm_13_3 <= 128'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_37_cmp_z_mxwt_1_159_0_itm_2 <= 160'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_cmp_6_z_mxwt_1_111_0_itm_2 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm_1_1 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_115_cmp_z_mxwt_3_115_0_itm_1 <= 116'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_asn_itm_15_1 <= 113'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      reg_0_operator_for_7_reg_0_operator_for_slc_while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_64_63_0_1_itm_4
          <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_cmp_14_z_mxwt_1_111_0_itm_1 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm_1_1_1 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_cmp_3_z_mxwt_1_111_0_itm_1 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_cmp_13_z_mxwt_1_111_0_itm_1 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_5_itm_1 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_2_itm_2 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_4_itm_1 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_and_493_cse ) begin
      while_asn_itm_7_1 <= while_asn_itm_7;
      while_acc_78_cse_sva_1_1 <= while_acc_78_cse_sva;
      while_asn_itm_3_1 <= while_asn_itm_3;
      while_mul_26_cse_sva_3 <= while_mul_26_cse_sva_2;
      while_asn_itm_6_3 <= while_asn_itm_6_2;
      while_slc_while_mul_26_cmp_z_mxwt_112_0_itm_1 <= while_slc_while_mul_26_cmp_z_mxwt_112_0_itm;
      while_asn_itm_13_3 <= while_asn_itm_13_2;
      while_slc_while_mul_37_cmp_z_mxwt_1_159_0_itm_2 <= while_slc_while_mul_37_cmp_z_mxwt_1_159_0_itm_1;
      while_slc_while_mul_cmp_6_z_mxwt_1_111_0_itm_2 <= while_slc_while_mul_cmp_6_z_mxwt_1_111_0_itm_1;
      while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm_1_1 <= while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm;
      while_slc_while_mul_115_cmp_z_mxwt_3_115_0_itm_1 <= while_slc_while_mul_115_cmp_z_mxwt_3_115_0_itm;
      while_asn_itm_15_1 <= while_asn_itm_15;
      reg_0_operator_for_7_reg_0_operator_for_slc_while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_64_63_0_1_itm_4
          <= reg_0_operator_for_7_reg_0_operator_for_slc_while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_64_63_0_3_itm_3;
      while_slc_while_mul_cmp_14_z_mxwt_1_111_0_itm_1 <= while_slc_while_mul_cmp_14_z_mxwt_1_111_0_itm;
      while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm_1_1_1 <= while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm_1;
      while_slc_while_mul_cmp_3_z_mxwt_1_111_0_itm_1 <= while_slc_while_mul_cmp_3_z_mxwt_1_111_0_itm;
      while_slc_while_mul_cmp_13_z_mxwt_1_111_0_itm_1 <= while_slc_while_mul_cmp_13_z_mxwt_1_111_0_itm;
      while_slc_111_48_5_itm_1 <= while_slc_111_48_5_itm;
      while_slc_111_48_2_itm_2 <= while_slc_111_48_2_itm_1;
      while_slc_111_48_4_itm_1 <= while_slc_111_48_4_itm;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_asn_itm_4 <= 114'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_asn_itm_1_2 <= 113'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_asn_183_itm <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_37_cmp_z_mxwt_1_159_0_1_itm <= 160'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_asn_itm_9 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_cmp_6_z_mxwt_1_111_0_itm <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_cmp_8_z_mxwt_1_111_0_itm <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_2_itm <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_cmp_9_z_mxwt_1_111_0_itm <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_and_496_cse ) begin
      while_asn_itm_4 <= while_mul_26_cmp_1_z_mxwt;
      while_asn_itm_1_2 <= while_mul_36_cmp_1_z;
      while_asn_183_itm <= while_mul_108_cmp_z_mxwt;
      while_slc_while_mul_37_cmp_z_mxwt_1_159_0_1_itm <= while_mul_37_cmp_z_mxwt_1;
      while_asn_itm_9 <= while_mul_108_cmp_1_z;
      while_slc_while_mul_cmp_6_z_mxwt_1_111_0_itm <= while_mul_cmp_6_z_mxwt_1;
      while_slc_while_mul_cmp_8_z_mxwt_1_111_0_itm <= while_mul_cmp_8_z_mxwt_1;
      while_slc_111_48_2_itm <= readslicef_112_64_48(while_acc_3_nl);
      while_slc_while_mul_cmp_9_z_mxwt_1_111_0_itm <= while_mul_cmp_9_z_mxwt_1;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_stage_v_12 <= 1'b0;
    end
    else if ( run_wen & (and_662_cse | and_693_cse) ) begin
      while_stage_v_12 <= ~ and_662_cse;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_slc_111_48_18_ncse_sva <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_21_ncse_sva <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_20_ncse_sva <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_19_ncse_sva <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_17_ncse_sva <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_16_ncse_sva <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_ncse_sva <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_asn_itm_6 <= 113'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_asn_itm_13 <= 128'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_and_340_cse ) begin
      while_slc_111_48_18_ncse_sva <= while_acc_111_itm_111_48_1;
      while_slc_111_48_21_ncse_sva <= z_out_7_111_48;
      while_slc_111_48_20_ncse_sva <= while_acc_130_itm_111_48_1;
      while_slc_111_48_19_ncse_sva <= z_out_5_111_48;
      while_slc_111_48_17_ncse_sva <= z_out_1_111_48;
      while_slc_111_48_16_ncse_sva <= readslicef_112_64_48(while_acc_113_nl);
      while_slc_111_48_ncse_sva <= z_out_111_48;
      while_asn_itm_6 <= while_mul_36_cmp_z_mxwt_1;
      while_asn_itm_13 <= while_mul_cmp_2_z_mxwt_2;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_stage_v_8 <= 1'b0;
    end
    else if ( run_wen & (and_659_cse | and_689_cse) ) begin
      while_stage_v_8 <= ~ and_659_cse;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_38_cse_sva <= 128'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_8_ncse_sva <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_9_ncse_sva <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_7_ncse_sva <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_6_ncse_sva <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_1_ncse_sva <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_cmp_14_z_mxwt_2_111_0_itm <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_cmp_10_z_mxwt_2_111_0_itm <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_cmp_11_z_mxwt_2_111_0_itm <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_and_345_cse ) begin
      while_mul_38_cse_sva <= while_mul_cmp_2_z_mxwt_2;
      while_slc_111_48_8_ncse_sva <= z_out_6_111_48;
      while_slc_111_48_9_ncse_sva <= while_acc_130_itm_111_48_1;
      while_slc_111_48_7_ncse_sva <= z_out_111_48;
      while_slc_111_48_6_ncse_sva <= z_out_1_111_48;
      while_slc_111_48_1_ncse_sva <= z_out_5_111_48;
      while_slc_while_mul_cmp_14_z_mxwt_2_111_0_itm <= while_mul_cmp_14_z_mxwt_2;
      while_slc_while_mul_cmp_10_z_mxwt_2_111_0_itm <= while_mul_cmp_10_z_mxwt_2;
      while_slc_while_mul_cmp_11_z_mxwt_2_111_0_itm <= while_mul_cmp_11_z_mxwt_2;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_stage_v_4 <= 1'b0;
    end
    else if ( run_wen & (and_478_cse | and_759_cse) ) begin
      while_stage_v_4 <= ~ and_478_cse;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_sva_1023_192
          <= 832'b
    end
    else if ( run_wen & (fsm_output[1]) & while_and_79_tmp ) begin
      while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_sva_1023_192
          <= rotate_in_Pop_mioi_idat_mxwt[959:128];
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_slc_while_acc_46_207_1_itm <= 207'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & (~(while_stage_v_33 | or_tmp_783)) ) begin
      while_slc_while_acc_46_207_1_itm <= z_out_2_207_1;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_slc_207_144_2_ncse_sva <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & (~(or_dcpl_43 | while_stage_v_33 | or_tmp_783)) ) begin
      while_slc_207_144_2_ncse_sva <= readslicef_208_64_144(while_acc_80_nl);
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_slc_while_mul_36_cmp_1_z_111_0_itm_1_2 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_asn_itm_3 <= 113'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_26_cmp_z_mxwt_112_0_itm <= 113'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_115_cmp_z_mxwt_3_115_0_itm <= 116'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_and_361_cse ) begin
      while_slc_while_mul_36_cmp_1_z_111_0_itm_1_2 <= while_mul_36_cmp_1_z[111:0];
      while_asn_itm_3 <= while_mul_36_cmp_z_mxwt;
      while_slc_while_mul_26_cmp_z_mxwt_112_0_itm <= while_mul_26_cmp_z_mxwt[112:0];
      while_slc_while_mul_115_cmp_z_mxwt_3_115_0_itm <= while_mul_115_cmp_z_mxwt_3;
      while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm <= while_mul_cmp_1_z_mxwt_1;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_asn_itm_11 <= 114'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_asn_itm_7 <= 113'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_and_500_cse ) begin
      while_asn_itm_11 <= while_mul_26_cmp_z_mxwt;
      while_asn_itm_7 <= while_mul_36_cmp_1_z;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_acc_78_cse_sva <= 17'b00000000000000000;
      while_asn_itm_15 <= 113'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_4_itm <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_5_itm <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_cmp_13_z_mxwt_1_111_0_itm <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_cmp_3_z_mxwt_1_111_0_itm <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm_1 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_cmp_14_z_mxwt_1_111_0_itm <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_and_502_cse ) begin
      while_acc_78_cse_sva <= while_acc_78_cse_sva_1;
      while_asn_itm_15 <= while_mul_36_cmp_z_mxwt;
      while_slc_111_48_4_itm <= z_out_1_111_48;
      while_slc_111_48_5_itm <= z_out_4_111_48;
      while_slc_while_mul_cmp_13_z_mxwt_1_111_0_itm <= while_mul_cmp_13_z_mxwt_1;
      while_slc_while_mul_cmp_3_z_mxwt_1_111_0_itm <= while_mul_cmp_3_z_mxwt_1;
      while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm_1 <= while_mul_cmp_1_z_mxwt_1;
      while_slc_while_mul_cmp_14_z_mxwt_1_111_0_itm <= while_mul_cmp_14_z_mxwt_1;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_slc_while_mul_67_cmp_z_mxwt_1_177_0_itm <= 178'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_asn_185_itm <= 240'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_asn_189_itm <= 115'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_and_503_cse ) begin
      while_slc_while_mul_67_cmp_z_mxwt_1_177_0_itm <= while_mul_67_cmp_z_mxwt_1;
      while_asn_185_itm <= while_mul_76_cmp_z_mxwt_1;
      while_asn_189_itm <= while_mul_70_cmp_z_mxwt_1;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_slc_207_144_1_ncse_sva_2 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_159_96_ncse_sva_3 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_acc_81_206_143_ncse_sva_1 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_acc_86_cse_sva_2 <= 67'b0000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_115_cmp_z_mxwt_3_115_0_itm_5 <= 116'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_124_256_1_itm_1 <= 210'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_asn_189_itm_4 <= 115'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_asn_itm_15_5 <= 113'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      reg_0_operator_for_7_reg_0_operator_for_slc_while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_64_63_0_1_itm_8
          <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_15_itm_2 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm_1_5 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_24_208_1_itm_3 <= 208'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_cmp_3_z_mxwt_1_111_0_itm_5 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_mul_cmp_13_z_mxwt_1_111_0_itm_5 <= 112'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_5_itm_5 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_2_itm_6 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
      while_slc_111_48_4_itm_5 <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_and_507_cse ) begin
      while_slc_207_144_1_ncse_sva_2 <= while_slc_207_144_1_ncse_sva_1;
      while_slc_159_96_ncse_sva_3 <= while_slc_159_96_ncse_sva_2;
      while_slc_while_acc_81_206_143_ncse_sva_1 <= readslicef_207_64_143(while_acc_81_nl);
      while_acc_86_cse_sva_2 <= while_acc_86_cse_sva_1;
      while_slc_while_mul_115_cmp_z_mxwt_3_115_0_itm_5 <= while_slc_while_mul_115_cmp_z_mxwt_3_115_0_itm_4;
      while_slc_while_mul_124_256_1_itm_1 <= while_slc_while_mul_124_256_1_itm;
      while_asn_189_itm_4 <= while_asn_189_itm_3;
      while_asn_itm_15_5 <= while_asn_itm_15_4;
      reg_0_operator_for_7_reg_0_operator_for_slc_while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_64_63_0_1_itm_8
          <= reg_0_operator_for_7_reg_0_operator_for_slc_while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_64_63_0_1_itm_7;
      while_slc_111_48_15_itm_2 <= while_slc_111_48_15_itm_1;
      while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm_1_5 <= while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm_1_4;
      while_slc_while_mul_24_208_1_itm_3 <= while_slc_while_mul_24_208_1_itm_2;
      while_slc_while_mul_cmp_3_z_mxwt_1_111_0_itm_5 <= while_slc_while_mul_cmp_3_z_mxwt_1_111_0_itm_4;
      while_slc_while_mul_cmp_13_z_mxwt_1_111_0_itm_5 <= while_slc_while_mul_cmp_13_z_mxwt_1_111_0_itm_4;
      while_slc_111_48_5_itm_5 <= while_slc_111_48_5_itm_4;
      while_slc_111_48_2_itm_6 <= while_slc_111_48_2_itm_5;
      while_slc_111_48_4_itm_5 <= while_slc_111_48_4_itm_4;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_asn_180_itm <= 163'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
      while_slc_while_acc_82_206_143_ncse_sva <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( while_and_518_cse ) begin
      while_asn_180_itm <= while_mul_115_cmp_z_mxwt_2;
      while_slc_while_acc_82_206_143_ncse_sva <= readslicef_207_64_143(while_acc_82_nl);
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_asn_190_itm <= 256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & (~ while_stage_v_35) & (fsm_output[3]) ) begin
      while_asn_190_itm <= while_while_mul_cmp_z_mxwt_1;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_slc_while_mul_124_256_1_itm <= 210'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & (~(while_stage_v_31 | while_stage_v_30 | while_stage_v_29
        | or_tmp_783)) ) begin
      while_slc_while_mul_124_256_1_itm <= while_mul_110_cmp_z_mxwt_2;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      reg_0_operator_for_7_reg_0_operator_for_slc_while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_64_63_0_3_itm_1
          <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & (~((~ (fsm_output[4])) | or_dcpl_159)) ) begin
      reg_0_operator_for_7_reg_0_operator_for_slc_while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_64_63_0_3_itm_1
          <= reg_0_operator_for_7_reg_0_operator_for_slc_while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_64_63_0_3_itm;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_asn_itm_8 <= 178'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & (~ while_stage_v_23) & (fsm_output[3]) ) begin
      while_asn_itm_8 <= while_mul_25_cmp_z_mxwt_1;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_slc_while_mul_79_sdt_207_1_itm <= 207'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & (~ while_stage_v_31) & (fsm_output[3]) ) begin
      while_slc_while_mul_79_sdt_207_1_itm <= while_mul_34_cmp_1_z_mxwt_1;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      reg_0_operator_for_7_reg_0_operator_for_slc_while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_64_63_0_3_itm
          <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & (fsm_output[2]) & while_and_154_tmp ) begin
      reg_0_operator_for_7_reg_0_operator_for_slc_while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_64_63_0_3_itm
          <= while_Connections_InBlocking_nvhls_nv_scvector_ac_fixed_64_16_true_AC_TRN_AC_WRAP_16U_Connections_SYN_PORT_Pop_return_sva_1023_192[255:192];
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_slc_207_144_1_ncse_sva <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & (~((~ (fsm_output[2])) | or_dcpl_241)) ) begin
      while_slc_207_144_1_ncse_sva <= readslicef_208_64_144(while_acc_77_nl);
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_asn_187_itm <= 115'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & (fsm_output[1]) & while_and_25_tmp ) begin
      while_asn_187_itm <= while_mul_70_cmp_z_mxwt_1;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_mul_26_cse_sva <= 113'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & while_and_216_tmp & (fsm_output[3]) ) begin
      while_mul_26_cse_sva <= while_mul_26_cmp_z_mxwt_1;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_asn_188_itm <= 115'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & (~((~ (fsm_output[2])) | or_dcpl_206)) ) begin
      while_asn_188_itm <= while_mul_70_cmp_z_mxwt_1;
    end
  end
  assign nl_while_acc_106_nl = while_slc_while_mul_cmp_13_z_mxwt_1_111_0_itm_7 -
      while_mul_cmp_10_z_mxwt;
  assign while_acc_106_nl = nl_while_acc_106_nl[111:0];
  assign nl_while_acc_107_nl = while_slc_while_mul_cmp_3_z_mxwt_1_111_0_itm_7 - while_mul_cmp_z_mxwt;
  assign while_acc_107_nl = nl_while_acc_107_nl[111:0];
  assign nl_while_acc_76_nl = while_slc_while_mul_24_208_1_itm_5 + while_asn_itm_16
      + ({while_mul_70_cmp_z_mxwt , 94'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000});
  assign while_acc_76_nl = nl_while_acc_76_nl[207:0];
  assign nl_while_acc_108_nl = while_mul_cmp_9_z_mxwt - while_mul_cmp_2_z_mxwt;
  assign while_acc_108_nl = nl_while_acc_108_nl[111:0];
  assign nl_while_acc_102_nl = while_mul_110_cmp_z_mxwt + while_while_mul_cmp_z_mxwt
      + ({while_asn_itm_14 , 94'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000});
  assign while_acc_102_nl = nl_while_acc_102_nl[255:0];
  assign nl_while_acc_85_nl = (readslicef_256_163_93(while_acc_102_nl)) + while_mul_115_cmp_z_mxwt;
  assign while_acc_85_nl = nl_while_acc_85_nl[162:0];
  assign nl_while_acc_71_nl = while_mul_cmp_3_z_mxwt + while_mul_cmp_1_z_mxwt;
  assign while_acc_71_nl = nl_while_acc_71_nl[111:0];
  assign nl_while_acc_75_itm  = (z_out_3[64:47]) + 18'b000000000000000001;
  assign nl_while_acc_79_nl = ({(while_mul_44_cmp_z_mxwt_1[113:0]) , 46'b0000000000000000000000000000000000000000000000})
      + (~ while_slc_while_mul_37_cmp_z_mxwt_1_159_0_1_itm_3) + (while_mul_34_cmp_1_z_mxwt_2[207:48])
      + 160'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001;
  assign while_acc_79_nl = nl_while_acc_79_nl[159:0];
  assign nl_while_acc_4_nl = while_mul_cmp_11_z_mxwt_1 + while_slc_while_mul_cmp_10_z_mxwt_2_111_0_itm_1;
  assign while_acc_4_nl = nl_while_acc_4_nl[111:0];
  assign nl_while_acc_86_cse_sva  = conv_s2s_64_67(cfg_sin_beta) + conv_s2s_64_67(cfg_sin_3_beta)
      + conv_s2s_66_67({cfg_sin_3_beta , 2'b00});
  assign nl_while_acc_125_itm  = while_mul_110_cmp_z_mxwt_1 + (~ while_asn_190_itm_1);
  assign nl_while_acc_104_nl = while_slc_while_mul_34_cmp_z_mxwt_208_0_itm + (while_mul_110_cmp_z_mxwt_1[255:47])
      + ({while_slc_while_mul_115_cmp_z_mxwt_3_115_0_itm_6 , 93'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000});
  assign while_acc_104_nl = nl_while_acc_104_nl[208:0];
  assign nl_while_acc_90_nl = (readslicef_209_163_46(while_acc_104_nl)) - while_asn_180_itm_1;
  assign while_acc_90_nl = nl_while_acc_90_nl[162:0];
  assign nl_while_acc_3_nl = while_mul_cmp_5_z_mxwt_1 + while_slc_while_mul_cmp_11_z_mxwt_2_111_0_itm_1;
  assign while_acc_3_nl = nl_while_acc_3_nl[111:0];
  assign nl_while_acc_113_nl = while_mul_cmp_10_z_mxwt_2 - while_mul_cmp_5_z_mxwt_2;
  assign while_acc_113_nl = nl_while_acc_113_nl[111:0];
  assign nl_while_acc_80_nl = (~ while_slc_while_mul_34_cmp_z_mxwt_1_207_0_1_itm_2)
      + (while_while_mul_cmp_z_mxwt_1[209:2]) + ({while_asn_187_itm_4 , 93'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001});
  assign while_acc_80_nl = nl_while_acc_80_nl[207:0];
  assign nl_while_acc_81_nl = z_out_2_207_1 + while_slc_while_mul_79_sdt_207_1_itm;
  assign while_acc_81_nl = nl_while_acc_81_nl[206:0];
  assign nl_while_acc_82_nl = while_slc_while_acc_46_207_1_itm + (while_while_mul_cmp_z_mxwt_1[209:3]);
  assign while_acc_82_nl = nl_while_acc_82_nl[206:0];
  assign nl_while_acc_77_nl = (~ while_mul_34_cmp_z_mxwt_1) + ({while_slc_while_mul_37_cmp_z_mxwt_1_159_0_itm_4
      , 48'b000000000000000000000000000000000000000000000001}) + ({while_slc_while_mul_cmp_6_z_mxwt_1_111_0_itm_4
      , 96'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000});
  assign while_acc_77_nl = nl_while_acc_77_nl[207:0];
  assign while_while_mux_4_nl = MUX_v_112_2_2((~ while_mul_cmp_5_z_mxwt), (~ while_mul_cmp_z_mxwt_2),
      or_731_cse_1);
  assign while_mux1h_640_nl = MUX1HOT_v_112_3_2(while_mul_cmp_7_z_mxwt, while_mul_cmp_7_z_mxwt_2,
      while_slc_while_mul_cmp_14_z_mxwt_2_111_0_itm, {(fsm_output[4]) , (fsm_output[1])
      , (fsm_output[2])});
  assign nl_acc_nl = ({while_while_mux_4_nl , 1'b1}) + ({while_mux1h_640_nl , 1'b1});
  assign acc_nl = nl_acc_nl[112:0];
  assign z_out_111_48 = readslicef_113_64_49(acc_nl);
  assign while_mux1h_641_nl = MUX1HOT_v_112_3_2((~ while_mul_cmp_11_z_mxwt), (~ while_mul_cmp_z_mxwt_1),
      (~ while_mul_cmp_9_z_mxwt_2), {(fsm_output[4]) , (fsm_output[3]) , or_731_cse_1});
  assign while_mux1h_642_nl = MUX1HOT_v_112_3_2(while_mul_cmp_8_z_mxwt, while_slc_while_mul_cmp_8_z_mxwt_1_111_0_itm_1,
      while_mul_cmp_8_z_mxwt_2, {(fsm_output[4]) , (fsm_output[3]) , or_731_cse_1});
  assign nl_acc_1_nl = ({while_mux1h_641_nl , 1'b1}) + ({while_mux1h_642_nl , 1'b1});
  assign acc_1_nl = nl_acc_1_nl[112:0];
  assign z_out_1_111_48 = readslicef_113_64_49(acc_1_nl);
  assign while_mux_579_nl = MUX_v_112_2_2((while_asn_188_itm_4[114:3]), while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm_4,
      fsm_output[4]);
  assign while_not_235_nl = ~ (fsm_output[4]);
  assign while_while_and_87_nl = MUX_v_3_2_2(3'b000, (while_asn_188_itm_4[2:0]),
      while_not_235_nl);
  assign nl_z_out_2_207_1 = ({while_mux_579_nl , while_while_and_87_nl , 92'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000})
      - (while_mul_76_cmp_z_mxwt[206:0]);
  assign z_out_2_207_1 = nl_z_out_2_207_1[206:0];
  assign while_mux_580_nl = MUX_v_64_2_2(cfg_cos_beta, cfg_cos_2_beta, fsm_output[1]);
  assign while_mux_581_nl = MUX_v_63_2_2((cfg_cos_3_beta[63:1]), (cfg_cos_2_beta[63:1]),
      fsm_output[1]);
  assign nl_z_out_3 = conv_s2u_64_65(while_mux_580_nl) + conv_s2u_63_65(while_mux_581_nl);
  assign z_out_3 = nl_z_out_3[64:0];
  assign while_mux_582_nl = MUX_v_112_2_2(while_mul_cmp_12_z_mxwt, while_mul_cmp_12_z_mxwt_1,
      fsm_output[3]);
  assign while_mux_583_nl = MUX_v_112_2_2(while_slc_while_mul_cmp_1_z_mxwt_1_111_0_itm_1_7,
      while_slc_while_mul_cmp_9_z_mxwt_1_111_0_itm_1, fsm_output[3]);
  assign nl_while_acc_136_nl = while_mux_582_nl + while_mux_583_nl;
  assign while_acc_136_nl = nl_while_acc_136_nl[111:0];
  assign z_out_4_111_48 = readslicef_112_64_48(while_acc_136_nl);
  assign while_mux_584_nl = MUX_v_112_2_2(while_mul_cmp_13_z_mxwt, while_mul_cmp_13_z_mxwt_2,
      or_731_cse_1);
  assign while_mux_585_nl = MUX_v_112_2_2(while_mul_cmp_14_z_mxwt, while_mul_cmp_12_z_mxwt_2,
      or_731_cse_1);
  assign nl_while_acc_137_nl = while_mux_584_nl + while_mux_585_nl;
  assign while_acc_137_nl = nl_while_acc_137_nl[111:0];
  assign z_out_5_111_48 = readslicef_112_64_48(while_acc_137_nl);
  assign while_mux_586_nl = MUX_v_112_2_2(while_mul_cmp_6_z_mxwt, while_mul_cmp_6_z_mxwt_2,
      fsm_output[1]);
  assign while_mux_587_nl = MUX_v_112_2_2(while_mul_cmp_4_z_mxwt, while_mul_cmp_5_z_mxwt_2,
      fsm_output[1]);
  assign nl_while_acc_138_nl = while_mux_586_nl + while_mux_587_nl;
  assign while_acc_138_nl = nl_while_acc_138_nl[111:0];
  assign z_out_6_111_48 = readslicef_112_64_48(while_acc_138_nl);
  assign while_mux_588_nl = MUX_v_112_2_2(while_mul_cmp_7_z_mxwt_2, while_mul_cmp_7_z_mxwt_1,
      fsm_output[3]);
  assign while_mux_589_nl = MUX_v_112_2_2(while_mul_cmp_6_z_mxwt_2, while_slc_while_mul_cmp_14_z_mxwt_1_111_0_itm_3,
      fsm_output[3]);
  assign nl_while_acc_139_nl = while_mux_588_nl + while_mux_589_nl;
  assign while_acc_139_nl = nl_while_acc_139_nl[111:0];
  assign z_out_7_111_48 = readslicef_112_64_48(while_acc_139_nl);
  assign operator_96_48_true_AC_TRN_AC_WRAP_3_operator_96_48_true_AC_TRN_AC_WRAP_3_or_1_nl
      = (~((fsm_output[3:2]!=2'b00))) | (fsm_output[1]);
  assign operator_96_48_true_AC_TRN_AC_WRAP_3_operator_96_48_true_AC_TRN_AC_WRAP_3_mux_2_nl
      = MUX_v_62_2_2((cfg_cos_2_beta[62:1]), (cfg_cos_2_beta[63:2]), fsm_output[2]);
  assign nl_z_out_8 = conv_u2u_50_65({operator_96_48_true_AC_TRN_AC_WRAP_3_operator_96_48_true_AC_TRN_AC_WRAP_3_or_1_nl
      , 2'b01 , (fsm_output[2]) , 46'b0000000000000000000000000000000000000000000000})
      + conv_s2u_63_65({(cfg_cos_2_beta[63]) , operator_96_48_true_AC_TRN_AC_WRAP_3_operator_96_48_true_AC_TRN_AC_WRAP_3_mux_2_nl})
      + conv_s2u_64_65(cfg_cos_2_beta);
  assign z_out_8 = nl_z_out_8[64:0];

  function automatic  MUX1HOT_s_1_3_2;
    input  input_2;
    input  input_1;
    input  input_0;
    input [2:0] sel;
    reg  result;
  begin
    result = input_0 & sel[0];
    result = result | (input_1 & sel[1]);
    result = result | (input_2 & sel[2]);
    MUX1HOT_s_1_3_2 = result;
  end
  endfunction


  function automatic  MUX1HOT_s_1_4_2;
    input  input_3;
    input  input_2;
    input  input_1;
    input  input_0;
    input [3:0] sel;
    reg  result;
  begin
    result = input_0 & sel[0];
    result = result | (input_1 & sel[1]);
    result = result | (input_2 & sel[2]);
    result = result | (input_3 & sel[3]);
    MUX1HOT_s_1_4_2 = result;
  end
  endfunction


  function automatic [111:0] MUX1HOT_v_112_3_2;
    input [111:0] input_2;
    input [111:0] input_1;
    input [111:0] input_0;
    input [2:0] sel;
    reg [111:0] result;
  begin
    result = input_0 & {112{sel[0]}};
    result = result | (input_1 & {112{sel[1]}});
    result = result | (input_2 & {112{sel[2]}});
    MUX1HOT_v_112_3_2 = result;
  end
  endfunction


  function automatic [111:0] MUX1HOT_v_112_4_2;
    input [111:0] input_3;
    input [111:0] input_2;
    input [111:0] input_1;
    input [111:0] input_0;
    input [3:0] sel;
    reg [111:0] result;
  begin
    result = input_0 & {112{sel[0]}};
    result = result | (input_1 & {112{sel[1]}});
    result = result | (input_2 & {112{sel[2]}});
    result = result | (input_3 & {112{sel[3]}});
    MUX1HOT_v_112_4_2 = result;
  end
  endfunction


  function automatic [112:0] MUX1HOT_v_113_4_2;
    input [112:0] input_3;
    input [112:0] input_2;
    input [112:0] input_1;
    input [112:0] input_0;
    input [3:0] sel;
    reg [112:0] result;
  begin
    result = input_0 & {113{sel[0]}};
    result = result | (input_1 & {113{sel[1]}});
    result = result | (input_2 & {113{sel[2]}});
    result = result | (input_3 & {113{sel[3]}});
    MUX1HOT_v_113_4_2 = result;
  end
  endfunction


  function automatic [113:0] MUX1HOT_v_114_3_2;
    input [113:0] input_2;
    input [113:0] input_1;
    input [113:0] input_0;
    input [2:0] sel;
    reg [113:0] result;
  begin
    result = input_0 & {114{sel[0]}};
    result = result | (input_1 & {114{sel[1]}});
    result = result | (input_2 & {114{sel[2]}});
    MUX1HOT_v_114_3_2 = result;
  end
  endfunction


  function automatic [127:0] MUX1HOT_v_128_4_2;
    input [127:0] input_3;
    input [127:0] input_2;
    input [127:0] input_1;
    input [127:0] input_0;
    input [3:0] sel;
    reg [127:0] result;
  begin
    result = input_0 & {128{sel[0]}};
    result = result | (input_1 & {128{sel[1]}});
    result = result | (input_2 & {128{sel[2]}});
    result = result | (input_3 & {128{sel[3]}});
    MUX1HOT_v_128_4_2 = result;
  end
  endfunction


  function automatic [175:0] MUX1HOT_v_176_4_2;
    input [175:0] input_3;
    input [175:0] input_2;
    input [175:0] input_1;
    input [175:0] input_0;
    input [3:0] sel;
    reg [175:0] result;
  begin
    result = input_0 & {176{sel[0]}};
    result = result | (input_1 & {176{sel[1]}});
    result = result | (input_2 & {176{sel[2]}});
    result = result | (input_3 & {176{sel[3]}});
    MUX1HOT_v_176_4_2 = result;
  end
  endfunction


  function automatic [176:0] MUX1HOT_v_177_4_2;
    input [176:0] input_3;
    input [176:0] input_2;
    input [176:0] input_1;
    input [176:0] input_0;
    input [3:0] sel;
    reg [176:0] result;
  begin
    result = input_0 & {177{sel[0]}};
    result = result | (input_1 & {177{sel[1]}});
    result = result | (input_2 & {177{sel[2]}});
    result = result | (input_3 & {177{sel[3]}});
    MUX1HOT_v_177_4_2 = result;
  end
  endfunction


  function automatic [177:0] MUX1HOT_v_178_4_2;
    input [177:0] input_3;
    input [177:0] input_2;
    input [177:0] input_1;
    input [177:0] input_0;
    input [3:0] sel;
    reg [177:0] result;
  begin
    result = input_0 & {178{sel[0]}};
    result = result | (input_1 & {178{sel[1]}});
    result = result | (input_2 & {178{sel[2]}});
    result = result | (input_3 & {178{sel[3]}});
    MUX1HOT_v_178_4_2 = result;
  end
  endfunction


  function automatic [16:0] MUX1HOT_v_17_3_2;
    input [16:0] input_2;
    input [16:0] input_1;
    input [16:0] input_0;
    input [2:0] sel;
    reg [16:0] result;
  begin
    result = input_0 & {17{sel[0]}};
    result = result | (input_1 & {17{sel[1]}});
    result = result | (input_2 & {17{sel[2]}});
    MUX1HOT_v_17_3_2 = result;
  end
  endfunction


  function automatic [239:0] MUX1HOT_v_240_4_2;
    input [239:0] input_3;
    input [239:0] input_2;
    input [239:0] input_1;
    input [239:0] input_0;
    input [3:0] sel;
    reg [239:0] result;
  begin
    result = input_0 & {240{sel[0]}};
    result = result | (input_1 & {240{sel[1]}});
    result = result | (input_2 & {240{sel[2]}});
    result = result | (input_3 & {240{sel[3]}});
    MUX1HOT_v_240_4_2 = result;
  end
  endfunction


  function automatic [241:0] MUX1HOT_v_242_3_2;
    input [241:0] input_2;
    input [241:0] input_1;
    input [241:0] input_0;
    input [2:0] sel;
    reg [241:0] result;
  begin
    result = input_0 & {242{sel[0]}};
    result = result | (input_1 & {242{sel[1]}});
    result = result | (input_2 & {242{sel[2]}});
    MUX1HOT_v_242_3_2 = result;
  end
  endfunction


  function automatic [2:0] MUX1HOT_v_3_3_2;
    input [2:0] input_2;
    input [2:0] input_1;
    input [2:0] input_0;
    input [2:0] sel;
    reg [2:0] result;
  begin
    result = input_0 & {3{sel[0]}};
    result = result | (input_1 & {3{sel[1]}});
    result = result | (input_2 & {3{sel[2]}});
    MUX1HOT_v_3_3_2 = result;
  end
  endfunction


  function automatic [47:0] MUX1HOT_v_48_3_2;
    input [47:0] input_2;
    input [47:0] input_1;
    input [47:0] input_0;
    input [2:0] sel;
    reg [47:0] result;
  begin
    result = input_0 & {48{sel[0]}};
    result = result | (input_1 & {48{sel[1]}});
    result = result | (input_2 & {48{sel[2]}});
    MUX1HOT_v_48_3_2 = result;
  end
  endfunction


  function automatic [4:0] MUX1HOT_v_5_3_2;
    input [4:0] input_2;
    input [4:0] input_1;
    input [4:0] input_0;
    input [2:0] sel;
    reg [4:0] result;
  begin
    result = input_0 & {5{sel[0]}};
    result = result | (input_1 & {5{sel[1]}});
    result = result | (input_2 & {5{sel[2]}});
    MUX1HOT_v_5_3_2 = result;
  end
  endfunction


  function automatic [63:0] MUX1HOT_v_64_3_2;
    input [63:0] input_2;
    input [63:0] input_1;
    input [63:0] input_0;
    input [2:0] sel;
    reg [63:0] result;
  begin
    result = input_0 & {64{sel[0]}};
    result = result | (input_1 & {64{sel[1]}});
    result = result | (input_2 & {64{sel[2]}});
    MUX1HOT_v_64_3_2 = result;
  end
  endfunction


  function automatic [63:0] MUX1HOT_v_64_4_2;
    input [63:0] input_3;
    input [63:0] input_2;
    input [63:0] input_1;
    input [63:0] input_0;
    input [3:0] sel;
    reg [63:0] result;
  begin
    result = input_0 & {64{sel[0]}};
    result = result | (input_1 & {64{sel[1]}});
    result = result | (input_2 & {64{sel[2]}});
    result = result | (input_3 & {64{sel[3]}});
    MUX1HOT_v_64_4_2 = result;
  end
  endfunction


  function automatic [64:0] MUX1HOT_v_65_3_2;
    input [64:0] input_2;
    input [64:0] input_1;
    input [64:0] input_0;
    input [2:0] sel;
    reg [64:0] result;
  begin
    result = input_0 & {65{sel[0]}};
    result = result | (input_1 & {65{sel[1]}});
    result = result | (input_2 & {65{sel[2]}});
    MUX1HOT_v_65_3_2 = result;
  end
  endfunction


  function automatic [64:0] MUX1HOT_v_65_4_2;
    input [64:0] input_3;
    input [64:0] input_2;
    input [64:0] input_1;
    input [64:0] input_0;
    input [3:0] sel;
    reg [64:0] result;
  begin
    result = input_0 & {65{sel[0]}};
    result = result | (input_1 & {65{sel[1]}});
    result = result | (input_2 & {65{sel[2]}});
    result = result | (input_3 & {65{sel[3]}});
    MUX1HOT_v_65_4_2 = result;
  end
  endfunction


  function automatic [65:0] MUX1HOT_v_66_3_2;
    input [65:0] input_2;
    input [65:0] input_1;
    input [65:0] input_0;
    input [2:0] sel;
    reg [65:0] result;
  begin
    result = input_0 & {66{sel[0]}};
    result = result | (input_1 & {66{sel[1]}});
    result = result | (input_2 & {66{sel[2]}});
    MUX1HOT_v_66_3_2 = result;
  end
  endfunction


  function automatic [66:0] MUX1HOT_v_67_4_2;
    input [66:0] input_3;
    input [66:0] input_2;
    input [66:0] input_1;
    input [66:0] input_0;
    input [3:0] sel;
    reg [66:0] result;
  begin
    result = input_0 & {67{sel[0]}};
    result = result | (input_1 & {67{sel[1]}});
    result = result | (input_2 & {67{sel[2]}});
    result = result | (input_3 & {67{sel[3]}});
    MUX1HOT_v_67_4_2 = result;
  end
  endfunction


  function automatic [67:0] MUX1HOT_v_68_4_2;
    input [67:0] input_3;
    input [67:0] input_2;
    input [67:0] input_1;
    input [67:0] input_0;
    input [3:0] sel;
    reg [67:0] result;
  begin
    result = input_0 & {68{sel[0]}};
    result = result | (input_1 & {68{sel[1]}});
    result = result | (input_2 & {68{sel[2]}});
    result = result | (input_3 & {68{sel[3]}});
    MUX1HOT_v_68_4_2 = result;
  end
  endfunction


  function automatic [6:0] MUX1HOT_v_7_3_2;
    input [6:0] input_2;
    input [6:0] input_1;
    input [6:0] input_0;
    input [2:0] sel;
    reg [6:0] result;
  begin
    result = input_0 & {7{sel[0]}};
    result = result | (input_1 & {7{sel[1]}});
    result = result | (input_2 & {7{sel[2]}});
    MUX1HOT_v_7_3_2 = result;
  end
  endfunction


  function automatic [7:0] MUX1HOT_v_8_3_2;
    input [7:0] input_2;
    input [7:0] input_1;
    input [7:0] input_0;
    input [2:0] sel;
    reg [7:0] result;
  begin
    result = input_0 & {8{sel[0]}};
    result = result | (input_1 & {8{sel[1]}});
    result = result | (input_2 & {8{sel[2]}});
    MUX1HOT_v_8_3_2 = result;
  end
  endfunction


  function automatic  MUX_s_1_2_2;
    input  input_0;
    input  input_1;
    input  sel;
    reg  result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_s_1_2_2 = result;
  end
  endfunction


  function automatic [111:0] MUX_v_112_2_2;
    input [111:0] input_0;
    input [111:0] input_1;
    input  sel;
    reg [111:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_112_2_2 = result;
  end
  endfunction


  function automatic [1:0] MUX_v_2_2_2;
    input [1:0] input_0;
    input [1:0] input_1;
    input  sel;
    reg [1:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_2_2_2 = result;
  end
  endfunction


  function automatic [2:0] MUX_v_3_2_2;
    input [2:0] input_0;
    input [2:0] input_1;
    input  sel;
    reg [2:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_3_2_2 = result;
  end
  endfunction


  function automatic [47:0] MUX_v_48_2_2;
    input [47:0] input_0;
    input [47:0] input_1;
    input  sel;
    reg [47:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_48_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input  sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction


  function automatic [4:0] MUX_v_5_2_2;
    input [4:0] input_0;
    input [4:0] input_1;
    input  sel;
    reg [4:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_5_2_2 = result;
  end
  endfunction


  function automatic [61:0] MUX_v_62_2_2;
    input [61:0] input_0;
    input [61:0] input_1;
    input  sel;
    reg [61:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_62_2_2 = result;
  end
  endfunction


  function automatic [62:0] MUX_v_63_2_2;
    input [62:0] input_0;
    input [62:0] input_1;
    input  sel;
    reg [62:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_63_2_2 = result;
  end
  endfunction


  function automatic [63:0] MUX_v_64_2_2;
    input [63:0] input_0;
    input [63:0] input_1;
    input  sel;
    reg [63:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_64_2_2 = result;
  end
  endfunction


  function automatic [63:0] readslicef_112_64_48;
    input [111:0] vector;
    reg [111:0] tmp;
  begin
    tmp = vector >> 48;
    readslicef_112_64_48 = tmp[63:0];
  end
  endfunction


  function automatic [63:0] readslicef_113_64_49;
    input [112:0] vector;
    reg [112:0] tmp;
  begin
    tmp = vector >> 49;
    readslicef_113_64_49 = tmp[63:0];
  end
  endfunction


  function automatic [63:0] readslicef_160_64_96;
    input [159:0] vector;
    reg [159:0] tmp;
  begin
    tmp = vector >> 96;
    readslicef_160_64_96 = tmp[63:0];
  end
  endfunction


  function automatic [63:0] readslicef_162_64_98;
    input [161:0] vector;
    reg [161:0] tmp;
  begin
    tmp = vector >> 98;
    readslicef_162_64_98 = tmp[63:0];
  end
  endfunction


  function automatic [63:0] readslicef_163_64_99;
    input [162:0] vector;
    reg [162:0] tmp;
  begin
    tmp = vector >> 99;
    readslicef_163_64_99 = tmp[63:0];
  end
  endfunction


  function automatic [63:0] readslicef_207_64_143;
    input [206:0] vector;
    reg [206:0] tmp;
  begin
    tmp = vector >> 143;
    readslicef_207_64_143 = tmp[63:0];
  end
  endfunction


  function automatic [63:0] readslicef_208_64_144;
    input [207:0] vector;
    reg [207:0] tmp;
  begin
    tmp = vector >> 144;
    readslicef_208_64_144 = tmp[63:0];
  end
  endfunction


  function automatic [162:0] readslicef_209_163_46;
    input [208:0] vector;
    reg [208:0] tmp;
  begin
    tmp = vector >> 46;
    readslicef_209_163_46 = tmp[162:0];
  end
  endfunction


  function automatic [161:0] readslicef_210_162_48;
    input [209:0] vector;
    reg [209:0] tmp;
  begin
    tmp = vector >> 48;
    readslicef_210_162_48 = tmp[161:0];
  end
  endfunction


  function automatic [162:0] readslicef_256_163_93;
    input [255:0] vector;
    reg [255:0] tmp;
  begin
    tmp = vector >> 93;
    readslicef_256_163_93 = tmp[162:0];
  end
  endfunction


  function automatic [63:0] readslicef_256_64_192;
    input [255:0] vector;
    reg [255:0] tmp;
  begin
    tmp = vector >> 192;
    readslicef_256_64_192 = tmp[63:0];
  end
  endfunction


  function automatic [112:0] signext_113_68;
    input [67:0] vector;
  begin
    signext_113_68= {{45{vector[67]}}, vector};
  end
  endfunction


  function automatic [177:0] signext_178_177;
    input [176:0] vector;
  begin
    signext_178_177= {{1{vector[176]}}, vector};
  end
  endfunction


  function automatic [16:0] signext_17_16;
    input [15:0] vector;
  begin
    signext_17_16= {{1{vector[15]}}, vector};
  end
  endfunction


  function automatic [1:0] signext_2_1;
    input  vector;
  begin
    signext_2_1= {{1{vector}}, vector};
  end
  endfunction


  function automatic [2:0] signext_3_1;
    input  vector;
  begin
    signext_3_1= {{2{vector}}, vector};
  end
  endfunction


  function automatic [3:0] signext_4_1;
    input  vector;
  begin
    signext_4_1= {{3{vector}}, vector};
  end
  endfunction


  function automatic [66:0] signext_67_66;
    input [65:0] vector;
  begin
    signext_67_66= {{1{vector[65]}}, vector};
  end
  endfunction


  function automatic [16:0] conv_s2s_16_17 ;
    input [15:0]  vector ;
  begin
    conv_s2s_16_17 = {vector[15], vector};
  end
  endfunction


  function automatic [62:0] conv_s2s_62_63 ;
    input [61:0]  vector ;
  begin
    conv_s2s_62_63 = {vector[61], vector};
  end
  endfunction


  function automatic [65:0] conv_s2s_64_66 ;
    input [63:0]  vector ;
  begin
    conv_s2s_64_66 = {{2{vector[63]}}, vector};
  end
  endfunction


  function automatic [66:0] conv_s2s_64_67 ;
    input [63:0]  vector ;
  begin
    conv_s2s_64_67 = {{3{vector[63]}}, vector};
  end
  endfunction


  function automatic [67:0] conv_s2s_64_68 ;
    input [63:0]  vector ;
  begin
    conv_s2s_64_68 = {{4{vector[63]}}, vector};
  end
  endfunction


  function automatic [65:0] conv_s2s_65_66 ;
    input [64:0]  vector ;
  begin
    conv_s2s_65_66 = {vector[64], vector};
  end
  endfunction


  function automatic [66:0] conv_s2s_66_67 ;
    input [65:0]  vector ;
  begin
    conv_s2s_66_67 = {vector[65], vector};
  end
  endfunction


  function automatic [64:0] conv_s2u_63_65 ;
    input [62:0]  vector ;
  begin
    conv_s2u_63_65 = {{2{vector[62]}}, vector};
  end
  endfunction


  function automatic [64:0] conv_s2u_64_65 ;
    input [63:0]  vector ;
  begin
    conv_s2u_64_65 = {vector[63], vector};
  end
  endfunction


  function automatic [64:0] conv_u2u_50_65 ;
    input [49:0]  vector ;
  begin
    conv_u2u_50_65 = {{15{1'b0}}, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    OutputBuffer_run
// ------------------------------------------------------------------


module OutputBuffer_run (
  clk, rst, cfg_block_size, cfg_output_base, sync2_val, sync2_rdy, sync2_msg, sync3_val,
      sync3_rdy, sync3_msg, dma_write_ctrl_val, dma_write_ctrl_rdy, dma_write_ctrl_msg,
      dma_write_chnl_val, dma_write_chnl_rdy, dma_write_chnl_msg, rotate_out_val,
      rotate_out_rdy, rotate_out_msg, mem_rsci_clken_d, mem_rsci_d_d, mem_rsci_q_d,
      mem_rsci_radr_d, mem_rsci_wadr_d, mem_rsci_readA_r_ram_ir_internal_RMASK_B_d,
      mem_rsci_we_d_pff
);
  input clk;
  input rst;
  input [63:0] cfg_block_size;
  input [63:0] cfg_output_base;
  input sync2_val;
  output sync2_rdy;
  input sync2_msg;
  output sync3_val;
  input sync3_rdy;
  output sync3_msg;
  output dma_write_ctrl_val;
  input dma_write_ctrl_rdy;
  output [66:0] dma_write_ctrl_msg;
  output dma_write_chnl_val;
  input dma_write_chnl_rdy;
  output [63:0] dma_write_chnl_msg;
  input rotate_out_val;
  output rotate_out_rdy;
  input [1023:0] rotate_out_msg;
  output mem_rsci_clken_d;
  output [63:0] mem_rsci_d_d;
  input [63:0] mem_rsci_q_d;
  output [13:0] mem_rsci_radr_d;
  output [13:0] mem_rsci_wadr_d;
  output mem_rsci_readA_r_ram_ir_internal_RMASK_B_d;
  output mem_rsci_we_d_pff;


  // Interconnect Declarations
  reg run_wen;
  wire sync2_Pop_mioi_wen_comp;
  wire rotate_out_Pop_mioi_wen_comp;
  wire [1023:0] rotate_out_Pop_mioi_idat_mxwt;
  wire dma_write_ctrl_Push_mioi_wen_comp;
  wire dma_write_chnl_Push_mioi_wen_comp;
  reg [63:0] dma_write_chnl_Push_mioi_idat;
  wire sync3_Push_mioi_wen_comp;
  reg [27:0] dma_write_ctrl_Push_mioi_idat_63_36;
  reg [31:0] dma_write_ctrl_Push_mioi_idat_31_0;
  wire [10:0] fsm_output;
  wire or_dcpl_6;
  wire exit_while_for_1_sva_mx0;
  wire exit_while_for_sva_mx0;
  reg [4:0] while_for_for_j_4_0_sva_1;
  wire while_and_cse;
  reg [31:0] while_for_1_i_sva;
  reg [3:0] while_for_for_j_4_0_sva_3_0_1;
  reg [1023:0] while_rotate_out_reg_data_sva;
  wire run_wen_rtff;
  reg reg_sync2_Pop_mioi_iswt0_tmp;
  reg reg_rotate_out_Pop_mioi_iswt0_tmp;
  reg reg_dma_write_ctrl_Push_mioi_iswt0_tmp;
  reg reg_dma_write_chnl_Push_mioi_iswt0_tmp;
  reg reg_sync3_Push_mioi_iswt0_tmp;
  wire while_mux_rmff;
  wire while_for_mux_3_rmff;
  wire while_mux_2_rmff;
  wire while_for_1_mux_rmff;
  wire while_mux_3_rmff;
  wire [31:0] z_out;
  wire [32:0] nl_z_out;
  wire operator_64_false_less_3;
  reg [27:0] while_for_1_i_sva_1_31_4;

  wire and_13_nl;
  wire and_17_nl;
  wire and_19_nl;
  wire nor_1_nl;
  wire[31:0] while_for_mux_5_nl;

  // Interconnect Declarations for Component Instantiations 
  wire [66:0] nl_OutputBuffer_run_dma_write_ctrl_Push_mioi_inst_dma_write_ctrl_Push_mioi_idat;
  assign nl_OutputBuffer_run_dma_write_ctrl_Push_mioi_inst_dma_write_ctrl_Push_mioi_idat
      = {3'b011 , dma_write_ctrl_Push_mioi_idat_63_36 , 4'b0000 , dma_write_ctrl_Push_mioi_idat_31_0};
  wire  nl_OutputBuffer_run_run_fsm_inst_while_for_for_C_1_tr0;
  assign nl_OutputBuffer_run_run_fsm_inst_while_for_for_C_1_tr0 = while_for_for_j_4_0_sva_1[4];
  OutputBuffer_run_sync2_Pop_mioi OutputBuffer_run_sync2_Pop_mioi_inst (
      .clk(clk),
      .rst(rst),
      .sync2_val(sync2_val),
      .sync2_rdy(sync2_rdy),
      .sync2_msg(sync2_msg),
      .sync2_Pop_mioi_oswt(reg_sync2_Pop_mioi_iswt0_tmp),
      .sync2_Pop_mioi_wen_comp(sync2_Pop_mioi_wen_comp),
      .sync2_Pop_mioi_oswt_pff(while_mux_rmff)
    );
  OutputBuffer_run_rotate_out_Pop_mioi OutputBuffer_run_rotate_out_Pop_mioi_inst
      (
      .clk(clk),
      .rst(rst),
      .rotate_out_val(rotate_out_val),
      .rotate_out_rdy(rotate_out_rdy),
      .rotate_out_msg(rotate_out_msg),
      .rotate_out_Pop_mioi_oswt(reg_rotate_out_Pop_mioi_iswt0_tmp),
      .rotate_out_Pop_mioi_wen_comp(rotate_out_Pop_mioi_wen_comp),
      .rotate_out_Pop_mioi_idat_mxwt(rotate_out_Pop_mioi_idat_mxwt),
      .rotate_out_Pop_mioi_oswt_pff(while_for_mux_3_rmff)
    );
  OutputBuffer_run_dma_write_ctrl_Push_mioi OutputBuffer_run_dma_write_ctrl_Push_mioi_inst
      (
      .clk(clk),
      .rst(rst),
      .dma_write_ctrl_val(dma_write_ctrl_val),
      .dma_write_ctrl_rdy(dma_write_ctrl_rdy),
      .dma_write_ctrl_msg(dma_write_ctrl_msg),
      .dma_write_ctrl_Push_mioi_oswt(reg_dma_write_ctrl_Push_mioi_iswt0_tmp),
      .dma_write_ctrl_Push_mioi_wen_comp(dma_write_ctrl_Push_mioi_wen_comp),
      .dma_write_ctrl_Push_mioi_idat(nl_OutputBuffer_run_dma_write_ctrl_Push_mioi_inst_dma_write_ctrl_Push_mioi_idat[66:0]),
      .dma_write_ctrl_Push_mioi_oswt_pff(while_mux_2_rmff)
    );
  OutputBuffer_run_dma_write_chnl_Push_mioi OutputBuffer_run_dma_write_chnl_Push_mioi_inst
      (
      .clk(clk),
      .rst(rst),
      .dma_write_chnl_val(dma_write_chnl_val),
      .dma_write_chnl_rdy(dma_write_chnl_rdy),
      .dma_write_chnl_msg(dma_write_chnl_msg),
      .dma_write_chnl_Push_mioi_oswt(reg_dma_write_chnl_Push_mioi_iswt0_tmp),
      .dma_write_chnl_Push_mioi_wen_comp(dma_write_chnl_Push_mioi_wen_comp),
      .dma_write_chnl_Push_mioi_idat(dma_write_chnl_Push_mioi_idat),
      .dma_write_chnl_Push_mioi_oswt_pff(while_for_1_mux_rmff)
    );
  OutputBuffer_run_sync3_Push_mioi OutputBuffer_run_sync3_Push_mioi_inst (
      .clk(clk),
      .rst(rst),
      .sync3_val(sync3_val),
      .sync3_rdy(sync3_rdy),
      .sync3_msg(sync3_msg),
      .sync3_Push_mioi_oswt(reg_sync3_Push_mioi_iswt0_tmp),
      .sync3_Push_mioi_wen_comp(sync3_Push_mioi_wen_comp),
      .sync3_Push_mioi_oswt_pff(while_mux_3_rmff)
    );
  OutputBuffer_run_staller OutputBuffer_run_staller_inst (
      .run_wen(run_wen_rtff),
      .sync2_Pop_mioi_wen_comp(sync2_Pop_mioi_wen_comp),
      .rotate_out_Pop_mioi_wen_comp(rotate_out_Pop_mioi_wen_comp),
      .dma_write_ctrl_Push_mioi_wen_comp(dma_write_ctrl_Push_mioi_wen_comp),
      .dma_write_chnl_Push_mioi_wen_comp(dma_write_chnl_Push_mioi_wen_comp),
      .sync3_Push_mioi_wen_comp(sync3_Push_mioi_wen_comp)
    );
  OutputBuffer_run_run_fsm OutputBuffer_run_run_fsm_inst (
      .clk(clk),
      .rst(rst),
      .run_wen(run_wen),
      .fsm_output(fsm_output),
      .while_C_1_tr0(exit_while_for_sva_mx0),
      .while_for_for_C_1_tr0(nl_OutputBuffer_run_run_fsm_inst_while_for_for_C_1_tr0),
      .while_for_C_1_tr0(exit_while_for_sva_mx0),
      .while_C_2_tr0(exit_while_for_1_sva_mx0),
      .while_for_1_C_2_tr0(exit_while_for_1_sva_mx0)
    );
  assign mem_rsci_clken_d = run_wen;
  assign while_and_cse = run_wen & or_dcpl_6 & exit_while_for_sva_mx0;
  assign and_13_nl = exit_while_for_1_sva_mx0 & ((fsm_output[6]) | (fsm_output[9]));
  assign while_mux_3_rmff = MUX_s_1_2_2(reg_sync3_Push_mioi_iswt0_tmp, and_13_nl,
      run_wen);
  assign while_for_1_mux_rmff = MUX_s_1_2_2(reg_dma_write_chnl_Push_mioi_iswt0_tmp,
      (fsm_output[8]), run_wen);
  assign and_17_nl = exit_while_for_sva_mx0 & or_dcpl_6;
  assign while_mux_2_rmff = MUX_s_1_2_2(reg_dma_write_ctrl_Push_mioi_iswt0_tmp, and_17_nl,
      run_wen);
  assign and_19_nl = (~ exit_while_for_sva_mx0) & or_dcpl_6;
  assign while_for_mux_3_rmff = MUX_s_1_2_2(reg_rotate_out_Pop_mioi_iswt0_tmp, and_19_nl,
      run_wen);
  assign while_mux_rmff = MUX_s_1_2_2(reg_sync2_Pop_mioi_iswt0_tmp, (fsm_output[0]),
      run_wen);
  assign exit_while_for_sva_mx0 = MUX_s_1_2_2((~ operator_64_false_less_3), (~ ($signed(z_out)
      < $signed({1'b0, (cfg_block_size[59:0])}))), fsm_output[5]);
  assign exit_while_for_1_sva_mx0 = MUX_s_1_2_2((~ operator_64_false_less_3), (~
      ($signed(while_for_1_i_sva_1_31_4) < $signed({1'b0, (cfg_block_size[59:0])}))),
      fsm_output[9]);
  assign operator_64_false_less_3 = 1'b0 < (cfg_block_size[59:0]);
  assign or_dcpl_6 = (fsm_output[5]) | (fsm_output[1]);
  assign mem_rsci_d_d = MUX_v_64_16_2((while_rotate_out_reg_data_sva[63:0]), (while_rotate_out_reg_data_sva[127:64]),
      (while_rotate_out_reg_data_sva[191:128]), (while_rotate_out_reg_data_sva[255:192]),
      (while_rotate_out_reg_data_sva[319:256]), (while_rotate_out_reg_data_sva[383:320]),
      (while_rotate_out_reg_data_sva[447:384]), (while_rotate_out_reg_data_sva[511:448]),
      (while_rotate_out_reg_data_sva[575:512]), (while_rotate_out_reg_data_sva[639:576]),
      (while_rotate_out_reg_data_sva[703:640]), (while_rotate_out_reg_data_sva[767:704]),
      (while_rotate_out_reg_data_sva[831:768]), (while_rotate_out_reg_data_sva[895:832]),
      (while_rotate_out_reg_data_sva[959:896]), (while_rotate_out_reg_data_sva[1023:960]),
      while_for_for_j_4_0_sva_3_0_1);
  assign mem_rsci_radr_d = while_for_1_i_sva[13:0];
  assign mem_rsci_wadr_d = {(while_for_1_i_sva[9:0]) , while_for_for_j_4_0_sva_3_0_1};
  assign mem_rsci_we_d_pff = fsm_output[3];
  assign mem_rsci_readA_r_ram_ir_internal_RMASK_B_d = fsm_output[7];
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      dma_write_ctrl_Push_mioi_idat_31_0 <= 32'b00000000000000000000000000000000;
      dma_write_ctrl_Push_mioi_idat_63_36 <= 28'b0000000000000000000000000000;
    end
    else if ( while_and_cse ) begin
      dma_write_ctrl_Push_mioi_idat_31_0 <= cfg_output_base[31:0];
      dma_write_ctrl_Push_mioi_idat_63_36 <= cfg_block_size[27:0];
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      dma_write_chnl_Push_mioi_idat <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
    end
    else if ( run_wen & (fsm_output[8]) ) begin
      dma_write_chnl_Push_mioi_idat <= mem_rsci_q_d;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      reg_sync3_Push_mioi_iswt0_tmp <= 1'b0;
      reg_dma_write_chnl_Push_mioi_iswt0_tmp <= 1'b0;
      reg_dma_write_ctrl_Push_mioi_iswt0_tmp <= 1'b0;
      reg_rotate_out_Pop_mioi_iswt0_tmp <= 1'b0;
      reg_sync2_Pop_mioi_iswt0_tmp <= 1'b0;
      run_wen <= 1'b1;
    end
    else begin
      reg_sync3_Push_mioi_iswt0_tmp <= while_mux_3_rmff;
      reg_dma_write_chnl_Push_mioi_iswt0_tmp <= while_for_1_mux_rmff;
      reg_dma_write_ctrl_Push_mioi_iswt0_tmp <= while_mux_2_rmff;
      reg_rotate_out_Pop_mioi_iswt0_tmp <= while_for_mux_3_rmff;
      reg_sync2_Pop_mioi_iswt0_tmp <= while_mux_rmff;
      run_wen <= run_wen_rtff;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_for_1_i_sva <= 32'b00000000000000000000000000000000;
    end
    else if ( run_wen & (~((fsm_output[8]) | (fsm_output[3]) | (fsm_output[2]) |
        (fsm_output[4]) | (fsm_output[9]))) ) begin
      while_for_1_i_sva <= MUX_v_32_2_2(32'b00000000000000000000000000000000, z_out,
          nor_1_nl);
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_for_for_j_4_0_sva_3_0_1 <= 4'b0000;
      while_for_for_j_4_0_sva_1 <= 5'b00000;
    end
    else if ( run_wen ) begin
      while_for_for_j_4_0_sva_3_0_1 <= MUX_v_4_2_2(4'b0000, (while_for_for_j_4_0_sva_1[3:0]),
          (fsm_output[4]));
      while_for_for_j_4_0_sva_1 <= z_out[4:0];
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_rotate_out_reg_data_sva <= {512'b
          , 512'b};
    end
    else if ( run_wen & (fsm_output[4:3]==2'b00) ) begin
      while_rotate_out_reg_data_sva <= rotate_out_Pop_mioi_idat_mxwt;
    end
  end
  always @(posedge clk or negedge rst) begin
    if ( ~ rst ) begin
      while_for_1_i_sva_1_31_4 <= 28'b0000000000000000000000000000;
    end
    else if ( run_wen & (fsm_output[7]) ) begin
      while_for_1_i_sva_1_31_4 <= z_out[31:4];
    end
  end
  assign nor_1_nl = ~((fsm_output[6]) | (fsm_output[1]));
  assign while_for_mux_5_nl = MUX_v_32_2_2(while_for_1_i_sva, ({28'b0000000000000000000000000000
      , while_for_for_j_4_0_sva_3_0_1}), fsm_output[3]);
  assign nl_z_out = while_for_mux_5_nl + 32'b00000000000000000000000000000001;
  assign z_out = nl_z_out[31:0];

  function automatic  MUX_s_1_2_2;
    input  input_0;
    input  input_1;
    input  sel;
    reg  result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_s_1_2_2 = result;
  end
  endfunction


  function automatic [31:0] MUX_v_32_2_2;
    input [31:0] input_0;
    input [31:0] input_1;
    input  sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function automatic [3:0] MUX_v_4_2_2;
    input [3:0] input_0;
    input [3:0] input_1;
    input  sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = input_0;
      end
      default : begin
        result = input_1;
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction


  function automatic [63:0] MUX_v_64_16_2;
    input [63:0] input_0;
    input [63:0] input_1;
    input [63:0] input_2;
    input [63:0] input_3;
    input [63:0] input_4;
    input [63:0] input_5;
    input [63:0] input_6;
    input [63:0] input_7;
    input [63:0] input_8;
    input [63:0] input_9;
    input [63:0] input_10;
    input [63:0] input_11;
    input [63:0] input_12;
    input [63:0] input_13;
    input [63:0] input_14;
    input [63:0] input_15;
    input [3:0] sel;
    reg [63:0] result;
  begin
    case (sel)
      4'b0000 : begin
        result = input_0;
      end
      4'b0001 : begin
        result = input_1;
      end
      4'b0010 : begin
        result = input_2;
      end
      4'b0011 : begin
        result = input_3;
      end
      4'b0100 : begin
        result = input_4;
      end
      4'b0101 : begin
        result = input_5;
      end
      4'b0110 : begin
        result = input_6;
      end
      4'b0111 : begin
        result = input_7;
      end
      4'b1000 : begin
        result = input_8;
      end
      4'b1001 : begin
        result = input_9;
      end
      4'b1010 : begin
        result = input_10;
      end
      4'b1011 : begin
        result = input_11;
      end
      4'b1100 : begin
        result = input_12;
      end
      4'b1101 : begin
        result = input_13;
      end
      4'b1110 : begin
        result = input_14;
      end
      default : begin
        result = input_15;
      end
    endcase
    MUX_v_64_16_2 = result;
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Control
// ------------------------------------------------------------------


module Control (
  clk, rst, acc_start, acc_done, sync1_val, sync1_rdy, sync1_msg, sync2_val, sync2_rdy,
      sync2_msg, sync3_val, sync3_rdy, sync3_msg
);
  input clk;
  input rst;
  input acc_start;
  output acc_done;
  output sync1_val;
  input sync1_rdy;
  output sync1_msg;
  output sync2_val;
  input sync2_rdy;
  output sync2_msg;
  input sync3_val;
  output sync3_rdy;
  input sync3_msg;



  // Interconnect Declarations for Component Instantiations 
  Control_run Control_run_inst (
      .clk(clk),
      .rst(rst),
      .acc_start(acc_start),
      .acc_done(acc_done),
      .sync1_val(sync1_val),
      .sync1_rdy(sync1_rdy),
      .sync1_msg(sync1_msg),
      .sync2_val(sync2_val),
      .sync2_rdy(sync2_rdy),
      .sync2_msg(sync2_msg),
      .sync3_val(sync3_val),
      .sync3_rdy(sync3_rdy),
      .sync3_msg(sync3_msg)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    InputBuffer
// ------------------------------------------------------------------


module InputBuffer (
  clk, rst, cfg_block_size, cfg_input_base, sync1_val, sync1_rdy, sync1_msg, dma_read_ctrl_val,
      dma_read_ctrl_rdy, dma_read_ctrl_msg, dma_read_chnl_val, dma_read_chnl_rdy,
      dma_read_chnl_msg, rotate_in_val, rotate_in_rdy, rotate_in_msg
);
  input clk;
  input rst;
  input [63:0] cfg_block_size;
  input [63:0] cfg_input_base;
  input sync1_val;
  output sync1_rdy;
  input sync1_msg;
  output dma_read_ctrl_val;
  input dma_read_ctrl_rdy;
  output [66:0] dma_read_ctrl_msg;
  input dma_read_chnl_val;
  output dma_read_chnl_rdy;
  input [63:0] dma_read_chnl_msg;
  output rotate_in_val;
  input rotate_in_rdy;
  output [1023:0] rotate_in_msg;


  // Interconnect Declarations
  wire mem_rsci_clken_d;
  wire [63:0] mem_rsci_d_d;
  wire [63:0] mem_rsci_q_d;
  wire [13:0] mem_rsci_radr_d;
  wire [13:0] mem_rsci_wadr_d;
  wire mem_rsci_readA_r_ram_ir_internal_RMASK_B_d;
  wire mem_rsc_clken;
  wire [63:0] mem_rsc_q;
  wire [13:0] mem_rsc_radr;
  wire mem_rsc_we;
  wire [63:0] mem_rsc_d;
  wire [13:0] mem_rsc_wadr;
  wire mem_rsci_we_d_iff;


  // Interconnect Declarations for Component Instantiations 
  BLOCK_1R1W_RBW #(.addr_width(32'sd14),
  .data_width(32'sd64),
  .depth(32'sd16384),
  .latency(32'sd1)) mem_rsc_comp (
      .clk(clk),
      .clken(mem_rsc_clken),
      .d(mem_rsc_d),
      .q(mem_rsc_q),
      .radr(mem_rsc_radr),
      .wadr(mem_rsc_wadr),
      .we(mem_rsc_we)
    );
  InputBuffer_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_17_14_64_16384_16384_64_1_gen
      mem_rsci (
      .clken(mem_rsc_clken),
      .q(mem_rsc_q),
      .radr(mem_rsc_radr),
      .we(mem_rsc_we),
      .d(mem_rsc_d),
      .wadr(mem_rsc_wadr),
      .clken_d(mem_rsci_clken_d),
      .d_d(mem_rsci_d_d),
      .q_d(mem_rsci_q_d),
      .radr_d(mem_rsci_radr_d),
      .wadr_d(mem_rsci_wadr_d),
      .we_d(mem_rsci_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(mem_rsci_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(mem_rsci_readA_r_ram_ir_internal_RMASK_B_d)
    );
  InputBuffer_run InputBuffer_run_inst (
      .clk(clk),
      .rst(rst),
      .cfg_block_size(cfg_block_size),
      .cfg_input_base(cfg_input_base),
      .sync1_val(sync1_val),
      .sync1_rdy(sync1_rdy),
      .sync1_msg(sync1_msg),
      .dma_read_ctrl_val(dma_read_ctrl_val),
      .dma_read_ctrl_rdy(dma_read_ctrl_rdy),
      .dma_read_ctrl_msg(dma_read_ctrl_msg),
      .dma_read_chnl_val(dma_read_chnl_val),
      .dma_read_chnl_rdy(dma_read_chnl_rdy),
      .dma_read_chnl_msg(dma_read_chnl_msg),
      .rotate_in_val(rotate_in_val),
      .rotate_in_rdy(rotate_in_rdy),
      .rotate_in_msg(rotate_in_msg),
      .mem_rsci_clken_d(mem_rsci_clken_d),
      .mem_rsci_d_d(mem_rsci_d_d),
      .mem_rsci_q_d(mem_rsci_q_d),
      .mem_rsci_radr_d(mem_rsci_radr_d),
      .mem_rsci_wadr_d(mem_rsci_wadr_d),
      .mem_rsci_readA_r_ram_ir_internal_RMASK_B_d(mem_rsci_readA_r_ram_ir_internal_RMASK_B_d),
      .mem_rsci_we_d_pff(mem_rsci_we_d_iff)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Rotate
// ------------------------------------------------------------------


module Rotate (
  clk, rst, cfg_cos_alpha, cfg_sin_alpha, cfg_cos_beta, cfg_sin_beta, cfg_cos_gamma,
      cfg_sin_gamma, cfg_cos_2_alpha, cfg_sin_2_alpha, cfg_cos_2_beta, cfg_sin_2_beta,
      cfg_cos_2_gamma, cfg_sin_2_gamma, cfg_cos_3_alpha, cfg_sin_3_alpha, cfg_cos_3_beta,
      cfg_sin_3_beta, cfg_cos_3_gamma, cfg_sin_3_gamma, rotate_in_val, rotate_in_rdy,
      rotate_in_msg, rotate_out_val, rotate_out_rdy, rotate_out_msg
);
  input clk;
  input rst;
  input [63:0] cfg_cos_alpha;
  input [63:0] cfg_sin_alpha;
  input [63:0] cfg_cos_beta;
  input [63:0] cfg_sin_beta;
  input [63:0] cfg_cos_gamma;
  input [63:0] cfg_sin_gamma;
  input [63:0] cfg_cos_2_alpha;
  input [63:0] cfg_sin_2_alpha;
  input [63:0] cfg_cos_2_beta;
  input [63:0] cfg_sin_2_beta;
  input [63:0] cfg_cos_2_gamma;
  input [63:0] cfg_sin_2_gamma;
  input [63:0] cfg_cos_3_alpha;
  input [63:0] cfg_sin_3_alpha;
  input [63:0] cfg_cos_3_beta;
  input [63:0] cfg_sin_3_beta;
  input [63:0] cfg_cos_3_gamma;
  input [63:0] cfg_sin_3_gamma;
  input rotate_in_val;
  output rotate_in_rdy;
  input [1023:0] rotate_in_msg;
  output rotate_out_val;
  input rotate_out_rdy;
  output [1023:0] rotate_out_msg;


  // Interconnect Declarations
  wire [63:0] while_mul_108_cmp_1_b;
  wire while_mul_108_cmp_1_en;
  wire [111:0] while_mul_108_cmp_1_z;
  wire [113:0] while_mul_73_cmp_1_b;
  wire while_mul_73_cmp_1_en;
  wire [177:0] while_mul_73_cmp_1_z;
  wire [112:0] while_mul_44_cmp_1_b;
  wire while_mul_44_cmp_1_en;
  wire [176:0] while_mul_44_cmp_1_z;
  wire [48:0] while_mul_36_cmp_1_a;
  wire [63:0] while_mul_36_cmp_1_b;
  wire while_mul_36_cmp_1_en;
  wire [112:0] while_mul_36_cmp_1_z;


  // Interconnect Declarations for Component Instantiations 
  mgc_mul_pipe #(.width_a(32'sd48),
  .signd_a(32'sd0),
  .width_b(32'sd64),
  .signd_b(32'sd1),
  .width_z(32'sd112),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd0),
  .stages(32'sd4),
  .n_inreg(32'sd1)) while_mul_108_cmp_1 (
      .a(48'b110010100110001011000001100101100011011111100101),
      .b(while_mul_108_cmp_1_b),
      .clk(clk),
      .en(while_mul_108_cmp_1_en),
      .a_rst(rst),
      .s_rst(1'b1),
      .z(while_mul_108_cmp_1_z)
    );
  mgc_mul_pipe #(.width_a(32'sd64),
  .signd_a(32'sd1),
  .width_b(32'sd114),
  .signd_b(32'sd1),
  .width_z(32'sd178),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd0),
  .stages(32'sd6),
  .n_inreg(32'sd1)) while_mul_73_cmp_1 (
      .a(cfg_cos_beta),
      .b(while_mul_73_cmp_1_b),
      .clk(clk),
      .en(while_mul_73_cmp_1_en),
      .a_rst(rst),
      .s_rst(1'b1),
      .z(while_mul_73_cmp_1_z)
    );
  mgc_mul_pipe #(.width_a(32'sd64),
  .signd_a(32'sd1),
  .width_b(32'sd113),
  .signd_b(32'sd1),
  .width_z(32'sd177),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd0),
  .stages(32'sd6),
  .n_inreg(32'sd1)) while_mul_44_cmp_1 (
      .a(cfg_sin_beta),
      .b(while_mul_44_cmp_1_b),
      .clk(clk),
      .en(while_mul_44_cmp_1_en),
      .a_rst(rst),
      .s_rst(1'b1),
      .z(while_mul_44_cmp_1_z)
    );
  mgc_mul_pipe #(.width_a(32'sd49),
  .signd_a(32'sd0),
  .width_b(32'sd64),
  .signd_b(32'sd1),
  .width_z(32'sd113),
  .clock_edge(32'sd1),
  .enable_active(32'sd1),
  .a_rst_active(32'sd0),
  .s_rst_active(32'sd0),
  .stages(32'sd4),
  .n_inreg(32'sd1)) while_mul_36_cmp_1 (
      .a(while_mul_36_cmp_1_a),
      .b(while_mul_36_cmp_1_b),
      .clk(clk),
      .en(while_mul_36_cmp_1_en),
      .a_rst(rst),
      .s_rst(1'b1),
      .z(while_mul_36_cmp_1_z)
    );
  Rotate_run Rotate_run_inst (
      .clk(clk),
      .rst(rst),
      .cfg_cos_alpha(cfg_cos_alpha),
      .cfg_sin_alpha(cfg_sin_alpha),
      .cfg_cos_beta(cfg_cos_beta),
      .cfg_sin_beta(cfg_sin_beta),
      .cfg_cos_gamma(cfg_cos_gamma),
      .cfg_sin_gamma(cfg_sin_gamma),
      .cfg_cos_2_alpha(cfg_cos_2_alpha),
      .cfg_sin_2_alpha(cfg_sin_2_alpha),
      .cfg_cos_2_beta(cfg_cos_2_beta),
      .cfg_cos_2_gamma(cfg_cos_2_gamma),
      .cfg_sin_2_gamma(cfg_sin_2_gamma),
      .cfg_cos_3_alpha(cfg_cos_3_alpha),
      .cfg_sin_3_alpha(cfg_sin_3_alpha),
      .cfg_cos_3_beta(cfg_cos_3_beta),
      .cfg_sin_3_beta(cfg_sin_3_beta),
      .cfg_cos_3_gamma(cfg_cos_3_gamma),
      .cfg_sin_3_gamma(cfg_sin_3_gamma),
      .rotate_in_val(rotate_in_val),
      .rotate_in_rdy(rotate_in_rdy),
      .rotate_in_msg(rotate_in_msg),
      .rotate_out_val(rotate_out_val),
      .rotate_out_rdy(rotate_out_rdy),
      .rotate_out_msg(rotate_out_msg),
      .while_mul_108_cmp_1_b(while_mul_108_cmp_1_b),
      .while_mul_108_cmp_1_en(while_mul_108_cmp_1_en),
      .while_mul_108_cmp_1_z(while_mul_108_cmp_1_z),
      .while_mul_73_cmp_1_b(while_mul_73_cmp_1_b),
      .while_mul_73_cmp_1_en(while_mul_73_cmp_1_en),
      .while_mul_73_cmp_1_z(while_mul_73_cmp_1_z),
      .while_mul_44_cmp_1_b(while_mul_44_cmp_1_b),
      .while_mul_44_cmp_1_en(while_mul_44_cmp_1_en),
      .while_mul_44_cmp_1_z(while_mul_44_cmp_1_z),
      .while_mul_36_cmp_1_a(while_mul_36_cmp_1_a),
      .while_mul_36_cmp_1_b(while_mul_36_cmp_1_b),
      .while_mul_36_cmp_1_en(while_mul_36_cmp_1_en),
      .while_mul_36_cmp_1_z(while_mul_36_cmp_1_z)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    OutputBuffer
// ------------------------------------------------------------------


module OutputBuffer (
  clk, rst, cfg_block_size, cfg_output_base, sync2_val, sync2_rdy, sync2_msg, sync3_val,
      sync3_rdy, sync3_msg, dma_write_ctrl_val, dma_write_ctrl_rdy, dma_write_ctrl_msg,
      dma_write_chnl_val, dma_write_chnl_rdy, dma_write_chnl_msg, rotate_out_val,
      rotate_out_rdy, rotate_out_msg
);
  input clk;
  input rst;
  input [63:0] cfg_block_size;
  input [63:0] cfg_output_base;
  input sync2_val;
  output sync2_rdy;
  input sync2_msg;
  output sync3_val;
  input sync3_rdy;
  output sync3_msg;
  output dma_write_ctrl_val;
  input dma_write_ctrl_rdy;
  output [66:0] dma_write_ctrl_msg;
  output dma_write_chnl_val;
  input dma_write_chnl_rdy;
  output [63:0] dma_write_chnl_msg;
  input rotate_out_val;
  output rotate_out_rdy;
  input [1023:0] rotate_out_msg;


  // Interconnect Declarations
  wire mem_rsci_clken_d;
  wire [63:0] mem_rsci_d_d;
  wire [63:0] mem_rsci_q_d;
  wire [13:0] mem_rsci_radr_d;
  wire [13:0] mem_rsci_wadr_d;
  wire mem_rsci_readA_r_ram_ir_internal_RMASK_B_d;
  wire mem_rsc_clken;
  wire [63:0] mem_rsc_q;
  wire [13:0] mem_rsc_radr;
  wire mem_rsc_we;
  wire [63:0] mem_rsc_d;
  wire [13:0] mem_rsc_wadr;
  wire mem_rsci_we_d_iff;


  // Interconnect Declarations for Component Instantiations 
  BLOCK_1R1W_RBW #(.addr_width(32'sd14),
  .data_width(32'sd64),
  .depth(32'sd16384),
  .latency(32'sd1)) mem_rsc_comp (
      .clk(clk),
      .clken(mem_rsc_clken),
      .d(mem_rsc_d),
      .q(mem_rsc_q),
      .radr(mem_rsc_radr),
      .wadr(mem_rsc_wadr),
      .we(mem_rsc_we)
    );
  OutputBuffer_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_34_14_64_16384_16384_64_1_gen
      mem_rsci (
      .clken(mem_rsc_clken),
      .q(mem_rsc_q),
      .radr(mem_rsc_radr),
      .we(mem_rsc_we),
      .d(mem_rsc_d),
      .wadr(mem_rsc_wadr),
      .clken_d(mem_rsci_clken_d),
      .d_d(mem_rsci_d_d),
      .q_d(mem_rsci_q_d),
      .radr_d(mem_rsci_radr_d),
      .wadr_d(mem_rsci_wadr_d),
      .we_d(mem_rsci_we_d_iff),
      .writeA_w_ram_ir_internal_WMASK_B_d(mem_rsci_we_d_iff),
      .readA_r_ram_ir_internal_RMASK_B_d(mem_rsci_readA_r_ram_ir_internal_RMASK_B_d)
    );
  OutputBuffer_run OutputBuffer_run_inst (
      .clk(clk),
      .rst(rst),
      .cfg_block_size(cfg_block_size),
      .cfg_output_base(cfg_output_base),
      .sync2_val(sync2_val),
      .sync2_rdy(sync2_rdy),
      .sync2_msg(sync2_msg),
      .sync3_val(sync3_val),
      .sync3_rdy(sync3_rdy),
      .sync3_msg(sync3_msg),
      .dma_write_ctrl_val(dma_write_ctrl_val),
      .dma_write_ctrl_rdy(dma_write_ctrl_rdy),
      .dma_write_ctrl_msg(dma_write_ctrl_msg),
      .dma_write_chnl_val(dma_write_chnl_val),
      .dma_write_chnl_rdy(dma_write_chnl_rdy),
      .dma_write_chnl_msg(dma_write_chnl_msg),
      .rotate_out_val(rotate_out_val),
      .rotate_out_rdy(rotate_out_rdy),
      .rotate_out_msg(rotate_out_msg),
      .mem_rsci_clken_d(mem_rsci_clken_d),
      .mem_rsci_d_d(mem_rsci_d_d),
      .mem_rsci_q_d(mem_rsci_q_d),
      .mem_rsci_radr_d(mem_rsci_radr_d),
      .mem_rsci_wadr_d(mem_rsci_wadr_d),
      .mem_rsci_readA_r_ram_ir_internal_RMASK_B_d(mem_rsci_readA_r_ram_ir_internal_RMASK_B_d),
      .mem_rsci_we_d_pff(mem_rsci_we_d_iff)
    );
endmodule

// ------------------------------------------------------------------
//  Design Unit:    Top_rtl
// ------------------------------------------------------------------


module Top_rtl (
  clk, rst, cfg_regs_0, cfg_regs_1, cfg_regs_2, cfg_regs_3, cfg_regs_4, cfg_regs_5,
      cfg_regs_6, cfg_regs_7, cfg_regs_8, cfg_regs_9, cfg_regs_10, cfg_regs_11, cfg_regs_12,
      cfg_regs_13, cfg_regs_14, cfg_regs_15, cfg_regs_16, cfg_regs_17, cfg_regs_18,
      cfg_regs_19, cfg_regs_20, cfg_regs_21, cfg_regs_22, cfg_regs_23, cfg_regs_24,
      cfg_regs_25, cfg_regs_26, cfg_regs_27, cfg_regs_28, cfg_regs_29, cfg_regs_30,
      cfg_regs_31, acc_start, acc_done, dma_read_ctrl_val, dma_read_ctrl_rdy, dma_read_ctrl_msg,
      dma_read_chnl_val, dma_read_chnl_rdy, dma_read_chnl_msg, dma_write_ctrl_val,
      dma_write_ctrl_rdy, dma_write_ctrl_msg, dma_write_chnl_val, dma_write_chnl_rdy,
      dma_write_chnl_msg
);
  input clk;
  input rst;
  input [63:0] cfg_regs_0;
  input [63:0] cfg_regs_1;
  input [63:0] cfg_regs_2;
  input [63:0] cfg_regs_3;
  input [63:0] cfg_regs_4;
  input [63:0] cfg_regs_5;
  input [63:0] cfg_regs_6;
  input [63:0] cfg_regs_7;
  input [63:0] cfg_regs_8;
  input [63:0] cfg_regs_9;
  input [63:0] cfg_regs_10;
  input [63:0] cfg_regs_11;
  input [63:0] cfg_regs_12;
  input [63:0] cfg_regs_13;
  input [63:0] cfg_regs_14;
  input [63:0] cfg_regs_15;
  input [63:0] cfg_regs_16;
  input [63:0] cfg_regs_17;
  input [63:0] cfg_regs_18;
  input [63:0] cfg_regs_19;
  input [63:0] cfg_regs_20;
  input [63:0] cfg_regs_21;
  input [63:0] cfg_regs_22;
  input [63:0] cfg_regs_23;
  input [63:0] cfg_regs_24;
  input [63:0] cfg_regs_25;
  input [63:0] cfg_regs_26;
  input [63:0] cfg_regs_27;
  input [63:0] cfg_regs_28;
  input [63:0] cfg_regs_29;
  input [63:0] cfg_regs_30;
  input [63:0] cfg_regs_31;
  input acc_start;
  output acc_done;
  output dma_read_ctrl_val;
  input dma_read_ctrl_rdy;
  output [66:0] dma_read_ctrl_msg;
  input dma_read_chnl_val;
  output dma_read_chnl_rdy;
  input [63:0] dma_read_chnl_msg;
  output dma_write_ctrl_val;
  input dma_write_ctrl_rdy;
  output [66:0] dma_write_ctrl_msg;
  output dma_write_chnl_val;
  input dma_write_chnl_rdy;
  output [63:0] dma_write_chnl_msg;


  // Interconnect Declarations
  wire sync1_val;
  wire sync1_rdy;
  wire sync1_msg;
  wire sync2_val;
  wire sync2_rdy;
  wire sync2_msg;
  wire sync3_val;
  wire sync3_rdy;
  wire sync3_msg;
  wire rotate_in_val;
  wire rotate_in_rdy;
  wire [1023:0] rotate_in_msg;
  wire rotate_out_val;
  wire rotate_out_rdy;
  wire [1023:0] rotate_out_msg;


  // Interconnect Declarations for Component Instantiations 
  Control ctr (
      .clk(clk),
      .rst(rst),
      .acc_start(acc_start),
      .acc_done(acc_done),
      .sync1_val(sync1_val),
      .sync1_rdy(sync1_rdy),
      .sync1_msg(sync1_msg),
      .sync2_val(sync2_val),
      .sync2_rdy(sync2_rdy),
      .sync2_msg(sync2_msg),
      .sync3_val(sync3_val),
      .sync3_rdy(sync3_rdy),
      .sync3_msg(sync3_msg)
    );
  InputBuffer inb (
      .clk(clk),
      .rst(rst),
      .cfg_block_size(cfg_regs_2),
      .cfg_input_base(cfg_regs_3),
      .sync1_val(sync1_val),
      .sync1_rdy(sync1_rdy),
      .sync1_msg(sync1_msg),
      .dma_read_ctrl_val(dma_read_ctrl_val),
      .dma_read_ctrl_rdy(dma_read_ctrl_rdy),
      .dma_read_ctrl_msg(dma_read_ctrl_msg),
      .dma_read_chnl_val(dma_read_chnl_val),
      .dma_read_chnl_rdy(dma_read_chnl_rdy),
      .dma_read_chnl_msg(dma_read_chnl_msg),
      .rotate_in_val(rotate_in_val),
      .rotate_in_rdy(rotate_in_rdy),
      .rotate_in_msg(rotate_in_msg)
    );
  Rotate rot (
      .clk(clk),
      .rst(rst),
      .cfg_cos_alpha(cfg_regs_8),
      .cfg_sin_alpha(cfg_regs_9),
      .cfg_cos_beta(cfg_regs_10),
      .cfg_sin_beta(cfg_regs_11),
      .cfg_cos_gamma(cfg_regs_12),
      .cfg_sin_gamma(cfg_regs_13),
      .cfg_cos_2_alpha(cfg_regs_14),
      .cfg_sin_2_alpha(cfg_regs_15),
      .cfg_cos_2_beta(cfg_regs_16),
      .cfg_sin_2_beta(64'b0000000000000000000000000000000000000000000000000000000000000000),
      .cfg_cos_2_gamma(cfg_regs_18),
      .cfg_sin_2_gamma(cfg_regs_19),
      .cfg_cos_3_alpha(cfg_regs_20),
      .cfg_sin_3_alpha(cfg_regs_21),
      .cfg_cos_3_beta(cfg_regs_22),
      .cfg_sin_3_beta(cfg_regs_23),
      .cfg_cos_3_gamma(cfg_regs_24),
      .cfg_sin_3_gamma(cfg_regs_25),
      .rotate_in_val(rotate_in_val),
      .rotate_in_rdy(rotate_in_rdy),
      .rotate_in_msg(rotate_in_msg),
      .rotate_out_val(rotate_out_val),
      .rotate_out_rdy(rotate_out_rdy),
      .rotate_out_msg(rotate_out_msg)
    );
  OutputBuffer out_0 (
      .clk(clk),
      .rst(rst),
      .cfg_block_size(cfg_regs_2),
      .cfg_output_base(cfg_regs_4),
      .sync2_val(sync2_val),
      .sync2_rdy(sync2_rdy),
      .sync2_msg(sync2_msg),
      .sync3_val(sync3_val),
      .sync3_rdy(sync3_rdy),
      .sync3_msg(sync3_msg),
      .dma_write_ctrl_val(dma_write_ctrl_val),
      .dma_write_ctrl_rdy(dma_write_ctrl_rdy),
      .dma_write_ctrl_msg(dma_write_ctrl_msg),
      .dma_write_chnl_val(dma_write_chnl_val),
      .dma_write_chnl_rdy(dma_write_chnl_rdy),
      .dma_write_chnl_msg(dma_write_chnl_msg),
      .rotate_out_val(rotate_out_val),
      .rotate_out_rdy(rotate_out_rdy),
      .rotate_out_msg(rotate_out_msg)
    );
endmodule



